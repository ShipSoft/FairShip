
;; Function virtual std::ctype<char>::char_type std::ctype<char>::do_widen(char) const (_ZNKSt5ctypeIcE8do_widenEc, funcdef_no=3235, decl_uid=47936, cgraph_uid=839, symbol_order=843)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 12 to 18 -- after reload
;;   ======================================================

;;	  0--> b  0: i  12 ax=si                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i  13 use ax                                  :nothing
;;	  1--> b  0: i  18 simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 12
;;   new tail = 18



starting the processing of deferred insns
ending the processing of deferred insns


virtual std::ctype<char>::char_type std::ctype<char>::do_widen(char) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 4 [si]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 22{17d,5u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 6 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 16 6 5 2 NOTE_INSN_PROLOGUE_END)
(note 5 16 12 2 NOTE_INSN_FUNCTION_BEG)
(insn:TI 12 5 13 2 (set (reg/i:QI 0 ax)
        (reg:QI 4 si [orig:90 __c ] [90])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:1083 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 4 si [orig:90 __c ] [90])
        (nil)))
(insn 13 12 18 2 (use (reg/i:QI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:1083 -1
     (nil))
(jump_insn:TI 18 13 17 2 (simple_return) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:1083 697 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 17 18 15)
(note 15 17 0 NOTE_INSN_DELETED)

;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.62, funcdef_no=19651, decl_uid=439592, cgraph_uid=8, symbol_order=17707)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 12 (    1)


void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]

Dataflow summary:
def_info->table_size = 256, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;;  ref usage 	r0={7d,6u} r1={9d,7u,1e} r2={4d} r3={4d,8u} r4={6d,4u} r5={8d,4u} r6={3d,9u} r7={9d,28u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={12d,5u} r18={3d} r19={3d} r20={2e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r41={3d,5u} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 352{273d,76u,3e} in 48{45 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]

( 3 )->[4]->( )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 2 3 )->[5]->( 9 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 7 [sp] 41 [r12]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 5 )->[6]->( 11 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 1 [dx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

( 6 )->[7]->( 8 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

( 10 7 11 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 5 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

( 7 9 )->[10]->( 8 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si]
;; live  kill	
;; lr  out 	 1 [dx] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 6 [bp] 7 [sp]

( 6 )->[11]->( 8 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 1 [dx] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 6 [bp] 7 [sp]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 15 to worklist
  Adding insn 78 to worklist
  Adding insn 70 to worklist
  Adding insn 67 to worklist
  Adding insn 35 to worklist
  Adding insn 44 to worklist
  Adding insn 135 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 153 to worklist
  Adding insn 53 to worklist
  Adding insn 155 to worklist
  Adding insn 38 to worklist
Finished finding needed instructions:
processing block 8 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 134 to worklist
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 58 to worklist
processing block 10 lr out =  1 [dx] 6 [bp] 7 [sp]
  Adding insn 93 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
processing block 9 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 28 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 150 to worklist
  Adding insn 122 to worklist
processing block 11 lr out =  1 [dx] 6 [bp] 7 [sp]
  Adding insn 91 to worklist
  Adding insn 37 to worklist
processing block 7 lr out =  1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 43 to worklist
processing block 6 lr out =  1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 34 to worklist
  Adding insn 94 to worklist
  Adding insn 33 to worklist
processing block 5 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 69 to worklist
  Adding insn 66 to worklist
  Adding insn 120 to worklist
processing block 4 lr out =  7 [sp]
  Adding insn 77 to worklist
processing block 3 lr out =  1 [dx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 14 to worklist
processing block 2 lr out =  1 [dx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 10 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
  Adding insn 126 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 12 (    1)
;;   ======================================================
;;   -- basic block 2 from 123 to 11 -- after reload
;;   ======================================================

;;	  0--> b  0: i 123 [--sp]=r12                              :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 124 [--sp]=bp                               :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i   3 r12=si                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 125 [--sp]=bx                               :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i   2 bp=di                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i 126 {sp=sp-0x10;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  3--> b  0: i  10 flags=cmp(si,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i  11 pc={(flags!=0)?L64:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 123
;;   new tail = 11

;;   ======================================================
;;   -- basic block 3 from 14 to 15 -- after reload
;;   ======================================================

;;	  0--> b  0: i  14 flags=cmp(dx,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i  15 pc={(flags==0)?L64:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 14
;;   new tail = 15

;;   ======================================================
;;   -- basic block 4 from 77 to 78 -- after reload
;;   ======================================================

;;	  0--> b  0: i  77 di=`*.LC0'                              :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i  78 call [`_ZSt19__throw_logic_errorPKc']   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 77
;;   new tail = 78

;;   ======================================================
;;   -- basic block 5 from 120 to 70 -- after reload
;;   ======================================================

;;	  0--> b  0: i 120 bx=dx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i  66 {bx=bx-r12;clobber flags;}              :athlon-direct,athlon-ieu
;;	  2--> b  0: i  69 flags=cmp(bx,0xf)                       :athlon-direct,athlon-ieu
;;	  2--> b  0: i  67 [sp+0x8]=bx                             :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i  70 pc={(gtu(flags,0))?L151:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 120
;;   new tail = 70

;;   ======================================================
;;   -- basic block 6 from 33 to 35 -- after reload
;;   ======================================================

;;	  0--> b  0: i  33 dx=[bp]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i  34 flags=cmp(bx,0x1)                       :athlon-direct,athlon-ieu
;;	  3--> b  0: i  94 di=dx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i  35 pc={(flags==0)?L152:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 33
;;   new tail = 35

;;   ======================================================
;;   -- basic block 7 from 43 to 44 -- after reload
;;   ======================================================

;;	  0--> b  0: i  43 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i  44 pc={(flags!=0)?L45:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 43
;;   new tail = 44

;;   ======================================================
;;   -- basic block 8 from 58 to 135 -- after reload
;;   ======================================================

;;	  0--> b  0: i  58 ax=[sp+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i  59 [bp+0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i  61 [dx+ax]=0                               :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 131 {sp=sp+0x10;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  4--> b  0: i 132 bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  5--> b  0: i 133 bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  6--> b  0: i 134 r12=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  7--> b  0: i 135 simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 58
;;   new tail = 135

;;   ======================================================
;;   -- basic block 9 from 122 to 29 -- after reload
;;   ======================================================

;;	  0--> b  0: i 122 si=sp+0x8                               :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i  24 di=bp                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 150 {dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i  25 ax=call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm']:athlon-vector,athlon-ieu
;;	  3--> b  0: i  26 di=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i  27 [bp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i  28 ax=[sp+0x8]                             :athlon-direct,athlon-load
;;	  6--> b  0: i  29 [bp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 6
;;   new head = 122
;;   new tail = 29

;;   ======================================================
;;   -- basic block 10 from 50 to 153 -- after reload
;;   ======================================================

;;	  0--> b  0: i  50 dx=bx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i  51 si=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i  53 ax=call [`memcpy']                      :athlon-vector,athlon-ieu
;;	  2--> b  0: i  93 dx=[bp]                                 :athlon-direct,athlon-load
;;	  2--> b  0: i 153 pc=L56                                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 50
;;   new tail = 153

;;   ======================================================
;;   -- basic block 11 from 37 to 155 -- after reload
;;   ======================================================

;;	  0--> b  0: i  37 ax=[r12]                                :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i  38 [dx]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i  91 dx=[bp]                                 :athlon-direct,athlon-load
;;	  4--> b  0: i 155 pc=L56                                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 37
;;   new tail = 155



starting the processing of deferred insns
ending the processing of deferred insns


void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;;  ref usage 	r0={7d,6u} r1={9d,7u,1e} r2={4d} r3={4d,8u} r4={6d,4u} r5={8d,4u} r6={3d,9u} r7={9d,28u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={12d,5u} r18={3d} r19={3d} r20={2e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r41={3d,5u} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 352{273d,76u,3e} in 48{45 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)
(note 8 5 9 2 NOTE_INSN_DELETED)
(note 9 8 123 2 NOTE_INSN_DELETED)
(insn/f:TI 123 9 124 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:206 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 124 123 3 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:206 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn 3 124 125 2 (set (reg/v/f:DI 41 r12 [orig:101 __beg ] [101])
        (reg:DI 4 si [ __beg ])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:206 85 {*movdi_internal}
     (nil))
(insn/f:TI 125 3 2 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:206 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn 2 125 126 2 (set (reg/f:DI 6 bp [orig:100 this ] [100])
        (reg:DI 5 di [ this ])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:206 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn/f:TI 126 2 127 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:206 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (nil))))
(note 127 126 10 2 NOTE_INSN_PROLOGUE_END)
(insn 10 127 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 4 si [orig:101 __beg ] [101])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:211 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:101 __beg ] [101])
        (nil)))
(jump_insn:TI 11 10 82 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 64)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:211 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 750 (nil)))
 -> 64)
;;  succ:       5 [7.5%]  (CAN_FALLTHRU)
;;              3 [92.5%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 3, loop depth 0, count 0, freq 9250, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [92.5%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 82 11 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 12 82 13 3 NOTE_INSN_DELETED)
(note 13 12 14 3 NOTE_INSN_DELETED)
(insn:TI 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 1 dx [orig:102 __end ] [102])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:211 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 15 14 76 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 64)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:211 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 811 (nil)))
 -> 64)
;;  succ:       4 [91.9%]  (FALLTHRU,CAN_FALLTHRU)
;;              5 [8.1%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 4, loop depth 0, count 0, freq 1275, maybe hot
;; Invalid sum of incoming frequencies 8500, should be 1275
;;  prev block 3, next block 5, flags: (REACHABLE, RTL)
;;  pred:       3 [91.9%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(note 76 15 77 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 77 76 78 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fb2b85023f0 *.LC0>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:212 85 {*movdi_internal}
     (nil))
(call_insn:TI 78 77 79 4 (call (mem:QI (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb2bf56c380 __throw_logic_error>) [0 __throw_logic_error S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:212 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb2bf56c380 __throw_logic_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 79 78 64)
;; basic block 5, loop depth 0, count 0, freq 9996, maybe hot
;; Invalid sum of incoming frequencies 1500, should be 9996
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [7.5%]  (CAN_FALLTHRU)
;;              3 [8.1%]  (CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 7 [sp] 41 [r12]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 64 79 65 5 5 "" [2 uses])
(note 65 64 120 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 120 65 66 5 (set (reg/v/f:DI 3 bx [orig:102 __end ] [102])
        (reg/v/f:DI 1 dx [orig:102 __end ] [102])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_iterator_base_funcs.h:102 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:102 __end ] [102])
        (nil)))
(insn:TI 66 120 69 5 (parallel [
            (set (reg/v/f:DI 3 bx [orig:102 __end ] [102])
                (minus:DI (reg/v/f:DI 3 bx [orig:102 __end ] [102])
                    (reg/v/f:DI 41 r12 [orig:101 __beg ] [101])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_iterator_base_funcs.h:102 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 69 66 67 5 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 3 bx [orig:90 __dnew.40_7 ] [90])
            (const_int 15 [0xf]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:217 8 {*cmpdi_1}
     (nil))
(insn 67 69 70 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [6 __dnew+0 S8 A64])
        (reg:DI 3 bx [orig:90 __dnew.40_7 ] [90])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:215 85 {*movdi_internal}
     (nil))
(jump_insn:TI 70 67 32 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 151)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:217 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 151)
;;  succ:       9 [29.0%]  (CAN_FALLTHRU)
;;              6 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 6, loop depth 0, count 0, freq 7097, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 1 [dx] 5 [di] 17 [flags]
;; live  kill	
(note 32 70 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 33 32 34 6 (set (reg/f:DI 1 dx [orig:115 MEM[(char * *)this_8(D)] ] [115])
        (mem/f:DI (reg/f:DI 6 bp [orig:100 this ] [100]) [5 MEM[(char * *)this_8(D)]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 34 33 94 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 3 bx [orig:90 __dnew.40_7 ] [90])
            (const_int 1 [0x1]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:297 8 {*cmpdi_1}
     (nil))
(insn:TI 94 34 35 6 (set (reg/f:DI 5 di [orig:91 _9 ] [91])
        (reg/f:DI 1 dx [orig:115 MEM[(char * *)this_8(D)] ] [115])) 85 {*movdi_internal}
     (nil))
(jump_insn 35 94 42 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 152)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:297 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2804 (nil)))
 -> 152)
;;  succ:       11 [28.0%]  (CAN_FALLTHRU)
;;              7 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 7, loop depth 0, count 0, freq 5107, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 42 35 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn:TI 43 42 44 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 3 bx [orig:90 __dnew.40_7 ] [90])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:288 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 44 43 56 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 45)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:288 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 434 (nil)))
 -> 45)
;;  succ:       8 [95.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              10 [4.3%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 8, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [100.0%]  (CAN_FALLTHRU)
;;              7 [95.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              11 [100.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	 17 [flags]
(code_label 56 44 57 8 8 "" [2 uses])
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn:TI 58 57 59 8 (set (reg:DI 0 ax [orig:94 __dnew.41_13 ] [94])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [6 __dnew+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:232 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 __dnew+0 S8 A64])
        (nil)))
(insn:TI 59 58 61 8 (set (mem:DI (plus:DI (reg/f:DI 6 bp [orig:100 this ] [100])
                (const_int 8 [0x8])) [6 MEM[(size_type *)this_8(D) + 8B]+0 S8 A64])
        (reg:DI 0 ax [orig:94 __dnew.41_13 ] [94])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:100 this ] [100])
        (nil)))
(insn 61 59 157 8 (set (mem:QI (plus:DI (reg/f:DI 1 dx [orig:115 MEM[(char * *)this_8(D)] ] [115])
                (reg:DI 0 ax [orig:94 __dnew.41_13 ] [94])) [0 MEM[(char_type &)_15]+0 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:243 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:115 MEM[(char * *)this_8(D)] ] [115])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:94 __dnew.41_13 ] [94])
            (nil))))
(note 157 61 131 8 NOTE_INSN_EPILOGUE_BEG)
(insn/f 131 157 132 8 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:233 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (nil))))
(insn/f:TI 132 131 133 8 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:233 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 133 132 134 8 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:233 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 134 133 135 8 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:233 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 135 134 136 8 (simple_return) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:233 697 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

(barrier 136 135 151)
;; basic block 9, loop depth 0, count 0, freq 2899, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [29.0%]  (CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 151 136 20 9 22 "" [1 uses])
(note 20 151 122 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn:TI 122 20 24 9 (set (reg/f:DI 4 si [107])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:219 215 {*leadi}
     (nil))
(insn 24 122 150 9 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:100 this ] [100])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:219 85 {*movdi_internal}
     (nil))
(insn 150 24 25 9 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:219 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 25 150 26 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb2bed267e0 _M_create>) [0 _M_create S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:219 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb2bed267e0 _M_create>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 26 25 27 9 (set (reg/f:DI 5 di [orig:91 _9 ] [91])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:219 85 {*movdi_internal}
     (nil))
(insn 27 26 28 9 (set (mem/f:DI (reg/f:DI 6 bp [orig:100 this ] [100]) [5 MEM[(char * *)this_8(D)]+0 S8 A128])
        (reg/f:DI 0 ax [orig:91 _9 ] [91])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:128 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:91 _9 ] [91])
        (nil)))
(insn 28 27 29 9 (set (reg:DI 0 ax [orig:108 __dnew ] [108])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [6 __dnew+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:160 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 __dnew+0 S8 A64])
        (nil)))
(insn:TI 29 28 45 9 (set (mem:DI (plus:DI (reg/f:DI 6 bp [orig:100 this ] [100])
                (const_int 16 [0x10])) [6 MEM[(size_type *)this_8(D) + 16B]+0 S8 A128])
        (reg:DI 0 ax [orig:108 __dnew ] [108])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:160 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:108 __dnew ] [108])
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 10, loop depth 0, count 0, freq 3121, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [4.3%]  (CAN_FALLTHRU)
;;              9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 4 [si]
;; live  kill	
(code_label 45 29 46 10 6 "" [1 uses])
(note 46 45 50 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn:TI 50 46 51 10 (set (reg:DI 1 dx)
        (reg:DI 3 bx [orig:90 __dnew.40_7 ] [90])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:290 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [orig:90 __dnew.40_7 ] [90])
        (nil)))
(insn 51 50 53 10 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:101 __beg ] [101])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:290 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:101 __beg ] [101])
        (nil)))
(call_insn:TI 53 51 93 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb2b3405380 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:290 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb2b3405380 memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn:TI 93 53 153 10 (set (reg/f:DI 1 dx [orig:115 MEM[(char * *)this_8(D)] ] [115])
        (mem/f:DI (reg/f:DI 6 bp [orig:100 this ] [100]) [5 MEM[(char * *)this_8(D)]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(jump_insn 153 93 154 10 (set (pc)
        (label_ref 56)) 667 {jump}
     (nil)
 -> 56)
;;  succ:       8 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 6 [bp] 7 [sp]

(barrier 154 153 152)
;; basic block 11, loop depth 0, count 0, freq 1990, maybe hot
;;  prev block 10, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [28.0%]  (CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label 152 154 36 11 23 "" [1 uses])
(note 36 152 37 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn:TI 37 36 38 11 (set (reg:QI 0 ax [orig:93 _12 ] [93])
        (mem:QI (reg/v/f:DI 41 r12 [orig:101 __beg ] [101]) [0 MEM[(const char_type &)__beg_1(D)]+0 S1 A8])) 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:101 __beg ] [101])
        (expr_list:REG_EQUIV (mem:QI (reg/f:DI 1 dx [orig:115 MEM[(char * *)this_8(D)] ] [115]) [0 MEM[(char_type &)_11]+0 S1 A8])
            (nil))))
(insn:TI 38 37 91 11 (set (mem:QI (reg/f:DI 1 dx [orig:115 MEM[(char * *)this_8(D)] ] [115]) [0 MEM[(char_type &)_11]+0 S1 A8])
        (reg:QI 0 ax [orig:93 _12 ] [93])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:243 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:115 MEM[(char * *)this_8(D)] ] [115])
        (expr_list:REG_DEAD (reg:QI 0 ax [orig:93 _12 ] [93])
            (nil))))
(insn 91 38 155 11 (set (reg/f:DI 1 dx [orig:115 MEM[(char * *)this_8(D)] ] [115])
        (mem/f:DI (reg/f:DI 6 bp [orig:100 this ] [100]) [5 MEM[(char * *)this_8(D)]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(jump_insn 155 91 156 11 (set (pc)
        (label_ref 56)) 667 {jump}
     (nil)
 -> 56)
;;  succ:       8 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 6 [bp] 7 [sp]

(barrier 156 155 119)
(note 119 156 0 NOTE_INSN_DELETED)

;; Function void pythiaSettings(Pythia8::Pythia&, int, int, const Pythia8::Vec4&, unsigned int, unsigned int) (_Z14pythiaSettingsRN7Pythia86PythiaEiiRKNS_4Vec4Ejj, funcdef_no=11346, decl_uid=337191, cgraph_uid=7325, symbol_order=7548)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 91 n_edges 133 count 91 (    1)


void pythiaSettings(Pythia8::Pythia&, int, int, const Pythia8::Vec4&, unsigned int, unsigned int)

Dataflow summary:
def_info->table_size = 7983, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  ref usage 	r0={122d,39u} r1={126d,43u} r2={66d,4u} r3={5d,86u} r4={105d,43u} r5={125d,82u} r6={5d,25u} r7={15d,219u} r8={62d} r9={62d} r10={62d} r11={62d} r12={62d} r13={62d} r14={62d} r15={62d} r16={21u} r17={101d,23u} r18={62d} r19={62d} r20={43e} r21={75d,12u} r22={63d} r23={63d} r24={63d} r25={63d} r26={63d} r27={63d} r28={63d} r29={62d} r30={62d} r31={62d} r32={62d} r33={62d} r34={62d} r35={62d} r36={62d} r37={63d,1u} r38={63d,1u} r39={62d} r40={62d} r41={3d,5u} r42={3d,6u} r43={3d,4u} r44={3d,3u} r45={62d} r46={62d} r47={62d} r48={62d} r49={62d} r50={62d} r51={62d} r52={62d} r53={62d} r54={62d} r55={62d} r56={62d} r57={62d} r58={62d} r59={62d} r60={62d} r61={62d} r62={62d} r63={62d} r64={62d} r65={62d} r66={62d} r67={62d} r68={62d} r69={62d} r70={62d} r71={62d} r72={62d} r73={62d} r74={62d} r75={62d} r76={62d} r77={62d} r78={62d} r79={62d} r80={62d} 
;;    total ref usage 5456{4796d,617u,43e} in 382{320 regular + 62 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 16 [argp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 0 )->[2]->( 74(EH) 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 3 4 )->[5]->( 42 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 5 )->[6]->( 45 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 6 )->[7]->( 50 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 43 7 44 )->[8]->( 72(EH) 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

( 8 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

( 9 10 )->[11]->( 71(EH) 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

( 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

( 12 13 )->[14]->( 73(EH) 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

( 14 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

( 15 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

( 15 16 )->[17]->( 37 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]

( 17 )->[18]->( 78(EH) 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]

( 18 )->[19]->( 20 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13]

( 19 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]

( 19 20 )->[21]->( 77(EH) 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]

( 21 )->[22]->( 23 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13]

( 22 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]

( 22 23 )->[24]->( 82(EH) 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 24 )->[25]->( 26 27 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 25 )->[26]->( 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 25 26 )->[27]->( 81(EH) 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 27 )->[28]->( 29 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 28 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 28 29 )->[30]->( 80(EH) 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 30 )->[31]->( 32 33 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 31 )->[32]->( 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 31 32 )->[33]->( 79(EH) 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 7 [sp]

( 33 41 )->[34]->( 35 36 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 3 [bx] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 3 [bx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

( 34 )->[35]->( 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 34 35 )->[36]->( 1 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 17 )->[37]->( 76(EH) 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 37 )->[38]->( 39 40 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 38 )->[39]->( 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 38 39 )->[40]->( 75(EH) 41 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 7 [sp]

( 40 )->[41]->( 34 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	

( 5 )->[42]->( 67(EH) 43 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 49 42 66 )->[43]->( 44 8 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 43 )->[44]->( 8 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 6 )->[45]->( 90(EH) 46 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 45 )->[46]->( 47 48 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 46 )->[47]->( 48 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 46 47 )->[48]->( 89(EH) 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 48 )->[49]->( 43 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	

( 7 )->[50]->( 88(EH) 51 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 50 )->[51]->( 52 53 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 51 )->[52]->( 53 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 51 52 )->[53]->( 87(EH) 54 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 53 )->[54]->( 55 56 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 54 )->[55]->( 56 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 54 55 )->[56]->( 86(EH) 57 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 56 )->[57]->( 58 59 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 57 )->[58]->( 59 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 57 58 )->[59]->( 85(EH) 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 59 )->[60]->( 61 62 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 60 )->[61]->( 62 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 60 61 )->[62]->( 84(EH) 63 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 62 )->[63]->( 64 65 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 63 )->[64]->( 65 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 63 64 )->[65]->( 83(EH) 66 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 65 )->[66]->( 43 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	

( 42(EH) )->[67]->( 68 )
;; bb 67 artificial_defs: { d99(0){ }d226(1){ }}
;; bb 67 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 78 73 80 81 76 77 74 75 72 79 71 82 83 84 85 86 87 88 89 67 90 )->[68]->( 69 70 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 5 [di] 6 [bp] 7 [sp]
;; live  out 	 5 [di] 6 [bp] 7 [sp]

( 68 )->[69]->( 70 )
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

( 68 69 )->[70]->( )
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 11(EH) )->[71]->( 68 )
;; bb 71 artificial_defs: { d69(0){ }d196(1){ }}
;; bb 71 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 8(EH) )->[72]->( 68 )
;; bb 72 artificial_defs: { d72(0){ }d199(1){ }}
;; bb 72 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 14(EH) )->[73]->( 68 )
;; bb 73 artificial_defs: { d66(0){ }d193(1){ }}
;; bb 73 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 2(EH) )->[74]->( 68 )
;; bb 74 artificial_defs: { d102(0){ }d229(1){ }}
;; bb 74 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 40(EH) )->[75]->( 68 )
;; bb 75 artificial_defs: { d60(0){ }d187(1){ }}
;; bb 75 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 37(EH) )->[76]->( 68 )
;; bb 76 artificial_defs: { d63(0){ }d190(1){ }}
;; bb 76 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 21(EH) )->[77]->( 68 )
;; bb 77 artificial_defs: { d54(0){ }d181(1){ }}
;; bb 77 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 18(EH) )->[78]->( 68 )
;; bb 78 artificial_defs: { d57(0){ }d184(1){ }}
;; bb 78 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 33(EH) )->[79]->( 68 )
;; bb 79 artificial_defs: { d42(0){ }d169(1){ }}
;; bb 79 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 30(EH) )->[80]->( 68 )
;; bb 80 artificial_defs: { d45(0){ }d172(1){ }}
;; bb 80 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 27(EH) )->[81]->( 68 )
;; bb 81 artificial_defs: { d48(0){ }d175(1){ }}
;; bb 81 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 24(EH) )->[82]->( 68 )
;; bb 82 artificial_defs: { d51(0){ }d178(1){ }}
;; bb 82 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 65(EH) )->[83]->( 68 )
;; bb 83 artificial_defs: { d75(0){ }d202(1){ }}
;; bb 83 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 62(EH) )->[84]->( 68 )
;; bb 84 artificial_defs: { d78(0){ }d205(1){ }}
;; bb 84 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 59(EH) )->[85]->( 68 )
;; bb 85 artificial_defs: { d81(0){ }d208(1){ }}
;; bb 85 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 56(EH) )->[86]->( 68 )
;; bb 86 artificial_defs: { d84(0){ }d211(1){ }}
;; bb 86 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 53(EH) )->[87]->( 68 )
;; bb 87 artificial_defs: { d87(0){ }d214(1){ }}
;; bb 87 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 50(EH) )->[88]->( 68 )
;; bb 88 artificial_defs: { d90(0){ }d217(1){ }}
;; bb 88 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 48(EH) )->[89]->( 68 )
;; bb 89 artificial_defs: { d93(0){ }d220(1){ }}
;; bb 89 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 45(EH) )->[90]->( 68 )
;; bb 90 artificial_defs: { d96(0){ }d223(1){ }}
;; bb 90 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 36 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 18 to worklist
  Adding insn 13 to worklist
  Adding insn 4 to worklist
  Adding insn 1091 to worklist
  Adding insn 1090 to worklist
  Adding insn 1089 to worklist
  Adding insn 1088 to worklist
  Adding insn 1087 to worklist
  Adding insn 1086 to worklist
  Adding insn 29 to worklist
  Adding insn 32 to worklist
  Adding insn 36 to worklist
  Adding insn 67 to worklist
  Adding insn 122 to worklist
  Adding insn 284 to worklist
  Adding insn 277 to worklist
  Adding insn 272 to worklist
  Adding insn 290 to worklist
  Adding insn 293 to worklist
  Adding insn 309 to worklist
  Adding insn 303 to worklist
  Adding insn 298 to worklist
  Adding insn 315 to worklist
  Adding insn 318 to worklist
  Adding insn 334 to worklist
  Adding insn 328 to worklist
  Adding insn 323 to worklist
  Adding insn 340 to worklist
  Adding insn 343 to worklist
  Adding insn 347 to worklist
  Adding insn 418 to worklist
  Adding insn 412 to worklist
  Adding insn 407 to worklist
  Adding insn 1036 to worklist
  Adding insn 424 to worklist
  Adding insn 427 to worklist
  Adding insn 444 to worklist
  Adding insn 438 to worklist
  Adding insn 433 to worklist
  Adding insn 1038 to worklist
  Adding insn 450 to worklist
  Adding insn 453 to worklist
  Adding insn 470 to worklist
  Adding insn 464 to worklist
  Adding insn 459 to worklist
  Adding insn 1040 to worklist
  Adding insn 476 to worklist
  Adding insn 479 to worklist
  Adding insn 495 to worklist
  Adding insn 489 to worklist
  Adding insn 484 to worklist
  Adding insn 501 to worklist
  Adding insn 504 to worklist
  Adding insn 520 to worklist
  Adding insn 514 to worklist
  Adding insn 509 to worklist
  Adding insn 526 to worklist
  Adding insn 529 to worklist
  Adding insn 545 to worklist
  Adding insn 539 to worklist
  Adding insn 534 to worklist
  Adding insn 551 to worklist
  Adding insn 554 to worklist
  Adding insn 1104 to worklist
  Adding insn 363 to worklist
  Adding insn 357 to worklist
  Adding insn 352 to worklist
  Adding insn 1034 to worklist
  Adding insn 369 to worklist
  Adding insn 372 to worklist
  Adding insn 388 to worklist
  Adding insn 382 to worklist
  Adding insn 377 to worklist
  Adding insn 1401 to worklist
  Adding insn 50 to worklist
  Adding insn 45 to worklist
  Adding insn 40 to worklist
  Adding insn 262 to worklist
  Adding insn 1403 to worklist
  Adding insn 265 to worklist
  Adding insn 81 to worklist
  Adding insn 76 to worklist
  Adding insn 71 to worklist
  Adding insn 87 to worklist
  Adding insn 90 to worklist
  Adding insn 105 to worklist
  Adding insn 100 to worklist
  Adding insn 95 to worklist
  Adding insn 1406 to worklist
  Adding insn 136 to worklist
  Adding insn 131 to worklist
  Adding insn 126 to worklist
  Adding insn 142 to worklist
  Adding insn 145 to worklist
  Adding insn 160 to worklist
  Adding insn 155 to worklist
  Adding insn 150 to worklist
  Adding insn 166 to worklist
  Adding insn 169 to worklist
  Adding insn 184 to worklist
  Adding insn 179 to worklist
  Adding insn 174 to worklist
  Adding insn 190 to worklist
  Adding insn 193 to worklist
  Adding insn 208 to worklist
  Adding insn 203 to worklist
  Adding insn 198 to worklist
  Adding insn 214 to worklist
  Adding insn 217 to worklist
  Adding insn 232 to worklist
  Adding insn 227 to worklist
  Adding insn 222 to worklist
  Adding insn 238 to worklist
  Adding insn 241 to worklist
  Adding insn 256 to worklist
  Adding insn 251 to worklist
  Adding insn 246 to worklist
  Adding insn 1409 to worklist
  Adding insn 887 to worklist
  Adding insn 890 to worklist
  Adding insn 895 to worklist
  Adding insn 1411 to worklist
  Adding insn 1413 to worklist
  Adding insn 1415 to worklist
  Adding insn 1417 to worklist
  Adding insn 1419 to worklist
  Adding insn 1421 to worklist
  Adding insn 1423 to worklist
  Adding insn 1425 to worklist
  Adding insn 1427 to worklist
  Adding insn 1429 to worklist
  Adding insn 1431 to worklist
  Adding insn 1433 to worklist
  Adding insn 1435 to worklist
  Adding insn 1437 to worklist
  Adding insn 1439 to worklist
  Adding insn 1441 to worklist
  Adding insn 1443 to worklist
  Adding insn 1445 to worklist
  Adding insn 1447 to worklist
  Adding insn 1449 to worklist
Finished finding needed instructions:
processing block 70 lr out =  7 [sp]
  Adding insn 894 to worklist
processing block 69 lr out =  6 [bp] 7 [sp]
processing block 68 lr out =  5 [di] 6 [bp] 7 [sp]
  Adding insn 886 to worklist
  Adding insn 885 to worklist
  Adding insn 883 to worklist
  Adding insn 960 to worklist
processing block 74 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 67 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 72 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 71 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 73 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 76 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 75 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 36 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1103 to worklist
  Adding insn 1102 to worklist
  Adding insn 1101 to worklist
  Adding insn 1100 to worklist
  Adding insn 1099 to worklist
  Adding insn 1098 to worklist
  Adding insn 1097 to worklist
processing block 35 lr out =  7 [sp]
processing block 34 lr out =  5 [di] 7 [sp]
  Adding insn 550 to worklist
  Adding insn 549 to worklist
  Adding insn 547 to worklist
processing block 41 lr out =  3 [bx] 7 [sp]
processing block 40 lr out =  3 [bx] 7 [sp] 16 [argp]
  Adding insn 387 to worklist
  Adding insn 386 to worklist
  Adding insn 1057 to worklist
  Adding insn 1391 to worklist
  Adding insn 381 to worklist
  Adding insn 380 to worklist
  Adding insn 379 to worklist
  Adding insn 1056 to worklist
processing block 39 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp]
processing block 38 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
  Adding insn 368 to worklist
  Adding insn 1058 to worklist
  Adding insn 365 to worklist
processing block 37 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp]
  Adding insn 362 to worklist
  Adding insn 361 to worklist
  Adding insn 1035 to worklist
  Adding insn 1392 to worklist
  Adding insn 356 to worklist
  Adding insn 355 to worklist
  Adding insn 354 to worklist
  Adding insn 1059 to worklist
  Adding insn 349 to worklist
processing block 78 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 77 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 82 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 81 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 80 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 79 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 33 lr out =  3 [bx] 7 [sp] 16 [argp]
  Adding insn 544 to worklist
  Adding insn 543 to worklist
  Adding insn 1043 to worklist
  Adding insn 1385 to worklist
  Adding insn 538 to worklist
  Adding insn 537 to worklist
  Adding insn 536 to worklist
  Adding insn 1042 to worklist
processing block 32 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp]
processing block 31 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
  Adding insn 525 to worklist
  Adding insn 1044 to worklist
  Adding insn 522 to worklist
processing block 30 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp]
  Adding insn 519 to worklist
  Adding insn 518 to worklist
  Adding insn 1046 to worklist
  Adding insn 1386 to worklist
  Adding insn 513 to worklist
  Adding insn 512 to worklist
  Adding insn 511 to worklist
  Adding insn 1045 to worklist
processing block 29 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp]
processing block 28 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
  Adding insn 500 to worklist
  Adding insn 1047 to worklist
  Adding insn 497 to worklist
processing block 27 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp]
  Adding insn 494 to worklist
  Adding insn 493 to worklist
  Adding insn 1049 to worklist
  Adding insn 1387 to worklist
  Adding insn 488 to worklist
  Adding insn 487 to worklist
  Adding insn 486 to worklist
  Adding insn 1048 to worklist
processing block 26 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp]
processing block 25 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
  Adding insn 475 to worklist
  Adding insn 1050 to worklist
  Adding insn 472 to worklist
processing block 24 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp]
  Adding insn 469 to worklist
  Adding insn 468 to worklist
  Adding insn 1041 to worklist
  Adding insn 1388 to worklist
  Adding insn 463 to worklist
  Adding insn 462 to worklist
  Adding insn 461 to worklist
  Adding insn 1051 to worklist
  Adding insn 456 to worklist
processing block 23 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
processing block 22 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
  Adding insn 449 to worklist
  Adding insn 1052 to worklist
  Adding insn 446 to worklist
processing block 21 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
  Adding insn 443 to worklist
  Adding insn 442 to worklist
  Adding insn 1039 to worklist
  Adding insn 1389 to worklist
  Adding insn 437 to worklist
  Adding insn 436 to worklist
  Adding insn 435 to worklist
  Adding insn 1053 to worklist
  Adding insn 430 to worklist
processing block 20 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
processing block 19 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
  Adding insn 423 to worklist
  Adding insn 1054 to worklist
  Adding insn 420 to worklist
processing block 18 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
  Adding insn 417 to worklist
  Adding insn 416 to worklist
  Adding insn 1037 to worklist
  Adding insn 1390 to worklist
  Adding insn 411 to worklist
  Adding insn 410 to worklist
  Adding insn 409 to worklist
  Adding insn 1055 to worklist
  Adding insn 404 to worklist
processing block 17 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
  Adding insn 346 to worklist
processing block 16 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
processing block 15 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
  Adding insn 339 to worklist
  Adding insn 1060 to worklist
  Adding insn 336 to worklist
processing block 14 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
  Adding insn 333 to worklist
  Adding insn 332 to worklist
  Adding insn 331 to worklist
  Adding insn 1393 to worklist
  Adding insn 327 to worklist
  Adding insn 326 to worklist
  Adding insn 325 to worklist
  Adding insn 1061 to worklist
processing block 13 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
processing block 12 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
  Adding insn 314 to worklist
  Adding insn 1062 to worklist
  Adding insn 311 to worklist
processing block 11 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
  Adding insn 308 to worklist
  Adding insn 307 to worklist
  Adding insn 306 to worklist
  Adding insn 1394 to worklist
  Adding insn 302 to worklist
  Adding insn 301 to worklist
  Adding insn 300 to worklist
  Adding insn 1063 to worklist
processing block 10 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
processing block 9 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
  Adding insn 289 to worklist
  Adding insn 1064 to worklist
  Adding insn 286 to worklist
processing block 8 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
  Adding insn 283 to worklist
  Adding insn 282 to worklist
  Adding insn 281 to worklist
  Adding insn 1395 to worklist
  Adding insn 278 to worklist
  Adding insn 276 to worklist
  Adding insn 275 to worklist
  Adding insn 274 to worklist
  Adding insn 1065 to worklist
processing block 44 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 43 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 261 to worklist
  Adding insn 1066 to worklist
  Adding insn 258 to worklist
processing block 42 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 1083 to worklist
processing block 90 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 89 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 49 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 48 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 102 to worklist
  Adding insn 99 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 1079 to worklist
processing block 47 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 46 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 86 to worklist
  Adding insn 1080 to worklist
  Adding insn 83 to worklist
processing block 45 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 1081 to worklist
processing block 88 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 87 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 86 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 85 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 84 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 83 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 66 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 65 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 255 to worklist
  Adding insn 254 to worklist
  Adding insn 253 to worklist
  Adding insn 250 to worklist
  Adding insn 249 to worklist
  Adding insn 248 to worklist
  Adding insn 1067 to worklist
processing block 64 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 63 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 237 to worklist
  Adding insn 1068 to worklist
  Adding insn 234 to worklist
processing block 62 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 231 to worklist
  Adding insn 230 to worklist
  Adding insn 229 to worklist
  Adding insn 226 to worklist
  Adding insn 225 to worklist
  Adding insn 224 to worklist
  Adding insn 1069 to worklist
processing block 61 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 60 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 213 to worklist
  Adding insn 1070 to worklist
  Adding insn 210 to worklist
processing block 59 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 207 to worklist
  Adding insn 206 to worklist
  Adding insn 205 to worklist
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 200 to worklist
  Adding insn 1071 to worklist
processing block 58 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 57 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 189 to worklist
  Adding insn 1072 to worklist
  Adding insn 186 to worklist
processing block 56 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 183 to worklist
  Adding insn 182 to worklist
  Adding insn 181 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 1073 to worklist
processing block 55 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 54 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 165 to worklist
  Adding insn 1074 to worklist
  Adding insn 162 to worklist
processing block 53 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 159 to worklist
  Adding insn 158 to worklist
  Adding insn 157 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
  Adding insn 152 to worklist
  Adding insn 1075 to worklist
processing block 52 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 51 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 141 to worklist
  Adding insn 1076 to worklist
  Adding insn 138 to worklist
processing block 50 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 135 to worklist
  Adding insn 134 to worklist
  Adding insn 133 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
  Adding insn 128 to worklist
  Adding insn 1077 to worklist
processing block 7 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 121 to worklist
processing block 6 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 66 to worklist
processing block 5 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 35 to worklist
processing block 4 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 3 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 28 to worklist
  Adding insn 1084 to worklist
  Adding insn 25 to worklist
processing block 2 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 1085 to worklist
  Adding insn 11 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
  Adding insn 1092 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 91 n_edges 133 count 91 (    1)
;;   ======================================================
;;   -- basic block 2 from 1086 to 23 -- after reload
;;   ======================================================

;;	  0--> b  0: i1086 [--sp]=r15                              :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i1087 [--sp]=r14                              :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i   3 r15=si                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1088 [--sp]=r13                              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1089 [--sp]=r12                              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i  16 si=`*.LC1'                              :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i1090 [--sp]=bp                               :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i1091 [--sp]=bx                               :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i   2 bp=di                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i   5 r13=cx                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i   6 r12=r8                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i   7 r14=r9                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i1092 {sp=sp-0x38;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  5--> b  0: i  11 bx=sp+0x10                              :athlon-direct,athlon-agu,nothing
;;	  5--> b  0: i   4 [sp+0x8]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i  15 dx=const(`*.LC1'+0x10)                  :athlon-direct,athlon-agu,nothing
;;	  7--> b  0: i1085 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  7--> b  0: i  17 di=bx                                   :athlon-direct,athlon-ieu
;;	  9--> b  0: i  13 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 10--> b  0: i  18 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	 11--> b  0: i  20 dx=0x1                                  :athlon-direct,athlon-ieu
;;	 11--> b  0: i  21 si=bx                                   :athlon-direct,athlon-ieu
;;	 11--> b  0: i  22 di=bp                                   :athlon-direct,athlon-ieu
;;	 12--> b  0: i  23 ax=call [`_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 12
;;   new head = 1086
;;   new tail = 23

;;   ======================================================
;;   -- basic block 3 from 25 to 29 -- after reload
;;   ======================================================

;;	  0--> b  0: i  25 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1084 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i  28 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i  29 pc={(flags==0)?L33:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 25
;;   new tail = 29

;;   ======================================================
;;   -- basic block 4 from 32 to 32 -- after reload
;;   ======================================================

;;	  0--> b  0: i  32 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 32
;;   new tail = 32

;;   ======================================================
;;   -- basic block 5 from 35 to 36 -- after reload
;;   ======================================================

;;	  0--> b  0: i  35 flags=cmp(r12,0x1)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i  36 pc={(flags==0)?L1396:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 35
;;   new tail = 36

;;   ======================================================
;;   -- basic block 6 from 66 to 67 -- after reload
;;   ======================================================

;;	  0--> b  0: i  66 flags=cmp(r12,0x2)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i  67 pc={(flags==0)?L1397:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 66
;;   new tail = 67

;;   ======================================================
;;   -- basic block 7 from 121 to 122 -- after reload
;;   ======================================================

;;	  0--> b  0: i 121 flags=cmp(r12,0x3)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i 122 pc={(flags==0)?L1398:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 121
;;   new tail = 122

;;   ======================================================
;;   -- basic block 8 from 1065 to 284 -- after reload
;;   ======================================================

;;	  0--> b  0: i1065 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 274 dx=const(`*.LC10'+0x9)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 275 si=`*.LC10'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 276 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 278 {bp=bp+0xa58;clobber flags;}            :athlon-direct,athlon-ieu
;;	  2--> b  0: i 272 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 277 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i1395 {cx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 281 dx=r15                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 282 si=bx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 283 di=bp                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i 284 ax=call [`_ZN7Pythia88Settings4modeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEib']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 1065
;;   new tail = 284

;;   ======================================================
;;   -- basic block 9 from 286 to 290 -- after reload
;;   ======================================================

;;	  0--> b  0: i 286 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1064 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 289 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 290 pc={(flags==0)?L294:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 286
;;   new tail = 290

;;   ======================================================
;;   -- basic block 10 from 293 to 293 -- after reload
;;   ======================================================

;;	  0--> b  0: i 293 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 293
;;   new tail = 293

;;   ======================================================
;;   -- basic block 11 from 1063 to 309 -- after reload
;;   ======================================================

;;	  0--> b  0: i1063 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 300 dx=const(`*.LC11'+0x9)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 301 si=`*.LC11'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 302 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 298 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 303 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i 306 dx=[sp+0x8]                             :athlon-direct,athlon-load
;;	  4--> b  0: i1394 {cx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 307 si=bx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 308 di=bp                                   :athlon-direct,athlon-ieu
;;	  7--> b  0: i 309 ax=call [`_ZN7Pythia88Settings4modeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEib']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1063
;;   new tail = 309

;;   ======================================================
;;   -- basic block 12 from 311 to 315 -- after reload
;;   ======================================================

;;	  0--> b  0: i 311 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1062 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 314 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 315 pc={(flags==0)?L319:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 311
;;   new tail = 315

;;   ======================================================
;;   -- basic block 13 from 318 to 318 -- after reload
;;   ======================================================

;;	  0--> b  0: i 318 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 318
;;   new tail = 318

;;   ======================================================
;;   -- basic block 14 from 1061 to 334 -- after reload
;;   ======================================================

;;	  0--> b  0: i1061 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 325 dx=const(`*.LC12'+0xf)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 326 si=`*.LC12'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 327 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 323 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 328 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i1393 {cx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 331 dx=r14                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 332 si=bx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 333 di=bp                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i 334 ax=call [`_ZN7Pythia88Settings4modeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEib']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 1061
;;   new tail = 334

;;   ======================================================
;;   -- basic block 15 from 336 to 340 -- after reload
;;   ======================================================

;;	  0--> b  0: i 336 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1060 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 339 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 340 pc={(flags==0)?L344:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 336
;;   new tail = 340

;;   ======================================================
;;   -- basic block 16 from 343 to 343 -- after reload
;;   ======================================================

;;	  0--> b  0: i 343 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 343
;;   new tail = 343

;;   ======================================================
;;   -- basic block 17 from 346 to 347 -- after reload
;;   ======================================================

;;	  0--> b  0: i 346 flags=cmp(r14,0x2)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i 347 pc={(flags==0)?L1399:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 346
;;   new tail = 347

;;   ======================================================
;;   -- basic block 18 from 404 to 418 -- after reload
;;   ======================================================

;;	  0--> b  0: i 404 xmm0=[r13]                              :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i1055 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 409 dx=const(`*.LC16'+0x9)                  :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 410 si=`*.LC16'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 411 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1036 [sp+0x8]=xmm0                           :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  2--> b  0: i 407 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 412 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i1037 xmm0=[sp+0x8]                           :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  4--> b  0: i1390 {dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 416 si=bx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 417 di=bp                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i 418 call [`_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 404
;;   new tail = 418

;;   ======================================================
;;   -- basic block 19 from 420 to 424 -- after reload
;;   ======================================================

;;	  0--> b  0: i 420 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1054 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 423 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 424 pc={(flags==0)?L428:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 420
;;   new tail = 424

;;   ======================================================
;;   -- basic block 20 from 427 to 427 -- after reload
;;   ======================================================

;;	  0--> b  0: i 427 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 427
;;   new tail = 427

;;   ======================================================
;;   -- basic block 21 from 430 to 444 -- after reload
;;   ======================================================

;;	  0--> b  0: i 430 xmm0=[r13+0x8]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i1053 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 435 dx=const(`*.LC17'+0x9)                  :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 436 si=`*.LC17'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 437 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1038 [sp+0x8]=xmm0                           :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  2--> b  0: i 433 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 438 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i1039 xmm0=[sp+0x8]                           :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  4--> b  0: i1389 {dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 442 si=bx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 443 di=bp                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i 444 call [`_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 430
;;   new tail = 444

;;   ======================================================
;;   -- basic block 22 from 446 to 450 -- after reload
;;   ======================================================

;;	  0--> b  0: i 446 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1052 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 449 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 450 pc={(flags==0)?L454:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 446
;;   new tail = 450

;;   ======================================================
;;   -- basic block 23 from 453 to 453 -- after reload
;;   ======================================================

;;	  0--> b  0: i 453 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 453
;;   new tail = 453

;;   ======================================================
;;   -- basic block 24 from 456 to 470 -- after reload
;;   ======================================================

;;	  0--> b  0: i 456 xmm0=[r13+0x10]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i1051 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 461 dx=const(`*.LC18'+0x9)                  :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 462 si=`*.LC18'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 463 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1040 [sp+0x8]=xmm0                           :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  2--> b  0: i 459 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 464 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i1041 xmm0=[sp+0x8]                           :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  4--> b  0: i1388 {dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 468 si=bx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 469 di=bp                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i 470 call [`_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 456
;;   new tail = 470

;;   ======================================================
;;   -- basic block 25 from 472 to 476 -- after reload
;;   ======================================================

;;	  0--> b  0: i 472 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1050 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 475 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 476 pc={(flags==0)?L480:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 472
;;   new tail = 476

;;   ======================================================
;;   -- basic block 26 from 479 to 479 -- after reload
;;   ======================================================

;;	  0--> b  0: i 479 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 479
;;   new tail = 479

;;   ======================================================
;;   -- basic block 27 from 1048 to 495 -- after reload
;;   ======================================================

;;	  0--> b  0: i1048 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 486 dx=const(`*.LC19'+0x9)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 487 si=`*.LC19'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 488 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 484 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 489 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i1049 xmm0=0.0                                :athlon-double,athlon-fpsched,athlon-fmul
;;	  4--> b  0: i1387 {dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 493 si=bx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 494 di=bp                                   :athlon-direct,athlon-ieu
;;	  7--> b  0: i 495 call [`_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1048
;;   new tail = 495

;;   ======================================================
;;   -- basic block 28 from 497 to 501 -- after reload
;;   ======================================================

;;	  0--> b  0: i 497 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1047 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 500 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 501 pc={(flags==0)?L505:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 497
;;   new tail = 501

;;   ======================================================
;;   -- basic block 29 from 504 to 504 -- after reload
;;   ======================================================

;;	  0--> b  0: i 504 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 504
;;   new tail = 504

;;   ======================================================
;;   -- basic block 30 from 1045 to 520 -- after reload
;;   ======================================================

;;	  0--> b  0: i1045 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 511 dx=const(`*.LC20'+0x9)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 512 si=`*.LC20'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 513 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 509 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 514 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i1046 xmm0=0.0                                :athlon-double,athlon-fpsched,athlon-fmul
;;	  4--> b  0: i1386 {dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 518 si=bx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 519 di=bp                                   :athlon-direct,athlon-ieu
;;	  7--> b  0: i 520 call [`_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1045
;;   new tail = 520

;;   ======================================================
;;   -- basic block 31 from 522 to 526 -- after reload
;;   ======================================================

;;	  0--> b  0: i 522 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1044 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 525 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 526 pc={(flags==0)?L530:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 522
;;   new tail = 526

;;   ======================================================
;;   -- basic block 32 from 529 to 529 -- after reload
;;   ======================================================

;;	  0--> b  0: i 529 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 529
;;   new tail = 529

;;   ======================================================
;;   -- basic block 33 from 1042 to 545 -- after reload
;;   ======================================================

;;	  0--> b  0: i1042 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 536 dx=const(`*.LC21'+0x9)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 537 si=`*.LC21'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 538 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 534 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 539 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i1043 xmm0=0.0                                :athlon-double,athlon-fpsched,athlon-fmul
;;	  4--> b  0: i1385 {dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 543 si=bx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 544 di=bp                                   :athlon-direct,athlon-ieu
;;	  7--> b  0: i 545 call [`_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1042
;;   new tail = 545

;;   ======================================================
;;   -- basic block 34 from 547 to 551 -- after reload
;;   ======================================================

;;	  0--> b  0: i 547 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 549 {bx=bx+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  3--> b  0: i 550 flags=cmp(di,bx)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 551 pc={(flags==0)?L897:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 547
;;   new tail = 551

;;   ======================================================
;;   -- basic block 35 from 554 to 554 -- after reload
;;   ======================================================

;;	  0--> b  0: i 554 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 554
;;   new tail = 554

;;   ======================================================
;;   -- basic block 36 from 1097 to 1104 -- after reload
;;   ======================================================

;;	  0--> b  0: i1097 {sp=sp+0x38;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  1--> b  0: i1098 bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  2--> b  0: i1099 bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  3--> b  0: i1100 r12=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  4--> b  0: i1101 r13=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  5--> b  0: i1102 r14=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  6--> b  0: i1103 r15=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  7--> b  0: i1104 simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1097
;;   new tail = 1104

;;   ======================================================
;;   -- basic block 37 from 349 to 363 -- after reload
;;   ======================================================

;;	  0--> b  0: i 349 xmm0=[r13+0x18]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i1059 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 354 dx=const(`*.LC13'+0x8)                  :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 355 si=`*.LC13'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 356 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1034 [sp+0x8]=xmm0                           :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  2--> b  0: i 352 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 357 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i1035 xmm0=[sp+0x8]                           :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  4--> b  0: i1392 {dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 361 si=bx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 362 di=bp                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i 363 call [`_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 349
;;   new tail = 363

;;   ======================================================
;;   -- basic block 38 from 365 to 369 -- after reload
;;   ======================================================

;;	  0--> b  0: i 365 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1058 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 368 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 369 pc={(flags==0)?L373:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 365
;;   new tail = 369

;;   ======================================================
;;   -- basic block 39 from 372 to 372 -- after reload
;;   ======================================================

;;	  0--> b  0: i 372 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 372
;;   new tail = 372

;;   ======================================================
;;   -- basic block 40 from 1056 to 388 -- after reload
;;   ======================================================

;;	  0--> b  0: i1056 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 379 dx=const(`*.LC14'+0x8)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 380 si=`*.LC14'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 381 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 377 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 382 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i1057 xmm0=0.0                                :athlon-double,athlon-fpsched,athlon-fmul
;;	  4--> b  0: i1391 {dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 386 si=bx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 387 di=bp                                   :athlon-direct,athlon-ieu
;;	  7--> b  0: i 388 call [`_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1056
;;   new tail = 388

;;   ======================================================
;;   -- basic block 41 from 1401 to 1401 -- after reload
;;   ======================================================

;;	  0--> b  0: i1401 pc=L1188                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1401
;;   new tail = 1401

;;   ======================================================
;;   -- basic block 42 from 1083 to 50 -- after reload
;;   ======================================================

;;	  0--> b  0: i1083 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i  42 dx=const(`*.LC2'+0x10)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i  43 si=`*.LC2'                              :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i  44 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i  40 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i  45 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i  47 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i  48 si=bx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i  49 di=bp                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i  50 ax=call [`_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1083
;;   new tail = 50

;;   ======================================================
;;   -- basic block 43 from 258 to 262 -- after reload
;;   ======================================================

;;	  0--> b  0: i 258 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1066 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 261 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 262 pc={(flags==0)?L268:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 258
;;   new tail = 262

;;   ======================================================
;;   -- basic block 44 from 265 to 1403 -- after reload
;;   ======================================================

;;	  0--> b  0: i 265 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	  1--> b  0: i1403 pc=L268                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 265
;;   new tail = 1403

;;   ======================================================
;;   -- basic block 45 from 1081 to 81 -- after reload
;;   ======================================================

;;	  0--> b  0: i1081 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i  73 dx=const(`*.LC3'+0x11)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i  74 si=`*.LC3'                              :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i  75 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i  71 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i  76 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i  78 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i  79 si=bx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i  80 di=bp                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i  81 ax=call [`_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1081
;;   new tail = 81

;;   ======================================================
;;   -- basic block 46 from 83 to 87 -- after reload
;;   ======================================================

;;	  0--> b  0: i  83 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1080 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i  86 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i  87 pc={(flags==0)?L91:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 83
;;   new tail = 87

;;   ======================================================
;;   -- basic block 47 from 90 to 90 -- after reload
;;   ======================================================

;;	  0--> b  0: i  90 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 90
;;   new tail = 90

;;   ======================================================
;;   -- basic block 48 from 1079 to 105 -- after reload
;;   ======================================================

;;	  0--> b  0: i1079 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i  97 dx=const(`*.LC4'+0x1b)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i  98 si=`*.LC4'                              :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i  99 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i  95 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 100 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i 102 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 103 si=bx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 104 di=bp                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 105 ax=call [`_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1079
;;   new tail = 105

;;   ======================================================
;;   -- basic block 49 from 1406 to 1406 -- after reload
;;   ======================================================

;;	  0--> b  0: i1406 pc=L1179                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1406
;;   new tail = 1406

;;   ======================================================
;;   -- basic block 50 from 1077 to 136 -- after reload
;;   ======================================================

;;	  0--> b  0: i1077 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 128 dx=const(`*.LC3'+0x11)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 129 si=`*.LC3'                              :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 130 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 126 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 131 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i 133 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 134 si=bx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 135 di=bp                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 136 ax=call [`_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1077
;;   new tail = 136

;;   ======================================================
;;   -- basic block 51 from 138 to 142 -- after reload
;;   ======================================================

;;	  0--> b  0: i 138 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1076 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 141 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 142 pc={(flags==0)?L146:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 138
;;   new tail = 142

;;   ======================================================
;;   -- basic block 52 from 145 to 145 -- after reload
;;   ======================================================

;;	  0--> b  0: i 145 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 145
;;   new tail = 145

;;   ======================================================
;;   -- basic block 53 from 1075 to 160 -- after reload
;;   ======================================================

;;	  0--> b  0: i1075 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 152 dx=const(`*.LC5'+0x1c)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 153 si=`*.LC5'                              :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 154 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 150 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 155 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i 157 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 158 si=bx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 159 di=bp                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 160 ax=call [`_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1075
;;   new tail = 160

;;   ======================================================
;;   -- basic block 54 from 162 to 166 -- after reload
;;   ======================================================

;;	  0--> b  0: i 162 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1074 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 165 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 166 pc={(flags==0)?L170:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 162
;;   new tail = 166

;;   ======================================================
;;   -- basic block 55 from 169 to 169 -- after reload
;;   ======================================================

;;	  0--> b  0: i 169 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 169
;;   new tail = 169

;;   ======================================================
;;   -- basic block 56 from 1073 to 184 -- after reload
;;   ======================================================

;;	  0--> b  0: i1073 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 176 dx=const(`*.LC6'+0x14)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 177 si=`*.LC6'                              :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 178 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 174 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 179 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i 181 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 182 si=bx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 183 di=bp                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 184 ax=call [`_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1073
;;   new tail = 184

;;   ======================================================
;;   -- basic block 57 from 186 to 190 -- after reload
;;   ======================================================

;;	  0--> b  0: i 186 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1072 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 189 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 190 pc={(flags==0)?L194:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 186
;;   new tail = 190

;;   ======================================================
;;   -- basic block 58 from 193 to 193 -- after reload
;;   ======================================================

;;	  0--> b  0: i 193 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 193
;;   new tail = 193

;;   ======================================================
;;   -- basic block 59 from 1071 to 208 -- after reload
;;   ======================================================

;;	  0--> b  0: i1071 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 200 dx=const(`*.LC7'+0x1e)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 201 si=`*.LC7'                              :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 202 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 198 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 203 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i 205 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 206 si=bx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 207 di=bp                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 208 ax=call [`_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1071
;;   new tail = 208

;;   ======================================================
;;   -- basic block 60 from 210 to 214 -- after reload
;;   ======================================================

;;	  0--> b  0: i 210 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1070 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 213 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 214 pc={(flags==0)?L218:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 210
;;   new tail = 214

;;   ======================================================
;;   -- basic block 61 from 217 to 217 -- after reload
;;   ======================================================

;;	  0--> b  0: i 217 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 217
;;   new tail = 217

;;   ======================================================
;;   -- basic block 62 from 1069 to 232 -- after reload
;;   ======================================================

;;	  0--> b  0: i1069 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 224 dx=const(`*.LC8'+0x1e)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 225 si=`*.LC8'                              :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 226 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 222 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 227 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i 229 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 230 si=bx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 231 di=bp                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 232 ax=call [`_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1069
;;   new tail = 232

;;   ======================================================
;;   -- basic block 63 from 234 to 238 -- after reload
;;   ======================================================

;;	  0--> b  0: i 234 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1068 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i 237 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 238 pc={(flags==0)?L242:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 234
;;   new tail = 238

;;   ======================================================
;;   -- basic block 64 from 241 to 241 -- after reload
;;   ======================================================

;;	  0--> b  0: i 241 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 241
;;   new tail = 241

;;   ======================================================
;;   -- basic block 65 from 1067 to 256 -- after reload
;;   ======================================================

;;	  0--> b  0: i1067 ax=bx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 248 dx=const(`*.LC9'+0x1f)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 249 si=`*.LC9'                              :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 250 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 246 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 251 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	  4--> b  0: i 253 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 254 si=bx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 255 di=bp                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 256 ax=call [`_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1067
;;   new tail = 256

;;   ======================================================
;;   -- basic block 66 from 1409 to 1409 -- after reload
;;   ======================================================

;;	  0--> b  0: i1409 pc=L1179                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1409
;;   new tail = 1409

;;   ======================================================
;;   -- basic block 68 from 960 to 887 -- after reload
;;   ======================================================

;;	  0--> b  0: i 883 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 885 {bx=bx+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  0--> b  0: i 960 bp=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i 886 flags=cmp(di,bx)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 887 pc={(flags==0)?L891:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 883
;;   new tail = 887

;;   ======================================================
;;   -- basic block 69 from 890 to 890 -- after reload
;;   ======================================================

;;	  0--> b  0: i 890 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 890
;;   new tail = 890

;;   ======================================================
;;   -- basic block 70 from 894 to 895 -- after reload
;;   ======================================================

;;	  0--> b  0: i 894 di=bp                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 895 call [`_Unwind_Resume']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 894
;;   new tail = 895

;;   ======================================================
;;   -- basic block 71 from 1411 to 1411 -- after reload
;;   ======================================================

;;	  0--> b  0: i1411 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1411
;;   new tail = 1411

;;   ======================================================
;;   -- basic block 72 from 1413 to 1413 -- after reload
;;   ======================================================

;;	  0--> b  0: i1413 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1413
;;   new tail = 1413

;;   ======================================================
;;   -- basic block 73 from 1415 to 1415 -- after reload
;;   ======================================================

;;	  0--> b  0: i1415 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1415
;;   new tail = 1415

;;   ======================================================
;;   -- basic block 74 from 1417 to 1417 -- after reload
;;   ======================================================

;;	  0--> b  0: i1417 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1417
;;   new tail = 1417

;;   ======================================================
;;   -- basic block 75 from 1419 to 1419 -- after reload
;;   ======================================================

;;	  0--> b  0: i1419 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1419
;;   new tail = 1419

;;   ======================================================
;;   -- basic block 76 from 1421 to 1421 -- after reload
;;   ======================================================

;;	  0--> b  0: i1421 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1421
;;   new tail = 1421

;;   ======================================================
;;   -- basic block 77 from 1423 to 1423 -- after reload
;;   ======================================================

;;	  0--> b  0: i1423 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1423
;;   new tail = 1423

;;   ======================================================
;;   -- basic block 78 from 1425 to 1425 -- after reload
;;   ======================================================

;;	  0--> b  0: i1425 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1425
;;   new tail = 1425

;;   ======================================================
;;   -- basic block 79 from 1427 to 1427 -- after reload
;;   ======================================================

;;	  0--> b  0: i1427 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1427
;;   new tail = 1427

;;   ======================================================
;;   -- basic block 80 from 1429 to 1429 -- after reload
;;   ======================================================

;;	  0--> b  0: i1429 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1429
;;   new tail = 1429

;;   ======================================================
;;   -- basic block 81 from 1431 to 1431 -- after reload
;;   ======================================================

;;	  0--> b  0: i1431 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1431
;;   new tail = 1431

;;   ======================================================
;;   -- basic block 82 from 1433 to 1433 -- after reload
;;   ======================================================

;;	  0--> b  0: i1433 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1433
;;   new tail = 1433

;;   ======================================================
;;   -- basic block 83 from 1435 to 1435 -- after reload
;;   ======================================================

;;	  0--> b  0: i1435 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1435
;;   new tail = 1435

;;   ======================================================
;;   -- basic block 84 from 1437 to 1437 -- after reload
;;   ======================================================

;;	  0--> b  0: i1437 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1437
;;   new tail = 1437

;;   ======================================================
;;   -- basic block 85 from 1439 to 1439 -- after reload
;;   ======================================================

;;	  0--> b  0: i1439 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1439
;;   new tail = 1439

;;   ======================================================
;;   -- basic block 86 from 1441 to 1441 -- after reload
;;   ======================================================

;;	  0--> b  0: i1441 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1441
;;   new tail = 1441

;;   ======================================================
;;   -- basic block 87 from 1443 to 1443 -- after reload
;;   ======================================================

;;	  0--> b  0: i1443 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1443
;;   new tail = 1443

;;   ======================================================
;;   -- basic block 88 from 1445 to 1445 -- after reload
;;   ======================================================

;;	  0--> b  0: i1445 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1445
;;   new tail = 1445

;;   ======================================================
;;   -- basic block 89 from 1447 to 1447 -- after reload
;;   ======================================================

;;	  0--> b  0: i1447 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1447
;;   new tail = 1447

;;   ======================================================
;;   -- basic block 90 from 1449 to 1449 -- after reload
;;   ======================================================

;;	  0--> b  0: i1449 pc=L1255                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1449
;;   new tail = 1449



starting the processing of deferred insns
ending the processing of deferred insns


void pythiaSettings(Pythia8::Pythia&, int, int, const Pythia8::Vec4&, unsigned int, unsigned int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  ref usage 	r0={122d,39u} r1={126d,43u} r2={66d,4u} r3={5d,86u} r4={105d,43u} r5={125d,82u} r6={5d,25u} r7={15d,219u} r8={62d} r9={62d} r10={62d} r11={62d} r12={62d} r13={62d} r14={62d} r15={62d} r16={21u} r17={101d,23u} r18={62d} r19={62d} r20={43e} r21={75d,12u} r22={63d} r23={63d} r24={63d} r25={63d} r26={63d} r27={63d} r28={63d} r29={62d} r30={62d} r31={62d} r32={62d} r33={62d} r34={62d} r35={62d} r36={62d} r37={63d,1u} r38={63d,1u} r39={62d} r40={62d} r41={3d,5u} r42={3d,6u} r43={3d,4u} r44={3d,3u} r45={62d} r46={62d} r47={62d} r48={62d} r49={62d} r50={62d} r51={62d} r52={62d} r53={62d} r54={62d} r55={62d} r56={62d} r57={62d} r58={62d} r59={62d} r60={62d} r61={62d} r62={62d} r63={62d} r64={62d} r65={62d} r66={62d} r67={62d} r68={62d} r69={62d} r70={62d} r71={62d} r72={62d} r73={62d} r74={62d} r75={62d} r76={62d} r77={62d} r78={62d} r79={62d} r80={62d} 
;;    total ref usage 5456{4796d,617u,43e} in 382{320 regular + 62 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(note 9 1 8 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 8 9 1086 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 1086 8 1087 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 44 r15)) mymainCascade.cc:30 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))
(insn/f 1087 1086 3 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) mymainCascade.cc:30 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn 3 1087 1088 2 (set (reg/v:SI 44 r15 [orig:157 idA ] [157])
        (reg:SI 4 si [ idA ])) mymainCascade.cc:30 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ idA ])
        (nil)))
(insn/f:TI 1088 3 1089 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) mymainCascade.cc:30 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 1089 1088 16 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) mymainCascade.cc:30 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn 16 1089 1090 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb2b70685a0 *.LC1>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn/f:TI 1090 16 1091 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) mymainCascade.cc:30 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 1091 1090 2 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) mymainCascade.cc:30 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn 2 1091 5 2 (set (reg/v/f:DI 6 bp [orig:156 fPythia ] [156])
        (reg:DI 5 di [ fPythia ])) mymainCascade.cc:30 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ fPythia ])
        (nil)))
(insn:TI 5 2 6 2 (set (reg/v/f:DI 42 r13 [orig:159 p4A ] [159])
        (reg:DI 2 cx [ p4A ])) mymainCascade.cc:30 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ p4A ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 41 r12 [orig:160 doAllQCD ] [160])
        (reg:SI 37 r8 [ doAllQCD ])) mymainCascade.cc:30 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ doAllQCD ])
        (nil)))
(insn 7 6 1092 2 (set (reg/v:SI 43 r14 [orig:161 frameType ] [161])
        (reg:SI 38 r9 [ frameType ])) mymainCascade.cc:30 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ frameType ])
        (nil)))
(insn/f:TI 1092 7 1093 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mymainCascade.cc:30 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -56 [0xffffffffffffffc8])))
            (nil))))
(note 1093 1092 11 2 NOTE_INSN_PROLOGUE_END)
(insn:TI 11 1093 4 2 (set (reg/f:DI 3 bx [351])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 4 11 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-40 S4 A64])
        (reg:SI 1 dx [ idB ])) mymainCascade.cc:30 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ idB ])
        (nil)))
(insn 15 4 1085 2 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb2b70685a0 *.LC1>)
                (const_int 16 [0x10])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 1085 15 17 2 (set (reg/f:DI 0 ax [163])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 17 1085 13 2 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 13 17 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337195]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [163])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [163])
        (nil)))
(call_insn:TI 18 13 20 2 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 20 18 21 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) mymainCascade.cc:32 86 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:32 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:156 fPythia ] [156])) mymainCascade.cc:32 85 {*movdi_internal}
     (nil))
(call_insn:TI 23 22 24 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>) [0 readString S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:32 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:QI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       74 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 25 24 1084 3 (set (reg/f:DI 5 di [orig:115 _113 ] [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337195]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1084 25 28 3 (set (reg/f:DI 0 ax [167])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 28 1084 29 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:115 _113 ] [115])
            (reg/f:DI 0 ax [167]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [167])
        (nil)))
(jump_insn:TI 29 28 30 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 33)
;;  succ:       4 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              5 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 4, loop depth 0, count 0, freq 6983, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL)
;;  pred:       3 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 30 29 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 32 30 33 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [30.2%]  (CAN_FALLTHRU)
;;              4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 33 32 34 5 25 "" [1 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 35 34 36 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 41 r12 [orig:160 doAllQCD ] [160])
            (const_int 1 [0x1]))) mymainCascade.cc:36 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 36 35 65 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1396)
            (pc))) mymainCascade.cc:36 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1371 (nil)))
 -> 1396)
;;  succ:       42 [13.7%]  (CAN_FALLTHRU)
;;              6 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 6, loop depth 0, count 0, freq 8629, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 65 36 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 66 65 67 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 41 r12 [orig:160 doAllQCD ] [160])
            (const_int 2 [0x2]))) mymainCascade.cc:37 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 67 66 120 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1397)
            (pc))) mymainCascade.cc:37 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1371 (nil)))
 -> 1397)
;;  succ:       45 [13.7%]  (CAN_FALLTHRU)
;;              7 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 7, loop depth 0, count 0, freq 7446, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 120 67 121 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn:TI 121 120 122 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 41 r12 [orig:160 doAllQCD ] [160])
            (const_int 3 [0x3]))) mymainCascade.cc:41 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:160 doAllQCD ] [160])
        (nil)))
(jump_insn:TI 122 121 268 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1398)
            (pc))) mymainCascade.cc:41 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1371 (nil)))
 -> 1398)
;;  succ:       50 [13.7%]  (CAN_FALLTHRU)
;;              8 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 8, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43 [30.2%]  (CAN_FALLTHRU)
;;              7 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              44 [100.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp]
;; live  kill	 17 [flags]
(code_label 268 122 269 8 28 "" [2 uses])
(note 269 268 1065 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1065 269 274 8 (set (reg/f:DI 0 ax [223])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 274 1065 275 8 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fb2b7068f30 *.LC10>)
                (const_int 9 [0x9])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 275 274 276 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fb2b7068f30 *.LC10>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 276 275 278 8 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 278 276 272 8 (parallel [
            (set (reg/f:DI 6 bp [orig:102 _61 ] [102])
                (plus:DI (reg/v/f:DI 6 bp [orig:156 fPythia ] [156])
                    (const_int 2648 [0xa58])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:50 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 272 278 277 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337225]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [223])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [223])
        (nil)))
(call_insn:TI 277 272 1395 8 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 1395 277 281 8 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:50 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 281 1395 282 8 (set (reg:SI 1 dx)
        (reg/v:SI 44 r15 [orig:157 idA ] [157])) mymainCascade.cc:50 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:157 idA ] [157])
        (nil)))
(insn 282 281 283 8 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:50 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 283 282 284 8 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:102 _61 ] [102])) mymainCascade.cc:50 85 {*movdi_internal}
     (nil))
(call_insn:TI 284 283 285 8 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia88Settings4modeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEib") [flags 0x41]  <function_decl 0x7fb2bc316c40 mode>) [0 mode S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:50 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_UNUSED (reg:QI 0 ax)
                        (expr_list:REG_EH_REGION (const_int 22 [0x16])
                            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia88Settings4modeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEib") [flags 0x41]  <function_decl 0x7fb2bc316c40 mode>)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
;;  succ:       72 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 285 284 286 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn:TI 286 285 1064 9 (set (reg/f:DI 5 di [orig:120 _127 ] [120])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337225]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1064 286 289 9 (set (reg/f:DI 0 ax [227])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 289 1064 290 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:120 _127 ] [120])
            (reg/f:DI 0 ax [227]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [227])
        (nil)))
(jump_insn:TI 290 289 291 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 294)
;;  succ:       10 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              11 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 10, loop depth 0, count 0, freq 6983, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL)
;;  pred:       9 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
(note 291 290 293 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 293 291 294 10 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 11, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [30.2%]  (CAN_FALLTHRU)
;;              10 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 294 293 295 11 38 "" [1 uses])
(note 295 294 1063 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1063 295 300 11 (set (reg/f:DI 0 ax [229])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 300 1063 301 11 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fb2b706c120 *.LC11>)
                (const_int 9 [0x9])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 301 300 302 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fb2b706c120 *.LC11>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 302 301 298 11 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 298 302 303 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337228]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [229])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [229])
        (nil)))
(call_insn:TI 303 298 306 11 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 306 303 1394 11 (set (reg:SI 1 dx)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-40 S4 A64])) mymainCascade.cc:51 86 {*movsi_internal}
     (nil))
(insn 1394 306 307 11 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:51 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 307 1394 308 11 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:51 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 308 307 309 11 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:102 _61 ] [102])) mymainCascade.cc:51 85 {*movdi_internal}
     (nil))
(call_insn:TI 309 308 310 11 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia88Settings4modeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEib") [flags 0x41]  <function_decl 0x7fb2bc316c40 mode>) [0 mode S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:51 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_UNUSED (reg:QI 0 ax)
                        (expr_list:REG_EH_REGION (const_int 24 [0x18])
                            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia88Settings4modeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEib") [flags 0x41]  <function_decl 0x7fb2bc316c40 mode>)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
;;  succ:       71 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 12, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 310 309 311 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn:TI 311 310 1062 12 (set (reg/f:DI 5 di [orig:114 _108 ] [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337228]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1062 311 314 12 (set (reg/f:DI 0 ax [233])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 314 1062 315 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:114 _108 ] [114])
            (reg/f:DI 0 ax [233]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [233])
        (nil)))
(jump_insn:TI 315 314 316 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 319)
;;  succ:       13 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              14 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 13, loop depth 0, count 0, freq 6983, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL)
;;  pred:       12 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
(note 316 315 318 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 318 316 319 13 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       14 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 14, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [30.2%]  (CAN_FALLTHRU)
;;              13 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 319 318 320 14 39 "" [1 uses])
(note 320 319 1061 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1061 320 325 14 (set (reg/f:DI 0 ax [235])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 325 1061 326 14 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fb2b706c1b0 *.LC12>)
                (const_int 15 [0xf])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 326 325 327 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fb2b706c1b0 *.LC12>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 327 326 323 14 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 323 327 328 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337231]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [235])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [235])
        (nil)))
(call_insn:TI 328 323 1393 14 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 1393 328 331 14 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:52 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 331 1393 332 14 (set (reg:SI 1 dx)
        (reg/v:SI 43 r14 [orig:161 frameType ] [161])) mymainCascade.cc:52 86 {*movsi_internal}
     (nil))
(insn 332 331 333 14 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:52 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 333 332 334 14 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:102 _61 ] [102])) mymainCascade.cc:52 85 {*movdi_internal}
     (nil))
(call_insn:TI 334 333 335 14 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia88Settings4modeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEib") [flags 0x41]  <function_decl 0x7fb2bc316c40 mode>) [0 mode S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:52 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_UNUSED (reg:QI 0 ax)
                        (expr_list:REG_EH_REGION (const_int 26 [0x1a])
                            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia88Settings4modeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEib") [flags 0x41]  <function_decl 0x7fb2bc316c40 mode>)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
;;  succ:       73 (ABNORMAL,ABNORMAL_CALL,EH)
;;              15 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 15, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 335 334 336 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn:TI 336 335 1060 15 (set (reg/f:DI 5 di [orig:113 _104 ] [113])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337231]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1060 336 339 15 (set (reg/f:DI 0 ax [239])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 339 1060 340 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:113 _104 ] [113])
            (reg/f:DI 0 ax [239]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [239])
        (nil)))
(jump_insn:TI 340 339 341 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 344)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 344)
;;  succ:       16 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              17 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 16, loop depth 0, count 0, freq 6983, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL)
;;  pred:       15 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
(note 341 340 343 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 343 341 344 16 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       17 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 17, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [30.2%]  (CAN_FALLTHRU)
;;              16 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 344 343 345 17 40 "" [1 uses])
(note 345 344 346 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn:TI 346 345 347 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 43 r14 [orig:161 frameType ] [161])
            (const_int 2 [0x2]))) mymainCascade.cc:53 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 43 r14 [orig:161 frameType ] [161])
        (nil)))
(jump_insn:TI 347 346 403 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1399)
            (pc))) mymainCascade.cc:53 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 1399)
;;  succ:       37 [28.0%]  (CAN_FALLTHRU)
;;              18 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]

;; basic block 18, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
(note 403 347 404 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn:TI 404 403 1055 18 (set (reg:DF 21 xmm0 [orig:121 _128 ] [121])
        (mem:DF (reg/v/f:DI 42 r13 [orig:159 p4A ] [159]) [78 MEM[(double *)p4A_76(D)]+0 S8 A64])) 126 {*movdf_internal}
     (nil))
(insn 1055 404 409 18 (set (reg/f:DI 0 ax [253])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 409 1055 410 18 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fb2b706c5a0 *.LC16>)
                (const_int 9 [0x9])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 410 409 411 18 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fb2b706c5a0 *.LC16>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 411 410 1036 18 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 1036 411 407 18 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-40 S8 A64])
        (reg:DF 21 xmm0 [orig:121 _128 ] [121])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:121 _128 ] [121])
        (nil)))
(insn 407 1036 412 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337240]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [253])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [253])
        (nil)))
(call_insn:TI 412 407 1037 18 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 1037 412 1390 18 (set (reg:DF 21 xmm0 [orig:121 _128 ] [121])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-40 S8 A64])) mymainCascade.cc:57 126 {*movdf_internal}
     (nil))
(insn 1390 1037 416 18 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:57 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 416 1390 417 18 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:57 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 417 416 418 18 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:102 _61 ] [102])) mymainCascade.cc:57 85 {*movdi_internal}
     (nil))
(call_insn:TI 418 417 419 18 (call (mem:QI (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>) [0 parm S1 A8])
        (const_int 0 [0])) mymainCascade.cc:57 673 {*call}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 32 [0x20])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       78 (ABNORMAL,ABNORMAL_CALL,EH)
;;              19 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]

;; basic block 19, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 419 418 420 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn:TI 420 419 1054 19 (set (reg/f:DI 5 di [orig:110 _92 ] [110])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337240]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1054 420 423 19 (set (reg/f:DI 0 ax [257])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 423 1054 424 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:110 _92 ] [110])
            (reg/f:DI 0 ax [257]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [257])
        (nil)))
(jump_insn:TI 424 423 425 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 428)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 428)
;;  succ:       20 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              21 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13]

;; basic block 20, loop depth 0, count 0, freq 5028, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL)
;;  pred:       19 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	
;; live  kill	
(note 425 424 427 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 427 425 428 20 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       21 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]

;; basic block 21, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [30.2%]  (CAN_FALLTHRU)
;;              20 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
(code_label 428 427 429 21 45 "" [1 uses])
(note 429 428 430 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn:TI 430 429 1053 21 (set (reg:DF 21 xmm0 [orig:122 _129 ] [122])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:159 p4A ] [159])
                (const_int 8 [0x8])) [78 MEM[(double *)p4A_76(D) + 8B]+0 S8 A64])) 126 {*movdf_internal}
     (nil))
(insn 1053 430 435 21 (set (reg/f:DI 0 ax [259])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn:TI 435 1053 436 21 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fb2b706c630 *.LC17>)
                (const_int 9 [0x9])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 436 435 437 21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fb2b706c630 *.LC17>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 437 436 1038 21 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 1038 437 433 21 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-40 S8 A64])
        (reg:DF 21 xmm0 [orig:122 _129 ] [122])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:122 _129 ] [122])
        (nil)))
(insn 433 1038 438 21 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337243]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [259])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [259])
        (nil)))
(call_insn:TI 438 433 1039 21 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 1039 438 1389 21 (set (reg:DF 21 xmm0 [orig:122 _129 ] [122])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-40 S8 A64])) mymainCascade.cc:58 126 {*movdf_internal}
     (nil))
(insn 1389 1039 442 21 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:58 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 442 1389 443 21 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:58 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 443 442 444 21 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:102 _61 ] [102])) mymainCascade.cc:58 85 {*movdi_internal}
     (nil))
(call_insn:TI 444 443 445 21 (call (mem:QI (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>) [0 parm S1 A8])
        (const_int 0 [0])) mymainCascade.cc:58 673 {*call}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 34 [0x22])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       77 (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]

;; basic block 22, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 445 444 446 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn:TI 446 445 1052 22 (set (reg/f:DI 5 di [orig:108 _85 ] [108])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337243]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1052 446 449 22 (set (reg/f:DI 0 ax [263])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 449 1052 450 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:108 _85 ] [108])
            (reg/f:DI 0 ax [263]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [263])
        (nil)))
(jump_insn:TI 450 449 451 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 454)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 454)
;;  succ:       23 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              24 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13]

;; basic block 23, loop depth 0, count 0, freq 5028, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL)
;;  pred:       22 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	
;; live  kill	
(note 451 450 453 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 453 451 454 23 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       24 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]

;; basic block 24, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [30.2%]  (CAN_FALLTHRU)
;;              23 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
(code_label 454 453 455 24 46 "" [1 uses])
(note 455 454 456 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn:TI 456 455 1051 24 (set (reg:DF 21 xmm0 [orig:123 _130 ] [123])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:159 p4A ] [159])
                (const_int 16 [0x10])) [78 MEM[(double *)p4A_76(D) + 16B]+0 S8 A64])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:159 p4A ] [159])
        (nil)))
(insn 1051 456 461 24 (set (reg/f:DI 0 ax [265])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn:TI 461 1051 462 24 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fb2b706c7e0 *.LC18>)
                (const_int 9 [0x9])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 462 461 463 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fb2b706c7e0 *.LC18>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 463 462 1040 24 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 1040 463 459 24 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-40 S8 A64])
        (reg:DF 21 xmm0 [orig:123 _130 ] [123])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:123 _130 ] [123])
        (nil)))
(insn 459 1040 464 24 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337246]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [265])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [265])
        (nil)))
(call_insn:TI 464 459 1041 24 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 1041 464 1388 24 (set (reg:DF 21 xmm0 [orig:123 _130 ] [123])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-40 S8 A64])) mymainCascade.cc:59 126 {*movdf_internal}
     (nil))
(insn 1388 1041 468 24 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:59 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 468 1388 469 24 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:59 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 469 468 470 24 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:102 _61 ] [102])) mymainCascade.cc:59 85 {*movdi_internal}
     (nil))
(call_insn:TI 470 469 471 24 (call (mem:QI (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>) [0 parm S1 A8])
        (const_int 0 [0])) mymainCascade.cc:59 673 {*call}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 36 [0x24])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       82 (ABNORMAL,ABNORMAL_CALL,EH)
;;              25 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 25, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 471 470 472 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn:TI 472 471 1050 25 (set (reg/f:DI 5 di [orig:107 _81 ] [107])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337246]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1050 472 475 25 (set (reg/f:DI 0 ax [269])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 475 1050 476 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:107 _81 ] [107])
            (reg/f:DI 0 ax [269]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [269])
        (nil)))
(jump_insn:TI 476 475 477 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 480)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 480)
;;  succ:       26 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              27 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 26, loop depth 0, count 0, freq 5028, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL)
;;  pred:       25 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 477 476 479 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 479 477 480 26 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       27 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 27, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [30.2%]  (CAN_FALLTHRU)
;;              26 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
(code_label 480 479 481 27 47 "" [1 uses])
(note 481 480 1048 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1048 481 486 27 (set (reg/f:DI 0 ax [271])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 486 1048 487 27 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fb2b706c870 *.LC19>)
                (const_int 9 [0x9])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 487 486 488 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fb2b706c870 *.LC19>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 488 487 484 27 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 484 488 489 27 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337249]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [271])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [271])
        (nil)))
(call_insn:TI 489 484 1049 27 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 1049 489 1387 27 (set (reg:DF 21 xmm0)
        (const_double:DF 0.0 [0x0.0p+0])) mymainCascade.cc:60 126 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 1387 1049 493 27 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:60 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 493 1387 494 27 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:60 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 494 493 495 27 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:102 _61 ] [102])) mymainCascade.cc:60 85 {*movdi_internal}
     (nil))
(call_insn:TI 495 494 496 27 (call (mem:QI (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>) [0 parm S1 A8])
        (const_int 0 [0])) mymainCascade.cc:60 673 {*call}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 38 [0x26])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       81 (ABNORMAL,ABNORMAL_CALL,EH)
;;              28 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 28, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 496 495 497 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn:TI 497 496 1047 28 (set (reg/f:DI 5 di [orig:106 _77 ] [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337249]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1047 497 500 28 (set (reg/f:DI 0 ax [275])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 500 1047 501 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:106 _77 ] [106])
            (reg/f:DI 0 ax [275]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [275])
        (nil)))
(jump_insn:TI 501 500 502 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 505)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 505)
;;  succ:       29 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              30 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 29, loop depth 0, count 0, freq 5028, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL)
;;  pred:       28 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 502 501 504 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 504 502 505 29 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       30 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 30, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 [30.2%]  (CAN_FALLTHRU)
;;              29 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
(code_label 505 504 506 30 48 "" [1 uses])
(note 506 505 1045 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1045 506 511 30 (set (reg/f:DI 0 ax [277])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 511 1045 512 30 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fb2b706ca20 *.LC20>)
                (const_int 9 [0x9])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 512 511 513 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fb2b706ca20 *.LC20>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 513 512 509 30 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 509 513 514 30 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337252]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [277])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [277])
        (nil)))
(call_insn:TI 514 509 1046 30 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 1046 514 1386 30 (set (reg:DF 21 xmm0)
        (const_double:DF 0.0 [0x0.0p+0])) mymainCascade.cc:61 126 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 1386 1046 518 30 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:61 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 518 1386 519 30 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:61 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 519 518 520 30 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:102 _61 ] [102])) mymainCascade.cc:61 85 {*movdi_internal}
     (nil))
(call_insn:TI 520 519 521 30 (call (mem:QI (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>) [0 parm S1 A8])
        (const_int 0 [0])) mymainCascade.cc:61 673 {*call}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 40 [0x28])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       80 (ABNORMAL,ABNORMAL_CALL,EH)
;;              31 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 31, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 521 520 522 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn:TI 522 521 1044 31 (set (reg/f:DI 5 di [orig:105 _72 ] [105])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337252]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1044 522 525 31 (set (reg/f:DI 0 ax [281])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 525 1044 526 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:105 _72 ] [105])
            (reg/f:DI 0 ax [281]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [281])
        (nil)))
(jump_insn:TI 526 525 527 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 530)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 530)
;;  succ:       32 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              33 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 32, loop depth 0, count 0, freq 5028, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, RTL)
;;  pred:       31 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 527 526 529 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 529 527 530 32 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       33 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 33, loop depth 0, count 0, freq 7200, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [30.2%]  (CAN_FALLTHRU)
;;              32 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
(code_label 530 529 531 33 49 "" [1 uses])
(note 531 530 1042 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1042 531 536 33 (set (reg/f:DI 0 ax [283])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 536 1042 537 33 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fb2b706cab0 *.LC21>)
                (const_int 9 [0x9])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 537 536 538 33 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fb2b706cab0 *.LC21>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 538 537 534 33 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 534 538 539 33 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337255]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [283])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [283])
        (nil)))
(call_insn:TI 539 534 1043 33 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 1043 539 1385 33 (set (reg:DF 21 xmm0)
        (const_double:DF 0.0 [0x0.0p+0])) mymainCascade.cc:62 126 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 1385 1043 543 33 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:62 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 543 1385 544 33 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:62 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 544 543 545 33 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:102 _61 ] [102])) mymainCascade.cc:62 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:102 _61 ] [102])
        (nil)))
(call_insn:TI 545 544 1188 33 (call (mem:QI (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>) [0 parm S1 A8])
        (const_int 0 [0])) mymainCascade.cc:62 673 {*call}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 42 [0x2a])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       79 (ABNORMAL,ABNORMAL_CALL,EH)
;;              34 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 34, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              41 [100.0%]  (CAN_FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 3 [bx] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 3 [bx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 1188 545 546 34 121 "" [1 uses])
(note 546 1188 547 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn:TI 547 546 549 34 (set (reg/f:DI 5 di [orig:103 _65 ] [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5  S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 549 547 550 34 (parallel [
            (set (reg/f:DI 3 bx [287])
                (plus:DI (reg/f:DI 3 bx [351])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 550 549 551 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:103 _65 ] [103])
            (reg/f:DI 3 bx [287]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [287])
        (nil)))
(jump_insn:TI 551 550 552 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 897)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2778 (nil)))
 -> 897)
;;  succ:       35 [72.2%]  (FALLTHRU,CAN_FALLTHRU)
;;              36 [27.8%]  (CAN_FALLTHRU)
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

;; basic block 35, loop depth 0, count 0, freq 7222, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [72.2%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
(note 552 551 554 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 554 552 897 35 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       36 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 36, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, RTL)
;;  pred:       34 [27.8%]  (CAN_FALLTHRU)
;;              35 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 897 554 898 36 24 "" [1 uses])
(note 898 897 1096 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(note 1096 898 1097 36 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 1097 1096 1098 36 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mymainCascade.cc:65 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])))
            (nil))))
(insn/f:TI 1098 1097 1099 36 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:65 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 1099 1098 1100 36 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:65 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 1100 1099 1101 36 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:65 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 1101 1100 1102 36 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:65 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 1102 1101 1103 36 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:65 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 1103 1102 1104 36 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:65 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 1104 1103 1105 36 (simple_return) mymainCascade.cc:65 697 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1105 1104 1399)
;; basic block 37, loop depth 0, count 0, freq 2800, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [28.0%]  (CAN_FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
(code_label 1399 1105 348 37 147 "" [1 uses])
(note 348 1399 349 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn:TI 349 348 1059 37 (set (reg:DF 21 xmm0 [orig:124 _131 ] [124])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:159 p4A ] [159])
                (const_int 24 [0x18])) [78 MEM[(double *)p4A_76(D) + 24B]+0 S8 A64])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:159 p4A ] [159])
        (nil)))
(insn 1059 349 354 37 (set (reg/f:DI 0 ax [241])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn:TI 354 1059 355 37 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fb2b706c360 *.LC13>)
                (const_int 8 [0x8])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 355 354 356 37 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fb2b706c360 *.LC13>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 356 355 1034 37 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 1034 356 352 37 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-40 S8 A64])
        (reg:DF 21 xmm0 [orig:124 _131 ] [124])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:124 _131 ] [124])
        (nil)))
(insn 352 1034 357 37 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337234]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [241])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [241])
        (nil)))
(call_insn:TI 357 352 1035 37 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 1035 357 1392 37 (set (reg:DF 21 xmm0 [orig:124 _131 ] [124])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-40 S8 A64])) mymainCascade.cc:54 126 {*movdf_internal}
     (nil))
(insn 1392 1035 361 37 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:54 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 361 1392 362 37 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:54 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 362 361 363 37 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:102 _61 ] [102])) mymainCascade.cc:54 85 {*movdi_internal}
     (nil))
(call_insn:TI 363 362 364 37 (call (mem:QI (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>) [0 parm S1 A8])
        (const_int 0 [0])) mymainCascade.cc:54 673 {*call}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 28 [0x1c])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       76 (ABNORMAL,ABNORMAL_CALL,EH)
;;              38 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 38, loop depth 0, count 0, freq 2800, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 364 363 365 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn:TI 365 364 1058 38 (set (reg/f:DI 5 di [orig:112 _100 ] [112])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337234]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1058 365 368 38 (set (reg/f:DI 0 ax [245])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 368 1058 369 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:112 _100 ] [112])
            (reg/f:DI 0 ax [245]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [245])
        (nil)))
(jump_insn:TI 369 368 370 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 373)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 373)
;;  succ:       39 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              40 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 39, loop depth 0, count 0, freq 1955, maybe hot
;;  prev block 38, next block 40, flags: (REACHABLE, RTL)
;;  pred:       38 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 370 369 372 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 372 370 373 39 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       40 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 40, loop depth 0, count 0, freq 2800, maybe hot
;;  prev block 39, next block 41, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       38 [30.2%]  (CAN_FALLTHRU)
;;              39 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
(code_label 373 372 374 40 42 "" [1 uses])
(note 374 373 1056 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1056 374 379 40 (set (reg/f:DI 0 ax [247])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 379 1056 380 40 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fb2b706c3f0 *.LC14>)
                (const_int 8 [0x8])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 380 379 381 40 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fb2b706c3f0 *.LC14>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 381 380 377 40 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 377 381 382 40 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337237]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [247])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [247])
        (nil)))
(call_insn:TI 382 377 1057 40 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 1057 382 1391 40 (set (reg:DF 21 xmm0)
        (const_double:DF 0.0 [0x0.0p+0])) mymainCascade.cc:55 126 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 1391 1057 386 40 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:55 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 386 1391 387 40 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:55 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 387 386 388 40 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:102 _61 ] [102])) mymainCascade.cc:55 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:102 _61 ] [102])
        (nil)))
(call_insn:TI 388 387 1400 40 (call (mem:QI (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>) [0 parm S1 A8])
        (const_int 0 [0])) mymainCascade.cc:55 673 {*call}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 30 [0x1e])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia88Settings4parmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEdb") [flags 0x41]  <function_decl 0x7fb2bc316d20 parm>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;  succ:       75 (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 41, loop depth 0, count 0, freq 2800, maybe hot
;;  prev block 40, next block 42, flags: (NEW, RTL, MODIFIED)
;;  pred:       40 [100.0%]  (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
(note 1400 388 1401 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1401 1400 1402 41 (set (pc)
        (label_ref 1188)) 667 {jump}
     (nil)
 -> 1188)
;;  succ:       34 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1402 1401 1396)
;; basic block 42, loop depth 0, count 0, freq 1371, maybe hot
;;  prev block 41, next block 43, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [13.7%]  (CAN_FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 1396 1402 37 42 144 "" [1 uses])
(note 37 1396 1083 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1083 37 42 42 (set (reg/f:DI 0 ax [169])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 42 1083 43 42 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fb2b7068630 *.LC2>)
                (const_int 16 [0x10])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 43 42 44 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fb2b7068630 *.LC2>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 44 43 40 42 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 40 44 45 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337198]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [169])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [169])
        (nil)))
(call_insn:TI 45 40 47 42 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 47 45 48 42 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) mymainCascade.cc:36 86 {*movsi_internal}
     (nil))
(insn 48 47 49 42 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:36 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 49 48 50 42 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:156 fPythia ] [156])) mymainCascade.cc:36 85 {*movdi_internal}
     (nil))
(call_insn:TI 50 49 1179 42 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>) [0 readString S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:36 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:QI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 4 [0x4])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       67 (ABNORMAL,ABNORMAL_CALL,EH)
;;              43 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 43, loop depth 0, count 0, freq 3575, maybe hot
;;  prev block 42, next block 44, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49 [100.0%]  (CAN_FALLTHRU)
;;              42 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              66 [100.0%]  (CAN_FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 1179 50 257 43 118 "" [2 uses])
(note 257 1179 258 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn:TI 258 257 1066 43 (set (reg/f:DI 5 di [orig:91 _25 ] [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5  S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1066 258 261 43 (set (reg/f:DI 0 ax [221])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 261 1066 262 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:91 _25 ] [91])
            (reg/f:DI 0 ax [221]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [221])
        (nil)))
(jump_insn:TI 262 261 263 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 268)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 268)
;;  succ:       44 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              8 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 44, loop depth 0, count 0, freq 2496, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 263 262 265 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 265 263 1403 44 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn:TI 1403 265 1404 44 (set (pc)
        (label_ref 268)) 667 {jump}
     (nil)
 -> 268)
;;  succ:       8 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

(barrier 1404 1403 1397)
;; basic block 45, loop depth 0, count 0, freq 1183, maybe hot
;;  prev block 44, next block 46, flags: (REACHABLE, RTL)
;;  pred:       6 [13.7%]  (CAN_FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 1397 1404 68 45 145 "" [1 uses])
(note 68 1397 1081 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1081 68 73 45 (set (reg/f:DI 0 ax [175])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 73 1081 74 45 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fb2b70687e0 *.LC3>)
                (const_int 17 [0x11])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 74 73 75 45 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fb2b70687e0 *.LC3>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 75 74 71 45 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 71 75 76 45 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337201]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [175])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [175])
        (nil)))
(call_insn:TI 76 71 78 45 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 78 76 79 45 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) mymainCascade.cc:38 86 {*movsi_internal}
     (nil))
(insn 79 78 80 45 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:38 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 80 79 81 45 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:156 fPythia ] [156])) mymainCascade.cc:38 85 {*movdi_internal}
     (nil))
(call_insn:TI 81 80 82 45 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>) [0 readString S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:38 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:QI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 6 [0x6])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       90 (ABNORMAL,ABNORMAL_CALL,EH)
;;              46 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 46, loop depth 0, count 0, freq 1183, maybe hot
;;  prev block 45, next block 47, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       45 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 82 81 83 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn:TI 83 82 1080 46 (set (reg/f:DI 5 di [orig:117 _119 ] [117])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337201]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1080 83 86 46 (set (reg/f:DI 0 ax [179])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 86 1080 87 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:117 _119 ] [117])
            (reg/f:DI 0 ax [179]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [179])
        (nil)))
(jump_insn:TI 87 86 88 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 91)
;;  succ:       47 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              48 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 47, loop depth 0, count 0, freq 826, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, RTL)
;;  pred:       46 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 88 87 90 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 90 88 91 47 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       48 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 48, loop depth 0, count 0, freq 1183, maybe hot
;;  prev block 47, next block 49, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       46 [30.2%]  (CAN_FALLTHRU)
;;              47 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 91 90 92 48 30 "" [1 uses])
(note 92 91 1079 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1079 92 97 48 (set (reg/f:DI 0 ax [181])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 97 1079 98 48 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb2b7068870 *.LC4>)
                (const_int 27 [0x1b])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 98 97 99 48 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb2b7068870 *.LC4>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 99 98 95 48 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 95 99 100 48 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337204]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [181])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [181])
        (nil)))
(call_insn:TI 100 95 102 48 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 102 100 103 48 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) mymainCascade.cc:39 86 {*movsi_internal}
     (nil))
(insn 103 102 104 48 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:39 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 104 103 105 48 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:156 fPythia ] [156])) mymainCascade.cc:39 85 {*movdi_internal}
     (nil))
(call_insn:TI 105 104 1405 48 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>) [0 readString S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:39 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:QI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       89 (ABNORMAL,ABNORMAL_CALL,EH)
;;              49 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 49, loop depth 0, count 0, freq 1183, maybe hot
;;  prev block 48, next block 50, flags: (NEW, RTL, MODIFIED)
;;  pred:       48 [100.0%]  (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1405 105 1406 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1406 1405 1407 49 (set (pc)
        (label_ref 1179)) 667 {jump}
     (nil)
 -> 1179)
;;  succ:       43 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

(barrier 1407 1406 1398)
;; basic block 50, loop depth 0, count 0, freq 1021, maybe hot
;;  prev block 49, next block 51, flags: (REACHABLE, RTL)
;;  pred:       7 [13.7%]  (CAN_FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 1398 1407 123 50 146 "" [1 uses])
(note 123 1398 1077 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1077 123 128 50 (set (reg/f:DI 0 ax [187])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 128 1077 129 50 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fb2b70687e0 *.LC3>)
                (const_int 17 [0x11])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 129 128 130 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fb2b70687e0 *.LC3>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 130 129 126 50 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 126 130 131 50 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337207]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [187])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [187])
        (nil)))
(call_insn:TI 131 126 133 50 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 133 131 134 50 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) mymainCascade.cc:42 86 {*movsi_internal}
     (nil))
(insn 134 133 135 50 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:42 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 135 134 136 50 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:156 fPythia ] [156])) mymainCascade.cc:42 85 {*movdi_internal}
     (nil))
(call_insn:TI 136 135 137 50 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>) [0 readString S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:42 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:QI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 10 [0xa])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       88 (ABNORMAL,ABNORMAL_CALL,EH)
;;              51 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 51, loop depth 0, count 0, freq 1021, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       50 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 137 136 138 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn:TI 138 137 1076 51 (set (reg/f:DI 5 di [orig:118 _122 ] [118])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337207]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1076 138 141 51 (set (reg/f:DI 0 ax [191])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 141 1076 142 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:118 _122 ] [118])
            (reg/f:DI 0 ax [191]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [191])
        (nil)))
(jump_insn:TI 142 141 143 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 146)
;;  succ:       52 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              53 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 52, loop depth 0, count 0, freq 713, maybe hot
;;  prev block 51, next block 53, flags: (REACHABLE, RTL)
;;  pred:       51 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 143 142 145 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 145 143 146 52 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       53 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 53, loop depth 0, count 0, freq 1021, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, RTL)
;;  pred:       51 [30.2%]  (CAN_FALLTHRU)
;;              52 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 146 145 147 53 32 "" [1 uses])
(note 147 146 1075 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1075 147 152 53 (set (reg/f:DI 0 ax [193])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 152 1075 153 53 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb2b7068a20 *.LC5>)
                (const_int 28 [0x1c])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 153 152 154 53 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb2b7068a20 *.LC5>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 154 153 150 53 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 150 154 155 53 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337210]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [193])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [193])
        (nil)))
(call_insn:TI 155 150 157 53 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 157 155 158 53 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) mymainCascade.cc:43 86 {*movsi_internal}
     (nil))
(insn 158 157 159 53 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:43 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 159 158 160 53 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:156 fPythia ] [156])) mymainCascade.cc:43 85 {*movdi_internal}
     (nil))
(call_insn:TI 160 159 161 53 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>) [0 readString S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:43 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:QI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       87 (ABNORMAL,ABNORMAL_CALL,EH)
;;              54 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 54, loop depth 0, count 0, freq 1021, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       53 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 161 160 162 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn:TI 162 161 1074 54 (set (reg/f:DI 5 di [orig:119 _125 ] [119])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337210]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1074 162 165 54 (set (reg/f:DI 0 ax [197])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 165 1074 166 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:119 _125 ] [119])
            (reg/f:DI 0 ax [197]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [197])
        (nil)))
(jump_insn:TI 166 165 167 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 170)
;;  succ:       55 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              56 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 55, loop depth 0, count 0, freq 713, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, RTL)
;;  pred:       54 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 167 166 169 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 169 167 170 55 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       56 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 56, loop depth 0, count 0, freq 1021, maybe hot
;;  prev block 55, next block 57, flags: (REACHABLE, RTL)
;;  pred:       54 [30.2%]  (CAN_FALLTHRU)
;;              55 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 170 169 171 56 33 "" [1 uses])
(note 171 170 1073 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1073 171 176 56 (set (reg/f:DI 0 ax [199])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 176 1073 177 56 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fb2b7068ab0 *.LC6>)
                (const_int 20 [0x14])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 177 176 178 56 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fb2b7068ab0 *.LC6>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 178 177 174 56 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 174 178 179 56 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337213]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [199])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [199])
        (nil)))
(call_insn:TI 179 174 181 56 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 181 179 182 56 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) mymainCascade.cc:44 86 {*movsi_internal}
     (nil))
(insn 182 181 183 56 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:44 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 183 182 184 56 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:156 fPythia ] [156])) mymainCascade.cc:44 85 {*movdi_internal}
     (nil))
(call_insn:TI 184 183 185 56 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>) [0 readString S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:44 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:QI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 14 [0xe])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       86 (ABNORMAL,ABNORMAL_CALL,EH)
;;              57 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 57, loop depth 0, count 0, freq 1021, maybe hot
;;  prev block 56, next block 58, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       56 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 185 184 186 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn:TI 186 185 1072 57 (set (reg/f:DI 5 di [orig:98 _52 ] [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337213]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1072 186 189 57 (set (reg/f:DI 0 ax [203])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 189 1072 190 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:98 _52 ] [98])
            (reg/f:DI 0 ax [203]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [203])
        (nil)))
(jump_insn:TI 190 189 191 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 194)
;;  succ:       58 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              59 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 58, loop depth 0, count 0, freq 713, maybe hot
;;  prev block 57, next block 59, flags: (REACHABLE, RTL)
;;  pred:       57 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 191 190 193 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 193 191 194 58 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       59 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 59, loop depth 0, count 0, freq 1021, maybe hot
;;  prev block 58, next block 60, flags: (REACHABLE, RTL)
;;  pred:       57 [30.2%]  (CAN_FALLTHRU)
;;              58 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 194 193 195 59 34 "" [1 uses])
(note 195 194 1071 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1071 195 200 59 (set (reg/f:DI 0 ax [205])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 200 1071 201 59 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb2b7068c60 *.LC7>)
                (const_int 30 [0x1e])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 201 200 202 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb2b7068c60 *.LC7>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 202 201 198 59 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 198 202 203 59 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337216]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [205])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [205])
        (nil)))
(call_insn:TI 203 198 205 59 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 205 203 206 59 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) mymainCascade.cc:45 86 {*movsi_internal}
     (nil))
(insn 206 205 207 59 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:45 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 207 206 208 59 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:156 fPythia ] [156])) mymainCascade.cc:45 85 {*movdi_internal}
     (nil))
(call_insn:TI 208 207 209 59 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>) [0 readString S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:45 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:QI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 16 [0x10])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       85 (ABNORMAL,ABNORMAL_CALL,EH)
;;              60 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 60, loop depth 0, count 0, freq 1021, maybe hot
;;  prev block 59, next block 61, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 209 208 210 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn:TI 210 209 1070 60 (set (reg/f:DI 5 di [orig:99 _55 ] [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337216]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1070 210 213 60 (set (reg/f:DI 0 ax [209])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 213 1070 214 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:99 _55 ] [99])
            (reg/f:DI 0 ax [209]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [209])
        (nil)))
(jump_insn:TI 214 213 215 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 218)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 218)
;;  succ:       61 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              62 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 61, loop depth 0, count 0, freq 713, maybe hot
;;  prev block 60, next block 62, flags: (REACHABLE, RTL)
;;  pred:       60 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 215 214 217 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 217 215 218 61 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       62 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 62, loop depth 0, count 0, freq 1021, maybe hot
;;  prev block 61, next block 63, flags: (REACHABLE, RTL)
;;  pred:       60 [30.2%]  (CAN_FALLTHRU)
;;              61 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 218 217 219 62 35 "" [1 uses])
(note 219 218 1069 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1069 219 224 62 (set (reg/f:DI 0 ax [211])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 224 1069 225 62 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fb2b7068cf0 *.LC8>)
                (const_int 30 [0x1e])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 225 224 226 62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fb2b7068cf0 *.LC8>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 226 225 222 62 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 222 226 227 62 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337219]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [211])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [211])
        (nil)))
(call_insn:TI 227 222 229 62 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 229 227 230 62 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) mymainCascade.cc:46 86 {*movsi_internal}
     (nil))
(insn 230 229 231 62 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:46 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 231 230 232 62 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:156 fPythia ] [156])) mymainCascade.cc:46 85 {*movdi_internal}
     (nil))
(call_insn:TI 232 231 233 62 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>) [0 readString S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:46 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:QI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 18 [0x12])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       84 (ABNORMAL,ABNORMAL_CALL,EH)
;;              63 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 63, loop depth 0, count 0, freq 1021, maybe hot
;;  prev block 62, next block 64, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 233 232 234 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn:TI 234 233 1068 63 (set (reg/f:DI 5 di [orig:100 _58 ] [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(char * *)&D.337219]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1068 234 237 63 (set (reg/f:DI 0 ax [215])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 237 1068 238 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:100 _58 ] [100])
            (reg/f:DI 0 ax [215]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [215])
        (nil)))
(jump_insn:TI 238 237 239 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 242)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 242)
;;  succ:       64 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              65 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 64, loop depth 0, count 0, freq 713, maybe hot
;;  prev block 63, next block 65, flags: (REACHABLE, RTL)
;;  pred:       63 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 239 238 241 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 241 239 242 64 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       65 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 65, loop depth 0, count 0, freq 1021, maybe hot
;;  prev block 64, next block 66, flags: (REACHABLE, RTL)
;;  pred:       63 [30.2%]  (CAN_FALLTHRU)
;;              64 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 242 241 243 65 36 "" [1 uses])
(note 243 242 1067 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1067 243 248 65 (set (reg/f:DI 0 ax [217])
        (plus:DI (reg/f:DI 3 bx [351])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 248 1067 249 65 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fb2b7068ea0 *.LC9>)
                (const_int 31 [0x1f])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 249 248 250 65 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fb2b7068ea0 *.LC9>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 250 249 246 65 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [351])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn:TI 246 250 251 65 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5 MEM[(struct _Alloc_hider *)&D.337222]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [217])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [217])
        (nil)))
(call_insn:TI 251 246 253 65 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 253 251 254 65 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) mymainCascade.cc:47 86 {*movsi_internal}
     (nil))
(insn 254 253 255 65 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [351])) mymainCascade.cc:47 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))
(insn 255 254 256 65 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:156 fPythia ] [156])) mymainCascade.cc:47 85 {*movdi_internal}
     (nil))
(call_insn:TI 256 255 1408 65 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>) [0 readString S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:47 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:QI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 20 [0x14])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       83 (ABNORMAL,ABNORMAL_CALL,EH)
;;              66 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 66, loop depth 0, count 0, freq 1021, maybe hot
;;  prev block 65, next block 67, flags: (NEW, RTL, MODIFIED)
;;  pred:       65 [100.0%]  (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1408 256 1409 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1409 1408 1410 66 (set (pc)
        (label_ref 1179)) 667 {jump}
     (nil)
 -> 1179)
;;  succ:       43 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

(barrier 1410 1409 902)
;; basic block 67, loop depth 0, count 0, freq 0
;;  prev block 66, next block 68, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       42 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 67 artificial_defs: { d99(0){ }d226(1){ }}
;; bb 67 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 902 1410 904 67 94 "" [1 uses])
(note 904 902 1255 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
;;  succ:       68 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

;; basic block 68, loop depth 0, count 0, freq 0
;;  prev block 67, next block 69, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       78 [100.0%]  (CAN_FALLTHRU)
;;              73 [100.0%]  (CAN_FALLTHRU)
;;              80 [100.0%]  (CAN_FALLTHRU)
;;              81 [100.0%]  (CAN_FALLTHRU)
;;              76 [100.0%]  (CAN_FALLTHRU)
;;              77 [100.0%]  (CAN_FALLTHRU)
;;              74 [100.0%]  (CAN_FALLTHRU)
;;              75 [100.0%]  (CAN_FALLTHRU)
;;              72 [100.0%]  (CAN_FALLTHRU)
;;              79 [100.0%]  (CAN_FALLTHRU)
;;              71 [100.0%]  (CAN_FALLTHRU)
;;              82 [100.0%]  (CAN_FALLTHRU)
;;              83 [100.0%]  (CAN_FALLTHRU)
;;              84 [100.0%]  (CAN_FALLTHRU)
;;              85 [100.0%]  (CAN_FALLTHRU)
;;              86 [100.0%]  (CAN_FALLTHRU)
;;              87 [100.0%]  (CAN_FALLTHRU)
;;              88 [100.0%]  (CAN_FALLTHRU)
;;              89 [100.0%]  (CAN_FALLTHRU)
;;              67 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              90 [100.0%]  (CAN_FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 1255 904 1253 68 124 "" [20 uses])
(note 1253 1255 883 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn:TI 883 1253 885 68 (set (reg/f:DI 5 di [orig:134 _141 ] [134])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [5  S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 885 883 960 68 (parallel [
            (set (reg/f:DI 3 bx [349])
                (plus:DI (reg/f:DI 3 bx [351])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 960 885 886 68 (set (reg:DI 6 bp [350])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn:TI 886 960 887 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:134 _141 ] [134])
            (reg/f:DI 3 bx [349]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [349])
        (nil)))
(jump_insn:TI 887 886 888 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 891)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 891)
;;  succ:       69 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              70 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp]
;; live  out 	 5 [di] 6 [bp] 7 [sp]

;; basic block 69, loop depth 0, count 0, freq 0
;;  prev block 68, next block 70, flags: (REACHABLE, RTL)
;;  pred:       68 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 888 887 890 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 890 888 891 69 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       70 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

;; basic block 70, loop depth 0, count 0, freq 0
;;  prev block 69, next block 71, flags: (REACHABLE, RTL)
;;  pred:       68 [30.2%]  (CAN_FALLTHRU)
;;              69 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 891 890 892 70 92 "" [1 uses])
(note 892 891 894 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn:TI 894 892 895 70 (set (reg:DI 5 di)
        (reg:DI 6 bp [350])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 6 bp [350])
        (nil)))
(call_insn:TI 895 894 896 70 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb2c1d469a0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb2c1d469a0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 896 895 932)
;; basic block 71, loop depth 0, count 0, freq 0
;;  prev block 70, next block 72, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 71 artificial_defs: { d69(0){ }d196(1){ }}
;; bb 71 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 932 896 934 71 104 "" [1 uses])
(note 934 932 1411 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1411 934 1412 71 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1412 1411 929)
;; basic block 72, loop depth 0, count 0, freq 0
;;  prev block 71, next block 73, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 72 artificial_defs: { d72(0){ }d199(1){ }}
;; bb 72 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 929 1412 931 72 103 "" [1 uses])
(note 931 929 1413 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1413 931 1414 72 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1414 1413 935)
;; basic block 73, loop depth 0, count 0, freq 0
;;  prev block 72, next block 74, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 73 artificial_defs: { d66(0){ }d193(1){ }}
;; bb 73 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 935 1414 937 73 105 "" [1 uses])
(note 937 935 1415 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1415 937 1416 73 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1416 1415 899)
;; basic block 74, loop depth 0, count 0, freq 0
;;  prev block 73, next block 75, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 74 artificial_defs: { d102(0){ }d229(1){ }}
;; bb 74 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 899 1416 901 74 93 "" [1 uses])
(note 901 899 1417 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1417 901 1418 74 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1418 1417 941)
;; basic block 75, loop depth 0, count 0, freq 0
;;  prev block 74, next block 76, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       40 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 75 artificial_defs: { d60(0){ }d187(1){ }}
;; bb 75 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 941 1418 943 75 107 "" [1 uses])
(note 943 941 1419 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1419 943 1420 75 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1420 1419 938)
;; basic block 76, loop depth 0, count 0, freq 0
;;  prev block 75, next block 77, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 76 artificial_defs: { d63(0){ }d190(1){ }}
;; bb 76 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 938 1420 940 76 106 "" [1 uses])
(note 940 938 1421 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1421 940 1422 76 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1422 1421 947)
;; basic block 77, loop depth 0, count 0, freq 0
;;  prev block 76, next block 78, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 77 artificial_defs: { d54(0){ }d181(1){ }}
;; bb 77 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 947 1422 949 77 109 "" [1 uses])
(note 949 947 1423 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1423 949 1424 77 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1424 1423 944)
;; basic block 78, loop depth 0, count 0, freq 0
;;  prev block 77, next block 79, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 78 artificial_defs: { d57(0){ }d184(1){ }}
;; bb 78 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 944 1424 946 78 108 "" [1 uses])
(note 946 944 1425 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1425 946 1426 78 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1426 1425 959)
;; basic block 79, loop depth 0, count 0, freq 0
;;  prev block 78, next block 80, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 79 artificial_defs: { d42(0){ }d169(1){ }}
;; bb 79 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 959 1426 961 79 113 "" [1 uses])
(note 961 959 1427 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1427 961 1428 79 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1428 1427 956)
;; basic block 80, loop depth 0, count 0, freq 0
;;  prev block 79, next block 81, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 80 artificial_defs: { d45(0){ }d172(1){ }}
;; bb 80 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 956 1428 958 80 112 "" [1 uses])
(note 958 956 1429 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1429 958 1430 80 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1430 1429 953)
;; basic block 81, loop depth 0, count 0, freq 0
;;  prev block 80, next block 82, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 81 artificial_defs: { d48(0){ }d175(1){ }}
;; bb 81 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 953 1430 955 81 111 "" [1 uses])
(note 955 953 1431 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1431 955 1432 81 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1432 1431 950)
;; basic block 82, loop depth 0, count 0, freq 0
;;  prev block 81, next block 83, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 82 artificial_defs: { d51(0){ }d178(1){ }}
;; bb 82 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 950 1432 952 82 110 "" [1 uses])
(note 952 950 1433 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1433 952 1434 82 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1434 1433 926)
;; basic block 83, loop depth 0, count 0, freq 0
;;  prev block 82, next block 84, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       65 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 83 artificial_defs: { d75(0){ }d202(1){ }}
;; bb 83 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 926 1434 928 83 102 "" [1 uses])
(note 928 926 1435 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1435 928 1436 83 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1436 1435 923)
;; basic block 84, loop depth 0, count 0, freq 0
;;  prev block 83, next block 85, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 84 artificial_defs: { d78(0){ }d205(1){ }}
;; bb 84 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 923 1436 925 84 101 "" [1 uses])
(note 925 923 1437 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1437 925 1438 84 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1438 1437 920)
;; basic block 85, loop depth 0, count 0, freq 0
;;  prev block 84, next block 86, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 85 artificial_defs: { d81(0){ }d208(1){ }}
;; bb 85 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 920 1438 922 85 100 "" [1 uses])
(note 922 920 1439 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1439 922 1440 85 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1440 1439 917)
;; basic block 86, loop depth 0, count 0, freq 0
;;  prev block 85, next block 87, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       56 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 86 artificial_defs: { d84(0){ }d211(1){ }}
;; bb 86 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 917 1440 919 86 99 "" [1 uses])
(note 919 917 1441 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1441 919 1442 86 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1442 1441 914)
;; basic block 87, loop depth 0, count 0, freq 0
;;  prev block 86, next block 88, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       53 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 87 artificial_defs: { d87(0){ }d214(1){ }}
;; bb 87 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 914 1442 916 87 98 "" [1 uses])
(note 916 914 1443 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1443 916 1444 87 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1444 1443 911)
;; basic block 88, loop depth 0, count 0, freq 0
;;  prev block 87, next block 89, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       50 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 88 artificial_defs: { d90(0){ }d217(1){ }}
;; bb 88 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 911 1444 913 88 97 "" [1 uses])
(note 913 911 1445 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1445 913 1446 88 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1446 1445 908)
;; basic block 89, loop depth 0, count 0, freq 0
;;  prev block 88, next block 90, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       48 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 89 artificial_defs: { d93(0){ }d220(1){ }}
;; bb 89 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 908 1446 910 89 96 "" [1 uses])
(note 910 908 1447 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1447 910 1448 89 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1448 1447 905)
;; basic block 90, loop depth 0, count 0, freq 0
;;  prev block 89, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       45 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 90 artificial_defs: { d96(0){ }d223(1){ }}
;; bb 90 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 905 1448 907 90 95 "" [1 uses])
(note 907 905 1449 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1449 907 1450 90 (set (pc)
        (label_ref 1255)) 667 {jump}
     (nil)
 -> 1255)
;;  succ:       68 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 1450 1449 1033)
(note 1033 1450 0 NOTE_INSN_DELETED)

;; Function void std::vector<_Tp, _Alloc>::reserve(std::vector<_Tp, _Alloc>::size_type) [with _Tp = Pythia8::Particle; _Alloc = std::allocator<Pythia8::Particle>] (_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE7reserveEm, funcdef_no=12179, decl_uid=137716, cgraph_uid=8158, symbol_order=8381)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 21 count 17 (  1.1)


void std::vector<_Tp, _Alloc>::reserve(std::vector<_Tp, _Alloc>::size_type) [with _Tp = Pythia8::Particle; _Alloc = std::allocator<Pythia8::Particle>]

Dataflow summary:
def_info->table_size = 299, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  ref usage 	r0={15d,12u,1e} r1={7d,27u} r2={6d,25u,23e} r3={6d,5u} r4={6d,8u} r5={8d,8u} r6={4d,6u,3e} r7={22d,42u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={24d,7u} r18={3d} r19={3d} r21={16d,12u} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={9d,5u} r38={4d} r39={3d} r40={3d} r41={7d,6u,1e} r42={4d,5u} r43={5d,6u} r44={4d,7u,1e} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 553{343d,181u,29e} in 119{116 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 0 )->[2]->( 15 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 6 [bp] 17 [flags] 41 [r12] 44 [r15]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 6 [bp] 17 [flags] 41 [r12] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

( 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 3 )->[5]->( 6 14 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  use 	 4 [si] 5 [di] 7 [sp] 44 [r15]
;; lr  def 	 3 [bx] 17 [flags] 42 [r13]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 3 [bx] 17 [flags] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 41 [r12] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 6 14 )->[7]->( 11 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 7 10 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags] 21 [xmm0] 37 [r8]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 21 [xmm0] 37 [r8]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 8 9 )->[10]->( 11 8 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 7 10 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

( 11 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

( 12 11 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 3 [bx] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 7 [sp]

( 5 )->[14]->( 7 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 5 [di] 17 [flags] 43 [r14]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 5 [di] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 2 )->[15]->( )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 4 13 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 57 to worklist
  Adding insn 214 to worklist
  Adding insn 213 to worklist
  Adding insn 212 to worklist
  Adding insn 211 to worklist
  Adding insn 210 to worklist
  Adding insn 209 to worklist
  Adding insn 72 to worklist
  Adding insn 229 to worklist
  Adding insn 77 to worklist
  Adding insn 86 to worklist
  Adding insn 93 to worklist
  Adding insn 104 to worklist
  Adding insn 154 to worklist
  Adding insn 152 to worklist
  Adding insn 150 to worklist
  Adding insn 148 to worklist
  Adding insn 146 to worklist
  Adding insn 144 to worklist
  Adding insn 142 to worklist
  Adding insn 140 to worklist
  Adding insn 138 to worklist
  Adding insn 136 to worklist
  Adding insn 134 to worklist
  Adding insn 132 to worklist
  Adding insn 130 to worklist
  Adding insn 128 to worklist
  Adding insn 126 to worklist
  Adding insn 124 to worklist
  Adding insn 122 to worklist
  Adding insn 120 to worklist
  Adding insn 118 to worklist
  Adding insn 116 to worklist
  Adding insn 114 to worklist
  Adding insn 112 to worklist
  Adding insn 110 to worklist
  Adding insn 108 to worklist
  Adding insn 161 to worklist
  Adding insn 96 to worklist
  Adding insn 169 to worklist
  Adding insn 250 to worklist
  Adding insn 176 to worklist
  Adding insn 174 to worklist
  Adding insn 172 to worklist
  Adding insn 256 to worklist
  Adding insn 60 to worklist
Finished finding needed instructions:
processing block 15 lr out =  7 [sp]
  Adding insn 59 to worklist
processing block 13 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 249 to worklist
  Adding insn 248 to worklist
  Adding insn 247 to worklist
  Adding insn 246 to worklist
  Adding insn 245 to worklist
  Adding insn 244 to worklist
  Adding insn 243 to worklist
  Adding insn 175 to worklist
  Adding insn 173 to worklist
processing block 12 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
processing block 11 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
  Adding insn 95 to worklist
processing block 10 lr out =  1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 160 to worklist
  Adding insn 158 to worklist
  Adding insn 157 to worklist
processing block 9 lr out =  1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 153 to worklist
  Adding insn 151 to worklist
  Adding insn 149 to worklist
  Adding insn 147 to worklist
  Adding insn 145 to worklist
  Adding insn 143 to worklist
  Adding insn 141 to worklist
  Adding insn 139 to worklist
  Adding insn 137 to worklist
  Adding insn 135 to worklist
  Adding insn 133 to worklist
  Adding insn 131 to worklist
  Adding insn 129 to worklist
  Adding insn 127 to worklist
  Adding insn 125 to worklist
  Adding insn 123 to worklist
  Adding insn 121 to worklist
  Adding insn 119 to worklist
  Adding insn 117 to worklist
  Adding insn 115 to worklist
  Adding insn 113 to worklist
  Adding insn 111 to worklist
  Adding insn 109 to worklist
  Adding insn 239 to worklist
  Adding insn 106 to worklist
processing block 8 lr out =  1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 103 to worklist
processing block 7 lr out =  1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 92 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
processing block 6 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 89 to worklist
  Adding insn 87 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 81 to worklist
processing block 14 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 240 to worklist
  Adding insn 49 to worklist
processing block 5 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 207 to worklist
  Adding insn 74 to worklist
processing block 4 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 228 to worklist
  Adding insn 227 to worklist
  Adding insn 226 to worklist
  Adding insn 225 to worklist
  Adding insn 224 to worklist
  Adding insn 223 to worklist
  Adding insn 222 to worklist
processing block 3 lr out =  4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 205 to worklist
  Adding insn 64 to worklist
  Adding insn 217 to worklist
  Adding insn 218 to worklist
processing block 2 lr out =  4 [si] 5 [di] 7 [sp]
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 215 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 21 count 17 (  1.1)
;;   ======================================================
;;   -- basic block 2 from 209 to 57 -- after reload
;;   ======================================================

;;	  0--> b  0: i 209 [--sp]=r15                              :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 210 [--sp]=r14                              :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i  55 ax=0x199999999999999                    :athlon-direct,athlon-ieu
;;	  1--> b  0: i 211 [--sp]=r13                              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 212 [--sp]=r12                              :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 213 [--sp]=bp                               :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 214 [--sp]=bx                               :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 215 {sp=sp-0x8;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  4--> b  0: i  56 flags=cmp(si,ax)                        :athlon-direct,athlon-ieu
;;	  5--> b  0: i  57 pc={(gtu(flags,0))?L254:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 209
;;   new tail = 57

;;   ======================================================
;;   -- basic block 3 from 218 to 72 -- after reload
;;   ======================================================

;;	  0--> b  0: i  64 r15=[di]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 205 ax=[di+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i  69 dx=0xcccccccccccccccd                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 218 bp=di                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 217 r12=si                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i  67 {ax=ax-r15;clobber flags;}              :athlon-direct,athlon-ieu
;;	  4--> b  0: i  68 {ax=ax>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i  70 {ax=ax*dx;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	  9--> b  0: i  71 flags=cmp(ax,si)                        :athlon-direct,athlon-ieu
;;	 10--> b  0: i  72 pc={(ltu(flags,0))?L255:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 64
;;   new tail = 72

;;   ======================================================
;;   -- basic block 4 from 222 to 229 -- after reload
;;   ======================================================

;;	  0--> b  0: i 222 {sp=sp+0x8;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  1--> b  0: i 223 bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  2--> b  0: i 224 bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  3--> b  0: i 225 r12=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  4--> b  0: i 226 r13=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  5--> b  0: i 227 r14=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  6--> b  0: i 228 r15=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  7--> b  0: i 229 simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 222
;;   new tail = 229

;;   ======================================================
;;   -- basic block 5 from 74 to 77 -- after reload
;;   ======================================================

;;	  0--> b  0: i  74 r13=[di+0x8]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 207 bx=r13                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i  75 {bx=bx-r15;clobber flags;}              :athlon-direct,athlon-ieu
;;	  4--> b  0: i  76 flags=cmp(si,0)                         :athlon-direct,athlon-ieu
;;	  5--> b  0: i  77 pc={(flags==0)?L184:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 74
;;   new tail = 77

;;   ======================================================
;;   -- basic block 6 from 81 to 89 -- after reload
;;   ======================================================

;;	  0--> b  0: i  81 r12=si<<0x2+si                          :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i  84 {r12=r12<<0x5;clobber flags;}           :athlon-direct,athlon-ieu
;;	  3--> b  0: i  85 di=r12                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i  86 ax=call [`_Znwm']                       :athlon-vector,athlon-ieu
;;	  5--> b  0: i  89 di=[bp]                                 :athlon-direct,athlon-load
;;	  5--> b  0: i  87 r14=ax                                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 81
;;   new tail = 87

;;   ======================================================
;;   -- basic block 7 from 51 to 93 -- after reload
;;   ======================================================

;;	  0--> b  0: i  92 flags=cmp(r15,r13)                      :athlon-direct,athlon-ieu
;;	  0--> b  0: i  51 dx=r14                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i  52 cx=r15                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i  93 pc={(flags==0)?L159:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 92
;;   new tail = 93

;;   ======================================================
;;   -- basic block 8 from 103 to 104 -- after reload
;;   ======================================================

;;	  0--> b  0: i 103 flags=cmp(dx,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i 104 pc={(flags==0)?L155:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 103
;;   new tail = 104

;;   ======================================================
;;   -- basic block 9 from 106 to 154 -- after reload
;;   ======================================================

;;	  0--> b  0: i 106 ax=[const(unspec[`_ZTVN7Pythia88ParticleE'] 2)]:athlon-direct,athlon-load
;;	  0--> b  0: i 125 xmm0=[cx+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  3--> b  0: i 239 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i 108 [dx]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 109 ax=[cx+0x8]                             :athlon-direct,athlon-load
;;	  7--> b  0: i 110 [dx+0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i 111 ax=[cx+0xc]                             :athlon-direct,athlon-load
;;	 10--> b  0: i 112 [dx+0xc]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	 10--> b  0: i 113 ax=[cx+0x10]                            :athlon-direct,athlon-load
;;	 13--> b  0: i 114 [dx+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 13--> b  0: i 115 ax=[cx+0x14]                            :athlon-direct,athlon-load
;;	 16--> b  0: i 116 [dx+0x14]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 16--> b  0: i 117 si=[cx+0x18]                            :athlon-direct,athlon-load
;;	 19--> b  0: i 118 [dx+0x18]=si                            :athlon-direct,athlon-agu,athlon-store
;;	 19--> b  0: i 119 si=[cx+0x1c]                            :athlon-direct,athlon-load
;;	 22--> b  0: i 120 [dx+0x1c]=si                            :athlon-direct,athlon-agu,athlon-store
;;	 22--> b  0: i 121 r8=[cx+0x20]                            :athlon-direct,athlon-load
;;	 25--> b  0: i 122 [dx+0x20]=r8                            :athlon-direct,athlon-agu,athlon-store
;;	 25--> b  0: i 123 r8=[cx+0x24]                            :athlon-direct,athlon-load
;;	 25--> b  0: i 126 [dx+0x28]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 27--> b  0: i 127 xmm0=[cx+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 28--> b  0: i 124 [dx+0x24]=r8                            :athlon-direct,athlon-agu,athlon-store
;;	 29--> b  0: i 128 [dx+0x30]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 31--> b  0: i 129 xmm0=[cx+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 33--> b  0: i 130 [dx+0x38]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 35--> b  0: i 131 xmm0=[cx+0x40]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 37--> b  0: i 132 [dx+0x40]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 39--> b  0: i 133 xmm0=[cx+0x48]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 41--> b  0: i 134 [dx+0x48]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 43--> b  0: i 135 xmm0=[cx+0x50]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 45--> b  0: i 136 [dx+0x50]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 47--> b  0: i 137 xmm0=[cx+0x58]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 49--> b  0: i 138 [dx+0x58]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 49--> b  0: i 139 r8=[cx+0x60]                            :athlon-direct,athlon-load,athlon-ieu
;;	 50--> b  0: i 141 xmm0=[cx+0x68]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 52--> b  0: i 142 [dx+0x68]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 53--> b  0: i 140 [dx+0x60]=r8                            :athlon-direct,athlon-agu,athlon-store
;;	 53--> b  0: i 151 r8=[cx+0x90]                            :athlon-direct,athlon-load
;;	 54--> b  0: i 143 xmm0=[cx+0x70]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 56--> b  0: i 144 [dx+0x70]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 58--> b  0: i 145 xmm0=[cx+0x78]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 60--> b  0: i 146 [dx+0x78]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 62--> b  0: i 147 xmm0=[cx+0x80]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 64--> b  0: i 148 [dx+0x80]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 66--> b  0: i 149 xmm0=[cx+0x88]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 67--> b  0: i 152 [dx+0x90]=r8                            :athlon-direct,athlon-agu,athlon-store
;;	 67--> b  0: i 153 r8=[cx+0x98]                            :athlon-direct,athlon-load
;;	 68--> b  0: i 150 [dx+0x88]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 70--> b  0: i 154 [dx+0x98]=r8                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 70
;;   new head = 106
;;   new tail = 154

;;   ======================================================
;;   -- basic block 10 from 157 to 161 -- after reload
;;   ======================================================

;;	  0--> b  0: i 157 {cx=cx+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
;;	  0--> b  0: i 158 {dx=dx+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
;;	  1--> b  0: i 160 flags=cmp(r13,cx)                       :athlon-direct,athlon-ieu
;;	  2--> b  0: i 161 pc={(flags!=0)?L192:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 157
;;   new tail = 161

;;   ======================================================
;;   -- basic block 11 from 95 to 96 -- after reload
;;   ======================================================

;;	  0--> b  0: i  95 flags=cmp(di,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i  96 pc={(flags==0)?L170:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 95
;;   new tail = 96

;;   ======================================================
;;   -- basic block 12 from 169 to 169 -- after reload
;;   ======================================================

;;	  0--> b  0: i 169 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 169
;;   new tail = 169

;;   ======================================================
;;   -- basic block 13 from 172 to 250 -- after reload
;;   ======================================================

;;	  0--> b  0: i 173 {bx=bx+r14;clobber flags;}              :athlon-direct,athlon-ieu
;;	  0--> b  0: i 175 {r12=r12+r14;clobber flags;}            :athlon-direct,athlon-ieu
;;	  0--> b  0: i 172 [bp]=r14                                :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 174 [bp+0x8]=bx                             :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 176 [bp+0x10]=r12                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 243 {sp=sp+0x8;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  2--> b  0: i 244 bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  3--> b  0: i 245 bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  4--> b  0: i 246 r12=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  5--> b  0: i 247 r13=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  6--> b  0: i 248 r14=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  7--> b  0: i 249 r15=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  8--> b  0: i 250 simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 173
;;   new tail = 250

;;   ======================================================
;;   -- basic block 14 from 49 to 256 -- after reload
;;   ======================================================

;;	  0--> b  0: i  49 di=r15                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 240 {r14=0;clobber flags;}                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 256 pc=L90                                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 49
;;   new tail = 256

;;   ======================================================
;;   -- basic block 15 from 59 to 60 -- after reload
;;   ======================================================

;;	  0--> b  0: i  59 di=`*.LC22'                             :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i  60 call [`_ZSt20__throw_length_errorPKc']  :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 59
;;   new tail = 60



starting the processing of deferred insns
ending the processing of deferred insns


void std::vector<_Tp, _Alloc>::reserve(std::vector<_Tp, _Alloc>::size_type) [with _Tp = Pythia8::Particle; _Alloc = std::allocator<Pythia8::Particle>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  ref usage 	r0={15d,12u,1e} r1={7d,27u} r2={6d,25u,23e} r3={6d,5u} r4={6d,8u} r5={8d,8u} r6={4d,6u,3e} r7={22d,42u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={24d,7u} r18={3d} r19={3d} r21={16d,12u} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={9d,5u} r38={4d} r39={3d} r40={3d} r41={7d,6u,1e} r42={4d,5u} r43={5d,6u} r44={4d,7u,1e} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 553{343d,181u,29e} in 119{116 regular + 3 call} insns.
(note 45 0 53 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 2311, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 53 45 48 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 48 53 209 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 209 48 210 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 44 r15)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:65 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))
(insn/f 210 209 55 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:65 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn 55 210 211 2 (set (reg:DI 0 ax [173])
        (const_int 115292150460684697 [0x199999999999999])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:68 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 115292150460684697 [0x199999999999999])
        (nil)))
(insn/f:TI 211 55 212 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:65 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 212 211 213 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:65 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f:TI 213 212 214 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:65 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 214 213 215 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:65 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f:TI 215 214 216 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:65 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 216 215 56 2 NOTE_INSN_PROLOGUE_END)
(insn 56 216 57 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 4 si [orig:172 __n ] [172])
            (reg:DI 0 ax [173]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:68 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [173])
        (expr_list:REG_EQUAL (compare:CC (reg/v:DI 41 r12 [orig:172 __n ] [172])
                (const_int 115292150460684697 [0x199999999999999]))
            (nil))))
(jump_insn:TI 57 56 63 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 254)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:68 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 254)
;;  succ:       15 [0.0%]  (CAN_FALLTHRU)
;;              3 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 7 [sp]
;; live  out 	 4 [si] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 2310, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 6 [bp] 17 [flags] 41 [r12] 44 [r15]
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 6 [bp] 17 [flags] 41 [r12] 44 [r15]
;; live  kill	 17 [flags]
(note 63 57 66 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 66 63 64 3 NOTE_INSN_DELETED)
(insn:TI 64 66 205 3 (set (reg/f:DI 44 r15 [orig:139 _21 ] [139])
        (mem/f:DI (reg/f:DI 5 di [orig:171 this ] [171]) [164 MEM[(struct Particle * *)this_3(D)]+0 S8 A64])) 85 {*movdi_internal}
     (nil))
(insn 205 64 69 3 (set (reg:DI 0 ax [174])
        (mem/f:DI (plus:DI (reg/f:DI 5 di [orig:171 this ] [171])
                (const_int 16 [0x10])) [164 MEM[(struct Particle * *)this_3(D) + 16B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:737 85 {*movdi_internal}
     (nil))
(insn 69 205 218 3 (set (reg:DI 1 dx [179])
        (const_int -3689348814741910323 [0xcccccccccccccccd])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:737 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int -3689348814741910323 [0xcccccccccccccccd])
        (nil)))
(insn:TI 218 69 217 3 (set (reg/f:DI 6 bp [orig:171 this ] [171])
        (reg:DI 5 di [ this ])) 85 {*movdi_internal}
     (nil))
(insn 217 218 67 3 (set (reg/v:DI 41 r12 [orig:172 __n ] [172])
        (reg:DI 4 si [ __n ])) 85 {*movdi_internal}
     (nil))
(insn:TI 67 217 68 3 (parallel [
            (set (reg:DI 0 ax [174])
                (minus:DI (reg:DI 0 ax [174])
                    (reg/f:DI 44 r15 [orig:139 _21 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:737 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/f:DI 6 bp [orig:171 this ] [171])
                        (const_int 16 [0x10])) [164 MEM[(struct Particle * *)this_3(D) + 16B]+0 S8 A64])
                (reg/f:DI 44 r15 [orig:139 _21 ] [139]))
            (nil))))
(insn:TI 68 67 70 3 (parallel [
            (set (reg:DI 0 ax [177])
                (ashiftrt:DI (reg:DI 0 ax [174])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:737 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 70 68 71 3 (parallel [
            (set (reg:DI 0 ax [178])
                (mult:DI (reg:DI 0 ax [177])
                    (reg:DI 1 dx [179])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:737 317 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [179])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 0 ax [177])
                    (const_int -3689348814741910323 [0xcccccccccccccccd]))
                (nil)))))
(insn:TI 71 70 72 3 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [178])
            (reg:DI 4 si [orig:172 __n ] [172]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:70 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [178])
        (nil)))
(jump_insn:TI 72 71 180 3 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 255)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:70 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 255)
;;  succ:       5 [39.0%]  (CAN_FALLTHRU)
;;              4 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

;; basic block 4, loop depth 0, count 0, freq 1411, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL)
;;  pred:       3 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(note 180 72 221 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 221 180 222 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 222 221 223 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f:TI 223 222 224 4 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 224 223 225 4 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 225 224 226 4 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 226 225 227 4 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 227 226 228 4 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 228 227 229 4 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 229 228 230 4 (simple_return) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 697 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 230 229 255)
;; basic block 5, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [39.0%]  (CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  use 	 4 [si] 5 [di] 7 [sp] 44 [r15]
;; lr  def 	 3 [bx] 17 [flags] 42 [r13]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 3 [bx] 17 [flags] 42 [r13]
;; live  kill	 17 [flags]
(code_label 255 230 73 5 165 "" [1 uses])
(note 73 255 74 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 74 73 207 5 (set (reg/f:DI 42 r13 [orig:141 _23 ] [141])
        (mem/f:DI (plus:DI (reg/f:DI 5 di [orig:171 this ] [171])
                (const_int 8 [0x8])) [164 MEM[(const struct vector *)this_3(D)].D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:171 this ] [171])
        (nil)))
(insn:TI 207 74 75 5 (set (reg:DI 3 bx [orig:143 _25 ] [143])
        (reg/f:DI 42 r13 [orig:141 _23 ] [141])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn:TI 75 207 76 5 (parallel [
            (set (reg:DI 3 bx [orig:143 _25 ] [143])
                (minus:DI (reg:DI 3 bx [orig:143 _25 ] [143])
                    (reg/f:DI 44 r15 [orig:139 _21 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 76 75 77 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 4 si [orig:172 __n ] [172])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:170 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 77 76 78 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 184)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:170 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1000 (nil)))
 -> 184)
;;  succ:       6 [90.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              14 [10.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 6, loop depth 0, count 0, freq 810, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [90.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 41 [r12] 43 [r14]
;; live  kill	 17 [flags]
(note 78 77 80 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 80 78 82 6 NOTE_INSN_DELETED)
(note 82 80 81 6 NOTE_INSN_DELETED)
(insn:TI 81 82 84 6 (set (reg:DI 41 r12 [182])
        (plus:DI (ashift:DI (reg:DI 4 si [orig:172 __n ] [172])
                (const_int 2 [0x2]))
            (reg:DI 4 si [orig:172 __n ] [172]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:104 215 {*leadi}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:172 __n ] [172])
        (nil)))
(insn:TI 84 81 85 6 (parallel [
            (set (reg/v:DI 41 r12 [orig:172 __n ] [172])
                (ashift:DI (reg:DI 41 r12 [182])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:104 530 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 85 84 86 6 (set (reg:DI 5 di)
        (reg/v:DI 41 r12 [orig:172 __n ] [172])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:104 85 {*movdi_internal}
     (nil))
(call_insn:TI 86 85 89 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb2c1d48460 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:104 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb2c1d48460 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn:TI 89 86 87 6 (set (reg/f:DI 5 di [orig:144 pretmp_29 ] [144])
        (mem/f:DI (reg/f:DI 6 bp [orig:171 this ] [171]) [164 this_3(D)->D.138156._M_impl._M_start+0 S8 A64])) 85 {*movdi_internal}
     (nil))
(insn 87 89 90 6 (set (reg/f:DI 43 r14 [orig:147 _34 ] [147])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:104 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 184)
            (nil))))
;;  succ:       7 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              14 [100.0%]  (CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	
(code_label 90 87 91 7 151 "" [1 uses])
(note 91 90 92 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn:TI 92 91 51 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 44 r15 [orig:145 __first ] [145])
            (reg/f:DI 42 r13 [orig:141 _23 ] [141]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [orig:145 __first ] [145])
        (nil)))
(insn 51 92 52 7 (set (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
        (reg/f:DI 43 r14 [orig:147 _34 ] [147])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 85 {*movdi_internal}
     (nil))
(insn 52 51 93 7 (set (reg/v/f:DI 2 cx [orig:145 __first ] [145])
        (reg/f:DI 44 r15 [orig:139 _21 ] [139])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 85 {*movdi_internal}
     (nil))
(jump_insn:TI 93 52 192 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 159)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 159)
;;  succ:       11 [9.0%]  (CAN_FALLTHRU)
;;              8 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 8, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              10 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 192 93 191 8 161 "" [1 uses])
(note 191 192 103 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn:TI 103 191 104 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_construct.h:75 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 104 103 105 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 155)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_construct.h:75 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2 (nil)))
 -> 155)
;;  succ:       9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              10 [0.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 9, loop depth 0, count 0, freq 9098, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags] 21 [xmm0] 37 [r8]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 21 [xmm0] 37 [r8]
;; live  kill	 17 [flags]
(note 105 104 106 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn:TI 106 105 125 9 (set (reg:DI 0 ax [186])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVN7Pythia88ParticleE") [flags 0x40]  <var_decl 0x7fb2bb1e16c0 _ZTVN7Pythia88ParticleE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVN7Pythia88ParticleE") [flags 0x40]  <var_decl 0x7fb2bb1e16c0 _ZTVN7Pythia88ParticleE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn 125 106 239 9 (set (reg:DF 21 xmm0 [orig:156 _44 ] [156])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 40 [0x28])) [78 MEM[base: __first_96, offset: 40B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 40 [0x28])) [78 MEM[base: __first_96, offset: 40B]+0 S8 A64])
        (nil)))
(insn:TI 239 125 108 9 (parallel [
            (set (reg/f:DI 0 ax [185])
                (plus:DI (reg/f:DI 0 ax [185])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 108 239 109 9 (set (mem/f:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146]) [150 MEM[base: __cur_94, offset: 0B]+0 S8 A64])
        (reg/f:DI 0 ax [185])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [185])
        (nil)))
(insn 109 108 110 9 (set (reg:SI 0 ax [orig:148 _36 ] [148])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 8 [0x8])) [22 MEM[base: __first_96, offset: 8B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:62 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 8 [0x8])) [22 MEM[base: __first_96, offset: 8B]+0 S4 A32])
        (nil)))
(insn:TI 110 109 111 9 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 8 [0x8])) [22 MEM[base: __cur_94, offset: 8B]+0 S4 A32])
        (reg:SI 0 ax [orig:148 _36 ] [148])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:148 _36 ] [148])
        (nil)))
(insn 111 110 112 9 (set (reg:SI 0 ax [orig:149 _37 ] [149])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 12 [0xc])) [22 MEM[base: __first_96, offset: 12B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 12 [0xc])) [22 MEM[base: __first_96, offset: 12B]+0 S4 A32])
        (nil)))
(insn:TI 112 111 113 9 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 12 [0xc])) [22 MEM[base: __cur_94, offset: 12B]+0 S4 A32])
        (reg:SI 0 ax [orig:149 _37 ] [149])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:149 _37 ] [149])
        (nil)))
(insn 113 112 114 9 (set (reg:SI 0 ax [orig:150 _38 ] [150])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 16 [0x10])) [22 MEM[base: __first_96, offset: 16B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 16 [0x10])) [22 MEM[base: __first_96, offset: 16B]+0 S4 A32])
        (nil)))
(insn:TI 114 113 115 9 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 16 [0x10])) [22 MEM[base: __cur_94, offset: 16B]+0 S4 A32])
        (reg:SI 0 ax [orig:150 _38 ] [150])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:150 _38 ] [150])
        (nil)))
(insn 115 114 116 9 (set (reg:SI 0 ax [orig:151 _39 ] [151])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 20 [0x14])) [22 MEM[base: __first_96, offset: 20B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 20 [0x14])) [22 MEM[base: __first_96, offset: 20B]+0 S4 A32])
        (nil)))
(insn:TI 116 115 117 9 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 20 [0x14])) [22 MEM[base: __cur_94, offset: 20B]+0 S4 A32])
        (reg:SI 0 ax [orig:151 _39 ] [151])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:151 _39 ] [151])
        (nil)))
(insn 117 116 118 9 (set (reg:SI 4 si [orig:152 _40 ] [152])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 24 [0x18])) [22 MEM[base: __first_96, offset: 24B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 24 [0x18])) [22 MEM[base: __first_96, offset: 24B]+0 S4 A32])
        (nil)))
(insn:TI 118 117 119 9 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 24 [0x18])) [22 MEM[base: __cur_94, offset: 24B]+0 S4 A32])
        (reg:SI 4 si [orig:152 _40 ] [152])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:152 _40 ] [152])
        (nil)))
(insn 119 118 120 9 (set (reg:SI 4 si [orig:153 _41 ] [153])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 28 [0x1c])) [22 MEM[base: __first_96, offset: 28B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 28 [0x1c])) [22 MEM[base: __first_96, offset: 28B]+0 S4 A32])
        (nil)))
(insn:TI 120 119 121 9 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 28 [0x1c])) [22 MEM[base: __cur_94, offset: 28B]+0 S4 A32])
        (reg:SI 4 si [orig:153 _41 ] [153])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:153 _41 ] [153])
        (nil)))
(insn 121 120 122 9 (set (reg:SI 37 r8 [orig:154 _42 ] [154])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 32 [0x20])) [22 MEM[base: __first_96, offset: 32B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 32 [0x20])) [22 MEM[base: __first_96, offset: 32B]+0 S4 A32])
        (nil)))
(insn:TI 122 121 123 9 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 32 [0x20])) [22 MEM[base: __cur_94, offset: 32B]+0 S4 A32])
        (reg:SI 37 r8 [orig:154 _42 ] [154])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:154 _42 ] [154])
        (nil)))
(insn 123 122 126 9 (set (reg:SI 37 r8 [orig:155 _43 ] [155])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 36 [0x24])) [22 MEM[base: __first_96, offset: 36B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 36 [0x24])) [22 MEM[base: __first_96, offset: 36B]+0 S4 A32])
        (nil)))
(insn 126 123 127 9 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 40 [0x28])) [78 MEM[base: __cur_94, offset: 40B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:156 _44 ] [156])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:156 _44 ] [156])
        (nil)))
(insn:TI 127 126 124 9 (set (reg:DF 21 xmm0 [orig:157 _45 ] [157])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 48 [0x30])) [78 MEM[base: __first_96, offset: 48B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 48 [0x30])) [78 MEM[base: __first_96, offset: 48B]+0 S8 A64])
        (nil)))
(insn:TI 124 127 128 9 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 36 [0x24])) [22 MEM[base: __cur_94, offset: 36B]+0 S4 A32])
        (reg:SI 37 r8 [orig:155 _43 ] [155])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:155 _43 ] [155])
        (nil)))
(insn:TI 128 124 129 9 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 48 [0x30])) [78 MEM[base: __cur_94, offset: 48B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:157 _45 ] [157])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:157 _45 ] [157])
        (nil)))
(insn:TI 129 128 130 9 (set (reg:DF 21 xmm0 [orig:158 _46 ] [158])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 56 [0x38])) [78 MEM[base: __first_96, offset: 56B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 56 [0x38])) [78 MEM[base: __first_96, offset: 56B]+0 S8 A64])
        (nil)))
(insn:TI 130 129 131 9 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 56 [0x38])) [78 MEM[base: __cur_94, offset: 56B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:158 _46 ] [158])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:158 _46 ] [158])
        (nil)))
(insn:TI 131 130 132 9 (set (reg:DF 21 xmm0 [orig:159 _47 ] [159])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 64 [0x40])) [78 MEM[base: __first_96, offset: 64B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 64 [0x40])) [78 MEM[base: __first_96, offset: 64B]+0 S8 A64])
        (nil)))
(insn:TI 132 131 133 9 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 64 [0x40])) [78 MEM[base: __cur_94, offset: 64B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:159 _47 ] [159])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:159 _47 ] [159])
        (nil)))
(insn:TI 133 132 134 9 (set (reg:DF 21 xmm0 [orig:160 _48 ] [160])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 72 [0x48])) [78 MEM[base: __first_96, offset: 72B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 72 [0x48])) [78 MEM[base: __first_96, offset: 72B]+0 S8 A64])
        (nil)))
(insn:TI 134 133 135 9 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 72 [0x48])) [78 MEM[base: __cur_94, offset: 72B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:160 _48 ] [160])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:160 _48 ] [160])
        (nil)))
(insn:TI 135 134 136 9 (set (reg:DF 21 xmm0 [orig:161 _49 ] [161])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 80 [0x50])) [78 MEM[base: __first_96, offset: 80B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 80 [0x50])) [78 MEM[base: __first_96, offset: 80B]+0 S8 A64])
        (nil)))
(insn:TI 136 135 137 9 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 80 [0x50])) [78 MEM[base: __cur_94, offset: 80B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:161 _49 ] [161])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:161 _49 ] [161])
        (nil)))
(insn:TI 137 136 138 9 (set (reg:DF 21 xmm0 [orig:162 _50 ] [162])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 88 [0x58])) [78 MEM[base: __first_96, offset: 88B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 88 [0x58])) [78 MEM[base: __first_96, offset: 88B]+0 S8 A64])
        (nil)))
(insn:TI 138 137 139 9 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 88 [0x58])) [78 MEM[base: __cur_94, offset: 88B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:162 _50 ] [162])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:162 _50 ] [162])
        (nil)))
(insn 139 138 141 9 (set (reg:QI 37 r8 [orig:163 _51 ] [163])
        (mem:QI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 96 [0x60])) [141 MEM[base: __first_96, offset: 96B]+0 S1 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:68 89 {*movqi_internal}
     (expr_list:REG_EQUIV (mem:QI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 96 [0x60])) [141 MEM[base: __first_96, offset: 96B]+0 S1 A8])
        (nil)))
(insn:TI 141 139 142 9 (set (reg:DF 21 xmm0 [orig:164 _52 ] [164])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 104 [0x68])) [78 MEM[base: __first_96, offset: 104B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 104 [0x68])) [78 MEM[base: __first_96, offset: 104B]+0 S8 A64])
        (nil)))
(insn:TI 142 141 140 9 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 104 [0x68])) [78 MEM[base: __cur_94, offset: 104B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:164 _52 ] [164])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:164 _52 ] [164])
        (nil)))
(insn:TI 140 142 151 9 (set (mem:QI (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 96 [0x60])) [141 MEM[base: __cur_94, offset: 96B]+0 S1 A8])
        (reg:QI 37 r8 [orig:163 _51 ] [163])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 37 r8 [orig:163 _51 ] [163])
        (nil)))
(insn 151 140 143 9 (set (reg/f:DI 37 r8 [orig:169 _57 ] [169])
        (mem/f:DI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 144 [0x90])) [446 MEM[base: __first_96, offset: 144B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 144 [0x90])) [446 MEM[base: __first_96, offset: 144B]+0 S8 A64])
        (nil)))
(insn:TI 143 151 144 9 (set (reg:DF 21 xmm0 [orig:165 _53 ] [165])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 112 [0x70])) [78 MEM[base: __first_96, offset: 112B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 112 [0x70])) [78 MEM[base: __first_96, offset: 112B]+0 S8 A64])
        (nil)))
(insn:TI 144 143 145 9 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 112 [0x70])) [78 MEM[base: __cur_94, offset: 112B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:165 _53 ] [165])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:165 _53 ] [165])
        (nil)))
(insn:TI 145 144 146 9 (set (reg:DF 21 xmm0 [orig:166 _54 ] [166])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 120 [0x78])) [78 MEM[base: __first_96, offset: 120B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 120 [0x78])) [78 MEM[base: __first_96, offset: 120B]+0 S8 A64])
        (nil)))
(insn:TI 146 145 147 9 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 120 [0x78])) [78 MEM[base: __cur_94, offset: 120B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:166 _54 ] [166])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:166 _54 ] [166])
        (nil)))
(insn:TI 147 146 148 9 (set (reg:DF 21 xmm0 [orig:167 _55 ] [167])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 128 [0x80])) [78 MEM[base: __first_96, offset: 128B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 128 [0x80])) [78 MEM[base: __first_96, offset: 128B]+0 S8 A64])
        (nil)))
(insn:TI 148 147 149 9 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 128 [0x80])) [78 MEM[base: __cur_94, offset: 128B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:167 _55 ] [167])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:167 _55 ] [167])
        (nil)))
(insn:TI 149 148 152 9 (set (reg:DF 21 xmm0 [orig:168 _56 ] [168])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 136 [0x88])) [78 MEM[base: __first_96, offset: 136B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 136 [0x88])) [78 MEM[base: __first_96, offset: 136B]+0 S8 A64])
        (nil)))
(insn:TI 152 149 153 9 (set (mem/f:DI (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 144 [0x90])) [446 MEM[base: __cur_94, offset: 144B]+0 S8 A64])
        (reg/f:DI 37 r8 [orig:169 _57 ] [169])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:169 _57 ] [169])
        (nil)))
(insn 153 152 150 9 (set (reg/f:DI 37 r8 [orig:170 _58 ] [170])
        (mem/f:DI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 152 [0x98])) [447 MEM[base: __first_96, offset: 152B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (const_int 152 [0x98])) [447 MEM[base: __first_96, offset: 152B]+0 S8 A64])
        (nil)))
(insn:TI 150 153 154 9 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 136 [0x88])) [78 MEM[base: __cur_94, offset: 136B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:168 _56 ] [168])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:168 _56 ] [168])
        (nil)))
(insn:TI 154 150 155 9 (set (mem/f:DI (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (const_int 152 [0x98])) [447 MEM[base: __cur_94, offset: 152B]+0 S8 A64])
        (reg/f:DI 37 r8 [orig:170 _58 ] [170])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:170 _58 ] [170])
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 10, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [0.0%]  (CAN_FALLTHRU)
;;              9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 155 154 156 10 155 "" [1 uses])
(note 156 155 157 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn:TI 157 156 158 10 (parallel [
            (set (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                (plus:DI (reg/v/f:DI 2 cx [orig:145 __first ] [145])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 158 157 160 10 (parallel [
            (set (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                (plus:DI (reg/v/f:DI 1 dx [orig:146 __cur ] [146])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 160 158 161 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 42 r13 [orig:141 _23 ] [141])
            (reg/v/f:DI 2 cx [orig:145 __first ] [145]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 161 160 159 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 192)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 192)
;;  succ:       11 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              8 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [9.0%]  (CAN_FALLTHRU)
;;              10 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 159 161 94 11 156 "" [1 uses])
(note 94 159 95 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn:TI 95 94 96 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:144 pretmp_29 ] [144])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 96 95 167 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 170)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:177 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 170)
;;  succ:       12 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              13 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

;; basic block 12, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL)
;;  pred:       11 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	
;; live  kill	
(note 167 96 169 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 169 167 170 12 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       13 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

;; basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              11 [30.2%]  (CAN_FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 170 169 171 13 154 "" [1 uses])
(note 171 170 173 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn:TI 173 171 175 13 (parallel [
            (set (reg:DI 3 bx [187])
                (plus:DI (reg:DI 3 bx [orig:143 _25 ] [143])
                    (reg/f:DI 43 r14 [orig:147 _34 ] [147])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:82 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 6 bp [orig:171 this ] [171])
                    (const_int 8 [0x8])) [164 this_3(D)->D.138156._M_impl._M_finish+0 S8 A64])
            (nil))))
(insn 175 173 172 13 (parallel [
            (set (reg:DI 41 r12 [188])
                (plus:DI (reg/v:DI 41 r12 [orig:172 __n ] [172])
                    (reg/f:DI 43 r14 [orig:147 _34 ] [147])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:83 219 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:147 _34 ] [147])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 6 bp [orig:171 this ] [171])
                        (const_int 16 [0x10])) [164 this_3(D)->D.138156._M_impl._M_end_of_storage+0 S8 A64])
                (nil)))))
(insn 172 175 174 13 (set (mem/f:DI (reg/f:DI 6 bp [orig:171 this ] [171]) [164 this_3(D)->D.138156._M_impl._M_start+0 S8 A64])
        (reg/f:DI 43 r14 [orig:147 _34 ] [147])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:81 85 {*movdi_internal}
     (nil))
(insn:TI 174 172 176 13 (set (mem/f:DI (plus:DI (reg/f:DI 6 bp [orig:171 this ] [171])
                (const_int 8 [0x8])) [164 this_3(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (reg:DI 3 bx [187])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:82 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [187])
        (nil)))
(insn 176 174 258 13 (set (mem/f:DI (plus:DI (reg/f:DI 6 bp [orig:171 this ] [171])
                (const_int 16 [0x10])) [164 this_3(D)->D.138156._M_impl._M_end_of_storage+0 S8 A64])
        (reg:DI 41 r12 [188])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:83 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [188])
        (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:171 this ] [171])
            (nil))))
(note 258 176 243 13 NOTE_INSN_EPILOGUE_BEG)
(insn/f 243 258 244 13 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f:TI 244 243 245 13 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 245 244 246 13 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 246 245 247 13 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 247 246 248 13 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 248 247 249 13 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 249 248 250 13 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 250 249 253 13 (simple_return) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:85 697 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 253 250 184)
;; basic block 14, loop depth 0, count 0, freq 90, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [10.0%]  (CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 5 [di] 17 [flags] 43 [r14]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 5 [di] 43 [r14]
;; live  kill	 17 [flags]
(code_label 184 253 183 14 158 "" [1 uses])
(note 183 184 49 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn:TI 49 183 240 14 (set (reg/f:DI 5 di [orig:144 pretmp_29 ] [144])
        (reg/f:DI 44 r15 [orig:139 _21 ] [139])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:170 85 {*movdi_internal}
     (nil))
(insn 240 49 256 14 (parallel [
            (set (reg/f:DI 43 r14 [orig:147 _34 ] [147])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:170 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 256 240 257 14 (set (pc)
        (label_ref 90)) 667 {jump}
     (nil)
 -> 90)
;;  succ:       7 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 257 256 254)
;; basic block 15, loop depth 0, count 0, freq 1
;;  prev block 14, next block 1, flags: (REACHABLE, RTL)
;;  pred:       2 [0.0%]  (CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 254 257 58 15 164 "" [1 uses])
(note 58 254 59 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn:TI 59 58 60 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fb2b6d59b40 *.LC22>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:69 85 {*movdi_internal}
     (nil))
(call_insn:TI 60 59 61 15 (call (mem:QI (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7fb2bf56c620 __throw_length_error>) [0 __throw_length_error S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:69 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7fb2bf56c620 __throw_length_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 61 60 204)
(note 204 61 0 NOTE_INSN_DELETED)

;; Function TBranch* TTree::Branch(const char*, T*, Int_t, Int_t) [with T = unsigned int] (_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii, funcdef_no=12895, decl_uid=337466, cgraph_uid=8874, symbol_order=9097)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
rescanning insn with uid = 38.
rescanning insn with uid = 38.
;;   ======================================================
;;   -- basic block 2 from 40 to 58 -- after reload
;;   ======================================================

;;	  0--> b  0: i  40 [--sp]=r15                              :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i  41 [--sp]=r14                              :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i   4 r15=dx                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i  42 [--sp]=r13                              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i  43 [--sp]=r12                              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i   3 r13=si                                  :athlon-direct,athlon-ieu
;;	  2--> b  0: i  44 [--sp]=bp                               :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i  45 [--sp]=bx                               :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i   2 bx=di                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i   5 bp=cx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i  46 {sp=sp-0x18;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  4--> b  0: i  10 ax=[di]                                 :athlon-direct,athlon-load
;;	  4--> b  0: i  13 di=[const(unspec[`_ZTIj'] 2)]           :athlon-direct,athlon-load
;;	  5--> b  0: i  38 [sp+0xc]=r8                             :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i  11 r12=[ax+0x220]                          :athlon-direct,athlon-load
;;	  8--> b  0: i  14 ax=call [`_ZN9TDataType7GetTypeERKSt9type_info']:athlon-vector,athlon-ieu
;;	  9--> b  0: i  17 di=[const(unspec[`_ZTIj'] 2)]           :athlon-direct,athlon-load
;;	  9--> b  0: i  15 r14=ax                                  :athlon-direct,athlon-ieu
;;	 12--> b  0: i  18 ax=call [`_ZN7TBuffer8GetClassERKSt9type_info']:athlon-vector,athlon-ieu
;;	 13--> b  0: i  20 {sp=sp-0x8;clobber flags;}              :athlon-direct,athlon-ieu
;;	 13--> b  0: i  22 r9=bp                                   :athlon-direct,athlon-ieu
;;	 13--> b  0: i  24 cx=r14                                  :athlon-direct,athlon-ieu
;;	 14--> b  0: i  39 r8=[sp+0x14]                            :athlon-direct,athlon-load
;;	 14--> b  0: i  26 si=r13                                  :athlon-direct,athlon-ieu
;;	 14--> b  0: i  27 di=bx                                   :athlon-direct,athlon-ieu
;;	 15--> b  0: i  25 dx=ax                                   :athlon-direct,athlon-ieu
;;	 17--> b  0: i  21 [pre sp+=0xfffffffffffffff8]=r8         :athlon-direct,athlon-agu,athlon-store
;;	 17--> b  0: i  23 r8=r15                                  :athlon-direct,athlon-ieu
;;	 18--> b  0: i  28 ax=call [r12]                           :athlon-vector,athlon-ieu
;;	 18--> b  0: i  35 use ax                                  :nothing
;;	 19--> b  0: i  51 {sp=sp+0x28;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	 20--> b  0: i  52 bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	 21--> b  0: i  53 bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	 22--> b  0: i  54 r12=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	 23--> b  0: i  55 r13=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	 24--> b  0: i  56 r14=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	 25--> b  0: i  57 r15=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	 26--> b  0: i  58 simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 26
;;   new head = 40
;;   new tail = 58



starting the processing of deferred insns
ending the processing of deferred insns


TBranch* TTree::Branch(const char*, T*, Int_t, Int_t) [with T = unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  ref usage 	r0={5d,5u} r1={5d,2u} r2={5d,2u} r3={3d,3u,1e} r4={5d,2u} r5={7d,5u} r6={3d,3u} r7={17d,27u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={6d} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={6d,3u} r38={5d,1u} r39={3d} r40={3d} r41={3d,3u} r42={3d,3u} r43={3d,3u} r44={3d,3u} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 345{279d,65u,1e} in 38{35 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(note 8 1 7 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 7 8 12 2 NOTE_INSN_FUNCTION_BEG)
(note 12 7 40 2 NOTE_INSN_DELETED)
(insn/f:TI 40 12 41 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 44 r15)) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:335 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))
(insn/f 41 40 4 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:335 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn 4 41 42 2 (set (reg/v/f:DI 44 r15 [orig:94 obj ] [94])
        (reg:DI 1 dx [ obj ])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:335 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ obj ])
        (nil)))
(insn/f:TI 42 4 43 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:335 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 43 42 3 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:335 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn 3 43 44 2 (set (reg/v/f:DI 42 r13 [orig:93 name ] [93])
        (reg:DI 4 si [ name ])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:335 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn/f:TI 44 3 45 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:335 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 45 44 2 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:335 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn 2 45 5 2 (set (reg/f:DI 3 bx [orig:92 this ] [92])
        (reg:DI 5 di [ this ])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:335 85 {*movdi_internal}
     (nil))
(insn:TI 5 2 46 2 (set (reg/v:SI 6 bp [orig:95 bufsize ] [95])
        (reg:SI 2 cx [ bufsize ])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:335 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ bufsize ])
        (nil)))
(insn/f:TI 46 5 47 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:335 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (nil))))
(note 47 46 10 2 NOTE_INSN_PROLOGUE_END)
(insn 10 47 13 2 (set (reg/f:DI 0 ax [orig:97 this_2(D)->D.336803.D.276419._vptr.TObject ] [97])
        (mem/f:DI (reg/f:DI 5 di [orig:92 this ] [92]) [150 this_2(D)->D.336803.D.276419._vptr.TObject+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:92 this ] [92])
        (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:92 this ] [92]) [150 this_2(D)->D.336803.D.276419._vptr.TObject+0 S8 A64])
            (nil))))
(insn 13 10 38 2 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTIj") [flags 0x40]  <var_decl 0x7fb2b29fae10 _ZTIj>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZTIj") [flags 0x40]  <var_decl 0x7fb2b29fae10 _ZTIj>)
        (nil)))
(insn:TI 38 13 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 12 [0xc])) [789 %sfp+-4 S4 A32])
        (reg/v:SI 37 r8 [orig:96 splitlevel ] [96])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:335 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 37 r8 [orig:96 splitlevel ] [96])
        (nil)))
(insn:TI 11 38 14 2 (set (reg/f:DI 41 r12 [orig:88 _4 ] [88])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:97 this_2(D)->D.336803.D.276419._vptr.TObject ] [97])
                (const_int 544 [0x220])) [735 MEM[(int (*__vtbl_ptr_type) () *)_3 + 544B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:97 this_2(D)->D.336803.D.276419._vptr.TObject ] [97])
        (nil)))
(call_insn:TI 14 11 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN9TDataType7GetTypeERKSt9type_info") [flags 0x41]  <function_decl 0x7fb2b4654380 GetType>) [0 GetType S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN9TDataType7GetTypeERKSt9type_info") [flags 0x41]  <function_decl 0x7fb2b4654380 GetType>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn:TI 17 14 15 2 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTIj") [flags 0x40]  <var_decl 0x7fb2b29fae10 _ZTIj>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZTIj") [flags 0x40]  <var_decl 0x7fb2b29fae10 _ZTIj>)
        (nil)))
(insn 15 17 18 2 (set (reg:SI 43 r14 [orig:89 _6 ] [89])
        (reg:SI 0 ax)) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(call_insn:TI 18 15 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7TBuffer8GetClassERKSt9type_info") [flags 0x41]  <function_decl 0x7fb2b5c36c40 GetClass>) [0 GetClass S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7TBuffer8GetClassERKSt9type_info") [flags 0x41]  <function_decl 0x7fb2b5c36c40 GetClass>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn:TI 20 18 22 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 22 20 24 2 (set (reg:SI 38 r9)
        (reg/v:SI 6 bp [orig:95 bufsize ] [95])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 6 bp [orig:95 bufsize ] [95])
        (nil)))
(insn 24 22 39 2 (set (reg:SI 2 cx)
        (reg:SI 43 r14 [orig:89 _6 ] [89])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 43 r14 [orig:89 _6 ] [89])
        (nil)))
(insn:TI 39 24 26 2 (set (reg/v:SI 37 r8 [orig:96 splitlevel ] [96])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 20 [0x14])) [789 %sfp+-4 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 86 {*movsi_internal}
     (nil))
(insn 26 39 27 2 (set (reg:DI 4 si)
        (reg/v/f:DI 42 r13 [orig:93 name ] [93])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:93 name ] [93])
        (nil)))
(insn 27 26 25 2 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:92 this ] [92])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:92 this ] [92])
        (nil)))
(insn:TI 25 27 21 2 (set (reg:DI 1 dx)
        (reg/f:DI 0 ax [orig:90 _8 ] [90])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:90 _8 ] [90])
        (nil)))
(insn:TI 21 25 23 2 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg/v:SI 37 r8 [orig:96 splitlevel ] [96])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 65 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 37 r8 [orig:96 splitlevel ] [96])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 23 21 28 2 (set (reg:DI 37 r8)
        (reg/v/f:DI 44 r15 [orig:94 obj ] [94])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 44 r15 [orig:94 obj ] [94])
        (nil)))
(call_insn:TI 28 23 35 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 41 r12 [orig:88 _4 ] [88]) [0 *OBJ_TYPE_REF(_4;(struct TTree)this_2(D)->68) S1 A8])
            (const_int 16 [0x10]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:338 684 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:88 _4 ] [88])
        (expr_list:REG_DEAD (reg:SI 38 r9)
            (expr_list:REG_DEAD (reg:DI 37 r8)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:DI 4 si)
                        (expr_list:REG_DEAD (reg:SI 2 cx)
                            (expr_list:REG_DEAD (reg:DI 1 dx)
                                (expr_list:REG_CALL_DECL (nil)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 35 28 60 2 (use (reg/i:DI 0 ax)) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:339 -1
     (nil))
(note 60 35 51 2 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 51 60 52 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:339 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                    (plus:DI (reg/f:DI 7 sp)
                        (const_int 24 [0x18])))
                (nil)))))
(insn/f:TI 52 51 53 2 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:339 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 53 52 54 2 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:339 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 54 53 55 2 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:339 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 55 54 56 2 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:339 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 56 55 57 2 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:339 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 57 56 58 2 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:339 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 58 57 59 2 (simple_return) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:339 697 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 59 58 37)
(note 37 59 0 NOTE_INSN_DELETED)

;; Function void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {const Pythia8::Particle&}; _Tp = Pythia8::Particle; _Alloc = std::allocator<Pythia8::Particle>] (_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_, funcdef_no=13757, decl_uid=356994, cgraph_uid=9736, symbol_order=9959)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 30 count 23 (    1)


void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {const Pythia8::Particle&}; _Tp = Pythia8::Particle; _Alloc = std::allocator<Pythia8::Particle>]

Dataflow summary:
def_info->table_size = 275, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;;  ref usage 	r0={35d,43u,1e} r1={10d,55u,2e} r2={11d,33u,25e} r3={3d,8u} r4={6d,4u} r5={6d,10u} r6={4d,7u} r7={11d,33u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={28d,9u} r18={2d} r19={2d} r21={27d,24u} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={5d,4u} r38={3d} r39={2d} r40={2d} r41={8d,6u} r42={3d,25u,22e} r43={5d,3u} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 612{298d,264u,50e} in 175{173 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 0 )->[2]->( 6 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 17 [flags] 37 [r8] 42 [r13]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 17 [flags] 37 [r8] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]

( 3 )->[4]->( 5 19 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]

( 4 3 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 41 [r12]
;; live  in  	 3 [bx] 7 [sp] 42 [r13]
;; live  gen 	 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]

( 2 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 41 [r12]
;; live  in  	 3 [bx] 7 [sp] 42 [r13]
;; live  gen 	 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]

( 6 5 21 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 37 [r8] 41 [r12] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

( 7 20 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0]
;; live  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]

( 9 8 )->[10]->( 16 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]
;; lr  use 	 5 [di] 7 [sp] 37 [r8]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  gen 	 1 [dx] 2 [cx]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]

( 11 14 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags] 21 [xmm0]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]

( 12 13 )->[14]->( 15 12 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]

( 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 43 [r14]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 2 [cx] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

( 15 10 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

( 16 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

( 17 16 )->[18]->( 1 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 4 )->[19]->( 21 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]

( 19 )->[20]->( 8 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 6 [bp] 17 [flags] 41 [r12] 43 [r14]
;; live  in  	 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  gen 	 6 [bp] 41 [r12] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

( 19 )->[21]->( 7 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 42 [r13]
;; live  gen 	 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]

( 18 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 284 to worklist
  Adding insn 283 to worklist
  Adding insn 282 to worklist
  Adding insn 281 to worklist
  Adding insn 280 to worklist
  Adding insn 27 to worklist
  Adding insn 40 to worklist
  Adding insn 310 to worklist
  Adding insn 44 to worklist
  Adding insn 55 to worklist
  Adding insn 105 to worklist
  Adding insn 103 to worklist
  Adding insn 101 to worklist
  Adding insn 99 to worklist
  Adding insn 97 to worklist
  Adding insn 95 to worklist
  Adding insn 93 to worklist
  Adding insn 91 to worklist
  Adding insn 89 to worklist
  Adding insn 87 to worklist
  Adding insn 85 to worklist
  Adding insn 83 to worklist
  Adding insn 81 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
  Adding insn 75 to worklist
  Adding insn 73 to worklist
  Adding insn 71 to worklist
  Adding insn 69 to worklist
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 63 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 109 to worklist
  Adding insn 113 to worklist
  Adding insn 163 to worklist
  Adding insn 161 to worklist
  Adding insn 159 to worklist
  Adding insn 157 to worklist
  Adding insn 155 to worklist
  Adding insn 153 to worklist
  Adding insn 151 to worklist
  Adding insn 149 to worklist
  Adding insn 147 to worklist
  Adding insn 145 to worklist
  Adding insn 143 to worklist
  Adding insn 141 to worklist
  Adding insn 139 to worklist
  Adding insn 137 to worklist
  Adding insn 135 to worklist
  Adding insn 133 to worklist
  Adding insn 131 to worklist
  Adding insn 129 to worklist
  Adding insn 127 to worklist
  Adding insn 125 to worklist
  Adding insn 123 to worklist
  Adding insn 121 to worklist
  Adding insn 119 to worklist
  Adding insn 117 to worklist
  Adding insn 170 to worklist
  Adding insn 190 to worklist
  Adding insn 193 to worklist
  Adding insn 294 to worklist
  Adding insn 198 to worklist
  Adding insn 197 to worklist
  Adding insn 196 to worklist
  Adding insn 205 to worklist
  Adding insn 313 to worklist
  Adding insn 315 to worklist
Finished finding needed instructions:
processing block 18 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 293 to worklist
  Adding insn 292 to worklist
  Adding insn 291 to worklist
  Adding insn 290 to worklist
  Adding insn 289 to worklist
processing block 17 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
processing block 16 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
  Adding insn 189 to worklist
processing block 15 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
  Adding insn 186 to worklist
  Adding insn 183 to worklist
  Adding insn 182 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 175 to worklist
  Adding insn 174 to worklist
  Adding insn 173 to worklist
  Adding insn 278 to worklist
processing block 14 lr out =  1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
  Adding insn 169 to worklist
  Adding insn 167 to worklist
  Adding insn 166 to worklist
processing block 13 lr out =  1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
  Adding insn 162 to worklist
  Adding insn 160 to worklist
  Adding insn 158 to worklist
  Adding insn 156 to worklist
  Adding insn 154 to worklist
  Adding insn 152 to worklist
  Adding insn 150 to worklist
  Adding insn 148 to worklist
  Adding insn 146 to worklist
  Adding insn 144 to worklist
  Adding insn 142 to worklist
  Adding insn 140 to worklist
  Adding insn 138 to worklist
  Adding insn 136 to worklist
  Adding insn 134 to worklist
  Adding insn 132 to worklist
  Adding insn 130 to worklist
  Adding insn 128 to worklist
  Adding insn 126 to worklist
  Adding insn 124 to worklist
  Adding insn 122 to worklist
  Adding insn 120 to worklist
  Adding insn 118 to worklist
  Adding insn 306 to worklist
  Adding insn 115 to worklist
processing block 12 lr out =  1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
  Adding insn 112 to worklist
processing block 11 lr out =  1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
  Adding insn 12 to worklist
  Adding insn 11 to worklist
processing block 10 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]
  Adding insn 108 to worklist
processing block 9 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]
  Adding insn 104 to worklist
  Adding insn 102 to worklist
  Adding insn 100 to worklist
  Adding insn 98 to worklist
  Adding insn 96 to worklist
  Adding insn 94 to worklist
  Adding insn 92 to worklist
  Adding insn 90 to worklist
  Adding insn 88 to worklist
  Adding insn 86 to worklist
  Adding insn 84 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 78 to worklist
  Adding insn 76 to worklist
  Adding insn 74 to worklist
  Adding insn 72 to worklist
  Adding insn 70 to worklist
  Adding insn 68 to worklist
  Adding insn 66 to worklist
  Adding insn 64 to worklist
  Adding insn 62 to worklist
  Adding insn 60 to worklist
  Adding insn 307 to worklist
  Adding insn 57 to worklist
processing block 8 lr out =  1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 54 to worklist
processing block 7 lr out =  1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 279 to worklist
  Adding insn 50 to worklist
  Adding insn 276 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 45 to worklist
  Adding insn 43 to worklist
processing block 6 lr out =  3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 6 to worklist
processing block 5 lr out =  3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 5 to worklist
processing block 21 lr out =  3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 212 to worklist
  Adding insn 209 to worklist
processing block 20 lr out =  1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 309 to worklist
  Adding insn 308 to worklist
  Adding insn 8 to worklist
processing block 19 lr out =  0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
  Adding insn 204 to worklist
processing block 4 lr out =  0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
  Adding insn 39 to worklist
  Adding insn 38 to worklist
processing block 3 lr out =  0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
  Adding insn 26 to worklist
processing block 2 lr out =  0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 274 to worklist
  Adding insn 17 to worklist
  Adding insn 272 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 30 count 23 (    1)
;;   ======================================================
;;   -- basic block 2 from 280 to 23 -- after reload
;;   ======================================================

;;	  0--> b  0: i 280 [--sp]=r14                              :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 281 [--sp]=r13                              :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i  19 cx=0xcccccccccccccccd                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 282 [--sp]=r12                              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 283 [--sp]=bp                               :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i   3 r13=si                                  :athlon-direct,athlon-ieu
;;	  2--> b  0: i 284 [--sp]=bx                               :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i   2 bx=di                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i  15 di=[di]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i  16 r8=[bx+0x8]                             :athlon-direct,athlon-load
;;	  6--> b  0: i 272 dx=r8                                   :athlon-direct,athlon-ieu
;;	  7--> b  0: i  17 {dx=dx-di;clobber flags;}               :athlon-direct,athlon-ieu
;;	  8--> b  0: i 274 ax=dx                                   :athlon-direct,athlon-ieu
;;	  9--> b  0: i  18 {ax=ax>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	 10--> b  0: i  20 {ax=ax*cx;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	 14--> b  0: i  22 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	 15--> b  0: i  23 pc={(flags==0)?L221:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 15
;;   new head = 280
;;   new tail = 23

;;   ======================================================
;;   -- basic block 3 from 26 to 27 -- after reload
;;   ======================================================

;;	  0--> b  0: i  26 {flags=cmp(ax+ax,ax);ax=ax+ax;}         :athlon-direct,athlon-ieu
;;	  1--> b  0: i  27 pc={(ltu(flags,0))?L256:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 26
;;   new tail = 27

;;   ======================================================
;;   -- basic block 4 from 38 to 40 -- after reload
;;   ======================================================

;;	  0--> b  0: i  38 cx=0x199999999999999                    :athlon-direct,athlon-ieu
;;	  1--> b  0: i  39 flags=cmp(ax,cx)                        :athlon-direct,athlon-ieu
;;	  2--> b  0: i  40 pc={(leu(flags,0))?L299:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 38
;;   new tail = 40

;;   ======================================================
;;   -- basic block 5 from 5 to 310 -- after reload
;;   ======================================================

;;	  0--> b  0: i   5 r12=0xffffffffffffffa0                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 310 pc=L41                                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 5
;;   new tail = 310

;;   ======================================================
;;   -- basic block 6 from 6 to 6 -- after reload
;;   ======================================================

;;	  0--> b  0: i   6 r12=0xa0                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 6
;;   new tail = 6

;;   ======================================================
;;   -- basic block 7 from 43 to 279 -- after reload
;;   ======================================================

;;	  0--> b  0: i  43 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i  44 ax=call [`_Znwm']                       :athlon-vector,athlon-ieu
;;	  2--> b  0: i  48 r8=[bx+0x8]                             :athlon-direct,athlon-load
;;	  2--> b  0: i  49 di=[bx]                                 :athlon-direct,athlon-load
;;	  2--> b  0: i 279 r14=ax+0xa0                             :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i  45 bp=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i  47 {r12=r12+ax;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i 276 dx=r8                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i  50 {dx=dx-di;clobber flags;}               :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 43
;;   new tail = 50

;;   ======================================================
;;   -- basic block 8 from 54 to 55 -- after reload
;;   ======================================================

;;	  0--> b  0: i  54 {flags=cmp(dx+bp,0);dx=dx+bp;}          :athlon-direct,athlon-ieu
;;	  1--> b  0: i  55 pc={(flags==0)?L106:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 54
;;   new tail = 55

;;   ======================================================
;;   -- basic block 9 from 57 to 105 -- after reload
;;   ======================================================

;;	  0--> b  0: i  57 ax=[const(unspec[`_ZTVN7Pythia88ParticleE'] 2)]:athlon-direct,athlon-load
;;	  0--> b  0: i  76 xmm0=[r13+0x28]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  2--> b  0: i  77 [dx+0x28]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  3--> b  0: i 307 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  3--> b  0: i  78 xmm0=[r13+0x30]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  4--> b  0: i  59 [dx]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i  60 ax=[r13+0x8]                            :athlon-direct,athlon-load
;;	  5--> b  0: i  79 [dx+0x30]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  6--> b  0: i  80 xmm0=[r13+0x38]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  8--> b  0: i  61 [dx+0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	  8--> b  0: i  62 ax=[r13+0xc]                            :athlon-direct,athlon-load
;;	  8--> b  0: i  81 [dx+0x38]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  9--> b  0: i  82 xmm0=[r13+0x40]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 11--> b  0: i  63 [dx+0xc]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	 11--> b  0: i  64 ax=[r13+0x10]                           :athlon-direct,athlon-load
;;	 11--> b  0: i  83 [dx+0x40]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 12--> b  0: i  84 xmm0=[r13+0x48]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 14--> b  0: i  65 [dx+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 14--> b  0: i  66 ax=[r13+0x14]                           :athlon-direct,athlon-load
;;	 14--> b  0: i  85 [dx+0x48]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 15--> b  0: i  86 xmm0=[r13+0x50]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 17--> b  0: i  67 [dx+0x14]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 17--> b  0: i  68 ax=[r13+0x18]                           :athlon-direct,athlon-load
;;	 17--> b  0: i  87 [dx+0x50]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 18--> b  0: i  88 xmm0=[r13+0x58]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 20--> b  0: i  69 [dx+0x18]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 20--> b  0: i  70 ax=[r13+0x1c]                           :athlon-direct,athlon-load
;;	 20--> b  0: i  89 [dx+0x58]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 23--> b  0: i  71 [dx+0x1c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 23--> b  0: i  72 ax=[r13+0x20]                           :athlon-direct,athlon-load
;;	 26--> b  0: i  73 [dx+0x20]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 26--> b  0: i  74 ax=[r13+0x24]                           :athlon-direct,athlon-load
;;	 29--> b  0: i  75 [dx+0x24]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 29--> b  0: i  90 ax=[r13+0x60]                           :athlon-direct,athlon-load,athlon-ieu
;;	 30--> b  0: i  92 xmm0=[r13+0x68]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 32--> b  0: i  93 [dx+0x68]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 33--> b  0: i  94 xmm0=[r13+0x70]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 33--> b  0: i  91 [dx+0x60]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 34--> b  0: i 102 ax=[r13+0x90]                           :athlon-direct,athlon-load
;;	 35--> b  0: i  95 [dx+0x70]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 36--> b  0: i  96 xmm0=[r13+0x78]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 37--> b  0: i 103 [dx+0x90]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 38--> b  0: i  97 [dx+0x78]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 38--> b  0: i 104 ax=[r13+0x98]                           :athlon-direct,athlon-load
;;	 39--> b  0: i  98 xmm0=[r13+0x80]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 41--> b  0: i  99 [dx+0x80]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 41--> b  0: i 105 [dx+0x98]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 42--> b  0: i 100 xmm0=[r13+0x88]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 44--> b  0: i 101 [dx+0x88]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	Ready list (final):  
;;   total time = 44
;;   new head = 57
;;   new tail = 101

;;   ======================================================
;;   -- basic block 10 from 108 to 109 -- after reload
;;   ======================================================

;;	  0--> b  0: i 108 flags=cmp(di,r8)                        :athlon-direct,athlon-ieu
;;	  1--> b  0: i 109 pc={(flags==0)?L187:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 108
;;   new tail = 109

;;   ======================================================
;;   -- basic block 11 from 11 to 12 -- after reload
;;   ======================================================

;;	  0--> b  0: i  11 cx=di                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i  12 dx=bp                                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 11
;;   new tail = 12

;;   ======================================================
;;   -- basic block 12 from 112 to 113 -- after reload
;;   ======================================================

;;	  0--> b  0: i 112 flags=cmp(dx,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i 113 pc={(flags==0)?L164:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 112
;;   new tail = 113

;;   ======================================================
;;   -- basic block 13 from 115 to 163 -- after reload
;;   ======================================================

;;	  0--> b  0: i 115 ax=[const(unspec[`_ZTVN7Pythia88ParticleE'] 2)]:athlon-direct,athlon-load
;;	  0--> b  0: i 134 xmm0=[cx+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  3--> b  0: i 306 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i 117 [dx]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 118 ax=[cx+0x8]                             :athlon-direct,athlon-load
;;	  7--> b  0: i 119 [dx+0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i 120 ax=[cx+0xc]                             :athlon-direct,athlon-load
;;	 10--> b  0: i 121 [dx+0xc]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	 10--> b  0: i 122 ax=[cx+0x10]                            :athlon-direct,athlon-load
;;	 13--> b  0: i 123 [dx+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 13--> b  0: i 124 ax=[cx+0x14]                            :athlon-direct,athlon-load
;;	 16--> b  0: i 125 [dx+0x14]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 16--> b  0: i 126 ax=[cx+0x18]                            :athlon-direct,athlon-load
;;	 19--> b  0: i 127 [dx+0x18]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 19--> b  0: i 128 ax=[cx+0x1c]                            :athlon-direct,athlon-load
;;	 22--> b  0: i 129 [dx+0x1c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 22--> b  0: i 130 ax=[cx+0x20]                            :athlon-direct,athlon-load
;;	 25--> b  0: i 131 [dx+0x20]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 25--> b  0: i 132 ax=[cx+0x24]                            :athlon-direct,athlon-load
;;	 25--> b  0: i 135 [dx+0x28]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 27--> b  0: i 136 xmm0=[cx+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 28--> b  0: i 133 [dx+0x24]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 29--> b  0: i 137 [dx+0x30]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 31--> b  0: i 138 xmm0=[cx+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 33--> b  0: i 139 [dx+0x38]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 35--> b  0: i 140 xmm0=[cx+0x40]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 37--> b  0: i 141 [dx+0x40]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 39--> b  0: i 142 xmm0=[cx+0x48]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 41--> b  0: i 143 [dx+0x48]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 43--> b  0: i 144 xmm0=[cx+0x50]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 45--> b  0: i 145 [dx+0x50]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 47--> b  0: i 146 xmm0=[cx+0x58]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 49--> b  0: i 147 [dx+0x58]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 49--> b  0: i 148 si=[cx+0x60]                            :athlon-direct,athlon-load,athlon-ieu
;;	 50--> b  0: i 150 xmm0=[cx+0x68]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 52--> b  0: i 151 [dx+0x68]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 53--> b  0: i 149 [dx+0x60]=si                            :athlon-direct,athlon-agu,athlon-store
;;	 53--> b  0: i 160 si=[cx+0x90]                            :athlon-direct,athlon-load
;;	 54--> b  0: i 152 xmm0=[cx+0x70]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 56--> b  0: i 153 [dx+0x70]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 58--> b  0: i 154 xmm0=[cx+0x78]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 60--> b  0: i 155 [dx+0x78]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 62--> b  0: i 156 xmm0=[cx+0x80]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 64--> b  0: i 157 [dx+0x80]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 66--> b  0: i 158 xmm0=[cx+0x88]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 67--> b  0: i 161 [dx+0x90]=si                            :athlon-direct,athlon-agu,athlon-store
;;	 67--> b  0: i 162 si=[cx+0x98]                            :athlon-direct,athlon-load
;;	 68--> b  0: i 159 [dx+0x88]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 70--> b  0: i 163 [dx+0x98]=si                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 70
;;   new head = 115
;;   new tail = 163

;;   ======================================================
;;   -- basic block 14 from 166 to 170 -- after reload
;;   ======================================================

;;	  0--> b  0: i 166 {cx=cx+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
;;	  0--> b  0: i 167 {dx=dx+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
;;	  1--> b  0: i 169 flags=cmp(cx,r8)                        :athlon-direct,athlon-ieu
;;	  2--> b  0: i 170 pc={(flags!=0)?L168:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 166
;;   new tail = 170

;;   ======================================================
;;   -- basic block 15 from 278 to 186 -- after reload
;;   ======================================================

;;	  0--> b  0: i 278 ax=di+0xa0                              :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i 173 {cx=cx-ax;clobber flags;}               :athlon-direct,athlon-ieu
;;	  2--> b  0: i 175 ax=0x4cccccccccccccd                    :athlon-direct,athlon-ieu
;;	  3--> b  0: i 174 {cx=cx 0>>0x5;clobber flags;}           :athlon-direct,athlon-ieu
;;	  4--> b  0: i 176 {cx=cx*ax;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	  4--> b  0: i 177 ax=0x7ffffffffffffff                    :athlon-direct,athlon-ieu
;;	  8--> b  0: i 178 {cx=cx&ax;clobber flags;}               :athlon-direct,athlon-ieu
;;	  9--> b  0: i 182 ax=cx<<0x2+cx+0x5                       :athlon-direct,athlon-agu,nothing
;;	 11--> b  0: i 183 {ax=ax<<0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	 12--> b  0: i 186 r14=bp+ax+0xa0                          :athlon-direct,athlon-agu,nothing
;;	Ready list (final):  
;;   total time = 12
;;   new head = 278
;;   new tail = 186

;;   ======================================================
;;   -- basic block 16 from 189 to 190 -- after reload
;;   ======================================================

;;	  0--> b  0: i 189 flags=cmp(di,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i 190 pc={(flags==0)?L194:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 189
;;   new tail = 190

;;   ======================================================
;;   -- basic block 17 from 193 to 193 -- after reload
;;   ======================================================

;;	  0--> b  0: i 193 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 193
;;   new tail = 193

;;   ======================================================
;;   -- basic block 18 from 196 to 294 -- after reload
;;   ======================================================

;;	  0--> b  0: i 196 [bx]=bp                                 :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 197 [bx+0x8]=r14                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 198 [bx+0x10]=r12                           :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 289 bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  3--> b  0: i 290 bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  4--> b  0: i 291 r12=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  5--> b  0: i 292 r13=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  6--> b  0: i 293 r14=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  7--> b  0: i 294 simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 196
;;   new tail = 294

;;   ======================================================
;;   -- basic block 19 from 204 to 205 -- after reload
;;   ======================================================

;;	  0--> b  0: i 204 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i 205 pc={(flags!=0)?L312:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 204
;;   new tail = 205

;;   ======================================================
;;   -- basic block 20 from 8 to 313 -- after reload
;;   ======================================================

;;	  0--> b  0: i   8 r14=0xa0                                :athlon-direct,athlon-ieu
;;	  0--> b  0: i 308 {r12=0;clobber flags;}                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 309 {bp=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 313 pc=L203                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 8
;;   new tail = 313

;;   ======================================================
;;   -- basic block 21 from 209 to 315 -- after reload
;;   ======================================================

;;	  0--> b  0: i 209 r12=ax<<0x2+ax                          :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i 212 {r12=r12<<0x5;clobber flags;}           :athlon-direct,athlon-ieu
;;	  2--> b  0: i 315 pc=L41                                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 209
;;   new tail = 315



starting the processing of deferred insns
ending the processing of deferred insns


void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {const Pythia8::Particle&}; _Tp = Pythia8::Particle; _Alloc = std::allocator<Pythia8::Particle>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;;  ref usage 	r0={35d,43u,1e} r1={10d,55u,2e} r2={11d,33u,25e} r3={3d,8u} r4={6d,4u} r5={6d,10u} r6={4d,7u} r7={11d,33u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={28d,9u} r18={2d} r19={2d} r21={27d,24u} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={5d,4u} r38={3d} r39={2d} r40={2d} r41={8d,6u} r42={3d,25u,22e} r43={5d,3u} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 612{298d,264u,50e} in 175{173 regular + 2 call} insns.
(note 1 0 13 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 901, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 17 [flags] 37 [r8] 42 [r13]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 17 [flags] 37 [r8] 42 [r13]
;; live  kill	 17 [flags]
(note 13 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 13 280 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 280 4 281 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:407 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn/f 281 280 19 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:407 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn 19 281 282 2 (set (reg:DI 2 cx [168])
        (const_int -3689348814741910323 [0xcccccccccccccccd])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int -3689348814741910323 [0xcccccccccccccccd])
        (nil)))
(insn/f:TI 282 19 283 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:407 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 283 282 3 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:407 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn 3 283 284 2 (set (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
        (reg:DI 4 si [ __args#0 ])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:407 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __args#0 ])
        (nil)))
(insn/f:TI 284 3 285 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:407 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 285 284 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 285 15 2 (set (reg/f:DI 3 bx [orig:164 this ] [164])
        (reg:DI 5 di [ this ])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:407 85 {*movdi_internal}
     (nil))
(insn 15 2 16 2 (set (reg/f:DI 5 di [orig:101 pretmp_52 ] [101])
        (mem/f:DI (reg/f:DI 5 di [orig:164 this ] [164]) [164 MEM[(struct Particle * *)this_2(D)]+0 S8 A64])) 85 {*movdi_internal}
     (nil))
(insn:TI 16 15 272 2 (set (reg/f:DI 37 r8 [orig:148 pretmp_100 ] [148])
        (mem/f:DI (plus:DI (reg/f:DI 3 bx [orig:164 this ] [164])
                (const_int 8 [0x8])) [164 MEM[(struct Particle * *)this_2(D) + 8B]+0 S8 A64])) 85 {*movdi_internal}
     (nil))
(insn:TI 272 16 17 2 (set (reg:DI 1 dx [orig:151 prephitmp_103 ] [151])
        (reg/f:DI 37 r8 [orig:148 pretmp_100 ] [148])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn:TI 17 272 274 2 (parallel [
            (set (reg:DI 1 dx [orig:151 prephitmp_103 ] [151])
                (minus:DI (reg:DI 1 dx [orig:151 prephitmp_103 ] [151])
                    (reg/f:DI 5 di [orig:101 pretmp_52 ] [101])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 274 17 18 2 (set (reg:DI 0 ax [166])
        (reg:DI 1 dx [orig:151 prephitmp_103 ] [151])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn:TI 18 274 20 2 (parallel [
            (set (reg:DI 0 ax [166])
                (ashiftrt:DI (reg:DI 0 ax [166])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 20 18 22 2 (parallel [
            (set (reg:DI 0 ax [167])
                (mult:DI (reg:DI 0 ax [166])
                    (reg:DI 2 cx [168])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [168])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:DI (reg:DI 1 dx [orig:151 prephitmp_103 ] [151])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn:TI 22 20 23 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [167])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_algobase.h:224 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 23 22 24 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 221)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_algobase.h:224 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 221)
;;  succ:       6 [50.0%]  (CAN_FALLTHRU)
;;              3 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]

;; basic block 3, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 24 23 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 26 24 27 3 (parallel [
            (set (reg:CCC 17 flags)
                (compare:CCC (plus:DI (reg:DI 0 ax [167])
                        (reg:DI 0 ax [167]))
                    (reg:DI 0 ax [167])))
            (set (reg:DI 0 ax [169])
                (plus:DI (reg:DI 0 ax [167])
                    (reg:DI 0 ax [167])))
        ]) 308 {*adddi3_cc_overflow_1}
     (nil))
(jump_insn:TI 27 26 241 3 (set (pc)
        (if_then_else (ltu (reg:CCC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 256)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCC 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 256)
;;  succ:       5 [0.0%]  (CAN_FALLTHRU)
;;              4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]

;; basic block 4, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
(note 241 27 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 38 241 39 4 (set (reg:DI 2 cx [170])
        (const_int 115292150460684697 [0x199999999999999])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:1426 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 115292150460684697 [0x199999999999999])
        (nil)))
(insn:TI 39 38 40 4 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [169])
            (reg:DI 2 cx [170]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:1426 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [170])
        (expr_list:REG_EQUAL (compare:CC (reg:DI 0 ax [169])
                (const_int 115292150460684697 [0x199999999999999]))
            (nil))))
(jump_insn:TI 40 39 256 4 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 299)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:1426 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 3115 (nil)))
 -> 299)
;;  succ:       5 [68.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              19 [31.1%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;; Invalid sum of incoming frequencies 310, should be 0
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [68.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              3 [0.0%]  (CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 41 [r12]
;; live  in  	 3 [bx] 7 [sp] 42 [r13]
;; live  gen 	 41 [r12]
;; live  kill	
(code_label 256 40 217 5 192 "" [1 uses])
(note 217 256 5 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 5 217 310 5 (set (reg:DI 41 r12 [orig:156 prephitmp_167 ] [156])
        (const_int -96 [0xffffffffffffffa0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:1426 85 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int -96 [0xffffffffffffffa0])
        (nil)))
(jump_insn 310 5 311 5 (set (pc)
        (label_ref 41)) 667 {jump}
     (nil)
 -> 41)
;;  succ:       7 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]

(barrier 311 310 221)
;; basic block 6, loop depth 0, count 0, freq 451, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL)
;;  pred:       2 [50.0%]  (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 41 [r12]
;; live  in  	 3 [bx] 7 [sp] 42 [r13]
;; live  gen 	 41 [r12]
;; live  kill	
(code_label 221 311 220 6 179 "" [1 uses])
(note 220 221 6 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 6 220 41 6 (set (reg:DI 41 r12 [orig:156 prephitmp_167 ] [156])
        (const_int 160 [0xa0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_algobase.h:224 85 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 160 [0xa0])
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 7, loop depth 0, count 0, freq 810, maybe hot
;; Invalid sum of incoming frequencies 451, should be 810
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              5 [100.0%]  (CAN_FALLTHRU)
;;              21 [100.0%]  (CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 37 [r8] 41 [r12] 43 [r14]
;; live  kill	 17 [flags]
(code_label 41 6 42 7 169 "" [2 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn:TI 43 42 44 7 (set (reg:DI 5 di)
        (reg:DI 41 r12 [orig:156 prephitmp_167 ] [156])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:104 85 {*movdi_internal}
     (nil))
(call_insn:TI 44 43 48 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb2c1d48460 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:104 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb2c1d48460 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn:TI 48 44 49 7 (set (reg/f:DI 37 r8 [orig:148 pretmp_100 ] [148])
        (mem/f:DI (plus:DI (reg/f:DI 3 bx [orig:164 this ] [164])
                (const_int 8 [0x8])) [164 MEM[(const struct vector *)this_2(D)].D.138156._M_impl._M_finish+0 S8 A64])) 85 {*movdi_internal}
     (nil))
(insn 49 48 279 7 (set (reg/f:DI 5 di [orig:101 pretmp_52 ] [101])
        (mem/f:DI (reg/f:DI 3 bx [orig:164 this ] [164]) [164 MEM[(const struct vector *)this_2(D)].D.138156._M_impl._M_start+0 S8 A64])) 85 {*movdi_internal}
     (nil))
(insn 279 49 45 7 (set (reg/f:DI 43 r14 [orig:87 _4 ] [87])
        (plus:DI (reg/f:DI 0 ax [orig:93 _38 ] [93])
            (const_int 160 [0xa0]))) 215 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 _38 ] [93])
        (nil)))
(insn:TI 45 279 47 7 (set (reg/f:DI 6 bp [orig:93 _38 ] [93])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:104 85 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 171)
        (nil)))
(insn 47 45 276 7 (parallel [
            (set (reg/f:DI 41 r12 [orig:94 _40 ] [94])
                (plus:DI (reg:DI 41 r12 [orig:156 prephitmp_167 ] [156])
                    (reg/f:DI 0 ax [orig:93 _38 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 276 47 50 7 (set (reg:DI 1 dx [orig:151 prephitmp_103 ] [151])
        (reg/f:DI 37 r8 [orig:148 pretmp_100 ] [148])) 85 {*movdi_internal}
     (nil))
(insn:TI 50 276 203 7 (parallel [
            (set (reg:DI 1 dx [orig:151 prephitmp_103 ] [151])
                (minus:DI (reg:DI 1 dx [orig:151 prephitmp_103 ] [151])
                    (reg/f:DI 5 di [orig:101 pretmp_52 ] [101])))
            (clobber (reg:CC 17 flags))
        ]) 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              20 [100.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(code_label 203 50 52 8 178 "" [1 uses])
(note 52 203 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 53 52 54 8 NOTE_INSN_DELETED)
(insn:TI 54 53 55 8 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (plus:DI (reg:DI 1 dx [orig:151 prephitmp_103 ] [151])
                        (reg/f:DI 6 bp [orig:93 _38 ] [93]))
                    (const_int 0 [0])))
            (set (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (plus:DI (reg:DI 1 dx [orig:151 prephitmp_103 ] [151])
                    (reg/f:DI 6 bp [orig:93 _38 ] [93])))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 227 {*adddi_2}
     (nil))
(jump_insn:TI 55 54 56 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 106)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 106)
;;  succ:       9 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              10 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 9, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0]
;; live  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 21 [xmm0]
;; live  kill	 17 [flags]
(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn:TI 57 56 76 9 (set (reg:DI 0 ax [173])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVN7Pythia88ParticleE") [flags 0x40]  <var_decl 0x7fb2bb1e16c0 _ZTVN7Pythia88ParticleE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVN7Pythia88ParticleE") [flags 0x40]  <var_decl 0x7fb2bb1e16c0 _ZTVN7Pythia88ParticleE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn 76 57 77 9 (set (reg:DF 21 xmm0 [orig:182 MEM[(const struct Vec4 &)__args#0_7(D) + 40].xx ] [182])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 40].xx+0 S8 A64])
        (nil)))
(insn:TI 77 76 307 9 (set (mem:DF (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 40 [0x28])) [78 MEM[(struct Vec4 *)_11 + 40B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:182 MEM[(const struct Vec4 &)__args#0_7(D) + 40].xx ] [182])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:182 MEM[(const struct Vec4 &)__args#0_7(D) + 40].xx ] [182])
        (nil)))
(insn:TI 307 77 78 9 (parallel [
            (set (reg/f:DI 0 ax [172])
                (plus:DI (reg/f:DI 0 ax [172])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 78 307 59 9 (set (reg:DF 21 xmm0 [orig:183 MEM[(const struct Vec4 &)__args#0_7(D) + 40].yy ] [183])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 40].yy+0 S8 A64])
        (nil)))
(insn:TI 59 78 60 9 (set (mem/f:DI (reg/f:DI 1 dx [orig:91 _11 ] [91]) [150 _11->_vptr.Particle+0 S8 A64])
        (reg/f:DI 0 ax [172])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [172])
        (nil)))
(insn:TI 60 59 79 9 (set (reg:SI 0 ax [orig:174 __args#0_7(D)->idSave ] [174])
        (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 8 [0x8])) [22 __args#0_7(D)->idSave+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 8 [0x8])) [22 __args#0_7(D)->idSave+0 S4 A64])
        (nil)))
(insn 79 60 80 9 (set (mem:DF (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 48 [0x30])) [78 MEM[(struct Vec4 *)_11 + 40B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:183 MEM[(const struct Vec4 &)__args#0_7(D) + 40].yy ] [183])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:183 MEM[(const struct Vec4 &)__args#0_7(D) + 40].yy ] [183])
        (nil)))
(insn:TI 80 79 61 9 (set (reg:DF 21 xmm0 [orig:184 MEM[(const struct Vec4 &)__args#0_7(D) + 40].zz ] [184])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 40].zz+0 S8 A64])
        (nil)))
(insn:TI 61 80 62 9 (set (mem:SI (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 8 [0x8])) [22 _11->idSave+0 S4 A64])
        (reg:SI 0 ax [orig:174 __args#0_7(D)->idSave ] [174])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:174 __args#0_7(D)->idSave ] [174])
        (nil)))
(insn 62 61 81 9 (set (reg:SI 0 ax [orig:175 __args#0_7(D)->statusSave ] [175])
        (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 12 [0xc])) [22 __args#0_7(D)->statusSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 12 [0xc])) [22 __args#0_7(D)->statusSave+0 S4 A32])
        (nil)))
(insn 81 62 82 9 (set (mem:DF (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 56 [0x38])) [78 MEM[(struct Vec4 *)_11 + 40B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:184 MEM[(const struct Vec4 &)__args#0_7(D) + 40].zz ] [184])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:184 MEM[(const struct Vec4 &)__args#0_7(D) + 40].zz ] [184])
        (nil)))
(insn:TI 82 81 63 9 (set (reg:DF 21 xmm0 [orig:185 MEM[(const struct Vec4 &)__args#0_7(D) + 40].tt ] [185])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 64 [0x40])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 40].tt+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 64 [0x40])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 40].tt+0 S8 A64])
        (nil)))
(insn:TI 63 82 64 9 (set (mem:SI (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 12 [0xc])) [22 _11->statusSave+0 S4 A32])
        (reg:SI 0 ax [orig:175 __args#0_7(D)->statusSave ] [175])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:175 __args#0_7(D)->statusSave ] [175])
        (nil)))
(insn 64 63 83 9 (set (reg:SI 0 ax [orig:176 __args#0_7(D)->mother1Save ] [176])
        (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 16 [0x10])) [22 __args#0_7(D)->mother1Save+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 16 [0x10])) [22 __args#0_7(D)->mother1Save+0 S4 A64])
        (nil)))
(insn 83 64 84 9 (set (mem:DF (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 64 [0x40])) [78 MEM[(struct Vec4 *)_11 + 40B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:185 MEM[(const struct Vec4 &)__args#0_7(D) + 40].tt ] [185])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:185 MEM[(const struct Vec4 &)__args#0_7(D) + 40].tt ] [185])
        (nil)))
(insn:TI 84 83 65 9 (set (reg:DF 21 xmm0 [orig:186 __args#0_7(D)->mSave ] [186])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 72 [0x48])) [78 __args#0_7(D)->mSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 72 [0x48])) [78 __args#0_7(D)->mSave+0 S8 A64])
        (nil)))
(insn:TI 65 84 66 9 (set (mem:SI (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 16 [0x10])) [22 _11->mother1Save+0 S4 A64])
        (reg:SI 0 ax [orig:176 __args#0_7(D)->mother1Save ] [176])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:176 __args#0_7(D)->mother1Save ] [176])
        (nil)))
(insn 66 65 85 9 (set (reg:SI 0 ax [orig:177 __args#0_7(D)->mother2Save ] [177])
        (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 20 [0x14])) [22 __args#0_7(D)->mother2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 20 [0x14])) [22 __args#0_7(D)->mother2Save+0 S4 A32])
        (nil)))
(insn 85 66 86 9 (set (mem:DF (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 72 [0x48])) [78 _11->mSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:186 __args#0_7(D)->mSave ] [186])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:186 __args#0_7(D)->mSave ] [186])
        (nil)))
(insn:TI 86 85 67 9 (set (reg:DF 21 xmm0 [orig:187 __args#0_7(D)->scaleSave ] [187])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 80 [0x50])) [78 __args#0_7(D)->scaleSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 80 [0x50])) [78 __args#0_7(D)->scaleSave+0 S8 A64])
        (nil)))
(insn:TI 67 86 68 9 (set (mem:SI (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 20 [0x14])) [22 _11->mother2Save+0 S4 A32])
        (reg:SI 0 ax [orig:177 __args#0_7(D)->mother2Save ] [177])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:177 __args#0_7(D)->mother2Save ] [177])
        (nil)))
(insn 68 67 87 9 (set (reg:SI 0 ax [orig:178 __args#0_7(D)->daughter1Save ] [178])
        (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 24 [0x18])) [22 __args#0_7(D)->daughter1Save+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 24 [0x18])) [22 __args#0_7(D)->daughter1Save+0 S4 A64])
        (nil)))
(insn 87 68 88 9 (set (mem:DF (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 80 [0x50])) [78 _11->scaleSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:187 __args#0_7(D)->scaleSave ] [187])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:187 __args#0_7(D)->scaleSave ] [187])
        (nil)))
(insn:TI 88 87 69 9 (set (reg:DF 21 xmm0 [orig:188 __args#0_7(D)->polSave ] [188])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 88 [0x58])) [78 __args#0_7(D)->polSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 88 [0x58])) [78 __args#0_7(D)->polSave+0 S8 A64])
        (nil)))
(insn:TI 69 88 70 9 (set (mem:SI (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 24 [0x18])) [22 _11->daughter1Save+0 S4 A64])
        (reg:SI 0 ax [orig:178 __args#0_7(D)->daughter1Save ] [178])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:178 __args#0_7(D)->daughter1Save ] [178])
        (nil)))
(insn 70 69 89 9 (set (reg:SI 0 ax [orig:179 __args#0_7(D)->daughter2Save ] [179])
        (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 28 [0x1c])) [22 __args#0_7(D)->daughter2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 28 [0x1c])) [22 __args#0_7(D)->daughter2Save+0 S4 A32])
        (nil)))
(insn 89 70 71 9 (set (mem:DF (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 88 [0x58])) [78 _11->polSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:188 __args#0_7(D)->polSave ] [188])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:188 __args#0_7(D)->polSave ] [188])
        (nil)))
(insn:TI 71 89 72 9 (set (mem:SI (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 28 [0x1c])) [22 _11->daughter2Save+0 S4 A32])
        (reg:SI 0 ax [orig:179 __args#0_7(D)->daughter2Save ] [179])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:179 __args#0_7(D)->daughter2Save ] [179])
        (nil)))
(insn 72 71 73 9 (set (reg:SI 0 ax [orig:180 __args#0_7(D)->colSave ] [180])
        (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 32 [0x20])) [22 __args#0_7(D)->colSave+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 32 [0x20])) [22 __args#0_7(D)->colSave+0 S4 A64])
        (nil)))
(insn:TI 73 72 74 9 (set (mem:SI (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 32 [0x20])) [22 _11->colSave+0 S4 A64])
        (reg:SI 0 ax [orig:180 __args#0_7(D)->colSave ] [180])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:180 __args#0_7(D)->colSave ] [180])
        (nil)))
(insn 74 73 75 9 (set (reg:SI 0 ax [orig:181 __args#0_7(D)->acolSave ] [181])
        (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 36 [0x24])) [22 __args#0_7(D)->acolSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 36 [0x24])) [22 __args#0_7(D)->acolSave+0 S4 A32])
        (nil)))
(insn:TI 75 74 90 9 (set (mem:SI (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 36 [0x24])) [22 _11->acolSave+0 S4 A32])
        (reg:SI 0 ax [orig:181 __args#0_7(D)->acolSave ] [181])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:181 __args#0_7(D)->acolSave ] [181])
        (nil)))
(insn 90 75 92 9 (set (reg:QI 0 ax [orig:189 __args#0_7(D)->hasVertexSave ] [189])
        (mem:QI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 96 [0x60])) [141 __args#0_7(D)->hasVertexSave+0 S1 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 89 {*movqi_internal}
     (expr_list:REG_EQUIV (mem:QI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 96 [0x60])) [141 __args#0_7(D)->hasVertexSave+0 S1 A64])
        (nil)))
(insn:TI 92 90 93 9 (set (reg:DF 21 xmm0 [orig:190 MEM[(const struct Vec4 &)__args#0_7(D) + 104].xx ] [190])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 104 [0x68])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 104].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 104 [0x68])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 104].xx+0 S8 A64])
        (nil)))
(insn:TI 93 92 94 9 (set (mem:DF (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 104 [0x68])) [78 MEM[(struct Vec4 *)_11 + 104B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:190 MEM[(const struct Vec4 &)__args#0_7(D) + 104].xx ] [190])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:190 MEM[(const struct Vec4 &)__args#0_7(D) + 104].xx ] [190])
        (nil)))
(insn:TI 94 93 91 9 (set (reg:DF 21 xmm0 [orig:191 MEM[(const struct Vec4 &)__args#0_7(D) + 104].yy ] [191])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 112 [0x70])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 104].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 112 [0x70])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 104].yy+0 S8 A64])
        (nil)))
(insn 91 94 102 9 (set (mem:QI (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 96 [0x60])) [141 _11->hasVertexSave+0 S1 A64])
        (reg:QI 0 ax [orig:189 __args#0_7(D)->hasVertexSave ] [189])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:189 __args#0_7(D)->hasVertexSave ] [189])
        (nil)))
(insn:TI 102 91 95 9 (set (reg/f:DI 0 ax [orig:195 __args#0_7(D)->pdePtr ] [195])
        (mem/f:DI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 144 [0x90])) [446 __args#0_7(D)->pdePtr+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 144 [0x90])) [446 __args#0_7(D)->pdePtr+0 S8 A64])
        (nil)))
(insn:TI 95 102 96 9 (set (mem:DF (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 112 [0x70])) [78 MEM[(struct Vec4 *)_11 + 104B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:191 MEM[(const struct Vec4 &)__args#0_7(D) + 104].yy ] [191])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:191 MEM[(const struct Vec4 &)__args#0_7(D) + 104].yy ] [191])
        (nil)))
(insn:TI 96 95 103 9 (set (reg:DF 21 xmm0 [orig:192 MEM[(const struct Vec4 &)__args#0_7(D) + 104].zz ] [192])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 120 [0x78])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 104].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 120 [0x78])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 104].zz+0 S8 A64])
        (nil)))
(insn:TI 103 96 97 9 (set (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 144 [0x90])) [446 _11->pdePtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:195 __args#0_7(D)->pdePtr ] [195])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:195 __args#0_7(D)->pdePtr ] [195])
        (nil)))
(insn:TI 97 103 104 9 (set (mem:DF (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 120 [0x78])) [78 MEM[(struct Vec4 *)_11 + 104B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:192 MEM[(const struct Vec4 &)__args#0_7(D) + 104].zz ] [192])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:192 MEM[(const struct Vec4 &)__args#0_7(D) + 104].zz ] [192])
        (nil)))
(insn 104 97 98 9 (set (reg/f:DI 0 ax [orig:196 __args#0_7(D)->evtPtr ] [196])
        (mem/f:DI (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 152 [0x98])) [447 __args#0_7(D)->evtPtr+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
        (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                    (const_int 152 [0x98])) [447 _11->evtPtr+0 S8 A64])
            (nil))))
(insn:TI 98 104 99 9 (set (reg:DF 21 xmm0 [orig:193 MEM[(const struct Vec4 &)__args#0_7(D) + 104].tt ] [193])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 128 [0x80])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 104].tt+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 128 [0x80])) [78 MEM[(const struct Vec4 &)__args#0_7(D) + 104].tt+0 S8 A64])
        (nil)))
(insn:TI 99 98 105 9 (set (mem:DF (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 128 [0x80])) [78 MEM[(struct Vec4 *)_11 + 104B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:193 MEM[(const struct Vec4 &)__args#0_7(D) + 104].tt ] [193])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:193 MEM[(const struct Vec4 &)__args#0_7(D) + 104].tt ] [193])
        (nil)))
(insn 105 99 100 9 (set (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 152 [0x98])) [447 _11->evtPtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:196 __args#0_7(D)->evtPtr ] [196])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:91 _11 ] [91])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:196 __args#0_7(D)->evtPtr ] [196])
            (nil))))
(insn:TI 100 105 101 9 (set (reg:DF 21 xmm0 [orig:194 __args#0_7(D)->tauSave ] [194])
        (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 136 [0x88])) [78 __args#0_7(D)->tauSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 42 r13 [orig:165 __args#0 ] [165])
                (const_int 136 [0x88])) [78 __args#0_7(D)->tauSave+0 S8 A64])
        (nil)))
(insn:TI 101 100 106 9 (set (mem:DF (plus:DI (reg/f:DI 1 dx [orig:91 _11 ] [91])
                (const_int 136 [0x88])) [78 _11->tauSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:194 __args#0_7(D)->tauSave ] [194])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:194 __args#0_7(D)->tauSave ] [194])
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]

;; basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              8 [30.2%]  (CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]
;; lr  use 	 5 [di] 7 [sp] 37 [r8]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 106 101 107 10 173 "" [1 uses])
(note 107 106 108 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn:TI 108 107 109 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:101 pretmp_52 ] [101])
            (reg/f:DI 37 r8 [orig:148 pretmp_100 ] [148]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 109 108 110 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 187)
;;  succ:       16 [9.0%]  (CAN_FALLTHRU)
;;              11 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 43 [r14]

;; basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL)
;;  pred:       10 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  gen 	 1 [dx] 2 [cx]
;; live  kill	
(note 110 109 11 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn:TI 11 110 12 11 (set (reg/v/f:DI 2 cx [orig:89 __first ] [89])
        (reg/f:DI 5 di [orig:101 pretmp_52 ] [101])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 85 {*movdi_internal}
     (nil))
(insn 12 11 168 11 (set (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
        (reg/f:DI 6 bp [orig:93 _38 ] [93])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 85 {*movdi_internal}
     (nil))
;;  succ:       12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]

;; basic block 12, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              14 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 168 12 111 12 176 "" [1 uses])
(note 111 168 112 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn:TI 112 111 113 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_construct.h:75 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 113 112 114 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_construct.h:75 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2 (nil)))
 -> 164)
;;  succ:       13 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              14 [0.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]

;; basic block 13, loop depth 0, count 0, freq 9098, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags] 21 [xmm0]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 21 [xmm0]
;; live  kill	 17 [flags]
(note 114 113 115 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn:TI 115 114 134 13 (set (reg:DI 0 ax [198])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVN7Pythia88ParticleE") [flags 0x40]  <var_decl 0x7fb2bb1e16c0 _ZTVN7Pythia88ParticleE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVN7Pythia88ParticleE") [flags 0x40]  <var_decl 0x7fb2bb1e16c0 _ZTVN7Pythia88ParticleE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn 134 115 306 13 (set (reg:DF 21 xmm0 [orig:133 _84 ] [133])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 40 [0x28])) [78 MEM[base: __first_42, offset: 40B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 40 [0x28])) [78 MEM[base: __first_42, offset: 40B]+0 S8 A64])
        (nil)))
(insn:TI 306 134 117 13 (parallel [
            (set (reg/f:DI 0 ax [197])
                (plus:DI (reg/f:DI 0 ax [197])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 117 306 118 13 (set (mem/f:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88]) [150 MEM[base: __cur_30, offset: 0B]+0 S8 A64])
        (reg/f:DI 0 ax [197])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [197])
        (nil)))
(insn 118 117 119 13 (set (reg:SI 0 ax [orig:125 _76 ] [125])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 8 [0x8])) [22 MEM[base: __first_42, offset: 8B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:62 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 8 [0x8])) [22 MEM[base: __first_42, offset: 8B]+0 S4 A32])
        (nil)))
(insn:TI 119 118 120 13 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 8 [0x8])) [22 MEM[base: __cur_30, offset: 8B]+0 S4 A32])
        (reg:SI 0 ax [orig:125 _76 ] [125])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:125 _76 ] [125])
        (nil)))
(insn 120 119 121 13 (set (reg:SI 0 ax [orig:126 _77 ] [126])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 12 [0xc])) [22 MEM[base: __first_42, offset: 12B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 12 [0xc])) [22 MEM[base: __first_42, offset: 12B]+0 S4 A32])
        (nil)))
(insn:TI 121 120 122 13 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 12 [0xc])) [22 MEM[base: __cur_30, offset: 12B]+0 S4 A32])
        (reg:SI 0 ax [orig:126 _77 ] [126])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:126 _77 ] [126])
        (nil)))
(insn 122 121 123 13 (set (reg:SI 0 ax [orig:127 _78 ] [127])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 16 [0x10])) [22 MEM[base: __first_42, offset: 16B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 16 [0x10])) [22 MEM[base: __first_42, offset: 16B]+0 S4 A32])
        (nil)))
(insn:TI 123 122 124 13 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 16 [0x10])) [22 MEM[base: __cur_30, offset: 16B]+0 S4 A32])
        (reg:SI 0 ax [orig:127 _78 ] [127])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:127 _78 ] [127])
        (nil)))
(insn 124 123 125 13 (set (reg:SI 0 ax [orig:128 _79 ] [128])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 20 [0x14])) [22 MEM[base: __first_42, offset: 20B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 20 [0x14])) [22 MEM[base: __first_42, offset: 20B]+0 S4 A32])
        (nil)))
(insn:TI 125 124 126 13 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 20 [0x14])) [22 MEM[base: __cur_30, offset: 20B]+0 S4 A32])
        (reg:SI 0 ax [orig:128 _79 ] [128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:128 _79 ] [128])
        (nil)))
(insn 126 125 127 13 (set (reg:SI 0 ax [orig:129 _80 ] [129])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 24 [0x18])) [22 MEM[base: __first_42, offset: 24B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 24 [0x18])) [22 MEM[base: __first_42, offset: 24B]+0 S4 A32])
        (nil)))
(insn:TI 127 126 128 13 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 24 [0x18])) [22 MEM[base: __cur_30, offset: 24B]+0 S4 A32])
        (reg:SI 0 ax [orig:129 _80 ] [129])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:129 _80 ] [129])
        (nil)))
(insn 128 127 129 13 (set (reg:SI 0 ax [orig:130 _81 ] [130])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 28 [0x1c])) [22 MEM[base: __first_42, offset: 28B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 28 [0x1c])) [22 MEM[base: __first_42, offset: 28B]+0 S4 A32])
        (nil)))
(insn:TI 129 128 130 13 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 28 [0x1c])) [22 MEM[base: __cur_30, offset: 28B]+0 S4 A32])
        (reg:SI 0 ax [orig:130 _81 ] [130])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:130 _81 ] [130])
        (nil)))
(insn 130 129 131 13 (set (reg:SI 0 ax [orig:131 _82 ] [131])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 32 [0x20])) [22 MEM[base: __first_42, offset: 32B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 32 [0x20])) [22 MEM[base: __first_42, offset: 32B]+0 S4 A32])
        (nil)))
(insn:TI 131 130 132 13 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 32 [0x20])) [22 MEM[base: __cur_30, offset: 32B]+0 S4 A32])
        (reg:SI 0 ax [orig:131 _82 ] [131])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:131 _82 ] [131])
        (nil)))
(insn 132 131 135 13 (set (reg:SI 0 ax [orig:132 _83 ] [132])
        (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 36 [0x24])) [22 MEM[base: __first_42, offset: 36B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 36 [0x24])) [22 MEM[base: __first_42, offset: 36B]+0 S4 A32])
        (nil)))
(insn 135 132 136 13 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 40 [0x28])) [78 MEM[base: __cur_30, offset: 40B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:133 _84 ] [133])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:133 _84 ] [133])
        (nil)))
(insn:TI 136 135 133 13 (set (reg:DF 21 xmm0 [orig:134 _85 ] [134])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 48 [0x30])) [78 MEM[base: __first_42, offset: 48B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 48 [0x30])) [78 MEM[base: __first_42, offset: 48B]+0 S8 A64])
        (nil)))
(insn:TI 133 136 137 13 (set (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 36 [0x24])) [22 MEM[base: __cur_30, offset: 36B]+0 S4 A32])
        (reg:SI 0 ax [orig:132 _83 ] [132])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:132 _83 ] [132])
        (nil)))
(insn:TI 137 133 138 13 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 48 [0x30])) [78 MEM[base: __cur_30, offset: 48B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:134 _85 ] [134])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:134 _85 ] [134])
        (nil)))
(insn:TI 138 137 139 13 (set (reg:DF 21 xmm0 [orig:135 _86 ] [135])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 56 [0x38])) [78 MEM[base: __first_42, offset: 56B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 56 [0x38])) [78 MEM[base: __first_42, offset: 56B]+0 S8 A64])
        (nil)))
(insn:TI 139 138 140 13 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 56 [0x38])) [78 MEM[base: __cur_30, offset: 56B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:135 _86 ] [135])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:135 _86 ] [135])
        (nil)))
(insn:TI 140 139 141 13 (set (reg:DF 21 xmm0 [orig:136 _87 ] [136])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 64 [0x40])) [78 MEM[base: __first_42, offset: 64B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 64 [0x40])) [78 MEM[base: __first_42, offset: 64B]+0 S8 A64])
        (nil)))
(insn:TI 141 140 142 13 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 64 [0x40])) [78 MEM[base: __cur_30, offset: 64B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:136 _87 ] [136])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:136 _87 ] [136])
        (nil)))
(insn:TI 142 141 143 13 (set (reg:DF 21 xmm0 [orig:137 _88 ] [137])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 72 [0x48])) [78 MEM[base: __first_42, offset: 72B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 72 [0x48])) [78 MEM[base: __first_42, offset: 72B]+0 S8 A64])
        (nil)))
(insn:TI 143 142 144 13 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 72 [0x48])) [78 MEM[base: __cur_30, offset: 72B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:137 _88 ] [137])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:137 _88 ] [137])
        (nil)))
(insn:TI 144 143 145 13 (set (reg:DF 21 xmm0 [orig:138 _89 ] [138])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 80 [0x50])) [78 MEM[base: __first_42, offset: 80B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 80 [0x50])) [78 MEM[base: __first_42, offset: 80B]+0 S8 A64])
        (nil)))
(insn:TI 145 144 146 13 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 80 [0x50])) [78 MEM[base: __cur_30, offset: 80B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:138 _89 ] [138])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:138 _89 ] [138])
        (nil)))
(insn:TI 146 145 147 13 (set (reg:DF 21 xmm0 [orig:139 _90 ] [139])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 88 [0x58])) [78 MEM[base: __first_42, offset: 88B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 88 [0x58])) [78 MEM[base: __first_42, offset: 88B]+0 S8 A64])
        (nil)))
(insn:TI 147 146 148 13 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 88 [0x58])) [78 MEM[base: __cur_30, offset: 88B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:139 _90 ] [139])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:139 _90 ] [139])
        (nil)))
(insn 148 147 150 13 (set (reg:QI 4 si [orig:140 _91 ] [140])
        (mem:QI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 96 [0x60])) [141 MEM[base: __first_42, offset: 96B]+0 S1 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:68 89 {*movqi_internal}
     (expr_list:REG_EQUIV (mem:QI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 96 [0x60])) [141 MEM[base: __first_42, offset: 96B]+0 S1 A8])
        (nil)))
(insn:TI 150 148 151 13 (set (reg:DF 21 xmm0 [orig:141 _92 ] [141])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 104 [0x68])) [78 MEM[base: __first_42, offset: 104B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 104 [0x68])) [78 MEM[base: __first_42, offset: 104B]+0 S8 A64])
        (nil)))
(insn:TI 151 150 149 13 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 104 [0x68])) [78 MEM[base: __cur_30, offset: 104B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:141 _92 ] [141])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:141 _92 ] [141])
        (nil)))
(insn:TI 149 151 160 13 (set (mem:QI (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 96 [0x60])) [141 MEM[base: __cur_30, offset: 96B]+0 S1 A8])
        (reg:QI 4 si [orig:140 _91 ] [140])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 4 si [orig:140 _91 ] [140])
        (nil)))
(insn 160 149 152 13 (set (reg/f:DI 4 si [orig:146 _97 ] [146])
        (mem/f:DI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 144 [0x90])) [446 MEM[base: __first_42, offset: 144B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 144 [0x90])) [446 MEM[base: __first_42, offset: 144B]+0 S8 A64])
        (nil)))
(insn:TI 152 160 153 13 (set (reg:DF 21 xmm0 [orig:142 _93 ] [142])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 112 [0x70])) [78 MEM[base: __first_42, offset: 112B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 112 [0x70])) [78 MEM[base: __first_42, offset: 112B]+0 S8 A64])
        (nil)))
(insn:TI 153 152 154 13 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 112 [0x70])) [78 MEM[base: __cur_30, offset: 112B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:142 _93 ] [142])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:142 _93 ] [142])
        (nil)))
(insn:TI 154 153 155 13 (set (reg:DF 21 xmm0 [orig:143 _94 ] [143])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 120 [0x78])) [78 MEM[base: __first_42, offset: 120B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 120 [0x78])) [78 MEM[base: __first_42, offset: 120B]+0 S8 A64])
        (nil)))
(insn:TI 155 154 156 13 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 120 [0x78])) [78 MEM[base: __cur_30, offset: 120B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:143 _94 ] [143])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:143 _94 ] [143])
        (nil)))
(insn:TI 156 155 157 13 (set (reg:DF 21 xmm0 [orig:144 _95 ] [144])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 128 [0x80])) [78 MEM[base: __first_42, offset: 128B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 128 [0x80])) [78 MEM[base: __first_42, offset: 128B]+0 S8 A64])
        (nil)))
(insn:TI 157 156 158 13 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 128 [0x80])) [78 MEM[base: __cur_30, offset: 128B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:144 _95 ] [144])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:144 _95 ] [144])
        (nil)))
(insn:TI 158 157 161 13 (set (reg:DF 21 xmm0 [orig:145 _96 ] [145])
        (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 136 [0x88])) [78 MEM[base: __first_42, offset: 136B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 136 [0x88])) [78 MEM[base: __first_42, offset: 136B]+0 S8 A64])
        (nil)))
(insn:TI 161 158 162 13 (set (mem/f:DI (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 144 [0x90])) [446 MEM[base: __cur_30, offset: 144B]+0 S8 A64])
        (reg/f:DI 4 si [orig:146 _97 ] [146])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:146 _97 ] [146])
        (nil)))
(insn 162 161 159 13 (set (reg/f:DI 4 si [orig:147 _98 ] [147])
        (mem/f:DI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 152 [0x98])) [447 MEM[base: __first_42, offset: 152B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (const_int 152 [0x98])) [447 MEM[base: __first_42, offset: 152B]+0 S8 A64])
        (nil)))
(insn:TI 159 162 163 13 (set (mem:DF (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 136 [0x88])) [78 MEM[base: __cur_30, offset: 136B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:145 _96 ] [145])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:145 _96 ] [145])
        (nil)))
(insn:TI 163 159 164 13 (set (mem/f:DI (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (const_int 152 [0x98])) [447 MEM[base: __cur_30, offset: 152B]+0 S8 A64])
        (reg/f:DI 4 si [orig:147 _98 ] [147])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:147 _98 ] [147])
        (nil)))
;;  succ:       14 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]

;; basic block 14, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [0.0%]  (CAN_FALLTHRU)
;;              13 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 164 163 165 14 175 "" [1 uses])
(note 165 164 166 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn:TI 166 165 167 14 (parallel [
            (set (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                (plus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 167 166 169 14 (parallel [
            (set (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                (plus:DI (reg/v/f:DI 1 dx [orig:88 __cur ] [88])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 169 167 170 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 2 cx [orig:89 __first ] [89])
            (reg/f:DI 37 r8 [orig:148 pretmp_100 ] [148]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 170 169 171 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 168)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_uninitialized.h:74 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 168)
;;  succ:       15 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              12 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12]

;; basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL)
;;  pred:       14 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 43 [r14]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 2 [cx] 43 [r14]
;; live  kill	 17 [flags]
(note 171 170 179 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(note 179 171 181 15 NOTE_INSN_DELETED)
(note 181 179 185 15 NOTE_INSN_DELETED)
(note 185 181 278 15 NOTE_INSN_DELETED)
(insn:TI 278 185 173 15 (set (reg/f:DI 0 ax [199])
        (plus:DI (reg/f:DI 5 di [orig:101 pretmp_52 ] [101])
            (const_int 160 [0xa0]))) 215 {*leadi}
     (nil))
(insn:TI 173 278 175 15 (parallel [
            (set (reg:DI 2 cx [200])
                (minus:DI (reg/v/f:DI 2 cx [orig:89 __first ] [89])
                    (reg/f:DI 0 ax [199])))
            (clobber (reg:CC 17 flags))
        ]) 262 {*subdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [199])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 175 173 174 15 (set (reg:DI 0 ax [203])
        (const_int 345876451382054093 [0x4cccccccccccccd])) 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 345876451382054093 [0x4cccccccccccccd])
        (nil)))
(insn:TI 174 175 176 15 (parallel [
            (set (reg:DI 2 cx [201])
                (lshiftrt:DI (reg:DI 2 cx [200])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 564 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 176 174 177 15 (parallel [
            (set (reg:DI 2 cx [202])
                (mult:DI (reg:DI 2 cx [201])
                    (reg:DI 0 ax [203])))
            (clobber (reg:CC 17 flags))
        ]) 317 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [203])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 2 cx [201])
                    (const_int 345876451382054093 [0x4cccccccccccccd]))
                (nil)))))
(insn 177 176 178 15 (set (reg:DI 0 ax [205])
        (const_int 576460752303423487 [0x7ffffffffffffff])) 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 576460752303423487 [0x7ffffffffffffff])
        (nil)))
(insn:TI 178 177 182 15 (parallel [
            (set (reg:DI 2 cx [204])
                (and:DI (reg:DI 2 cx [202])
                    (reg:DI 0 ax [205])))
            (clobber (reg:CC 17 flags))
        ]) 388 {*anddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [205])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:DI (reg:DI 2 cx [202])
                    (const_int 576460752303423487 [0x7ffffffffffffff]))
                (nil)))))
(insn:TI 182 178 183 15 (set (reg:DI 0 ax [209])
        (plus:DI (plus:DI (ashift:DI (reg:DI 2 cx [204])
                    (const_int 2 [0x2]))
                (reg:DI 2 cx [204]))
            (const_int 5 [0x5]))) 215 {*leadi}
     (expr_list:REG_DEAD (reg:DI 2 cx [204])
        (nil)))
(insn:TI 183 182 186 15 (parallel [
            (set (reg:DI 0 ax [210])
                (ashift:DI (reg:DI 0 ax [209])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 530 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 186 183 187 15 (set (reg/f:DI 43 r14 [orig:87 _4 ] [87])
        (plus:DI (plus:DI (reg/f:DI 6 bp [orig:93 _38 ] [93])
                (reg:DI 0 ax [210]))
            (const_int 160 [0xa0]))) 215 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [210])
        (nil)))
;;  succ:       16 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

;; basic block 16, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              10 [9.0%]  (CAN_FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 187 186 188 16 174 "" [1 uses])
(note 188 187 189 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn:TI 189 188 190 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:101 pretmp_52 ] [101])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 190 189 191 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 194)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:177 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 194)
;;  succ:       17 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              18 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

;; basic block 17, loop depth 0, count 0, freq 705, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL)
;;  pred:       16 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	
;; live  kill	
(note 191 190 193 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 193 191 194 17 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       18 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

;; basic block 18, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              16 [21.6%]  (CAN_FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	
(code_label 194 193 195 18 177 "" [1 uses])
(note 195 194 196 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn:TI 196 195 197 18 (set (mem/f:DI (reg/f:DI 3 bx [orig:164 this ] [164]) [164 this_2(D)->D.138156._M_impl._M_start+0 S8 A64])
        (reg/f:DI 6 bp [orig:93 _38 ] [93])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:441 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:93 _38 ] [93])
        (nil)))
(insn 197 196 198 18 (set (mem/f:DI (plus:DI (reg/f:DI 3 bx [orig:164 this ] [164])
                (const_int 8 [0x8])) [164 this_2(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 43 r14 [orig:87 _4 ] [87])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:442 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:87 _4 ] [87])
        (nil)))
(insn:TI 198 197 317 18 (set (mem/f:DI (plus:DI (reg/f:DI 3 bx [orig:164 this ] [164])
                (const_int 16 [0x10])) [164 this_2(D)->D.138156._M_impl._M_end_of_storage+0 S8 A64])
        (reg/f:DI 41 r12 [orig:94 _40 ] [94])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:443 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:94 _40 ] [94])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:164 this ] [164])
            (nil))))
(note 317 198 289 18 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 289 317 290 18 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:444 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 290 289 291 18 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:444 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 291 290 292 18 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:444 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 292 291 293 18 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:444 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 293 292 294 18 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:444 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 294 293 295 18 (simple_return) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:444 697 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

(barrier 295 294 299)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;; Invalid sum of incoming frequencies 140, should be 0
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [31.1%]  (CAN_FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 299 295 202 19 195 "" [1 uses])
(note 202 299 204 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn:TI 204 202 205 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [169])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:170 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 205 204 228 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:170 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 312)
;;  succ:       21 (CAN_FALLTHRU)
;;              20 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 6 [bp] 17 [flags] 41 [r12] 43 [r14]
;; live  in  	 1 [dx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 42 [r13]
;; live  gen 	 6 [bp] 41 [r12] 43 [r14]
;; live  kill	 17 [flags]
(note 228 205 8 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn:TI 8 228 308 20 (set (reg/f:DI 43 r14 [orig:87 _4 ] [87])
        (const_int 160 [0xa0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:170 85 {*movdi_internal}
     (nil))
(insn 308 8 309 20 (parallel [
            (set (reg/f:DI 41 r12 [orig:94 _40 ] [94])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:170 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 309 308 313 20 (parallel [
            (set (reg/f:DI 6 bp [orig:93 _38 ] [93])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:170 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn:TI 313 309 314 20 (set (pc)
        (label_ref 203)) 667 {jump}
     (nil)
 -> 203)
;;  succ:       8 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

(barrier 314 313 312)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 (CAN_FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 42 [r13]
;; live  gen 	 41 [r12]
;; live  kill	 17 [flags]
(code_label 312 314 206 21 196 "" [1 uses])
(note 206 312 208 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(note 208 206 210 21 NOTE_INSN_DELETED)
(note 210 208 209 21 NOTE_INSN_DELETED)
(insn:TI 209 210 212 21 (set (reg:DI 41 r12 [214])
        (plus:DI (ashift:DI (reg:DI 0 ax [169])
                (const_int 2 [0x2]))
            (reg:DI 0 ax [169]))) 215 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [169])
        (nil)))
(insn:TI 212 209 315 21 (parallel [
            (set (reg:DI 41 r12 [orig:156 prephitmp_167 ] [156])
                (ashift:DI (reg:DI 41 r12 [214])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 530 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 315 212 316 21 (set (pc)
        (label_ref 41)) 667 {jump}
     (nil)
 -> 41)
;;  succ:       7 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]

(barrier 316 315 271)
(note 271 316 0 NOTE_INSN_DELETED)

;; Function bool runPythia(int, int, const Pythia8::Vec4&, unsigned int, unsigned int, std::vector<Pythia8::Particle>&, std::vector<Pythia8::Particle>&, unsigned int) (_Z9runPythiaiiRKN7Pythia84Vec4EjjRSt6vectorINS_8ParticleESaIS4_EES7_j, funcdef_no=11347, decl_uid=337264, cgraph_uid=7326, symbol_order=7549)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 177 n_edges 279 count 195 (  1.1)


bool runPythia(int, int, const Pythia8::Vec4&, unsigned int, unsigned int, std::vector<Pythia8::Particle>&, std::vector<Pythia8::Particle>&, unsigned int)

Dataflow summary:
def_info->table_size = 5823, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  ref usage 	r0={211d,364u} r1={192d,126u,2e} r2={89d,81u} r3={13d,28u,5e} r4={119d,52u} r5={141d,88u} r6={17d,38u,1e} r7={15d,635u} r8={67d} r9={67d} r10={67d} r11={67d} r12={67d} r13={67d} r14={67d} r15={67d} r16={10u,1e} r17={211d,66u} r18={67d} r19={67d} r20={228e} r21={168d,101u} r22={77d,9u} r23={69d,1u} r24={68d} r25={68d} r26={68d} r27={68d} r28={68d} r29={67d} r30={67d} r31={67d} r32={67d} r33={67d} r34={67d} r35={67d} r36={67d} r37={69d,2u} r38={69d,2u} r39={67d} r40={67d} r41={13d,31u,1e} r42={5d,18u,1e} r43={6d,9u,1e} r44={3d,23u} r45={67d} r46={67d} r47={67d} r48={67d} r49={67d} r50={67d} r51={67d} r52={67d} r53={67d} r54={67d} r55={67d} r56={67d} r57={67d} r58={67d} r59={67d} r60={67d} r61={67d} r62={67d} r63={67d} r64={67d} r65={67d} r66={67d} r67={67d} r68={67d} r69={67d} r70={67d} r71={67d} r72={67d} r73={67d} r74={67d} r75={67d} r76={67d} r77={67d} r78={67d} r79={67d} r80={67d} 
;;    total ref usage 7503{5579d,1684u,240e} in 1118{1051 regular + 67 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 16 [argp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 0 )->[2]->( 168(EH) 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 3 4 )->[5]->( 6 167(EH) )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 5 )->[6]->( 164(EH) 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 7 8 )->[9]->( 10 162(EH) )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 6 [bp] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 9 )->[10]->( 158(EH) 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 10 )->[11]->( 12 163(EH) )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 11 )->[12]->( 163(EH) 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 12 )->[13]->( 14 144 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 6 [bp] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 13 )->[14]->( 88 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 14 )->[15]->( 16 152(EH) )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 15 )->[16]->( 17 150 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 16 )->[17]->( 18 148 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 17 )->[18]->( 19 149 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 18 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 2 [cx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 149 19 150 )->[20]->( 21 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 41 [r12]
;; lr  def 	 5 [di] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 20 93 )->[21]->( 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 21 20 94 145 )->[22]->( 170(EH) 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 22 )->[23]->( 24 25 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 23 )->[24]->( 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 23 24 )->[25]->( 163(EH) 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 43 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 43 [r14] 44 [r15]

( 25 )->[26]->( 163(EH) 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 44 [r15]

( 26 )->[27]->( 111 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

( 27 )->[28]->( 29 163(EH) )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

( 28 )->[29]->( 171(EH) 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

( 29 )->[30]->( 174(EH) 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

( 30 )->[31]->( 176 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 42 [r13] 43 [r14]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags] 42 [r13] 43 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 31 )->[32]->( 33 124 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 32 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]

( 33 125 127 )->[34]->( 174(EH) 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

( 34 )->[35]->( 36 174(EH) )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

( 35 )->[36]->( 37 38 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 5 [di] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 5 [di] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]

( 36 )->[37]->( 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

( 36 37 )->[38]->( 39 40 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 7 [sp] 44 [r15]

( 38 )->[39]->( 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

( 38 39 )->[40]->( 41 163(EH) )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 23 [xmm2]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

( 40 )->[41]->( 163(EH) 42 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 44 [r15]

( 41 )->[42]->( 43 163(EH) )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

( 42 )->[43]->( 163(EH) 44 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 44 [r15]

( 43 )->[44]->( 45 163(EH) )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

( 44 )->[45]->( 163(EH) 46 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 44 [r15]

( 45 )->[46]->( 47 163(EH) )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

( 46 )->[47]->( 166 48 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

( 47 )->[48]->( 49 120 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

( 48 )->[49]->( 50 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 44 [r15]

( 49 121 123 )->[50]->( 163(EH) 51 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 44 [r15]

( 50 )->[51]->( 52 163(EH) )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

( 51 )->[52]->( 163(EH) 53 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 44 [r15]

( 52 )->[53]->( 111 54 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

( 53 )->[54]->( 55 112 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 43 [r14]
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 43 [r14] 44 [r15]

( 54 )->[55]->( 61 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 5 [di] 6 [bp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 5 [di] 6 [bp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 66 118 )->[56]->( 71 57 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 56 70 )->[57]->( 75 58 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 57 74 )->[58]->( 79 59 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 58 78 )->[59]->( 83 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 59 82 115 116 95 87 117 )->[60]->( 61 112 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 6 [bp] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 6 [bp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 60 55 )->[61]->( 66 62 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 61 )->[62]->( 63 66 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 62 )->[63]->( 107 64 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 63 110 )->[64]->( 96 65 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 64 )->[65]->( 100 66 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 62 105 65 106 61 99 119 )->[66]->( 67 56 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 66 )->[67]->( 68 136 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 67 )->[68]->( 69 117 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 68 )->[69]->( 70 )
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 69 137 )->[70]->( 71 57 )
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 56 70 )->[71]->( 72 128 )
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 71 )->[72]->( 73 116 )
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 72 )->[73]->( 74 )
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 73 129 )->[74]->( 75 58 )
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 57 74 )->[75]->( 76 130 )
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 75 )->[76]->( 77 115 )
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 76 )->[77]->( 78 )
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 77 131 )->[78]->( 79 59 )
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 58 78 )->[79]->( 80 132 )
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 79 )->[80]->( 81 95 )
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 80 )->[81]->( 82 )
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 81 133 )->[82]->( 83 60 )
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 59 82 )->[83]->( 84 134 )
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 83 )->[84]->( 85 86 )
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 84 )->[85]->( 86 )
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 21 [xmm0]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 84 85 )->[86]->( 87 )
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 86 135 )->[87]->( 60 )
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 14 )->[88]->( 89 152(EH) )
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 5 [di] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 88 )->[89]->( 90 151 )
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 89 )->[90]->( 91 146 )
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 90 )->[91]->( 92 147 )
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 91 )->[92]->( 93 )
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 2 [cx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 147 92 151 )->[93]->( 21 94 )
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 41 [r12]
;; lr  def 	 5 [di] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 93 )->[94]->( 22 )
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	

( 80 )->[95]->( 60 )
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 64 )->[96]->( 97 140 )
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 96 )->[97]->( 98 106 )
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 97 )->[98]->( 99 )
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 21 [xmm0]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 98 141 )->[99]->( 100 66 )
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 65 99 )->[100]->( 101 138 )
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 100 )->[101]->( 102 103 )
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 101 )->[102]->( 103 )
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 21 [xmm0]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 101 102 )->[103]->( 104 )
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 103 139 )->[104]->( 105 118 )
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 104 )->[105]->( 66 )
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 97 )->[106]->( 66 )
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 63 )->[107]->( 108 142 )
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 107 )->[108]->( 109 119 )
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 108 )->[109]->( 110 )
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 21 [xmm0]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 109 143 )->[110]->( 64 )
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 27 53 )->[111]->( 112 )
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp] 44 [r15]
;; live  out 	 7 [sp] 44 [r15]

( 60 54 111 )->[112]->( 113 114 )
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 5 [di] 7 [sp] 44 [r15]
;; live  out 	 5 [di] 7 [sp] 44 [r15]

( 112 )->[113]->( 114 )
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp] 44 [r15]
;; live  out 	 7 [sp] 44 [r15]

( 112 113 )->[114]->( 1 )
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 76 )->[115]->( 60 )
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 72 )->[116]->( 60 )
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 68 )->[117]->( 60 )
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 104 )->[118]->( 56 )
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 108 )->[119]->( 66 )
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 48 )->[120]->( 121 163(EH) )
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

( 120 )->[121]->( 50 122 )
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

( 121 )->[122]->( 163(EH) 123 )
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 44 [r15]

( 122 )->[123]->( 50 )
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 44 [r15]

( 32 )->[124]->( 125 174(EH) )
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 124 )->[125]->( 34 126 )
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 125 )->[126]->( 174(EH) 127 )
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]

( 126 )->[127]->( 34 )
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]

( 71 )->[128]->( 129 163(EH) )
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 128 )->[129]->( 74 )
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 75 )->[130]->( 131 163(EH) )
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 130 )->[131]->( 78 )
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 79 )->[132]->( 133 163(EH) )
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 132 )->[133]->( 82 )
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 83 )->[134]->( 135 163(EH) )
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 134 )->[135]->( 87 )
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	

( 67 )->[136]->( 137 163(EH) )
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 136 )->[137]->( 70 )
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 100 )->[138]->( 139 163(EH) )
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 138 )->[139]->( 104 )
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 96 )->[140]->( 141 163(EH) )
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 140 )->[141]->( 99 )
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 107 )->[142]->( 143 163(EH) )
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 142 )->[143]->( 110 )
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 13 )->[144]->( 152(EH) 145 )
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 144 )->[145]->( 22 )
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	

( 90 )->[146]->( 147 )
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 91 146 )->[147]->( 93 )
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 17 )->[148]->( 149 )
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 18 148 )->[149]->( 20 )
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 16 )->[150]->( 20 )
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 89 )->[151]->( 93 )
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 88(EH) 15(EH) 144(EH) )->[152]->( 153 )
;; bb 152 artificial_defs: { d167(0){ }d373(1){ }}
;; bb 152 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 44 [r15]

( 152 170 )->[153]->( 154 155 )
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 7 [sp] 44 [r15]

( 172 153 )->[154]->( 155 )
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

( 154 163 153 173 )->[155]->( 156 )
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 155 164 165 161 167 )->[156]->( 157 )
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 156 168 169 )->[157]->( )
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 10(EH) )->[158]->( 159 160 )
;; bb 158 artificial_defs: { d191(0){ }d396(1){ }}
;; bb 158 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

( 158 )->[159]->( 160 )
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

( 158 159 )->[160]->( 161 )
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

( 160 162 )->[161]->( 156 )
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 9(EH) )->[162]->( 161 )
;; bb 162 artificial_defs: { d185(0){ }d393(1){ }}
;; bb 162 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

( 11(EH) 12(EH) 25(EH) 26(EH) 28(EH) 40(EH) 41(EH) 42(EH) 43(EH) 44(EH) 45(EH) 46(EH) 166(EH) 120(EH) 122(EH) 50(EH) 51(EH) 52(EH) 142(EH) 140(EH) 138(EH) 136(EH) 128(EH) 130(EH) 132(EH) 134(EH) )->[163]->( 155 )
;; bb 163 artificial_defs: { d35(0){ }d225(1){ }}
;; bb 163 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

( 6(EH) )->[164]->( 165 156 )
;; bb 164 artificial_defs: { d43(0){ }d233(1){ }}
;; bb 164 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

( 164 )->[165]->( 156 )
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 47 )->[166]->( 163(EH) )
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 7 [sp] 44 [r15]

( 5(EH) )->[167]->( 156 )
;; bb 167 artificial_defs: { d33(0){ }d223(1){ }}
;; bb 167 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 2(EH) )->[168]->( 169 157 )
;; bb 168 artificial_defs: { d46(0){ }d236(1){ }}
;; bb 168 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

( 168 )->[169]->( 157 )
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 22(EH) )->[170]->( 153 )
;; bb 170 artificial_defs: { d41(0){ }d231(1){ }}
;; bb 170 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 44 [r15]

( 29(EH) )->[171]->( 172 )
;; bb 171 artificial_defs: { d37(0){ }d227(1){ }}
;; bb 171 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

( 171 174 175 )->[172]->( 154 173 )
;; bb 172 artificial_defs: { }
;; bb 172 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 7 [sp] 44 [r15]

( 172 )->[173]->( 155 )
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 44 [r15]
;; live  out 	

( 30(EH) 176(EH) 124(EH) 126(EH) 34(EH) 35(EH) )->[174]->( 175 172 )
;; bb 174 artificial_defs: { d39(0){ }d229(1){ }}
;; bb 174 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags] 41 [r12]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]

( 174 )->[175]->( 172 )
;; bb 175 artificial_defs: { }
;; bb 175 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

( 31 )->[176]->( 174(EH) )
;; bb 176 artificial_defs: { }
;; bb 176 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]

( 114 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 36 to worklist
  Adding insn 1988 to worklist
  Adding insn 30 to worklist
  Adding insn 25 to worklist
  Adding insn 8 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2037 to worklist
  Adding insn 2036 to worklist
  Adding insn 2035 to worklist
  Adding insn 2034 to worklist
  Adding insn 2033 to worklist
  Adding insn 2032 to worklist
  Adding insn 42 to worklist
  Adding insn 45 to worklist
  Adding insn 55 to worklist
  Adding insn 50 to worklist
  Adding insn 62 to worklist
  Adding insn 68 to worklist
  Adding insn 71 to worklist
  Adding insn 99 to worklist
  Adding insn 96 to worklist
  Adding insn 90 to worklist
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 77 to worklist
  Adding insn 135 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 119 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
  Adding insn 110 to worklist
  Adding insn 109 to worklist
  Adding insn 106 to worklist
  Adding insn 103 to worklist
  Adding insn 186 to worklist
  Adding insn 191 to worklist
  Adding insn 200 to worklist
  Adding insn 197 to worklist
  Adding insn 196 to worklist
  Adding insn 195 to worklist
  Adding insn 204 to worklist
  Adding insn 282 to worklist
  Adding insn 277 to worklist
  Adding insn 289 to worklist
  Adding insn 294 to worklist
  Adding insn 303 to worklist
  Adding insn 301 to worklist
  Adding insn 299 to worklist
  Adding insn 297 to worklist
  Adding insn 306 to worklist
  Adding insn 305 to worklist
  Adding insn 332 to worklist
  Adding insn 327 to worklist
  Adding insn 326 to worklist
  Adding insn 335 to worklist
  Adding insn 373 to worklist
  Adding insn 379 to worklist
  Adding insn 382 to worklist
  Adding insn 392 to worklist
  Adding insn 396 to worklist
  Adding insn 400 to worklist
  Adding insn 413 to worklist
  Adding insn 408 to worklist
  Adding insn 423 to worklist
  Adding insn 431 to worklist
  Adding insn 438 to worklist
  Adding insn 445 to worklist
  Adding insn 472 to worklist
  Adding insn 476 to worklist
  Adding insn 482 to worklist
  Adding insn 485 to worklist
  Adding insn 492 to worklist
  Adding insn 495 to worklist
  Adding insn 503 to worklist
  Adding insn 1943 to worklist
  Adding insn 508 to worklist
  Adding insn 514 to worklist
  Adding insn 518 to worklist
  Adding insn 524 to worklist
  Adding insn 528 to worklist
  Adding insn 534 to worklist
  Adding insn 540 to worklist
  Adding insn 547 to worklist
  Adding insn 574 to worklist
  Adding insn 578 to worklist
  Adding insn 582 to worklist
  Adding insn 587 to worklist
  Adding insn 1991 to worklist
  Adding insn 596 to worklist
  Adding insn 2205 to worklist
  Adding insn 1947 to worklist
  Adding insn 1072 to worklist
  Adding insn 1169 to worklist
  Adding insn 1266 to worklist
  Adding insn 1363 to worklist
  Adding insn 1455 to worklist
  Adding insn 659 to worklist
  Adding insn 652 to worklist
  Adding insn 650 to worklist
  Adding insn 648 to worklist
  Adding insn 646 to worklist
  Adding insn 644 to worklist
  Adding insn 642 to worklist
  Adding insn 640 to worklist
  Adding insn 638 to worklist
  Adding insn 636 to worklist
  Adding insn 634 to worklist
  Adding insn 632 to worklist
  Adding insn 630 to worklist
  Adding insn 628 to worklist
  Adding insn 626 to worklist
  Adding insn 624 to worklist
  Adding insn 622 to worklist
  Adding insn 620 to worklist
  Adding insn 618 to worklist
  Adding insn 616 to worklist
  Adding insn 614 to worklist
  Adding insn 612 to worklist
  Adding insn 610 to worklist
  Adding insn 608 to worklist
  Adding insn 606 to worklist
  Adding insn 663 to worklist
  Adding insn 1624 to worklist
  Adding insn 769 to worklist
  Adding insn 872 to worklist
  Adding insn 975 to worklist
  Adding insn 979 to worklist
  Adding insn 982 to worklist
  Adding insn 1048 to worklist
  Adding insn 1045 to worklist
  Adding insn 1043 to worklist
  Adding insn 1041 to worklist
  Adding insn 1039 to worklist
  Adding insn 1037 to worklist
  Adding insn 1035 to worklist
  Adding insn 1033 to worklist
  Adding insn 1031 to worklist
  Adding insn 1029 to worklist
  Adding insn 1027 to worklist
  Adding insn 1025 to worklist
  Adding insn 1023 to worklist
  Adding insn 1021 to worklist
  Adding insn 1019 to worklist
  Adding insn 1017 to worklist
  Adding insn 1015 to worklist
  Adding insn 1013 to worklist
  Adding insn 1011 to worklist
  Adding insn 1009 to worklist
  Adding insn 1007 to worklist
  Adding insn 1005 to worklist
  Adding insn 1003 to worklist
  Adding insn 1001 to worklist
  Adding insn 999 to worklist
  Adding insn 2184 to worklist
  Adding insn 1068 to worklist
  Adding insn 1076 to worklist
  Adding insn 1079 to worklist
  Adding insn 1145 to worklist
  Adding insn 1142 to worklist
  Adding insn 1140 to worklist
  Adding insn 1138 to worklist
  Adding insn 1136 to worklist
  Adding insn 1134 to worklist
  Adding insn 1132 to worklist
  Adding insn 1130 to worklist
  Adding insn 1128 to worklist
  Adding insn 1126 to worklist
  Adding insn 1124 to worklist
  Adding insn 1122 to worklist
  Adding insn 1120 to worklist
  Adding insn 1118 to worklist
  Adding insn 1116 to worklist
  Adding insn 1114 to worklist
  Adding insn 1112 to worklist
  Adding insn 1110 to worklist
  Adding insn 1108 to worklist
  Adding insn 1106 to worklist
  Adding insn 1104 to worklist
  Adding insn 1102 to worklist
  Adding insn 1100 to worklist
  Adding insn 1098 to worklist
  Adding insn 1096 to worklist
  Adding insn 2188 to worklist
  Adding insn 1165 to worklist
  Adding insn 1173 to worklist
  Adding insn 1176 to worklist
  Adding insn 1242 to worklist
  Adding insn 1239 to worklist
  Adding insn 1237 to worklist
  Adding insn 1235 to worklist
  Adding insn 1233 to worklist
  Adding insn 1231 to worklist
  Adding insn 1229 to worklist
  Adding insn 1227 to worklist
  Adding insn 1225 to worklist
  Adding insn 1223 to worklist
  Adding insn 1221 to worklist
  Adding insn 1219 to worklist
  Adding insn 1217 to worklist
  Adding insn 1215 to worklist
  Adding insn 1213 to worklist
  Adding insn 1211 to worklist
  Adding insn 1209 to worklist
  Adding insn 1207 to worklist
  Adding insn 1205 to worklist
  Adding insn 1203 to worklist
  Adding insn 1201 to worklist
  Adding insn 1199 to worklist
  Adding insn 1197 to worklist
  Adding insn 1195 to worklist
  Adding insn 1193 to worklist
  Adding insn 2192 to worklist
  Adding insn 1262 to worklist
  Adding insn 1270 to worklist
  Adding insn 1273 to worklist
  Adding insn 1339 to worklist
  Adding insn 1336 to worklist
  Adding insn 1334 to worklist
  Adding insn 1332 to worklist
  Adding insn 1330 to worklist
  Adding insn 1328 to worklist
  Adding insn 1326 to worklist
  Adding insn 1324 to worklist
  Adding insn 1322 to worklist
  Adding insn 1320 to worklist
  Adding insn 1318 to worklist
  Adding insn 1316 to worklist
  Adding insn 1314 to worklist
  Adding insn 1312 to worklist
  Adding insn 1310 to worklist
  Adding insn 1308 to worklist
  Adding insn 1306 to worklist
  Adding insn 1304 to worklist
  Adding insn 1302 to worklist
  Adding insn 1300 to worklist
  Adding insn 1298 to worklist
  Adding insn 1296 to worklist
  Adding insn 1294 to worklist
  Adding insn 1292 to worklist
  Adding insn 1290 to worklist
  Adding insn 2196 to worklist
  Adding insn 1359 to worklist
  Adding insn 1367 to worklist
  Adding insn 1370 to worklist
  Adding insn 1420 to worklist
  Adding insn 1418 to worklist
  Adding insn 1416 to worklist
  Adding insn 1414 to worklist
  Adding insn 1412 to worklist
  Adding insn 1410 to worklist
  Adding insn 1408 to worklist
  Adding insn 1406 to worklist
  Adding insn 1404 to worklist
  Adding insn 1402 to worklist
  Adding insn 1400 to worklist
  Adding insn 1398 to worklist
  Adding insn 1396 to worklist
  Adding insn 1394 to worklist
  Adding insn 1392 to worklist
  Adding insn 1390 to worklist
  Adding insn 1388 to worklist
  Adding insn 1386 to worklist
  Adding insn 1384 to worklist
  Adding insn 1382 to worklist
  Adding insn 1380 to worklist
  Adding insn 1378 to worklist
  Adding insn 1376 to worklist
  Adding insn 1374 to worklist
  Adding insn 1424 to worklist
  Adding insn 2218 to worklist
  Adding insn 1442 to worklist
  Adding insn 214 to worklist
  Adding insn 209 to worklist
  Adding insn 221 to worklist
  Adding insn 226 to worklist
  Adding insn 235 to worklist
  Adding insn 233 to worklist
  Adding insn 231 to worklist
  Adding insn 229 to worklist
  Adding insn 238 to worklist
  Adding insn 237 to worklist
  Adding insn 264 to worklist
  Adding insn 259 to worklist
  Adding insn 258 to worklist
  Adding insn 2221 to worklist
  Adding insn 2223 to worklist
  Adding insn 1283 to worklist
  Adding insn 1275 to worklist
  Adding insn 773 to worklist
  Adding insn 776 to worklist
  Adding insn 845 to worklist
  Adding insn 839 to worklist
  Adding insn 837 to worklist
  Adding insn 835 to worklist
  Adding insn 833 to worklist
  Adding insn 831 to worklist
  Adding insn 829 to worklist
  Adding insn 827 to worklist
  Adding insn 825 to worklist
  Adding insn 823 to worklist
  Adding insn 821 to worklist
  Adding insn 819 to worklist
  Adding insn 817 to worklist
  Adding insn 815 to worklist
  Adding insn 813 to worklist
  Adding insn 811 to worklist
  Adding insn 809 to worklist
  Adding insn 807 to worklist
  Adding insn 805 to worklist
  Adding insn 803 to worklist
  Adding insn 801 to worklist
  Adding insn 799 to worklist
  Adding insn 797 to worklist
  Adding insn 795 to worklist
  Adding insn 793 to worklist
  Adding insn 2200 to worklist
  Adding insn 868 to worklist
  Adding insn 876 to worklist
  Adding insn 879 to worklist
  Adding insn 929 to worklist
  Adding insn 927 to worklist
  Adding insn 925 to worklist
  Adding insn 923 to worklist
  Adding insn 921 to worklist
  Adding insn 919 to worklist
  Adding insn 917 to worklist
  Adding insn 915 to worklist
  Adding insn 913 to worklist
  Adding insn 911 to worklist
  Adding insn 909 to worklist
  Adding insn 907 to worklist
  Adding insn 905 to worklist
  Adding insn 903 to worklist
  Adding insn 901 to worklist
  Adding insn 899 to worklist
  Adding insn 897 to worklist
  Adding insn 895 to worklist
  Adding insn 893 to worklist
  Adding insn 891 to worklist
  Adding insn 889 to worklist
  Adding insn 887 to worklist
  Adding insn 885 to worklist
  Adding insn 883 to worklist
  Adding insn 934 to worklist
  Adding insn 948 to worklist
  Adding insn 2226 to worklist
  Adding insn 957 to worklist
  Adding insn 2228 to worklist
  Adding insn 786 to worklist
  Adding insn 778 to worklist
  Adding insn 671 to worklist
  Adding insn 674 to worklist
  Adding insn 743 to worklist
  Adding insn 737 to worklist
  Adding insn 735 to worklist
  Adding insn 733 to worklist
  Adding insn 731 to worklist
  Adding insn 729 to worklist
  Adding insn 727 to worklist
  Adding insn 725 to worklist
  Adding insn 723 to worklist
  Adding insn 721 to worklist
  Adding insn 719 to worklist
  Adding insn 717 to worklist
  Adding insn 715 to worklist
  Adding insn 713 to worklist
  Adding insn 711 to worklist
  Adding insn 709 to worklist
  Adding insn 707 to worklist
  Adding insn 705 to worklist
  Adding insn 703 to worklist
  Adding insn 701 to worklist
  Adding insn 699 to worklist
  Adding insn 697 to worklist
  Adding insn 695 to worklist
  Adding insn 693 to worklist
  Adding insn 691 to worklist
  Adding insn 2231 to worklist
  Adding insn 766 to worklist
  Adding insn 20 to worklist
  Adding insn 1475 to worklist
  Adding insn 1470 to worklist
  Adding insn 1467 to worklist
  Adding insn 1464 to worklist
  Adding insn 1478 to worklist
  Adding insn 2050 to worklist
  Adding insn 1631 to worklist
  Adding insn 1504 to worklist
  Adding insn 1501 to worklist
  Adding insn 1497 to worklist
  Adding insn 1494 to worklist
  Adding insn 1490 to worklist
  Adding insn 1487 to worklist
  Adding insn 1483 to worklist
  Adding insn 2233 to worklist
  Adding insn 1186 to worklist
  Adding insn 1178 to worklist
  Adding insn 2235 to worklist
  Adding insn 1089 to worklist
  Adding insn 1081 to worklist
  Adding insn 2237 to worklist
  Adding insn 992 to worklist
  Adding insn 984 to worklist
  Adding insn 2239 to worklist
  Adding insn 969 to worklist
  Adding insn 2241 to worklist
  Adding insn 684 to worklist
  Adding insn 676 to worklist
  Adding insn 555 to worklist
  Adding insn 562 to worklist
  Adding insn 566 to worklist
  Adding insn 2243 to worklist
  Adding insn 453 to worklist
  Adding insn 460 to worklist
  Adding insn 464 to worklist
  Adding insn 2245 to worklist
  Adding insn 1153 to worklist
  Adding insn 2247 to worklist
  Adding insn 1250 to worklist
  Adding insn 2249 to worklist
  Adding insn 1347 to worklist
  Adding insn 2251 to worklist
  Adding insn 1432 to worklist
  Adding insn 2254 to worklist
  Adding insn 1056 to worklist
  Adding insn 2256 to worklist
  Adding insn 942 to worklist
  Adding insn 2258 to worklist
  Adding insn 853 to worklist
  Adding insn 2260 to worklist
  Adding insn 751 to worklist
  Adding insn 2262 to worklist
  Adding insn 347 to worklist
  Adding insn 2265 to worklist
  Adding insn 1605 to worklist
  Adding insn 1603 to worklist
  Adding insn 1601 to worklist
  Adding insn 2267 to worklist
  Adding insn 245 to worklist
  Adding insn 1614 to worklist
  Adding insn 1612 to worklist
  Adding insn 1610 to worklist
  Adding insn 2269 to worklist
  Adding insn 313 to worklist
  Adding insn 2271 to worklist
  Adding insn 322 to worklist
  Adding insn 2273 to worklist
  Adding insn 254 to worklist
  Adding insn 1545 to worklist
  Adding insn 1578 to worklist
  Adding insn 1587 to worklist
  Adding insn 1594 to worklist
  Adding insn 1597 to worklist
  Adding insn 147 to worklist
  Adding insn 142 to worklist
  Adding insn 150 to worklist
  Adding insn 164 to worklist
  Adding insn 162 to worklist
  Adding insn 159 to worklist
  Adding insn 155 to worklist
  Adding insn 2275 to worklist
  Adding insn 175 to worklist
  Adding insn 171 to worklist
  Adding insn 2277 to worklist
  Adding insn 2279 to worklist
  Adding insn 1529 to worklist
  Adding insn 2281 to worklist
  Adding insn 1532 to worklist
  Adding insn 542 to worklist
  Adding insn 2283 to worklist
  Adding insn 1513 to worklist
  Adding insn 2285 to worklist
  Adding insn 1516 to worklist
  Adding insn 2287 to worklist
  Adding insn 1575 to worklist
  Adding insn 2290 to worklist
  Adding insn 1561 to worklist
  Adding insn 2292 to worklist
  Adding insn 1564 to worklist
  Adding insn 440 to worklist
Finished finding needed instructions:
processing block 157 lr out =  7 [sp]
  Adding insn 1596 to worklist
processing block 169 lr out =  3 [bx] 7 [sp]
processing block 168 lr out =  3 [bx] 5 [di] 7 [sp]
  Adding insn 1512 to worklist
  Adding insn 1999 to worklist
  Adding insn 1509 to worklist
  Adding insn 1656 to worklist
processing block 156 lr out =  3 [bx] 7 [sp]
  Adding insn 1593 to worklist
processing block 165 lr out =  3 [bx] 7 [sp]
processing block 164 lr out =  3 [bx] 5 [di] 7 [sp]
  Adding insn 1528 to worklist
  Adding insn 1527 to worklist
  Adding insn 1525 to worklist
  Adding insn 1659 to worklist
processing block 161 lr out =  3 [bx] 7 [sp]
  Adding insn 2019 to worklist
  Adding insn 2172 to worklist
  Adding insn 1940 to worklist
processing block 160 lr out =  3 [bx] 7 [sp] 44 [r15]
  Adding insn 163 to worklist
  Adding insn 2020 to worklist
  Adding insn 2173 to worklist
  Adding insn 1939 to worklist
processing block 159 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
processing block 158 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
  Adding insn 146 to worklist
  Adding insn 2021 to worklist
  Adding insn 143 to worklist
  Adding insn 2174 to worklist
  Adding insn 1938 to worklist
  Adding insn 1695 to worklist
processing block 155 lr out =  3 [bx] 7 [sp]
  Adding insn 1586 to worklist
processing block 163 lr out =  3 [bx] 7 [sp] 44 [r15]
  Adding insn 1669 to worklist
processing block 154 lr out =  3 [bx] 7 [sp] 44 [r15]
processing block 153 lr out =  3 [bx] 5 [di] 7 [sp] 44 [r15]
  Adding insn 1544 to worklist
  Adding insn 1543 to worklist
  Adding insn 1541 to worklist
  Adding insn 1675 to worklist
processing block 170 lr out =  0 [ax] 6 [bp] 7 [sp] 44 [r15]
processing block 114 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2049 to worklist
  Adding insn 2048 to worklist
  Adding insn 2047 to worklist
  Adding insn 2046 to worklist
  Adding insn 2045 to worklist
  Adding insn 2044 to worklist
  Adding insn 2043 to worklist
  Adding insn 1630 to worklist
  Adding insn 1503 to worklist
  Adding insn 1998 to worklist
  Adding insn 2165 to worklist
  Adding insn 1983 to worklist
  Adding insn 1493 to worklist
  Adding insn 1982 to worklist
  Adding insn 1491 to worklist
  Adding insn 1489 to worklist
  Adding insn 1981 to worklist
  Adding insn 1997 to worklist
  Adding insn 2164 to worklist
  Adding insn 1980 to worklist
processing block 113 lr out =  7 [sp] 44 [r15]
processing block 112 lr out =  5 [di] 7 [sp] 44 [r15]
  Adding insn 1474 to worklist
  Adding insn 2000 to worklist
  Adding insn 1471 to worklist
  Adding insn 2168 to worklist
  Adding insn 1979 to worklist
  Adding insn 2167 to worklist
  Adding insn 1978 to worklist
  Adding insn 2166 to worklist
  Adding insn 1977 to worklist
processing block 111 lr out =  7 [sp] 44 [r15]
processing block 173 lr out =  3 [bx] 7 [sp] 44 [r15]
processing block 172 lr out =  3 [bx] 5 [di] 7 [sp] 44 [r15]
  Adding insn 1574 to worklist
  Adding insn 1573 to worklist
  Adding insn 1571 to worklist
processing block 171 lr out =  3 [bx] 6 [bp] 7 [sp] 44 [r15]
  Adding insn 1679 to worklist
processing block 175 lr out =  3 [bx] 6 [bp] 7 [sp] 44 [r15]
processing block 174 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
  Adding insn 1560 to worklist
  Adding insn 1559 to worklist
  Adding insn 1557 to worklist
  Adding insn 1685 to worklist
processing block 176 lr out =  6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
processing block 166 lr out =  7 [sp] 16 [argp] 44 [r15]
processing block 60 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1454 to worklist
  Adding insn 1453 to worklist
  Adding insn 1451 to worklist
  Adding insn 1450 to worklist
  Adding insn 1975 to worklist
  Adding insn 1447 to worklist
  Adding insn 1446 to worklist
  Adding insn 1445 to worklist
processing block 87 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1435 to worklist
processing block 86 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1423 to worklist
processing block 85 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1419 to worklist
  Adding insn 1417 to worklist
  Adding insn 1415 to worklist
  Adding insn 1413 to worklist
  Adding insn 1411 to worklist
  Adding insn 1409 to worklist
  Adding insn 1407 to worklist
  Adding insn 1405 to worklist
  Adding insn 1403 to worklist
  Adding insn 1401 to worklist
  Adding insn 1399 to worklist
  Adding insn 1397 to worklist
  Adding insn 1395 to worklist
  Adding insn 1393 to worklist
  Adding insn 1391 to worklist
  Adding insn 1389 to worklist
  Adding insn 1387 to worklist
  Adding insn 1385 to worklist
  Adding insn 1383 to worklist
  Adding insn 1381 to worklist
  Adding insn 1379 to worklist
  Adding insn 1377 to worklist
  Adding insn 1375 to worklist
processing block 84 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1369 to worklist
processing block 135 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 134 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1431 to worklist
  Adding insn 1430 to worklist
processing block 83 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1366 to worklist
  Adding insn 1365 to worklist
processing block 82 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2195 to worklist
  Adding insn 1352 to worklist
processing block 81 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1338 to worklist
  Adding insn 1337 to worklist
  Adding insn 1335 to worklist
  Adding insn 1333 to worklist
  Adding insn 1331 to worklist
  Adding insn 1329 to worklist
  Adding insn 1327 to worklist
  Adding insn 1325 to worklist
  Adding insn 1323 to worklist
  Adding insn 1321 to worklist
  Adding insn 1319 to worklist
  Adding insn 1317 to worklist
  Adding insn 1315 to worklist
  Adding insn 1313 to worklist
  Adding insn 1311 to worklist
  Adding insn 1309 to worklist
  Adding insn 1307 to worklist
  Adding insn 1305 to worklist
  Adding insn 1303 to worklist
  Adding insn 1301 to worklist
  Adding insn 1299 to worklist
  Adding insn 1297 to worklist
  Adding insn 1295 to worklist
  Adding insn 1293 to worklist
  Adding insn 1291 to worklist
processing block 95 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1276 to worklist
processing block 80 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1272 to worklist
processing block 133 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1349 to worklist
processing block 132 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1346 to worklist
  Adding insn 1345 to worklist
processing block 79 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1269 to worklist
  Adding insn 1268 to worklist
processing block 59 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1362 to worklist
processing block 78 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2191 to worklist
  Adding insn 1255 to worklist
processing block 77 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1241 to worklist
  Adding insn 1240 to worklist
  Adding insn 1238 to worklist
  Adding insn 1236 to worklist
  Adding insn 1234 to worklist
  Adding insn 1232 to worklist
  Adding insn 1230 to worklist
  Adding insn 1228 to worklist
  Adding insn 1226 to worklist
  Adding insn 1224 to worklist
  Adding insn 1222 to worklist
  Adding insn 1220 to worklist
  Adding insn 1218 to worklist
  Adding insn 1216 to worklist
  Adding insn 1214 to worklist
  Adding insn 1212 to worklist
  Adding insn 1210 to worklist
  Adding insn 1208 to worklist
  Adding insn 1206 to worklist
  Adding insn 1204 to worklist
  Adding insn 1202 to worklist
  Adding insn 1200 to worklist
  Adding insn 1198 to worklist
  Adding insn 1196 to worklist
  Adding insn 1194 to worklist
processing block 115 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1179 to worklist
processing block 76 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1175 to worklist
processing block 131 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1252 to worklist
processing block 130 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1249 to worklist
  Adding insn 1248 to worklist
processing block 75 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1172 to worklist
  Adding insn 1171 to worklist
processing block 58 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1265 to worklist
processing block 74 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2187 to worklist
  Adding insn 1158 to worklist
processing block 73 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1144 to worklist
  Adding insn 1143 to worklist
  Adding insn 1141 to worklist
  Adding insn 1139 to worklist
  Adding insn 1137 to worklist
  Adding insn 1135 to worklist
  Adding insn 1133 to worklist
  Adding insn 1131 to worklist
  Adding insn 1129 to worklist
  Adding insn 1127 to worklist
  Adding insn 1125 to worklist
  Adding insn 1123 to worklist
  Adding insn 1121 to worklist
  Adding insn 1119 to worklist
  Adding insn 1117 to worklist
  Adding insn 1115 to worklist
  Adding insn 1113 to worklist
  Adding insn 1111 to worklist
  Adding insn 1109 to worklist
  Adding insn 1107 to worklist
  Adding insn 1105 to worklist
  Adding insn 1103 to worklist
  Adding insn 1101 to worklist
  Adding insn 1099 to worklist
  Adding insn 1097 to worklist
processing block 116 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1082 to worklist
processing block 72 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1078 to worklist
processing block 129 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1155 to worklist
processing block 128 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1152 to worklist
  Adding insn 1151 to worklist
processing block 71 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1075 to worklist
  Adding insn 1074 to worklist
processing block 57 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1168 to worklist
processing block 70 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2183 to worklist
  Adding insn 1061 to worklist
processing block 69 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1047 to worklist
  Adding insn 1046 to worklist
  Adding insn 1044 to worklist
  Adding insn 1042 to worklist
  Adding insn 1040 to worklist
  Adding insn 1038 to worklist
  Adding insn 1036 to worklist
  Adding insn 1034 to worklist
  Adding insn 1032 to worklist
  Adding insn 1030 to worklist
  Adding insn 1028 to worklist
  Adding insn 1026 to worklist
  Adding insn 1024 to worklist
  Adding insn 1022 to worklist
  Adding insn 1020 to worklist
  Adding insn 1018 to worklist
  Adding insn 1016 to worklist
  Adding insn 1014 to worklist
  Adding insn 1012 to worklist
  Adding insn 1010 to worklist
  Adding insn 1008 to worklist
  Adding insn 1006 to worklist
  Adding insn 1004 to worklist
  Adding insn 1002 to worklist
  Adding insn 1000 to worklist
processing block 117 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 985 to worklist
processing block 68 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 981 to worklist
processing block 137 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1058 to worklist
processing block 136 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1055 to worklist
  Adding insn 1054 to worklist
processing block 67 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 978 to worklist
  Adding insn 977 to worklist
processing block 56 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1071 to worklist
processing block 66 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 974 to worklist
processing block 105 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 950 to worklist
processing block 118 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 962 to worklist
processing block 104 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 947 to worklist
processing block 103 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1974 to worklist
  Adding insn 933 to worklist
processing block 102 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 930 to worklist
  Adding insn 928 to worklist
  Adding insn 926 to worklist
  Adding insn 924 to worklist
  Adding insn 922 to worklist
  Adding insn 920 to worklist
  Adding insn 918 to worklist
  Adding insn 916 to worklist
  Adding insn 914 to worklist
  Adding insn 912 to worklist
  Adding insn 910 to worklist
  Adding insn 908 to worklist
  Adding insn 906 to worklist
  Adding insn 904 to worklist
  Adding insn 902 to worklist
  Adding insn 900 to worklist
  Adding insn 898 to worklist
  Adding insn 896 to worklist
  Adding insn 894 to worklist
  Adding insn 892 to worklist
  Adding insn 890 to worklist
  Adding insn 888 to worklist
  Adding insn 886 to worklist
  Adding insn 884 to worklist
processing block 101 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 878 to worklist
processing block 139 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 944 to worklist
processing block 138 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 941 to worklist
  Adding insn 940 to worklist
processing block 100 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 875 to worklist
  Adding insn 874 to worklist
  Adding insn 1994 to worklist
processing block 99 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2199 to worklist
  Adding insn 861 to worklist
processing block 98 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1967 to worklist
  Adding insn 844 to worklist
  Adding insn 843 to worklist
  Adding insn 842 to worklist
  Adding insn 1965 to worklist
  Adding insn 841 to worklist
  Adding insn 1963 to worklist
  Adding insn 840 to worklist
  Adding insn 838 to worklist
  Adding insn 836 to worklist
  Adding insn 834 to worklist
  Adding insn 832 to worklist
  Adding insn 830 to worklist
  Adding insn 828 to worklist
  Adding insn 826 to worklist
  Adding insn 824 to worklist
  Adding insn 822 to worklist
  Adding insn 820 to worklist
  Adding insn 818 to worklist
  Adding insn 816 to worklist
  Adding insn 814 to worklist
  Adding insn 812 to worklist
  Adding insn 810 to worklist
  Adding insn 808 to worklist
  Adding insn 806 to worklist
  Adding insn 804 to worklist
  Adding insn 802 to worklist
  Adding insn 800 to worklist
  Adding insn 798 to worklist
  Adding insn 796 to worklist
  Adding insn 794 to worklist
processing block 106 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 779 to worklist
processing block 97 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 775 to worklist
processing block 141 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 858 to worklist
  Adding insn 857 to worklist
  Adding insn 1970 to worklist
  Adding insn 856 to worklist
  Adding insn 1968 to worklist
  Adding insn 855 to worklist
processing block 140 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 852 to worklist
  Adding insn 851 to worklist
processing block 96 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 772 to worklist
  Adding insn 771 to worklist
  Adding insn 1993 to worklist
processing block 65 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 871 to worklist
processing block 64 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 768 to worklist
processing block 110 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 759 to worklist
processing block 109 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1955 to worklist
  Adding insn 742 to worklist
  Adding insn 741 to worklist
  Adding insn 740 to worklist
  Adding insn 1953 to worklist
  Adding insn 739 to worklist
  Adding insn 1951 to worklist
  Adding insn 738 to worklist
  Adding insn 736 to worklist
  Adding insn 734 to worklist
  Adding insn 732 to worklist
  Adding insn 730 to worklist
  Adding insn 728 to worklist
  Adding insn 726 to worklist
  Adding insn 724 to worklist
  Adding insn 722 to worklist
  Adding insn 720 to worklist
  Adding insn 718 to worklist
  Adding insn 716 to worklist
  Adding insn 714 to worklist
  Adding insn 712 to worklist
  Adding insn 710 to worklist
  Adding insn 708 to worklist
  Adding insn 706 to worklist
  Adding insn 704 to worklist
  Adding insn 702 to worklist
  Adding insn 700 to worklist
  Adding insn 698 to worklist
  Adding insn 696 to worklist
  Adding insn 694 to worklist
  Adding insn 692 to worklist
processing block 119 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 677 to worklist
processing block 108 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 673 to worklist
processing block 143 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 756 to worklist
  Adding insn 755 to worklist
  Adding insn 1958 to worklist
  Adding insn 754 to worklist
  Adding insn 1956 to worklist
  Adding insn 753 to worklist
processing block 142 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 750 to worklist
  Adding insn 749 to worklist
processing block 107 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 670 to worklist
  Adding insn 669 to worklist
  Adding insn 1992 to worklist
processing block 63 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1623 to worklist
  Adding insn 1621 to worklist
  Adding insn 1620 to worklist
  Adding insn 1986 to worklist
  Adding insn 1619 to worklist
  Adding insn 1984 to worklist
processing block 62 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 662 to worklist
processing block 61 lr out =  1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 658 to worklist
  Adding insn 656 to worklist
  Adding insn 655 to worklist
  Adding insn 654 to worklist
  Adding insn 653 to worklist
  Adding insn 651 to worklist
  Adding insn 649 to worklist
  Adding insn 647 to worklist
  Adding insn 645 to worklist
  Adding insn 643 to worklist
  Adding insn 641 to worklist
  Adding insn 639 to worklist
  Adding insn 637 to worklist
  Adding insn 635 to worklist
  Adding insn 633 to worklist
  Adding insn 631 to worklist
  Adding insn 629 to worklist
  Adding insn 627 to worklist
  Adding insn 625 to worklist
  Adding insn 623 to worklist
  Adding insn 621 to worklist
  Adding insn 619 to worklist
  Adding insn 617 to worklist
  Adding insn 615 to worklist
  Adding insn 613 to worklist
  Adding insn 611 to worklist
  Adding insn 609 to worklist
  Adding insn 607 to worklist
  Adding insn 603 to worklist
processing block 55 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2001 to worklist
  Adding insn 605 to worklist
  Adding insn 1780 to worklist
  Adding insn 2170 to worklist
  Adding insn 2169 to worklist
processing block 54 lr out =  0 [ax] 3 [bx] 7 [sp] 16 [argp] 43 [r14] 44 [r15]
  Adding insn 595 to worklist
  Adding insn 594 to worklist
  Adding insn 593 to worklist
  Adding insn 592 to worklist
  Adding insn 591 to worklist
  Adding insn 1945 to worklist
  Adding insn 589 to worklist
processing block 53 lr out =  3 [bx] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 586 to worklist
processing block 52 lr out =  0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 581 to worklist
processing block 51 lr out =  3 [bx] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 577 to worklist
processing block 50 lr out =  0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 573 to worklist
processing block 49 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 549 to worklist
processing block 123 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 569 to worklist
processing block 122 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 565 to worklist
processing block 121 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
  Adding insn 561 to worklist
  Adding insn 17 to worklist
  Adding insn 558 to worklist
  Adding insn 557 to worklist
processing block 120 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
  Adding insn 554 to worklist
processing block 48 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
  Adding insn 546 to worklist
processing block 47 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
  Adding insn 539 to worklist
  Adding insn 538 to worklist
  Adding insn 537 to worklist
  Adding insn 536 to worklist
processing block 46 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 533 to worklist
  Adding insn 532 to worklist
  Adding insn 531 to worklist
  Adding insn 529 to worklist
processing block 45 lr out =  0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 527 to worklist
  Adding insn 526 to worklist
processing block 44 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 523 to worklist
  Adding insn 522 to worklist
  Adding insn 521 to worklist
  Adding insn 519 to worklist
processing block 43 lr out =  0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 517 to worklist
  Adding insn 516 to worklist
processing block 42 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 513 to worklist
  Adding insn 512 to worklist
  Adding insn 511 to worklist
  Adding insn 509 to worklist
processing block 41 lr out =  0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 507 to worklist
  Adding insn 505 to worklist
processing block 40 lr out =  3 [bx] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 502 to worklist
  Adding insn 500 to worklist
  Adding insn 499 to worklist
  Adding insn 498 to worklist
  Adding insn 1942 to worklist
processing block 39 lr out =  3 [bx] 7 [sp] 16 [argp] 44 [r15]
processing block 38 lr out =  3 [bx] 5 [di] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 491 to worklist
  Adding insn 490 to worklist
  Adding insn 488 to worklist
processing block 37 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
processing block 36 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 481 to worklist
  Adding insn 480 to worklist
  Adding insn 478 to worklist
processing block 35 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
  Adding insn 475 to worklist
processing block 34 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
  Adding insn 471 to worklist
processing block 33 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 447 to worklist
processing block 127 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 467 to worklist
processing block 126 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 463 to worklist
processing block 125 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 459 to worklist
  Adding insn 16 to worklist
  Adding insn 456 to worklist
  Adding insn 455 to worklist
processing block 124 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 452 to worklist
processing block 32 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 444 to worklist
processing block 31 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 437 to worklist
  Adding insn 436 to worklist
  Adding insn 435 to worklist
  Adding insn 434 to worklist
  Adding insn 432 to worklist
processing block 30 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
  Adding insn 430 to worklist
  Adding insn 428 to worklist
  Adding insn 427 to worklist
processing block 29 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
  Adding insn 422 to worklist
  Adding insn 420 to worklist
  Adding insn 419 to worklist
  Adding insn 2003 to worklist
  Adding insn 1941 to worklist
  Adding insn 2002 to worklist
processing block 28 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 412 to worklist
  Adding insn 411 to worklist
  Adding insn 410 to worklist
  Adding insn 2005 to worklist
  Adding insn 2004 to worklist
processing block 27 lr out =  3 [bx] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 399 to worklist
processing block 26 lr out =  0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
  Adding insn 395 to worklist
processing block 25 lr out =  3 [bx] 7 [sp] 16 [argp] 43 [r14] 44 [r15]
  Adding insn 391 to worklist
  Adding insn 1989 to worklist
  Adding insn 390 to worklist
  Adding insn 389 to worklist
  Adding insn 388 to worklist
  Adding insn 387 to worklist
  Adding insn 386 to worklist
processing block 24 lr out =  3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 23 lr out =  3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 378 to worklist
  Adding insn 377 to worklist
  Adding insn 375 to worklist
processing block 22 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 372 to worklist
  Adding insn 371 to worklist
  Adding insn 370 to worklist
processing block 21 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 94 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 93 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 263 to worklist
  Adding insn 262 to worklist
  Adding insn 260 to worklist
processing block 92 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 147 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2012 to worklist
processing block 91 lr out =  0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 234 to worklist
  Adding insn 232 to worklist
  Adding insn 230 to worklist
  Adding insn 228 to worklist
processing block 146 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1604 to worklist
  Adding insn 1602 to worklist
processing block 90 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 225 to worklist
  Adding insn 2013 to worklist
processing block 151 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 255 to worklist
  Adding insn 253 to worklist
  Adding insn 252 to worklist
processing block 89 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 220 to worklist
  Adding insn 2014 to worklist
  Adding insn 217 to worklist
  Adding insn 216 to worklist
processing block 152 lr out =  0 [ax] 6 [bp] 7 [sp] 44 [r15]
processing block 88 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 213 to worklist
  Adding insn 212 to worklist
  Adding insn 211 to worklist
  Adding insn 2016 to worklist
  Adding insn 2015 to worklist
processing block 20 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 331 to worklist
  Adding insn 330 to worklist
  Adding insn 328 to worklist
processing block 19 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 149 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2007 to worklist
processing block 18 lr out =  0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 302 to worklist
  Adding insn 300 to worklist
  Adding insn 298 to worklist
  Adding insn 296 to worklist
processing block 148 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1613 to worklist
  Adding insn 1611 to worklist
processing block 17 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 293 to worklist
  Adding insn 2008 to worklist
processing block 150 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 323 to worklist
  Adding insn 321 to worklist
  Adding insn 320 to worklist
processing block 16 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 288 to worklist
  Adding insn 2009 to worklist
  Adding insn 285 to worklist
  Adding insn 284 to worklist
processing block 15 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 281 to worklist
  Adding insn 280 to worklist
  Adding insn 2011 to worklist
  Adding insn 2010 to worklist
processing block 14 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 203 to worklist
  Adding insn 202 to worklist
processing block 145 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 144 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 346 to worklist
  Adding insn 2006 to worklist
processing block 13 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 199 to worklist
  Adding insn 198 to worklist
  Adding insn 2018 to worklist
  Adding insn 2017 to worklist
processing block 12 lr out =  3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 190 to worklist
  Adding insn 2171 to worklist
processing block 11 lr out =  3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 185 to worklist
  Adding insn 184 to worklist
  Adding insn 183 to worklist
processing block 10 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2025 to worklist
  Adding insn 2024 to worklist
  Adding insn 2023 to worklist
  Adding insn 2178 to worklist
  Adding insn 1937 to worklist
  Adding insn 2022 to worklist
  Adding insn 2177 to worklist
  Adding insn 1936 to worklist
  Adding insn 2176 to worklist
  Adding insn 1935 to worklist
  Adding insn 2175 to worklist
  Adding insn 1934 to worklist
processing block 162 lr out =  3 [bx] 7 [sp] 44 [r15]
  Adding insn 1689 to worklist
processing block 9 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2180 to worklist
  Adding insn 95 to worklist
  Adding insn 93 to worklist
  Adding insn 1931 to worklist
  Adding insn 89 to worklist
  Adding insn 1930 to worklist
  Adding insn 2179 to worklist
  Adding insn 1929 to worklist
  Adding insn 2026 to worklist
processing block 8 lr out =  3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 7 lr out =  3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 64 to worklist
processing block 6 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
processing block 167 lr out =  3 [bx] 7 [sp]
  Adding insn 1663 to worklist
processing block 5 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 2027 to worklist
  Adding insn 48 to worklist
processing block 4 lr out =  3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
processing block 3 lr out =  3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 41 to worklist
  Adding insn 2028 to worklist
  Adding insn 38 to worklist
processing block 2 lr out =  3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 2181 to worklist
  Adding insn 2031 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 2030 to worklist
  Adding insn 2029 to worklist
  Adding insn 9 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 2038 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 177 n_edges 279 count 178 (    1)
;;   ======================================================
;;   -- basic block 2 from 2032 to 36 -- after reload
;;   ======================================================

;;	  0--> b  0: i2032 [--sp]=r15                              :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i2033 [--sp]=r14                              :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i   7 r14=r8                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i2034 [--sp]=r13                              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i2035 [--sp]=r12                              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i   6 r13=cx                                  :athlon-direct,athlon-ieu
;;	  2--> b  0: i2036 [--sp]=bp                               :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i2037 [--sp]=bx                               :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i2038 {sp=sp-0x47be8;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  5--> b  0: i2029 r15=sp+0x170                            :athlon-direct,athlon-agu,nothing
;;	  5--> b  0: i   4 [sp+0x20]=si                            :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i   5 [sp+0x28]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i  28 si=`*.LC23'                             :athlon-direct,athlon-agu,nothing
;;	  6--> b  0: i  27 dx=const(`*.LC23'+0x17)                 :athlon-direct,athlon-agu,nothing
;;	  6--> b  0: i   3 [sp+0x1c]=di                            :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i2030 ax=r15+0x10                             :athlon-direct,athlon-agu,nothing
;;	  7--> b  0: i  29 di=r15                                  :athlon-direct,athlon-ieu
;;	  7--> b  0: i   8 [sp+0x8]=r9                             :athlon-direct,athlon-agu,athlon-store
;;	  8--> b  0: i   9 bx=[sp+0x47c20]                         :athlon-direct,athlon-load
;;	  9--> b  0: i  25 [sp+0x170]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	 10--> b  0: i  30 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	 11--> b  0: i2031 ax=sp+0x2f0                             :athlon-direct,athlon-agu,nothing
;;	 11--> b  0: i2181 {dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	 11--> b  0: i  34 si=r15                                  :athlon-direct,athlon-ieu
;;	 13--> b  0: i  35 di=ax                                   :athlon-direct,athlon-ieu
;;	 13--> b  0: i1988 [sp+0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 14--> b  0: i  36 call [`_ZN7Pythia86PythiaC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 14
;;   new head = 2032
;;   new tail = 36

;;   ======================================================
;;   -- basic block 3 from 38 to 42 -- after reload
;;   ======================================================

;;	  0--> b  0: i  38 di=[sp+0x170]                           :athlon-direct,athlon-load
;;	  0--> b  0: i2028 ax=r15+0x10                             :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i  41 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i  42 pc={(flags==0)?L46:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 38
;;   new tail = 42

;;   ======================================================
;;   -- basic block 4 from 45 to 45 -- after reload
;;   ======================================================

;;	  0--> b  0: i  45 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 45
;;   new tail = 45

;;   ======================================================
;;   -- basic block 5 from 48 to 55 -- after reload
;;   ======================================================

;;	  0--> b  0: i  48 bp=sp+0x30                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i  52 dx=const(`*.LC24'+0x13)                 :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i  53 si=`*.LC24'                             :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i2027 ax=bp+0x10                              :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i  54 di=bp                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i  50 [sp+0x30]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i  55 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 48
;;   new tail = 55

;;   ======================================================
;;   -- basic block 6 from 59 to 62 -- after reload
;;   ======================================================

;;	  0--> b  0: i  61 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i  59 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i  60 si=bp                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i  62 ax=call [`_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 61
;;   new tail = 62

;;   ======================================================
;;   -- basic block 7 from 64 to 68 -- after reload
;;   ======================================================

;;	  0--> b  0: i  64 di=[sp+0x30]                            :athlon-direct,athlon-load
;;	  0--> b  0: i  66 {bp=bp+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  3--> b  0: i  67 flags=cmp(di,bp)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i  68 pc={(flags==0)?L72:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 64
;;   new tail = 68

;;   ======================================================
;;   -- basic block 8 from 71 to 71 -- after reload
;;   ======================================================

;;	  0--> b  0: i  71 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 71
;;   new tail = 71

;;   ======================================================
;;   -- basic block 9 from 2026 to 99 -- after reload
;;   ======================================================

;;	  0--> b  0: i2026 di=r15+0x70                             :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i  77 call [`_ZNSt8ios_baseC2Ev']             :athlon-vector,athlon-ieu
;;	  3--> b  0: i1929 ax=[const(unspec[`_ZTVSt9basic_iosIcSt11char_traitsIcEE'] 2)]:athlon-direct,athlon-load
;;	  3--> b  0: i  82 [sp+0x2c0]=0                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1931 di=r15                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i  81 [sp+0x2b8]=0                            :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i  83 [sp+0x2c1]=0                            :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i2180 {si=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i  84 [sp+0x2c8]=0                            :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i  85 [sp+0x2d0]=0                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i2179 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  6--> b  0: i  86 [sp+0x2d8]=0                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i  87 [sp+0x2e0]=0                            :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i  80 [sp+0x1e0]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i1930 ax=[const(unspec[`_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE'] 2)]:athlon-direct,athlon-load
;;	 10--> b  0: i  89 bp=[ax+0x8]                             :athlon-direct,athlon-load
;;	 10--> b  0: i  95 r12=[ax+0x10]                           :athlon-direct,athlon-load
;;	 13--> b  0: i  93 {di=di+[bp-0x18];clobber flags;}        :athlon-direct,athlon-load,athlon-ieu
;;	 13--> b  0: i  90 [sp+0x170]=bp                           :athlon-direct,athlon-agu,athlon-store
;;	 17--> b  0: i  96 [di]=r12                                :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i  99 call [`_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 18
;;   new head = 2026
;;   new tail = 99

;;   ======================================================
;;   -- basic block 10 from 1934 to 135 -- after reload
;;   ======================================================

;;	  0--> b  0: i1934 ax=[const(unspec[`_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE'] 2)]:athlon-direct,athlon-load
;;	  0--> b  0: i2022 di=r15+0x40                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 110 [sp+0x180]=0                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 111 [sp+0x188]=0                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 112 [sp+0x190]=0                            :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 113 [sp+0x198]=0                            :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 114 [sp+0x1a0]=0                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i2175 {ax=ax+0x18;clobber flags;}             :athlon-direct,athlon-ieu
;;	  3--> b  0: i 115 [sp+0x1a8]=0                            :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 103 [sp+0x170]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i1935 ax=[const(unspec[`_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE'] 2)]:athlon-direct,athlon-load
;;	  7--> b  0: i2176 {ax=ax+0x40;clobber flags;}             :athlon-direct,athlon-ieu
;;	  8--> b  0: i 106 [sp+0x1e0]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	  8--> b  0: i1936 ax=[const(unspec[`_ZTVSt15basic_streambufIcSt11char_traitsIcEE'] 2)]:athlon-direct,athlon-load
;;	 11--> b  0: i2177 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	 12--> b  0: i 109 [sp+0x178]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	 13--> b  0: i 119 call [`_ZNSt6localeC1Ev']               :athlon-vector,athlon-ieu
;;	 14--> b  0: i1937 ax=[const(unspec[`_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE'] 2)]:athlon-direct,athlon-load
;;	 14--> b  0: i2024 si=r15+0x8                              :athlon-direct,athlon-agu,nothing
;;	 14--> b  0: i2025 di=r15+0x70                             :athlon-direct,athlon-agu,nothing
;;	 15--> b  0: i 123 [sp+0x1b8]=0x10                         :athlon-direct,athlon-agu,athlon-store
;;	 15--> b  0: i 127 [sp+0x1c8]=0                            :athlon-direct,athlon-agu,athlon-store
;;	 16--> b  0: i 128 [sp+0x1d0]=0                            :athlon-direct,athlon-agu,athlon-store
;;	 17--> b  0: i2178 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	 18--> b  0: i 122 [sp+0x178]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i2023 ax=r15+0x60                             :athlon-direct,athlon-agu,nothing
;;	 20--> b  0: i 126 [sp+0x1c0]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	 21--> b  0: i 135 call [`_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 21
;;   new head = 1934
;;   new tail = 135

;;   ======================================================
;;   -- basic block 11 from 183 to 186 -- after reload
;;   ======================================================

;;	  0--> b  0: i 184 si=`*.LC25'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 183 dx=0xe                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 185 di=r15                                  :athlon-direct,athlon-ieu
;;	  2--> b  0: i 186 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 184
;;   new tail = 186

;;   ======================================================
;;   -- basic block 12 from 2171 to 191 -- after reload
;;   ======================================================

;;	  0--> b  0: i2171 {si=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 190 di=r15                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 191 ax=call [`_ZNSolsEi']                   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2171
;;   new tail = 191

;;   ======================================================
;;   -- basic block 13 from 2017 to 200 -- after reload
;;   ======================================================

;;	  0--> b  0: i2017 bp=sp+0x50                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 196 [sp+0x58]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 197 [sp+0x60]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i2018 ax=bp+0x10                              :athlon-direct,athlon-agu,nothing
;;	  4--> b  0: i 195 [sp+0x50]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 198 ax=[sp+0x1a0]                           :athlon-direct,athlon-load
;;	  7--> b  0: i 199 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  8--> b  0: i 200 pc={(flags==0)?L340:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 2017
;;   new tail = 200

;;   ======================================================
;;   -- basic block 14 from 202 to 204 -- after reload
;;   ======================================================

;;	  0--> b  0: i 202 dx=[sp+0x190]                           :athlon-direct,athlon-load
;;	  3--> b  0: i 203 flags=cmp(ax,dx)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 204 pc={(gtu(flags,0))?L2202:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 202
;;   new tail = 204

;;   ======================================================
;;   -- basic block 15 from 2010 to 282 -- after reload
;;   ======================================================

;;	  0--> b  0: i2010 r12=sp+0xb0                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 280 si=[sp+0x198]                           :athlon-direct,athlon-load
;;	  2--> b  0: i2011 ax=r12+0x10                             :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i 281 di=r12                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 277 [sp+0xb0]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i 282 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.62']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 2010
;;   new tail = 282

;;   ======================================================
;;   -- basic block 16 from 284 to 289 -- after reload
;;   ======================================================

;;	  0--> b  0: i 285 dx=[sp+0xb0]                            :athlon-direct,athlon-load
;;	  0--> b  0: i2009 cx=r12+0x10                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 284 ax=[sp+0x50]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 288 flags=cmp(dx,cx)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 289 pc={(flags==0)?L316:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 285
;;   new tail = 289

;;   ======================================================
;;   -- basic block 17 from 2008 to 294 -- after reload
;;   ======================================================

;;	  0--> b  0: i2008 cx=bp+0x10                              :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i 293 flags=cmp(ax,cx)                        :athlon-direct,athlon-ieu
;;	  3--> b  0: i 294 pc={(flags==0)?L1608:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2008
;;   new tail = 294

;;   ======================================================
;;   -- basic block 18 from 296 to 303 -- after reload
;;   ======================================================

;;	  0--> b  0: i 297 [sp+0x50]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 298 dx=[sp+0xb8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 302 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i 296 cx=[sp+0x60]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 299 [sp+0x58]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 300 dx=[sp+0xc0]                            :athlon-direct,athlon-load
;;	  6--> b  0: i 301 [sp+0x60]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i 303 pc={(flags==0)?L309:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 297
;;   new tail = 303

;;   ======================================================
;;   -- basic block 19 from 305 to 306 -- after reload
;;   ======================================================

;;	  0--> b  0: i 305 [sp+0xb0]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 306 [sp+0xc0]=cx                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 305
;;   new tail = 306

;;   ======================================================
;;   -- basic block 20 from 326 to 332 -- after reload
;;   ======================================================

;;	  0--> b  0: i 326 [sp+0xb8]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 327 [ax]=0                                  :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 330 {r12=r12+0x10;clobber flags;}           :athlon-direct,athlon-ieu
;;	  1--> b  0: i 328 di=[sp+0xb0]                            :athlon-direct,athlon-load
;;	  4--> b  0: i 331 flags=cmp(di,r12)                       :athlon-direct,athlon-ieu
;;	  5--> b  0: i 332 pc={(flags==0)?L366:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 326
;;   new tail = 332

;;   ======================================================
;;   -- basic block 21 from 335 to 335 -- after reload
;;   ======================================================

;;	  0--> b  0: i 335 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 335
;;   new tail = 335

;;   ======================================================
;;   -- basic block 22 from 370 to 373 -- after reload
;;   ======================================================

;;	  0--> b  0: i 372 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 370 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 371 si=bp                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i 373 ax=call [`_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 372
;;   new tail = 373

;;   ======================================================
;;   -- basic block 23 from 375 to 379 -- after reload
;;   ======================================================

;;	  0--> b  0: i 375 di=[sp+0x50]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 377 {bp=bp+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  3--> b  0: i 378 flags=cmp(di,bp)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 379 pc={(flags==0)?L383:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 375
;;   new tail = 379

;;   ======================================================
;;   -- basic block 24 from 382 to 382 -- after reload
;;   ======================================================

;;	  0--> b  0: i 382 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 382
;;   new tail = 382

;;   ======================================================
;;   -- basic block 25 from 386 to 392 -- after reload
;;   ======================================================

;;	  0--> b  0: i 386 r9=r14                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1989 r14=[sp+0x10]                           :athlon-direct,athlon-load
;;	  0--> b  0: i 388 cx=[sp+0x28]                            :athlon-direct,athlon-load
;;	  1--> b  0: i 389 dx=[sp+0x20]                            :athlon-direct,athlon-load
;;	  1--> b  0: i 390 si=[sp+0x1c]                            :athlon-direct,athlon-load
;;	  1--> b  0: i 387 r8=r13                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 391 di=r14                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 392 call [`_Z14pythiaSettingsRN7Pythia86PythiaEiiRKNS_4Vec4Ejj']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 386
;;   new tail = 392

;;   ======================================================
;;   -- basic block 26 from 395 to 396 -- after reload
;;   ======================================================

;;	  0--> b  0: i 395 di=r14                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 396 ax=call [`_ZN7Pythia86Pythia4initEv']   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 395
;;   new tail = 396

;;   ======================================================
;;   -- basic block 27 from 399 to 400 -- after reload
;;   ======================================================

;;	  0--> b  0: i 399 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i 400 pc={(flags==0)?L585:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 399
;;   new tail = 400

;;   ======================================================
;;   -- basic block 28 from 2004 to 413 -- after reload
;;   ======================================================

;;	  0--> b  0: i2004 bp=sp+0x70                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 410 dx=const(`*.LC26'+0xb)                  :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 411 si=`*.LC26'                             :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i2005 ax=bp+0x10                              :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i 412 di=bp                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 408 [sp+0x70]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i 413 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 2004
;;   new tail = 413

;;   ======================================================
;;   -- basic block 29 from 2002 to 423 -- after reload
;;   ======================================================

;;	  0--> b  0: i1941 ax=[sp+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i2002 r12=sp+0x90                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 419 cx=0x1                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 420 dx=bp                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 422 di=r12                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i2003 si=ax+0xa58                             :athlon-direct,athlon-agu,nothing
;;	  5--> b  0: i 423 call [`_ZN7Pythia88Settings6outputENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1941
;;   new tail = 423

;;   ======================================================
;;   -- basic block 30 from 427 to 431 -- after reload
;;   ======================================================

;;	  0--> b  0: i 427 dx=[sp+0x98]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 428 si=[sp+0x90]                            :athlon-direct,athlon-load
;;	  1--> b  0: i 430 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  4--> b  0: i 431 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 427
;;   new tail = 431

;;   ======================================================
;;   -- basic block 31 from 432 to 438 -- after reload
;;   ======================================================

;;	  0--> b  0: i 432 r14=ax                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 434 ax=[ax]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i 435 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i 436 r13=[r14+ax+0xf0]                       :athlon-direct,athlon-load
;;	  9--> b  0: i 437 flags=cmp(r13,0)                        :athlon-direct,athlon-ieu
;;	 10--> b  0: i 438 pc={(flags==0)?L2203:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 432
;;   new tail = 438

;;   ======================================================
;;   -- basic block 32 from 444 to 445 -- after reload
;;   ======================================================

;;	  0--> b  0: i 444 flags=cmp([r13+0x38],0)                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 445 pc={(flags==0)?L450:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 444
;;   new tail = 445

;;   ======================================================
;;   -- basic block 33 from 447 to 447 -- after reload
;;   ======================================================

;;	  0--> b  0: i 447 si=sxn([r13+0x43])                      :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 447
;;   new tail = 447

;;   ======================================================
;;   -- basic block 34 from 471 to 472 -- after reload
;;   ======================================================

;;	  0--> b  0: i 471 di=r14                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 472 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 471
;;   new tail = 472

;;   ======================================================
;;   -- basic block 35 from 475 to 476 -- after reload
;;   ======================================================

;;	  0--> b  0: i 475 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 476 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 475
;;   new tail = 476

;;   ======================================================
;;   -- basic block 36 from 478 to 482 -- after reload
;;   ======================================================

;;	  0--> b  0: i 478 di=[sp+0x90]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 480 {r12=r12+0x10;clobber flags;}           :athlon-direct,athlon-ieu
;;	  3--> b  0: i 481 flags=cmp(di,r12)                       :athlon-direct,athlon-ieu
;;	  4--> b  0: i 482 pc={(flags==0)?L486:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 478
;;   new tail = 482

;;   ======================================================
;;   -- basic block 37 from 485 to 485 -- after reload
;;   ======================================================

;;	  0--> b  0: i 485 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 485
;;   new tail = 485

;;   ======================================================
;;   -- basic block 38 from 488 to 492 -- after reload
;;   ======================================================

;;	  0--> b  0: i 488 di=[sp+0x70]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 490 {bp=bp+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  3--> b  0: i 491 flags=cmp(di,bp)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 492 pc={(flags==0)?L496:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 488
;;   new tail = 492

;;   ======================================================
;;   -- basic block 39 from 495 to 495 -- after reload
;;   ======================================================

;;	  0--> b  0: i 495 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 495
;;   new tail = 495

;;   ======================================================
;;   -- basic block 40 from 1942 to 503 -- after reload
;;   ======================================================

;;	  0--> b  0: i1942 ax=[sp+0x28]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 502 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i 500 si=`*.LC27'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 499 dx=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 498 xmm2=[ax+0x10]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  5--> b  0: i1943 [sp+0x28]=xmm2                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  6--> b  0: i 503 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 1942
;;   new tail = 503

;;   ======================================================
;;   -- basic block 41 from 505 to 508 -- after reload
;;   ======================================================

;;	  0--> b  0: i 505 si=[sp+0x1c]                            :athlon-direct,athlon-load
;;	  1--> b  0: i 507 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  4--> b  0: i 508 ax=call [`_ZNSolsEi']                   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 505
;;   new tail = 508

;;   ======================================================
;;   -- basic block 42 from 509 to 514 -- after reload
;;   ======================================================

;;	  0--> b  0: i 512 si=`*.LC28'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 511 dx=0x4                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 513 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 509 bp=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 514 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 512
;;   new tail = 514

;;   ======================================================
;;   -- basic block 43 from 516 to 518 -- after reload
;;   ======================================================

;;	  0--> b  0: i 516 xmm0=[sp+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i 517 di=bp                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 518 ax=call [`_ZNSo9_M_insertIdEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 516
;;   new tail = 518

;;   ======================================================
;;   -- basic block 44 from 519 to 524 -- after reload
;;   ======================================================

;;	  0--> b  0: i 522 si=`*.LC29'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 521 dx=0x4                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 523 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 519 bp=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 524 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 522
;;   new tail = 524

;;   ======================================================
;;   -- basic block 45 from 526 to 528 -- after reload
;;   ======================================================

;;	  0--> b  0: i 526 si=[sp+0x20]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 527 di=bp                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i 528 ax=call [`_ZNSolsEi']                   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 526
;;   new tail = 528

;;   ======================================================
;;   -- basic block 46 from 529 to 534 -- after reload
;;   ======================================================

;;	  0--> b  0: i 532 si=`*.LC30'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 531 dx=0xb                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 533 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 529 bp=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 534 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 532
;;   new tail = 534

;;   ======================================================
;;   -- basic block 47 from 536 to 540 -- after reload
;;   ======================================================

;;	  0--> b  0: i 536 ax=[bp]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i 537 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i 538 r12=[bp+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i 539 flags=cmp(r12,0)                        :athlon-direct,athlon-ieu
;;	 10--> b  0: i 540 pc={(flags==0)?L2204:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 536
;;   new tail = 540

;;   ======================================================
;;   -- basic block 48 from 546 to 547 -- after reload
;;   ======================================================

;;	  0--> b  0: i 546 flags=cmp([r12+0x38],0)                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 547 pc={(flags==0)?L552:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 546
;;   new tail = 547

;;   ======================================================
;;   -- basic block 49 from 549 to 549 -- after reload
;;   ======================================================

;;	  0--> b  0: i 549 si=sxn([r12+0x43])                      :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 549
;;   new tail = 549

;;   ======================================================
;;   -- basic block 50 from 573 to 574 -- after reload
;;   ======================================================

;;	  0--> b  0: i 573 di=bp                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 574 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 573
;;   new tail = 574

;;   ======================================================
;;   -- basic block 51 from 577 to 578 -- after reload
;;   ======================================================

;;	  0--> b  0: i 577 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 578 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 577
;;   new tail = 578

;;   ======================================================
;;   -- basic block 52 from 581 to 582 -- after reload
;;   ======================================================

;;	  0--> b  0: i 581 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 582 ax=call [`_ZN7Pythia86Pythia4nextEv']   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 581
;;   new tail = 582

;;   ======================================================
;;   -- basic block 53 from 1991 to 587 -- after reload
;;   ======================================================

;;	  0--> b  0: i 586 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  0--> b  0: i1991 [sp+0x1c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 587 pc={(flags==0)?L585:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 586
;;   new tail = 587

;;   ======================================================
;;   -- basic block 54 from 589 to 596 -- after reload
;;   ======================================================

;;	  0--> b  0: i 589 ax=[sp+0x378]                           :athlon-direct,athlon-load
;;	  0--> b  0: i1945 dx=[sp+0x380]                           :athlon-direct,athlon-load
;;	  0--> b  0: i 593 r14=0xcccccccccccccccd                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 591 {dx=dx-ax;clobber flags;}               :athlon-direct,athlon-ieu
;;	  4--> b  0: i 592 {dx=dx>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i 594 {dx=dx*r14;clobber flags;}              :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	  9--> b  0: i 595 flags=cmp(dx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i 596 pc={(flags<=0)?L1460:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 589
;;   new tail = 596

;;   ======================================================
;;   -- basic block 55 from 2169 to 2205 -- after reload
;;   ======================================================

;;	  0--> b  0: i1780 dx=[const(unspec[`_ZTVN7Pythia88ParticleE'] 2)]:athlon-direct,athlon-load
;;	  0--> b  0: i2001 di=sp+0xd0                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2169 {r12=0;clobber flags;}                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i2170 {bp=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1947 [sp+0x20]=di                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 605 r13=dx+0x10                             :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i2205 pc=L1448                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1780
;;   new tail = 2205

;;   ======================================================
;;   -- basic block 56 from 1071 to 1072 -- after reload
;;   ======================================================

;;	  0--> b  0: i1071 flags=cmp(dx,0xdd)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i1072 pc={(flags==0)?L2207:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1071
;;   new tail = 1072

;;   ======================================================
;;   -- basic block 57 from 1168 to 1169 -- after reload
;;   ======================================================

;;	  0--> b  0: i1168 flags=cmp(dx,0xdf)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i1169 pc={(flags==0)?L2208:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1168
;;   new tail = 1169

;;   ======================================================
;;   -- basic block 58 from 1265 to 1266 -- after reload
;;   ======================================================

;;	  0--> b  0: i1265 flags=cmp(dx,0x14b)                     :athlon-direct,athlon-ieu
;;	  1--> b  0: i1266 pc={(flags==0)?L2209:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1265
;;   new tail = 1266

;;   ======================================================
;;   -- basic block 59 from 1362 to 1363 -- after reload
;;   ======================================================

;;	  0--> b  0: i1362 flags=cmp(dx,0x16)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i1363 pc={(flags==0)?L2210:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1362
;;   new tail = 1363

;;   ======================================================
;;   -- basic block 60 from 1445 to 1455 -- after reload
;;   ======================================================

;;	  0--> b  0: i1446 ax=[sp+0x378]                           :athlon-direct,athlon-load
;;	  0--> b  0: i1975 dx=[sp+0x380]                           :athlon-direct,athlon-load
;;	  0--> b  0: i1445 {bp=bp+0x1;clobber flags;}              :athlon-direct,athlon-ieu
;;	  1--> b  0: i1447 {r12=r12+0xa0;clobber flags;}           :athlon-direct,athlon-ieu
;;	  3--> b  0: i1450 {dx=dx-ax;clobber flags;}               :athlon-direct,athlon-ieu
;;	  4--> b  0: i1451 {dx=dx>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i1453 {dx=dx*r14;clobber flags;}              :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	  9--> b  0: i1454 flags=cmp(bp,dx)                        :athlon-direct,athlon-ieu
;;	 10--> b  0: i1455 pc={(flags>=0)?L1460:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 1446
;;   new tail = 1455

;;   ======================================================
;;   -- basic block 61 from 603 to 659 -- after reload
;;   ======================================================

;;	  0--> b  0: i 603 {ax=ax+r12;clobber flags;}              :athlon-direct,athlon-ieu
;;	  0--> b  0: i 606 [sp+0xd0]=r13                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 611 si=[ax+0x10]                            :athlon-direct,athlon-load
;;	  1--> b  0: i 607 dx=[ax+0x8]                             :athlon-direct,athlon-load
;;	  2--> b  0: i 609 cx=[ax+0xc]                             :athlon-direct,athlon-load
;;	  2--> b  0: i 623 xmm0=[ax+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  3--> b  0: i 629 xmm1=[ax+0x40]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  4--> b  0: i 612 [sp+0xe0]=si                            :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 613 si=[ax+0x14]                            :athlon-direct,athlon-load
;;	  5--> b  0: i 608 [sp+0xd8]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i 610 [sp+0xdc]=cx                            :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i 614 [sp+0xe4]=si                            :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i 615 si=[ax+0x18]                            :athlon-direct,athlon-load
;;	 10--> b  0: i 616 [sp+0xe8]=si                            :athlon-direct,athlon-agu,athlon-store
;;	 10--> b  0: i 617 si=[ax+0x1c]                            :athlon-direct,athlon-load
;;	 13--> b  0: i 618 [sp+0xec]=si                            :athlon-direct,athlon-agu,athlon-store
;;	 13--> b  0: i 619 si=[ax+0x20]                            :athlon-direct,athlon-load
;;	 16--> b  0: i 620 [sp+0xf0]=si                            :athlon-direct,athlon-agu,athlon-store
;;	 16--> b  0: i 621 si=[ax+0x24]                            :athlon-direct,athlon-load
;;	 16--> b  0: i 624 [sp+0xf8]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 17--> b  0: i 625 xmm0=[ax+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 19--> b  0: i 626 [sp+0x100]=xmm0                         :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 19--> b  0: i 622 [sp+0xf4]=si                            :athlon-direct,athlon-agu,athlon-store
;;	 19--> b  0: i 637 si=[ax+0x60]                            :athlon-direct,athlon-load,athlon-ieu
;;	 20--> b  0: i 627 xmm0=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 21--> b  0: i 630 [sp+0x110]=xmm1                         :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 22--> b  0: i 631 xmm1=[ax+0x48]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 23--> b  0: i 628 [sp+0x108]=xmm0                         :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 24--> b  0: i 632 [sp+0x118]=xmm1                         :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 25--> b  0: i 633 xmm1=[ax+0x50]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 27--> b  0: i 634 [sp+0x120]=xmm1                         :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 28--> b  0: i 635 xmm1=[ax+0x58]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 30--> b  0: i 636 [sp+0x128]=xmm1                         :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 30--> b  0: i 638 [sp+0x130]=si                           :athlon-direct,athlon-agu,athlon-store
;;	 30--> b  0: i 649 si=[ax+0x90]                            :athlon-direct,athlon-load
;;	 31--> b  0: i 639 xmm1=[ax+0x68]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 32--> b  0: i 653 flags=cmp(xmm0,[`*.LC31'])              :athlon-vector,athlon-fploadk8,athlon-fadd
;;	 33--> b  0: i 640 [sp+0x138]=xmm1                         :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 34--> b  0: i 641 xmm1=[ax+0x70]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 36--> b  0: i 642 [sp+0x140]=xmm1                         :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 37--> b  0: i 643 xmm1=[ax+0x78]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 39--> b  0: i 644 [sp+0x148]=xmm1                         :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 40--> b  0: i 645 xmm1=[ax+0x80]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 42--> b  0: i 646 [sp+0x150]=xmm1                         :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 43--> b  0: i 647 xmm1=[ax+0x88]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 43--> b  0: i 651 ax=[ax+0x98]                            :athlon-direct,athlon-load
;;	 44--> b  0: i 650 [sp+0x160]=si                           :athlon-direct,athlon-agu,athlon-store
;;	 44--> b  0: i 654 si=flags>0                              :athlon-direct,athlon-ieu
;;	 44--> b  0: i 655 flags=cmp(cx,0)                         :athlon-direct,athlon-ieu
;;	 45--> b  0: i 648 [sp+0x158]=xmm1                         :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 46--> b  0: i 652 [sp+0x168]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	 46--> b  0: i 656 ax=flags>0                              :athlon-direct,athlon-ieu
;;	 47--> b  0: i 658 flags=cmp(si&ax,0)                      :athlon-direct,athlon-ieu
;;	 48--> b  0: i 659 pc={(flags==0)?L972:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 48
;;   new head = 603
;;   new tail = 659

;;   ======================================================
;;   -- basic block 62 from 662 to 663 -- after reload
;;   ======================================================

;;	  0--> b  0: i 662 flags=cmp(cx,0xc)                       :athlon-direct,athlon-ieu
;;	  1--> b  0: i 663 pc={(flags==0)?L972:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 662
;;   new tail = 663

;;   ======================================================
;;   -- basic block 63 from 1984 to 1624 -- after reload
;;   ======================================================

;;	  0--> b  0: i1984 cx=dx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1619 {cx=cx>>0x1f;clobber flags;}            :athlon-direct,athlon-ieu
;;	  2--> b  0: i1986 ax=cx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1620 {ax=ax^dx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  4--> b  0: i1621 {ax=ax-cx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  5--> b  0: i1623 flags=cmp(ax,0x8a4)                     :athlon-direct,athlon-ieu
;;	  6--> b  0: i1624 pc={(flags==0)?L2211:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 1984
;;   new tail = 1624

;;   ======================================================
;;   -- basic block 64 from 768 to 769 -- after reload
;;   ======================================================

;;	  0--> b  0: i 768 flags=cmp(ax,0x840)                     :athlon-direct,athlon-ieu
;;	  1--> b  0: i 769 pc={(flags==0)?L2212:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 768
;;   new tail = 769

;;   ======================================================
;;   -- basic block 65 from 871 to 872 -- after reload
;;   ======================================================

;;	  0--> b  0: i 871 flags=cmp(ax,0xd3)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i 872 pc={(flags==0)?L2213:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 871
;;   new tail = 872

;;   ======================================================
;;   -- basic block 66 from 974 to 975 -- after reload
;;   ======================================================

;;	  0--> b  0: i 974 flags=cmp(dx,0x6f)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i 975 pc={(flags!=0)?L1069:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 974
;;   new tail = 975

;;   ======================================================
;;   -- basic block 67 from 977 to 979 -- after reload
;;   ======================================================

;;	  0--> b  0: i 977 ax=[bx+0x8]                             :athlon-direct,athlon-load
;;	  0--> b  0: i 978 flags=cmp(ax,[bx+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 979 pc={(flags==0)?L1051:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 977
;;   new tail = 979

;;   ======================================================
;;   -- basic block 68 from 981 to 982 -- after reload
;;   ======================================================

;;	  0--> b  0: i 981 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i 982 pc={(flags==0)?L2214:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 981
;;   new tail = 982

rescanning insn with uid = 999.
rescanning insn with uid = 999.
rescanning insn with uid = 1001.
rescanning insn with uid = 1001.
rescanning insn with uid = 1003.
rescanning insn with uid = 1003.
rescanning insn with uid = 1005.
rescanning insn with uid = 1005.
rescanning insn with uid = 1007.
rescanning insn with uid = 1007.
rescanning insn with uid = 1009.
rescanning insn with uid = 1009.
rescanning insn with uid = 1011.
rescanning insn with uid = 1011.
rescanning insn with uid = 1013.
rescanning insn with uid = 1013.
rescanning insn with uid = 1015.
rescanning insn with uid = 1015.
rescanning insn with uid = 1017.
rescanning insn with uid = 1017.
rescanning insn with uid = 1019.
rescanning insn with uid = 1019.
rescanning insn with uid = 1021.
rescanning insn with uid = 1021.
rescanning insn with uid = 1023.
rescanning insn with uid = 1023.
rescanning insn with uid = 1025.
rescanning insn with uid = 1025.
rescanning insn with uid = 1027.
rescanning insn with uid = 1027.
rescanning insn with uid = 1029.
rescanning insn with uid = 1029.
rescanning insn with uid = 1031.
rescanning insn with uid = 1031.
rescanning insn with uid = 1033.
rescanning insn with uid = 1033.
rescanning insn with uid = 1035.
rescanning insn with uid = 1035.
rescanning insn with uid = 1037.
rescanning insn with uid = 1037.
rescanning insn with uid = 1039.
rescanning insn with uid = 1039.
rescanning insn with uid = 1041.
rescanning insn with uid = 1041.
rescanning insn with uid = 1043.
rescanning insn with uid = 1043.
rescanning insn with uid = 1045.
rescanning insn with uid = 1045.
;;   ======================================================
;;   -- basic block 69 from 999 to 1048 -- after reload
;;   ======================================================

;;	  0--> b  0: i1000 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1016 xmm0=[sp+0xf8]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  1--> b  0: i 999 [ax]=r13                                :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1047 {ax=ax+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
rescanning insn with uid = 1045.
rescanning insn with uid = 1043.
rescanning insn with uid = 1041.
rescanning insn with uid = 1039.
rescanning insn with uid = 1037.
rescanning insn with uid = 1035.
rescanning insn with uid = 1033.
rescanning insn with uid = 1031.
rescanning insn with uid = 1029.
rescanning insn with uid = 1027.
rescanning insn with uid = 1025.
rescanning insn with uid = 1023.
rescanning insn with uid = 1021.
rescanning insn with uid = 1019.
rescanning insn with uid = 1017.
rescanning insn with uid = 1015.
rescanning insn with uid = 1013.
rescanning insn with uid = 1011.
rescanning insn with uid = 1009.
rescanning insn with uid = 1007.
rescanning insn with uid = 1005.
rescanning insn with uid = 1003.
rescanning insn with uid = 1001.
;;	  3--> b  0: i1001 [ax-0x98]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1002 dx=[sp+0xdc]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1003 [ax-0x94]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i1004 dx=[sp+0xe0]                            :athlon-direct,athlon-load
;;	  9--> b  0: i1005 [ax-0x90]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i1006 dx=[sp+0xe4]                            :athlon-direct,athlon-load
;;	 12--> b  0: i1007 [ax-0x8c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i1008 dx=[sp+0xe8]                            :athlon-direct,athlon-load
;;	 15--> b  0: i1009 [ax-0x88]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 15--> b  0: i1010 dx=[sp+0xec]                            :athlon-direct,athlon-load
;;	 18--> b  0: i1011 [ax-0x84]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i1012 dx=[sp+0xf0]                            :athlon-direct,athlon-load
;;	 21--> b  0: i1013 [ax-0x80]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 21--> b  0: i1014 dx=[sp+0xf4]                            :athlon-direct,athlon-load
;;	 21--> b  0: i1017 [ax-0x78]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 22--> b  0: i1018 xmm0=[sp+0x100]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 24--> b  0: i1019 [ax-0x70]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 24--> b  0: i1015 [ax-0x7c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 24--> b  0: i1030 dx=[sp+0x130]                           :athlon-direct,athlon-load,athlon-ieu
;;	 25--> b  0: i1020 xmm0=[sp+0x108]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 27--> b  0: i1021 [ax-0x68]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 28--> b  0: i1022 xmm0=[sp+0x110]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 30--> b  0: i1023 [ax-0x60]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 31--> b  0: i1024 xmm0=[sp+0x118]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 33--> b  0: i1025 [ax-0x58]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 34--> b  0: i1026 xmm0=[sp+0x120]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 36--> b  0: i1027 [ax-0x50]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 37--> b  0: i1028 xmm0=[sp+0x128]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 39--> b  0: i1029 [ax-0x48]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 39--> b  0: i1031 [ax-0x40]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 39--> b  0: i1042 dx=[sp+0x160]                           :athlon-direct,athlon-load
;;	 40--> b  0: i1032 xmm0=[sp+0x138]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 42--> b  0: i1033 [ax-0x38]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 43--> b  0: i1034 xmm0=[sp+0x140]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 45--> b  0: i1035 [ax-0x30]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 46--> b  0: i1036 xmm0=[sp+0x148]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 48--> b  0: i1037 [ax-0x28]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 49--> b  0: i1038 xmm0=[sp+0x150]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 51--> b  0: i1039 [ax-0x20]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 52--> b  0: i1040 xmm0=[sp+0x158]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 52--> b  0: i1043 [ax-0x10]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 53--> b  0: i1044 dx=[sp+0x168]                           :athlon-direct,athlon-load
;;	 54--> b  0: i1041 [ax-0x18]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 56--> b  0: i1045 [ax-0x8]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	 57--> b  0: i1046 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	 57--> b  0: i1048 [bx+0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 57
;;   new head = 1000
;;   new tail = 1048

;;   ======================================================
;;   -- basic block 70 from 1061 to 2184 -- after reload
;;   ======================================================

;;	  0--> b  0: i1061 ax=[const(unspec[`nPi0'] 2)]            :athlon-direct,athlon-load
;;	  3--> b  0: i1068 {[ax]=[ax]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2183 flags=cmp(dx,0xdd)                      :athlon-direct,athlon-ieu
;;	  4--> b  0: i2184 pc={(flags!=0)?L1166:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1061
;;   new tail = 2184

;;   ======================================================
;;   -- basic block 71 from 1074 to 1076 -- after reload
;;   ======================================================

;;	  0--> b  0: i1074 ax=[bx+0x8]                             :athlon-direct,athlon-load
;;	  0--> b  0: i1075 flags=cmp(ax,[bx+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1076 pc={(flags==0)?L1148:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1074
;;   new tail = 1076

;;   ======================================================
;;   -- basic block 72 from 1078 to 1079 -- after reload
;;   ======================================================

;;	  0--> b  0: i1078 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i1079 pc={(flags==0)?L2215:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1078
;;   new tail = 1079

rescanning insn with uid = 1096.
rescanning insn with uid = 1096.
rescanning insn with uid = 1098.
rescanning insn with uid = 1098.
rescanning insn with uid = 1100.
rescanning insn with uid = 1100.
rescanning insn with uid = 1102.
rescanning insn with uid = 1102.
rescanning insn with uid = 1104.
rescanning insn with uid = 1104.
rescanning insn with uid = 1106.
rescanning insn with uid = 1106.
rescanning insn with uid = 1108.
rescanning insn with uid = 1108.
rescanning insn with uid = 1110.
rescanning insn with uid = 1110.
rescanning insn with uid = 1112.
rescanning insn with uid = 1112.
rescanning insn with uid = 1114.
rescanning insn with uid = 1114.
rescanning insn with uid = 1116.
rescanning insn with uid = 1116.
rescanning insn with uid = 1118.
rescanning insn with uid = 1118.
rescanning insn with uid = 1120.
rescanning insn with uid = 1120.
rescanning insn with uid = 1122.
rescanning insn with uid = 1122.
rescanning insn with uid = 1124.
rescanning insn with uid = 1124.
rescanning insn with uid = 1126.
rescanning insn with uid = 1126.
rescanning insn with uid = 1128.
rescanning insn with uid = 1128.
rescanning insn with uid = 1130.
rescanning insn with uid = 1130.
rescanning insn with uid = 1132.
rescanning insn with uid = 1132.
rescanning insn with uid = 1134.
rescanning insn with uid = 1134.
rescanning insn with uid = 1136.
rescanning insn with uid = 1136.
rescanning insn with uid = 1138.
rescanning insn with uid = 1138.
rescanning insn with uid = 1140.
rescanning insn with uid = 1140.
rescanning insn with uid = 1142.
rescanning insn with uid = 1142.
;;   ======================================================
;;   -- basic block 73 from 1096 to 1145 -- after reload
;;   ======================================================

;;	  0--> b  0: i1097 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1113 xmm0=[sp+0xf8]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  1--> b  0: i1096 [ax]=r13                                :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1144 {ax=ax+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
rescanning insn with uid = 1142.
rescanning insn with uid = 1140.
rescanning insn with uid = 1138.
rescanning insn with uid = 1136.
rescanning insn with uid = 1134.
rescanning insn with uid = 1132.
rescanning insn with uid = 1130.
rescanning insn with uid = 1128.
rescanning insn with uid = 1126.
rescanning insn with uid = 1124.
rescanning insn with uid = 1122.
rescanning insn with uid = 1120.
rescanning insn with uid = 1118.
rescanning insn with uid = 1116.
rescanning insn with uid = 1114.
rescanning insn with uid = 1112.
rescanning insn with uid = 1110.
rescanning insn with uid = 1108.
rescanning insn with uid = 1106.
rescanning insn with uid = 1104.
rescanning insn with uid = 1102.
rescanning insn with uid = 1100.
rescanning insn with uid = 1098.
;;	  3--> b  0: i1098 [ax-0x98]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1099 dx=[sp+0xdc]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1100 [ax-0x94]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i1101 dx=[sp+0xe0]                            :athlon-direct,athlon-load
;;	  9--> b  0: i1102 [ax-0x90]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i1103 dx=[sp+0xe4]                            :athlon-direct,athlon-load
;;	 12--> b  0: i1104 [ax-0x8c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i1105 dx=[sp+0xe8]                            :athlon-direct,athlon-load
;;	 15--> b  0: i1106 [ax-0x88]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 15--> b  0: i1107 dx=[sp+0xec]                            :athlon-direct,athlon-load
;;	 18--> b  0: i1108 [ax-0x84]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i1109 dx=[sp+0xf0]                            :athlon-direct,athlon-load
;;	 21--> b  0: i1110 [ax-0x80]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 21--> b  0: i1111 dx=[sp+0xf4]                            :athlon-direct,athlon-load
;;	 21--> b  0: i1114 [ax-0x78]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 22--> b  0: i1115 xmm0=[sp+0x100]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 24--> b  0: i1116 [ax-0x70]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 24--> b  0: i1112 [ax-0x7c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 24--> b  0: i1127 dx=[sp+0x130]                           :athlon-direct,athlon-load,athlon-ieu
;;	 25--> b  0: i1117 xmm0=[sp+0x108]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 27--> b  0: i1118 [ax-0x68]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 28--> b  0: i1119 xmm0=[sp+0x110]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 30--> b  0: i1120 [ax-0x60]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 31--> b  0: i1121 xmm0=[sp+0x118]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 33--> b  0: i1122 [ax-0x58]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 34--> b  0: i1123 xmm0=[sp+0x120]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 36--> b  0: i1124 [ax-0x50]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 37--> b  0: i1125 xmm0=[sp+0x128]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 39--> b  0: i1126 [ax-0x48]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 39--> b  0: i1128 [ax-0x40]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 39--> b  0: i1139 dx=[sp+0x160]                           :athlon-direct,athlon-load
;;	 40--> b  0: i1129 xmm0=[sp+0x138]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 42--> b  0: i1130 [ax-0x38]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 43--> b  0: i1131 xmm0=[sp+0x140]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 45--> b  0: i1132 [ax-0x30]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 46--> b  0: i1133 xmm0=[sp+0x148]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 48--> b  0: i1134 [ax-0x28]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 49--> b  0: i1135 xmm0=[sp+0x150]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 51--> b  0: i1136 [ax-0x20]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 52--> b  0: i1137 xmm0=[sp+0x158]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 52--> b  0: i1140 [ax-0x10]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 53--> b  0: i1141 dx=[sp+0x168]                           :athlon-direct,athlon-load
;;	 54--> b  0: i1138 [ax-0x18]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 56--> b  0: i1142 [ax-0x8]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	 57--> b  0: i1143 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	 57--> b  0: i1145 [bx+0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 57
;;   new head = 1097
;;   new tail = 1145

;;   ======================================================
;;   -- basic block 74 from 1158 to 2188 -- after reload
;;   ======================================================

;;	  0--> b  0: i1158 ax=[const(unspec[`nEta'] 2)]            :athlon-direct,athlon-load
;;	  3--> b  0: i1165 {[ax]=[ax]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2187 flags=cmp(dx,0xdf)                      :athlon-direct,athlon-ieu
;;	  4--> b  0: i2188 pc={(flags!=0)?L1263:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1158
;;   new tail = 2188

;;   ======================================================
;;   -- basic block 75 from 1171 to 1173 -- after reload
;;   ======================================================

;;	  0--> b  0: i1171 ax=[bx+0x8]                             :athlon-direct,athlon-load
;;	  0--> b  0: i1172 flags=cmp(ax,[bx+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1173 pc={(flags==0)?L1245:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1171
;;   new tail = 1173

;;   ======================================================
;;   -- basic block 76 from 1175 to 1176 -- after reload
;;   ======================================================

;;	  0--> b  0: i1175 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i1176 pc={(flags==0)?L2216:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1175
;;   new tail = 1176

rescanning insn with uid = 1193.
rescanning insn with uid = 1193.
rescanning insn with uid = 1195.
rescanning insn with uid = 1195.
rescanning insn with uid = 1197.
rescanning insn with uid = 1197.
rescanning insn with uid = 1199.
rescanning insn with uid = 1199.
rescanning insn with uid = 1201.
rescanning insn with uid = 1201.
rescanning insn with uid = 1203.
rescanning insn with uid = 1203.
rescanning insn with uid = 1205.
rescanning insn with uid = 1205.
rescanning insn with uid = 1207.
rescanning insn with uid = 1207.
rescanning insn with uid = 1209.
rescanning insn with uid = 1209.
rescanning insn with uid = 1211.
rescanning insn with uid = 1211.
rescanning insn with uid = 1213.
rescanning insn with uid = 1213.
rescanning insn with uid = 1215.
rescanning insn with uid = 1215.
rescanning insn with uid = 1217.
rescanning insn with uid = 1217.
rescanning insn with uid = 1219.
rescanning insn with uid = 1219.
rescanning insn with uid = 1221.
rescanning insn with uid = 1221.
rescanning insn with uid = 1223.
rescanning insn with uid = 1223.
rescanning insn with uid = 1225.
rescanning insn with uid = 1225.
rescanning insn with uid = 1227.
rescanning insn with uid = 1227.
rescanning insn with uid = 1229.
rescanning insn with uid = 1229.
rescanning insn with uid = 1231.
rescanning insn with uid = 1231.
rescanning insn with uid = 1233.
rescanning insn with uid = 1233.
rescanning insn with uid = 1235.
rescanning insn with uid = 1235.
rescanning insn with uid = 1237.
rescanning insn with uid = 1237.
rescanning insn with uid = 1239.
rescanning insn with uid = 1239.
;;   ======================================================
;;   -- basic block 77 from 1193 to 1242 -- after reload
;;   ======================================================

;;	  0--> b  0: i1194 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1210 xmm0=[sp+0xf8]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  1--> b  0: i1193 [ax]=r13                                :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1241 {ax=ax+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
rescanning insn with uid = 1239.
rescanning insn with uid = 1237.
rescanning insn with uid = 1235.
rescanning insn with uid = 1233.
rescanning insn with uid = 1231.
rescanning insn with uid = 1229.
rescanning insn with uid = 1227.
rescanning insn with uid = 1225.
rescanning insn with uid = 1223.
rescanning insn with uid = 1221.
rescanning insn with uid = 1219.
rescanning insn with uid = 1217.
rescanning insn with uid = 1215.
rescanning insn with uid = 1213.
rescanning insn with uid = 1211.
rescanning insn with uid = 1209.
rescanning insn with uid = 1207.
rescanning insn with uid = 1205.
rescanning insn with uid = 1203.
rescanning insn with uid = 1201.
rescanning insn with uid = 1199.
rescanning insn with uid = 1197.
rescanning insn with uid = 1195.
;;	  3--> b  0: i1195 [ax-0x98]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1196 dx=[sp+0xdc]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1197 [ax-0x94]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i1198 dx=[sp+0xe0]                            :athlon-direct,athlon-load
;;	  9--> b  0: i1199 [ax-0x90]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i1200 dx=[sp+0xe4]                            :athlon-direct,athlon-load
;;	 12--> b  0: i1201 [ax-0x8c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i1202 dx=[sp+0xe8]                            :athlon-direct,athlon-load
;;	 15--> b  0: i1203 [ax-0x88]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 15--> b  0: i1204 dx=[sp+0xec]                            :athlon-direct,athlon-load
;;	 18--> b  0: i1205 [ax-0x84]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i1206 dx=[sp+0xf0]                            :athlon-direct,athlon-load
;;	 21--> b  0: i1207 [ax-0x80]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 21--> b  0: i1208 dx=[sp+0xf4]                            :athlon-direct,athlon-load
;;	 21--> b  0: i1211 [ax-0x78]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 22--> b  0: i1212 xmm0=[sp+0x100]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 24--> b  0: i1213 [ax-0x70]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 24--> b  0: i1209 [ax-0x7c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 24--> b  0: i1224 dx=[sp+0x130]                           :athlon-direct,athlon-load,athlon-ieu
;;	 25--> b  0: i1214 xmm0=[sp+0x108]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 27--> b  0: i1215 [ax-0x68]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 28--> b  0: i1216 xmm0=[sp+0x110]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 30--> b  0: i1217 [ax-0x60]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 31--> b  0: i1218 xmm0=[sp+0x118]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 33--> b  0: i1219 [ax-0x58]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 34--> b  0: i1220 xmm0=[sp+0x120]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 36--> b  0: i1221 [ax-0x50]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 37--> b  0: i1222 xmm0=[sp+0x128]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 39--> b  0: i1223 [ax-0x48]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 39--> b  0: i1225 [ax-0x40]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 39--> b  0: i1236 dx=[sp+0x160]                           :athlon-direct,athlon-load
;;	 40--> b  0: i1226 xmm0=[sp+0x138]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 42--> b  0: i1227 [ax-0x38]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 43--> b  0: i1228 xmm0=[sp+0x140]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 45--> b  0: i1229 [ax-0x30]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 46--> b  0: i1230 xmm0=[sp+0x148]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 48--> b  0: i1231 [ax-0x28]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 49--> b  0: i1232 xmm0=[sp+0x150]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 51--> b  0: i1233 [ax-0x20]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 52--> b  0: i1234 xmm0=[sp+0x158]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 52--> b  0: i1237 [ax-0x10]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 53--> b  0: i1238 dx=[sp+0x168]                           :athlon-direct,athlon-load
;;	 54--> b  0: i1235 [ax-0x18]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 56--> b  0: i1239 [ax-0x8]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	 57--> b  0: i1240 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	 57--> b  0: i1242 [bx+0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 57
;;   new head = 1194
;;   new tail = 1242

;;   ======================================================
;;   -- basic block 78 from 1255 to 2192 -- after reload
;;   ======================================================

;;	  0--> b  0: i1255 ax=[const(unspec[`nOmega'] 2)]          :athlon-direct,athlon-load
;;	  3--> b  0: i1262 {[ax]=[ax]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2191 flags=cmp(dx,0x14b)                     :athlon-direct,athlon-ieu
;;	  4--> b  0: i2192 pc={(flags!=0)?L1360:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1255
;;   new tail = 2192

;;   ======================================================
;;   -- basic block 79 from 1268 to 1270 -- after reload
;;   ======================================================

;;	  0--> b  0: i1268 ax=[bx+0x8]                             :athlon-direct,athlon-load
;;	  0--> b  0: i1269 flags=cmp(ax,[bx+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1270 pc={(flags==0)?L1342:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1268
;;   new tail = 1270

;;   ======================================================
;;   -- basic block 80 from 1272 to 1273 -- after reload
;;   ======================================================

;;	  0--> b  0: i1272 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i1273 pc={(flags==0)?L2217:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1272
;;   new tail = 1273

rescanning insn with uid = 1290.
rescanning insn with uid = 1290.
rescanning insn with uid = 1292.
rescanning insn with uid = 1292.
rescanning insn with uid = 1294.
rescanning insn with uid = 1294.
rescanning insn with uid = 1296.
rescanning insn with uid = 1296.
rescanning insn with uid = 1298.
rescanning insn with uid = 1298.
rescanning insn with uid = 1300.
rescanning insn with uid = 1300.
rescanning insn with uid = 1302.
rescanning insn with uid = 1302.
rescanning insn with uid = 1304.
rescanning insn with uid = 1304.
rescanning insn with uid = 1306.
rescanning insn with uid = 1306.
rescanning insn with uid = 1308.
rescanning insn with uid = 1308.
rescanning insn with uid = 1310.
rescanning insn with uid = 1310.
rescanning insn with uid = 1312.
rescanning insn with uid = 1312.
rescanning insn with uid = 1314.
rescanning insn with uid = 1314.
rescanning insn with uid = 1316.
rescanning insn with uid = 1316.
rescanning insn with uid = 1318.
rescanning insn with uid = 1318.
rescanning insn with uid = 1320.
rescanning insn with uid = 1320.
rescanning insn with uid = 1322.
rescanning insn with uid = 1322.
rescanning insn with uid = 1324.
rescanning insn with uid = 1324.
rescanning insn with uid = 1326.
rescanning insn with uid = 1326.
rescanning insn with uid = 1328.
rescanning insn with uid = 1328.
rescanning insn with uid = 1330.
rescanning insn with uid = 1330.
rescanning insn with uid = 1332.
rescanning insn with uid = 1332.
rescanning insn with uid = 1334.
rescanning insn with uid = 1334.
rescanning insn with uid = 1336.
rescanning insn with uid = 1336.
;;   ======================================================
;;   -- basic block 81 from 1290 to 1339 -- after reload
;;   ======================================================

;;	  0--> b  0: i1291 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1307 xmm0=[sp+0xf8]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  1--> b  0: i1290 [ax]=r13                                :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1338 {ax=ax+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
rescanning insn with uid = 1336.
rescanning insn with uid = 1334.
rescanning insn with uid = 1332.
rescanning insn with uid = 1330.
rescanning insn with uid = 1328.
rescanning insn with uid = 1326.
rescanning insn with uid = 1324.
rescanning insn with uid = 1322.
rescanning insn with uid = 1320.
rescanning insn with uid = 1318.
rescanning insn with uid = 1316.
rescanning insn with uid = 1314.
rescanning insn with uid = 1312.
rescanning insn with uid = 1310.
rescanning insn with uid = 1308.
rescanning insn with uid = 1306.
rescanning insn with uid = 1304.
rescanning insn with uid = 1302.
rescanning insn with uid = 1300.
rescanning insn with uid = 1298.
rescanning insn with uid = 1296.
rescanning insn with uid = 1294.
rescanning insn with uid = 1292.
;;	  3--> b  0: i1292 [ax-0x98]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1293 dx=[sp+0xdc]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1294 [ax-0x94]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i1295 dx=[sp+0xe0]                            :athlon-direct,athlon-load
;;	  9--> b  0: i1296 [ax-0x90]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i1297 dx=[sp+0xe4]                            :athlon-direct,athlon-load
;;	 12--> b  0: i1298 [ax-0x8c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i1299 dx=[sp+0xe8]                            :athlon-direct,athlon-load
;;	 15--> b  0: i1300 [ax-0x88]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 15--> b  0: i1301 dx=[sp+0xec]                            :athlon-direct,athlon-load
;;	 18--> b  0: i1302 [ax-0x84]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i1303 dx=[sp+0xf0]                            :athlon-direct,athlon-load
;;	 21--> b  0: i1304 [ax-0x80]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 21--> b  0: i1305 dx=[sp+0xf4]                            :athlon-direct,athlon-load
;;	 21--> b  0: i1308 [ax-0x78]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 22--> b  0: i1309 xmm0=[sp+0x100]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 24--> b  0: i1310 [ax-0x70]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 24--> b  0: i1306 [ax-0x7c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 24--> b  0: i1321 dx=[sp+0x130]                           :athlon-direct,athlon-load,athlon-ieu
;;	 25--> b  0: i1311 xmm0=[sp+0x108]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 27--> b  0: i1312 [ax-0x68]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 28--> b  0: i1313 xmm0=[sp+0x110]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 30--> b  0: i1314 [ax-0x60]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 31--> b  0: i1315 xmm0=[sp+0x118]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 33--> b  0: i1316 [ax-0x58]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 34--> b  0: i1317 xmm0=[sp+0x120]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 36--> b  0: i1318 [ax-0x50]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 37--> b  0: i1319 xmm0=[sp+0x128]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 39--> b  0: i1320 [ax-0x48]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 39--> b  0: i1322 [ax-0x40]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 39--> b  0: i1333 dx=[sp+0x160]                           :athlon-direct,athlon-load
;;	 40--> b  0: i1323 xmm0=[sp+0x138]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 42--> b  0: i1324 [ax-0x38]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 43--> b  0: i1325 xmm0=[sp+0x140]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 45--> b  0: i1326 [ax-0x30]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 46--> b  0: i1327 xmm0=[sp+0x148]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 48--> b  0: i1328 [ax-0x28]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 49--> b  0: i1329 xmm0=[sp+0x150]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 51--> b  0: i1330 [ax-0x20]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 52--> b  0: i1331 xmm0=[sp+0x158]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 52--> b  0: i1334 [ax-0x10]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 53--> b  0: i1335 dx=[sp+0x168]                           :athlon-direct,athlon-load
;;	 54--> b  0: i1332 [ax-0x18]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 56--> b  0: i1336 [ax-0x8]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	 57--> b  0: i1337 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	 57--> b  0: i1339 [bx+0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 57
;;   new head = 1291
;;   new tail = 1339

;;   ======================================================
;;   -- basic block 82 from 1352 to 2196 -- after reload
;;   ======================================================

;;	  0--> b  0: i1352 ax=[const(unspec[`nEtaPrime'] 2)]       :athlon-direct,athlon-load
;;	  3--> b  0: i1359 {[ax]=[ax]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2195 flags=cmp(dx,0x16)                      :athlon-direct,athlon-ieu
;;	  4--> b  0: i2196 pc={(flags!=0)?L1443:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1352
;;   new tail = 2196

;;   ======================================================
;;   -- basic block 83 from 1365 to 1367 -- after reload
;;   ======================================================

;;	  0--> b  0: i1365 ax=[bx+0x8]                             :athlon-direct,athlon-load
;;	  0--> b  0: i1366 flags=cmp(ax,[bx+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1367 pc={(flags==0)?L1427:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1365
;;   new tail = 1367

;;   ======================================================
;;   -- basic block 84 from 1369 to 1370 -- after reload
;;   ======================================================

;;	  0--> b  0: i1369 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i1370 pc={(flags==0)?L1421:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1369
;;   new tail = 1370

;;   ======================================================
;;   -- basic block 85 from 1374 to 1420 -- after reload
;;   ======================================================

;;	  0--> b  0: i1375 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1391 xmm0=[sp+0xf8]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  1--> b  0: i1374 [ax]=r13                                :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1376 [ax+0x8]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1377 dx=[sp+0xdc]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1378 [ax+0xc]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i1379 dx=[sp+0xe0]                            :athlon-direct,athlon-load
;;	  9--> b  0: i1380 [ax+0x10]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i1381 dx=[sp+0xe4]                            :athlon-direct,athlon-load
;;	 12--> b  0: i1382 [ax+0x14]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i1383 dx=[sp+0xe8]                            :athlon-direct,athlon-load
;;	 15--> b  0: i1384 [ax+0x18]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 15--> b  0: i1385 dx=[sp+0xec]                            :athlon-direct,athlon-load
;;	 18--> b  0: i1386 [ax+0x1c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i1387 dx=[sp+0xf0]                            :athlon-direct,athlon-load
;;	 21--> b  0: i1388 [ax+0x20]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 21--> b  0: i1389 dx=[sp+0xf4]                            :athlon-direct,athlon-load
;;	 21--> b  0: i1392 [ax+0x28]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 22--> b  0: i1393 xmm0=[sp+0x100]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 24--> b  0: i1394 [ax+0x30]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 24--> b  0: i1390 [ax+0x24]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 24--> b  0: i1405 dx=[sp+0x130]                           :athlon-direct,athlon-load,athlon-ieu
;;	 25--> b  0: i1395 xmm0=[sp+0x108]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 27--> b  0: i1396 [ax+0x38]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 28--> b  0: i1397 xmm0=[sp+0x110]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 30--> b  0: i1398 [ax+0x40]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 31--> b  0: i1399 xmm0=[sp+0x118]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 33--> b  0: i1400 [ax+0x48]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 34--> b  0: i1401 xmm0=[sp+0x120]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 36--> b  0: i1402 [ax+0x50]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 37--> b  0: i1403 xmm0=[sp+0x128]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 39--> b  0: i1404 [ax+0x58]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 39--> b  0: i1406 [ax+0x60]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 39--> b  0: i1417 dx=[sp+0x160]                           :athlon-direct,athlon-load
;;	 40--> b  0: i1407 xmm0=[sp+0x138]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 42--> b  0: i1408 [ax+0x68]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 43--> b  0: i1409 xmm0=[sp+0x140]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 45--> b  0: i1410 [ax+0x70]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 46--> b  0: i1411 xmm0=[sp+0x148]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 48--> b  0: i1412 [ax+0x78]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 49--> b  0: i1413 xmm0=[sp+0x150]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 51--> b  0: i1414 [ax+0x80]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 52--> b  0: i1415 xmm0=[sp+0x158]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 52--> b  0: i1418 [ax+0x90]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 53--> b  0: i1419 dx=[sp+0x168]                           :athlon-direct,athlon-load
;;	 54--> b  0: i1416 [ax+0x88]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 56--> b  0: i1420 [ax+0x98]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 56
;;   new head = 1375
;;   new tail = 1420

;;   ======================================================
;;   -- basic block 86 from 1423 to 1424 -- after reload
;;   ======================================================

;;	  0--> b  0: i1423 {ax=ax+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
;;	  1--> b  0: i1424 [bx+0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1423
;;   new tail = 1424

;;   ======================================================
;;   -- basic block 87 from 1435 to 2218 -- after reload
;;   ======================================================

;;	  0--> b  0: i1435 ax=[const(unspec[`nG'] 2)]              :athlon-direct,athlon-load
;;	  3--> b  0: i1442 {[ax]=[ax]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2218 pc=L1443                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1435
;;   new tail = 2218

;;   ======================================================
;;   -- basic block 88 from 2015 to 214 -- after reload
;;   ======================================================

;;	  0--> b  0: i2015 r12=sp+0xd0                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 212 si=[sp+0x198]                           :athlon-direct,athlon-load
;;	  2--> b  0: i2016 dx=r12+0x10                             :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i 213 di=r12                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 209 [sp+0xd0]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 211 dx=ax                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 214 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.62']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 2015
;;   new tail = 214

;;   ======================================================
;;   -- basic block 89 from 216 to 221 -- after reload
;;   ======================================================

;;	  0--> b  0: i 217 dx=[sp+0xd0]                            :athlon-direct,athlon-load
;;	  0--> b  0: i2014 cx=r12+0x10                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 216 ax=[sp+0x50]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 220 flags=cmp(dx,cx)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 221 pc={(flags==0)?L248:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 217
;;   new tail = 221

;;   ======================================================
;;   -- basic block 90 from 2013 to 226 -- after reload
;;   ======================================================

;;	  0--> b  0: i2013 cx=bp+0x10                              :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i 225 flags=cmp(ax,cx)                        :athlon-direct,athlon-ieu
;;	  3--> b  0: i 226 pc={(flags==0)?L1599:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2013
;;   new tail = 226

;;   ======================================================
;;   -- basic block 91 from 228 to 235 -- after reload
;;   ======================================================

;;	  0--> b  0: i 229 [sp+0x50]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 230 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 234 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i 228 cx=[sp+0x60]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 231 [sp+0x58]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 232 dx=[sp+0xe0]                            :athlon-direct,athlon-load
;;	  6--> b  0: i 233 [sp+0x60]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i 235 pc={(flags==0)?L241:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 229
;;   new tail = 235

;;   ======================================================
;;   -- basic block 92 from 237 to 238 -- after reload
;;   ======================================================

;;	  0--> b  0: i 237 [sp+0xd0]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 238 [sp+0xe0]=cx                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 237
;;   new tail = 238

;;   ======================================================
;;   -- basic block 93 from 258 to 264 -- after reload
;;   ======================================================

;;	  0--> b  0: i 258 [sp+0xd8]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 259 [ax]=0                                  :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 262 {r12=r12+0x10;clobber flags;}           :athlon-direct,athlon-ieu
;;	  1--> b  0: i 260 di=[sp+0xd0]                            :athlon-direct,athlon-load
;;	  4--> b  0: i 263 flags=cmp(di,r12)                       :athlon-direct,athlon-ieu
;;	  5--> b  0: i 264 pc={(flags!=0)?L2053:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 258
;;   new tail = 264

;;   ======================================================
;;   -- basic block 94 from 2221 to 2221 -- after reload
;;   ======================================================

;;	  0--> b  0: i2221 pc=L366                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2221
;;   new tail = 2221

;;   ======================================================
;;   -- basic block 95 from 1275 to 2223 -- after reload
;;   ======================================================

;;	  0--> b  0: i1276 ax=[const(unspec[`nEtaPrime'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1275 [bx+0x8]=0xa0                           :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1283 {[ax]=[ax]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2223 pc=L1443                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1276
;;   new tail = 2223

;;   ======================================================
;;   -- basic block 96 from 1993 to 773 -- after reload
;;   ======================================================

;;	  0--> b  0: i1993 ax=[sp+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 771 cx=[ax+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 772 flags=cmp(cx,[ax+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i 773 pc={(flags==0)?L848:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1993
;;   new tail = 773

;;   ======================================================
;;   -- basic block 97 from 775 to 776 -- after reload
;;   ======================================================

;;	  0--> b  0: i 775 flags=cmp(cx,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i 776 pc={(flags==0)?L2225:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 775
;;   new tail = 776

rescanning insn with uid = 793.
rescanning insn with uid = 793.
rescanning insn with uid = 795.
rescanning insn with uid = 795.
rescanning insn with uid = 797.
rescanning insn with uid = 797.
rescanning insn with uid = 799.
rescanning insn with uid = 799.
rescanning insn with uid = 801.
rescanning insn with uid = 801.
rescanning insn with uid = 803.
rescanning insn with uid = 803.
rescanning insn with uid = 805.
rescanning insn with uid = 805.
rescanning insn with uid = 807.
rescanning insn with uid = 807.
rescanning insn with uid = 809.
rescanning insn with uid = 809.
rescanning insn with uid = 811.
rescanning insn with uid = 811.
rescanning insn with uid = 813.
rescanning insn with uid = 813.
rescanning insn with uid = 815.
rescanning insn with uid = 815.
rescanning insn with uid = 817.
rescanning insn with uid = 817.
rescanning insn with uid = 819.
rescanning insn with uid = 819.
rescanning insn with uid = 821.
rescanning insn with uid = 821.
rescanning insn with uid = 823.
rescanning insn with uid = 823.
rescanning insn with uid = 825.
rescanning insn with uid = 825.
rescanning insn with uid = 827.
rescanning insn with uid = 827.
rescanning insn with uid = 829.
rescanning insn with uid = 829.
rescanning insn with uid = 831.
rescanning insn with uid = 831.
rescanning insn with uid = 833.
rescanning insn with uid = 833.
rescanning insn with uid = 835.
rescanning insn with uid = 835.
rescanning insn with uid = 837.
rescanning insn with uid = 837.
rescanning insn with uid = 839.
rescanning insn with uid = 839.
;;   ======================================================
;;   -- basic block 98 from 793 to 845 -- after reload
;;   ======================================================

;;	  0--> b  0: i 794 ax=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 810 xmm0=[sp+0xf8]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  1--> b  0: i 793 [cx]=r13                                :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 844 {cx=cx+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
rescanning insn with uid = 839.
rescanning insn with uid = 837.
rescanning insn with uid = 835.
rescanning insn with uid = 833.
rescanning insn with uid = 831.
rescanning insn with uid = 829.
rescanning insn with uid = 827.
rescanning insn with uid = 825.
rescanning insn with uid = 823.
rescanning insn with uid = 821.
rescanning insn with uid = 819.
rescanning insn with uid = 817.
rescanning insn with uid = 815.
rescanning insn with uid = 813.
rescanning insn with uid = 811.
rescanning insn with uid = 809.
rescanning insn with uid = 807.
rescanning insn with uid = 805.
rescanning insn with uid = 803.
rescanning insn with uid = 801.
rescanning insn with uid = 799.
rescanning insn with uid = 797.
rescanning insn with uid = 795.
;;	  3--> b  0: i 795 [cx-0x98]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 796 ax=[sp+0xdc]                            :athlon-direct,athlon-load
;;	  6--> b  0: i 797 [cx-0x94]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i 798 ax=[sp+0xe0]                            :athlon-direct,athlon-load
;;	  9--> b  0: i 799 [cx-0x90]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i 800 ax=[sp+0xe4]                            :athlon-direct,athlon-load
;;	 12--> b  0: i 801 [cx-0x8c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i 802 ax=[sp+0xe8]                            :athlon-direct,athlon-load
;;	 15--> b  0: i 803 [cx-0x88]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 15--> b  0: i 804 ax=[sp+0xec]                            :athlon-direct,athlon-load
;;	 18--> b  0: i 805 [cx-0x84]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i 806 ax=[sp+0xf0]                            :athlon-direct,athlon-load
;;	 21--> b  0: i 807 [cx-0x80]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 21--> b  0: i 808 ax=[sp+0xf4]                            :athlon-direct,athlon-load
;;	 21--> b  0: i 811 [cx-0x78]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 22--> b  0: i 812 xmm0=[sp+0x100]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 24--> b  0: i 813 [cx-0x70]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 24--> b  0: i 809 [cx-0x7c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 24--> b  0: i 824 ax=[sp+0x130]                           :athlon-direct,athlon-load,athlon-ieu
;;	 25--> b  0: i 814 xmm0=[sp+0x108]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 27--> b  0: i 815 [cx-0x68]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 28--> b  0: i 816 xmm0=[sp+0x110]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 30--> b  0: i 817 [cx-0x60]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 31--> b  0: i 818 xmm0=[sp+0x118]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 33--> b  0: i 819 [cx-0x58]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 34--> b  0: i 820 xmm0=[sp+0x120]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 36--> b  0: i 821 [cx-0x50]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 37--> b  0: i 822 xmm0=[sp+0x128]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 39--> b  0: i 823 [cx-0x48]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 39--> b  0: i 825 [cx-0x40]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 39--> b  0: i 836 ax=[sp+0x160]                           :athlon-direct,athlon-load
;;	 40--> b  0: i 826 xmm0=[sp+0x138]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 40--> b  0: i 840 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	 41--> b  0: i1967 di=[sp+0x8]                             :athlon-direct,athlon-load
;;	 42--> b  0: i 827 [cx-0x38]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 43--> b  0: i 828 xmm0=[sp+0x140]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 43--> b  0: i1963 si=dx                                   :athlon-direct,athlon-ieu
;;	 44--> b  0: i 841 {si=si>>0x1f;clobber flags;}            :athlon-direct,athlon-ieu
;;	 45--> b  0: i 829 [cx-0x30]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 46--> b  0: i 830 xmm0=[sp+0x148]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 48--> b  0: i 831 [cx-0x28]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 49--> b  0: i 832 xmm0=[sp+0x150]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 51--> b  0: i 833 [cx-0x20]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 52--> b  0: i 834 xmm0=[sp+0x158]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 52--> b  0: i 837 [cx-0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 53--> b  0: i 838 ax=[sp+0x168]                           :athlon-direct,athlon-load
;;	 54--> b  0: i 835 [cx-0x18]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 56--> b  0: i 839 [cx-0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	 56--> b  0: i1965 ax=si                                   :athlon-direct,athlon-ieu
;;	 57--> b  0: i 842 {ax=ax^dx;clobber flags;}               :athlon-direct,athlon-ieu
;;	 57--> b  0: i 845 [di+0x8]=cx                             :athlon-direct,athlon-agu,athlon-store
;;	 58--> b  0: i 843 {ax=ax-si;clobber flags;}               :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 58
;;   new head = 794
;;   new tail = 843

;;   ======================================================
;;   -- basic block 99 from 861 to 2200 -- after reload
;;   ======================================================

;;	  0--> b  0: i 861 cx=[const(unspec[`nN'] 2)]              :athlon-direct,athlon-load
;;	  3--> b  0: i 868 {[cx]=[cx]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2199 flags=cmp(ax,0xd3)                      :athlon-direct,athlon-ieu
;;	  4--> b  0: i2200 pc={(flags!=0)?L972:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 861
;;   new tail = 2200

;;   ======================================================
;;   -- basic block 100 from 1994 to 876 -- after reload
;;   ======================================================

;;	  0--> b  0: i1994 di=[sp+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 874 ax=[di+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 875 flags=cmp(ax,[di+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i 876 pc={(flags==0)?L937:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1994
;;   new tail = 876

;;   ======================================================
;;   -- basic block 101 from 878 to 879 -- after reload
;;   ======================================================

;;	  0--> b  0: i 878 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i 879 pc={(flags==0)?L931:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 878
;;   new tail = 879

;;   ======================================================
;;   -- basic block 102 from 883 to 930 -- after reload
;;   ======================================================

;;	  0--> b  0: i 884 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 900 xmm0=[sp+0xf8]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  1--> b  0: i 883 [ax]=r13                                :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 885 [ax+0x8]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 886 dx=[sp+0xdc]                            :athlon-direct,athlon-load
;;	  6--> b  0: i 887 [ax+0xc]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i 888 dx=[sp+0xe0]                            :athlon-direct,athlon-load
;;	  9--> b  0: i 889 [ax+0x10]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i 890 dx=[sp+0xe4]                            :athlon-direct,athlon-load
;;	 12--> b  0: i 891 [ax+0x14]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i 892 dx=[sp+0xe8]                            :athlon-direct,athlon-load
;;	 15--> b  0: i 893 [ax+0x18]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 15--> b  0: i 894 dx=[sp+0xec]                            :athlon-direct,athlon-load
;;	 18--> b  0: i 895 [ax+0x1c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i 896 dx=[sp+0xf0]                            :athlon-direct,athlon-load
;;	 21--> b  0: i 897 [ax+0x20]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 21--> b  0: i 898 dx=[sp+0xf4]                            :athlon-direct,athlon-load
;;	 21--> b  0: i 901 [ax+0x28]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 22--> b  0: i 902 xmm0=[sp+0x100]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 24--> b  0: i 903 [ax+0x30]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 24--> b  0: i 899 [ax+0x24]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 24--> b  0: i 914 dx=[sp+0x130]                           :athlon-direct,athlon-load,athlon-ieu
;;	 25--> b  0: i 904 xmm0=[sp+0x108]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 27--> b  0: i 905 [ax+0x38]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 28--> b  0: i 906 xmm0=[sp+0x110]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 30--> b  0: i 907 [ax+0x40]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 31--> b  0: i 908 xmm0=[sp+0x118]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 33--> b  0: i 909 [ax+0x48]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 34--> b  0: i 910 xmm0=[sp+0x120]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 36--> b  0: i 911 [ax+0x50]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 37--> b  0: i 912 xmm0=[sp+0x128]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 39--> b  0: i 913 [ax+0x58]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 39--> b  0: i 915 [ax+0x60]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 39--> b  0: i 926 dx=[sp+0x160]                           :athlon-direct,athlon-load
;;	 40--> b  0: i 916 xmm0=[sp+0x138]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 42--> b  0: i 917 [ax+0x68]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 43--> b  0: i 918 xmm0=[sp+0x140]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 45--> b  0: i 919 [ax+0x70]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 46--> b  0: i 920 xmm0=[sp+0x148]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 48--> b  0: i 921 [ax+0x78]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 49--> b  0: i 922 xmm0=[sp+0x150]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 51--> b  0: i 923 [ax+0x80]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 52--> b  0: i 924 xmm0=[sp+0x158]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 52--> b  0: i 927 [ax+0x90]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 53--> b  0: i 928 dx=[sp+0x168]                           :athlon-direct,athlon-load
;;	 54--> b  0: i 925 [ax+0x88]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 56--> b  0: i 929 [ax+0x98]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 57--> b  0: i 930 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	Ready list (final):  
;;   total time = 57
;;   new head = 884
;;   new tail = 930

;;   ======================================================
;;   -- basic block 103 from 933 to 934 -- after reload
;;   ======================================================

;;	  0--> b  0: i1974 di=[sp+0x8]                             :athlon-direct,athlon-load
;;	  0--> b  0: i 933 {ax=ax+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
;;	  3--> b  0: i 934 [di+0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1974
;;   new tail = 934

;;   ======================================================
;;   -- basic block 104 from 947 to 948 -- after reload
;;   ======================================================

;;	  0--> b  0: i 947 flags=cmp(dx,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i 948 pc={(flags<=0)?L960:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 947
;;   new tail = 948

;;   ======================================================
;;   -- basic block 105 from 950 to 2226 -- after reload
;;   ======================================================

;;	  0--> b  0: i 950 ax=[const(unspec[`nPiP'] 2)]            :athlon-direct,athlon-load
;;	  3--> b  0: i 957 {[ax]=[ax]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2226 pc=L972                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 950
;;   new tail = 2226

;;   ======================================================
;;   -- basic block 106 from 778 to 2228 -- after reload
;;   ======================================================

;;	  0--> b  0: i 778 [ax+0x8]=0xa0                           :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 779 ax=[const(unspec[`nN'] 2)]              :athlon-direct,athlon-load
;;	  3--> b  0: i 786 {[ax]=[ax]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2228 pc=L972                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 778
;;   new tail = 2228

;;   ======================================================
;;   -- basic block 107 from 1992 to 671 -- after reload
;;   ======================================================

;;	  0--> b  0: i1992 ax=[sp+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 669 cx=[ax+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 670 flags=cmp(cx,[ax+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i 671 pc={(flags==0)?L746:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1992
;;   new tail = 671

;;   ======================================================
;;   -- basic block 108 from 673 to 674 -- after reload
;;   ======================================================

;;	  0--> b  0: i 673 flags=cmp(cx,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i 674 pc={(flags==0)?L2230:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 673
;;   new tail = 674

rescanning insn with uid = 691.
rescanning insn with uid = 691.
rescanning insn with uid = 693.
rescanning insn with uid = 693.
rescanning insn with uid = 695.
rescanning insn with uid = 695.
rescanning insn with uid = 697.
rescanning insn with uid = 697.
rescanning insn with uid = 699.
rescanning insn with uid = 699.
rescanning insn with uid = 701.
rescanning insn with uid = 701.
rescanning insn with uid = 703.
rescanning insn with uid = 703.
rescanning insn with uid = 705.
rescanning insn with uid = 705.
rescanning insn with uid = 707.
rescanning insn with uid = 707.
rescanning insn with uid = 709.
rescanning insn with uid = 709.
rescanning insn with uid = 711.
rescanning insn with uid = 711.
rescanning insn with uid = 713.
rescanning insn with uid = 713.
rescanning insn with uid = 715.
rescanning insn with uid = 715.
rescanning insn with uid = 717.
rescanning insn with uid = 717.
rescanning insn with uid = 719.
rescanning insn with uid = 719.
rescanning insn with uid = 721.
rescanning insn with uid = 721.
rescanning insn with uid = 723.
rescanning insn with uid = 723.
rescanning insn with uid = 725.
rescanning insn with uid = 725.
rescanning insn with uid = 727.
rescanning insn with uid = 727.
rescanning insn with uid = 729.
rescanning insn with uid = 729.
rescanning insn with uid = 731.
rescanning insn with uid = 731.
rescanning insn with uid = 733.
rescanning insn with uid = 733.
rescanning insn with uid = 735.
rescanning insn with uid = 735.
rescanning insn with uid = 737.
rescanning insn with uid = 737.
;;   ======================================================
;;   -- basic block 109 from 691 to 743 -- after reload
;;   ======================================================

;;	  0--> b  0: i 692 ax=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 708 xmm0=[sp+0xf8]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  1--> b  0: i 691 [cx]=r13                                :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 742 {cx=cx+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
rescanning insn with uid = 737.
rescanning insn with uid = 735.
rescanning insn with uid = 733.
rescanning insn with uid = 731.
rescanning insn with uid = 729.
rescanning insn with uid = 727.
rescanning insn with uid = 725.
rescanning insn with uid = 723.
rescanning insn with uid = 721.
rescanning insn with uid = 719.
rescanning insn with uid = 717.
rescanning insn with uid = 715.
rescanning insn with uid = 713.
rescanning insn with uid = 711.
rescanning insn with uid = 709.
rescanning insn with uid = 707.
rescanning insn with uid = 705.
rescanning insn with uid = 703.
rescanning insn with uid = 701.
rescanning insn with uid = 699.
rescanning insn with uid = 697.
rescanning insn with uid = 695.
rescanning insn with uid = 693.
;;	  3--> b  0: i 693 [cx-0x98]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 694 ax=[sp+0xdc]                            :athlon-direct,athlon-load
;;	  6--> b  0: i 695 [cx-0x94]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i 696 ax=[sp+0xe0]                            :athlon-direct,athlon-load
;;	  9--> b  0: i 697 [cx-0x90]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i 698 ax=[sp+0xe4]                            :athlon-direct,athlon-load
;;	 12--> b  0: i 699 [cx-0x8c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i 700 ax=[sp+0xe8]                            :athlon-direct,athlon-load
;;	 15--> b  0: i 701 [cx-0x88]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 15--> b  0: i 702 ax=[sp+0xec]                            :athlon-direct,athlon-load
;;	 18--> b  0: i 703 [cx-0x84]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i 704 ax=[sp+0xf0]                            :athlon-direct,athlon-load
;;	 21--> b  0: i 705 [cx-0x80]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 21--> b  0: i 706 ax=[sp+0xf4]                            :athlon-direct,athlon-load
;;	 21--> b  0: i 709 [cx-0x78]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 22--> b  0: i 710 xmm0=[sp+0x100]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 24--> b  0: i 711 [cx-0x70]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 24--> b  0: i 707 [cx-0x7c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 24--> b  0: i 722 ax=[sp+0x130]                           :athlon-direct,athlon-load,athlon-ieu
;;	 25--> b  0: i 712 xmm0=[sp+0x108]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 27--> b  0: i 713 [cx-0x68]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 28--> b  0: i 714 xmm0=[sp+0x110]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 30--> b  0: i 715 [cx-0x60]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 31--> b  0: i 716 xmm0=[sp+0x118]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 33--> b  0: i 717 [cx-0x58]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 34--> b  0: i 718 xmm0=[sp+0x120]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 36--> b  0: i 719 [cx-0x50]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 37--> b  0: i 720 xmm0=[sp+0x128]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 39--> b  0: i 721 [cx-0x48]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 39--> b  0: i 723 [cx-0x40]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 39--> b  0: i 734 ax=[sp+0x160]                           :athlon-direct,athlon-load
;;	 40--> b  0: i 724 xmm0=[sp+0x138]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 40--> b  0: i 738 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	 41--> b  0: i1955 di=[sp+0x8]                             :athlon-direct,athlon-load
;;	 42--> b  0: i 725 [cx-0x38]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 43--> b  0: i 726 xmm0=[sp+0x140]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 43--> b  0: i1951 si=dx                                   :athlon-direct,athlon-ieu
;;	 44--> b  0: i 739 {si=si>>0x1f;clobber flags;}            :athlon-direct,athlon-ieu
;;	 45--> b  0: i 727 [cx-0x30]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 46--> b  0: i 728 xmm0=[sp+0x148]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 48--> b  0: i 729 [cx-0x28]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 49--> b  0: i 730 xmm0=[sp+0x150]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 51--> b  0: i 731 [cx-0x20]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 52--> b  0: i 732 xmm0=[sp+0x158]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 52--> b  0: i 735 [cx-0x10]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 53--> b  0: i 736 ax=[sp+0x168]                           :athlon-direct,athlon-load
;;	 54--> b  0: i 733 [cx-0x18]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 56--> b  0: i 737 [cx-0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	 56--> b  0: i1953 ax=si                                   :athlon-direct,athlon-ieu
;;	 57--> b  0: i 740 {ax=ax^dx;clobber flags;}               :athlon-direct,athlon-ieu
;;	 57--> b  0: i 743 [di+0x8]=cx                             :athlon-direct,athlon-agu,athlon-store
;;	 58--> b  0: i 741 {ax=ax-si;clobber flags;}               :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 58
;;   new head = 692
;;   new tail = 741

;;   ======================================================
;;   -- basic block 110 from 759 to 2231 -- after reload
;;   ======================================================

;;	  0--> b  0: i 759 cx=[const(unspec[`nP'] 2)]              :athlon-direct,athlon-load
;;	  3--> b  0: i 766 {[cx]=[cx]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2231 pc=L1625                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 759
;;   new tail = 2231

;;   ======================================================
;;   -- basic block 111 from 20 to 20 -- after reload
;;   ======================================================

;;	  0--> b  0: i  20 [sp+0x1c]=0                             :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 20
;;   new tail = 20

;;   ======================================================
;;   -- basic block 112 from 1977 to 1475 -- after reload
;;   ======================================================

;;	  0--> b  0: i1977 ax=[const(unspec[`_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE'] 2)]:athlon-direct,athlon-load
;;	  0--> b  0: i1471 di=[sp+0x1c0]                           :athlon-direct,athlon-load
;;	  3--> b  0: i2166 {ax=ax+0x18;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i1464 [sp+0x170]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i1978 ax=[const(unspec[`_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE'] 2)]:athlon-direct,athlon-load
;;	  7--> b  0: i2167 {ax=ax+0x40;clobber flags;}             :athlon-direct,athlon-ieu
;;	  8--> b  0: i1467 [sp+0x1e0]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	  8--> b  0: i1979 ax=[const(unspec[`_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE'] 2)]:athlon-direct,athlon-load
;;	 11--> b  0: i2168 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	 12--> b  0: i1470 [sp+0x178]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i2000 ax=r15+0x60                             :athlon-direct,athlon-agu,nothing
;;	 14--> b  0: i1474 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	 15--> b  0: i1475 pc={(flags==0)?L1479:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 15
;;   new head = 1977
;;   new tail = 1475

;;   ======================================================
;;   -- basic block 113 from 1478 to 1478 -- after reload
;;   ======================================================

;;	  0--> b  0: i1478 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1478
;;   new tail = 1478

;;   ======================================================
;;   -- basic block 114 from 1980 to 2050 -- after reload
;;   ======================================================

;;	  0--> b  0: i1980 ax=[const(unspec[`_ZTVSt15basic_streambufIcSt11char_traitsIcEE'] 2)]:athlon-direct,athlon-load
;;	  0--> b  0: i1997 di=r15+0x40                             :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i2164 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i1483 [sp+0x178]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i1487 call [`_ZNSt6localeD1Ev']               :athlon-vector,athlon-ieu
;;	  6--> b  0: i1981 ax=[const(unspec[`_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE'] 2)]:athlon-direct,athlon-load
;;	  6--> b  0: i1982 bx=[const(unspec[`_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE'] 2)]:athlon-direct,athlon-load
;;	  6--> b  0: i1998 di=r15+0x70                             :athlon-direct,athlon-agu,nothing
;;	  9--> b  0: i1489 ax=[ax+0x8]                             :athlon-direct,athlon-load
;;	  9--> b  0: i1493 dx=[bx+0x10]                            :athlon-direct,athlon-load
;;	 12--> b  0: i1490 [sp+0x170]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i1491 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	 15--> b  0: i1494 [sp+ax+0x170]=dx                        :athlon-direct,athlon-agu,athlon-store
;;	 15--> b  0: i1983 ax=[const(unspec[`_ZTVSt9basic_iosIcSt11char_traitsIcEE'] 2)]:athlon-direct,athlon-load
;;	 18--> b  0: i2165 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	 19--> b  0: i1497 [sp+0x1e0]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	 20--> b  0: i1501 call [`_ZNSt8ios_baseD2Ev']             :athlon-vector,athlon-ieu
;;	 21--> b  0: i1503 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	 24--> b  0: i1504 call [`_ZN7Pythia86PythiaD1Ev']         :athlon-vector,athlon-ieu
;;	 25--> b  0: i1630 ax=[sp+0x1c]                            :athlon-direct,athlon-load,athlon-ieu
;;	 25--> b  0: i2043 {sp=sp+0x47be8;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	 25--> b  0: i1631 use ax                                  :nothing
;;	 26--> b  0: i2044 bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	 27--> b  0: i2045 bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	 28--> b  0: i2046 r12=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	 29--> b  0: i2047 r13=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	 30--> b  0: i2048 r14=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	 31--> b  0: i2049 r15=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	 32--> b  0: i2050 simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 32
;;   new head = 1980
;;   new tail = 2050

;;   ======================================================
;;   -- basic block 115 from 1178 to 2233 -- after reload
;;   ======================================================

;;	  0--> b  0: i1179 ax=[const(unspec[`nOmega'] 2)]          :athlon-direct,athlon-load
;;	  0--> b  0: i1178 [bx+0x8]=0xa0                           :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1186 {[ax]=[ax]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2233 pc=L1443                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1179
;;   new tail = 2233

;;   ======================================================
;;   -- basic block 116 from 1081 to 2235 -- after reload
;;   ======================================================

;;	  0--> b  0: i1082 ax=[const(unspec[`nEta'] 2)]            :athlon-direct,athlon-load
;;	  0--> b  0: i1081 [bx+0x8]=0xa0                           :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1089 {[ax]=[ax]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2235 pc=L1443                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1082
;;   new tail = 2235

;;   ======================================================
;;   -- basic block 117 from 984 to 2237 -- after reload
;;   ======================================================

;;	  0--> b  0: i 985 ax=[const(unspec[`nPi0'] 2)]            :athlon-direct,athlon-load
;;	  0--> b  0: i 984 [bx+0x8]=0xa0                           :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 992 {[ax]=[ax]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2237 pc=L1443                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 985
;;   new tail = 2237

;;   ======================================================
;;   -- basic block 118 from 962 to 2239 -- after reload
;;   ======================================================

;;	  0--> b  0: i 962 ax=[const(unspec[`nPiM'] 2)]            :athlon-direct,athlon-load
;;	  3--> b  0: i 969 {[ax]=[ax]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2239 pc=L1069                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 962
;;   new tail = 2239

;;   ======================================================
;;   -- basic block 119 from 676 to 2241 -- after reload
;;   ======================================================

;;	  0--> b  0: i 676 [ax+0x8]=0xa0                           :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 677 ax=[const(unspec[`nP'] 2)]              :athlon-direct,athlon-load
;;	  3--> b  0: i 684 {[ax]=[ax]+0x1;clobber flags;}          :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i2241 pc=L972                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 676
;;   new tail = 2241

;;   ======================================================
;;   -- basic block 120 from 554 to 555 -- after reload
;;   ======================================================

;;	  0--> b  0: i 554 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 555 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 554
;;   new tail = 555

;;   ======================================================
;;   -- basic block 121 from 557 to 562 -- after reload
;;   ======================================================

;;	  0--> b  0: i 557 ax=[r12]                                :athlon-direct,athlon-load
;;	  0--> b  0: i  17 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 558 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 561 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i 562 pc={(flags==0)?L570:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 557
;;   new tail = 562

;;   ======================================================
;;   -- basic block 122 from 565 to 566 -- after reload
;;   ======================================================

;;	  0--> b  0: i 565 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 566 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 565
;;   new tail = 566

;;   ======================================================
;;   -- basic block 123 from 569 to 2243 -- after reload
;;   ======================================================

;;	  0--> b  0: i 569 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i2243 pc=L570                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 569
;;   new tail = 2243

;;   ======================================================
;;   -- basic block 124 from 452 to 453 -- after reload
;;   ======================================================

;;	  0--> b  0: i 452 di=r13                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 453 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 452
;;   new tail = 453

;;   ======================================================
;;   -- basic block 125 from 455 to 460 -- after reload
;;   ======================================================

;;	  0--> b  0: i 455 ax=[r13]                                :athlon-direct,athlon-load
;;	  0--> b  0: i  16 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 456 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 459 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i 460 pc={(flags==0)?L468:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 455
;;   new tail = 460

;;   ======================================================
;;   -- basic block 126 from 463 to 464 -- after reload
;;   ======================================================

;;	  0--> b  0: i 463 di=r13                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 464 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 463
;;   new tail = 464

;;   ======================================================
;;   -- basic block 127 from 467 to 2245 -- after reload
;;   ======================================================

;;	  0--> b  0: i 467 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i2245 pc=L468                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 467
;;   new tail = 2245

;;   ======================================================
;;   -- basic block 128 from 1151 to 1153 -- after reload
;;   ======================================================

;;	  0--> b  0: i1151 si=[sp+0x20]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1152 di=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1153 call [`_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1151
;;   new tail = 1153

;;   ======================================================
;;   -- basic block 129 from 1155 to 2247 -- after reload
;;   ======================================================

;;	  0--> b  0: i1155 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i2247 pc=L1156                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1155
;;   new tail = 2247

;;   ======================================================
;;   -- basic block 130 from 1248 to 1250 -- after reload
;;   ======================================================

;;	  0--> b  0: i1248 si=[sp+0x20]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1249 di=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1250 call [`_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1248
;;   new tail = 1250

;;   ======================================================
;;   -- basic block 131 from 1252 to 2249 -- after reload
;;   ======================================================

;;	  0--> b  0: i1252 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i2249 pc=L1253                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1252
;;   new tail = 2249

;;   ======================================================
;;   -- basic block 132 from 1345 to 1347 -- after reload
;;   ======================================================

;;	  0--> b  0: i1345 si=[sp+0x20]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1346 di=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1347 call [`_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1345
;;   new tail = 1347

;;   ======================================================
;;   -- basic block 133 from 1349 to 2251 -- after reload
;;   ======================================================

;;	  0--> b  0: i1349 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i2251 pc=L1350                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1349
;;   new tail = 2251

;;   ======================================================
;;   -- basic block 134 from 1430 to 1432 -- after reload
;;   ======================================================

;;	  0--> b  0: i1430 si=[sp+0x20]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1431 di=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1432 call [`_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1430
;;   new tail = 1432

;;   ======================================================
;;   -- basic block 135 from 2254 to 2254 -- after reload
;;   ======================================================

;;	  0--> b  0: i2254 pc=L1433                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2254
;;   new tail = 2254

;;   ======================================================
;;   -- basic block 136 from 1054 to 1056 -- after reload
;;   ======================================================

;;	  0--> b  0: i1054 si=[sp+0x20]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1055 di=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1056 call [`_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1054
;;   new tail = 1056

;;   ======================================================
;;   -- basic block 137 from 1058 to 2256 -- after reload
;;   ======================================================

;;	  0--> b  0: i1058 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i2256 pc=L1059                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1058
;;   new tail = 2256

;;   ======================================================
;;   -- basic block 138 from 940 to 942 -- after reload
;;   ======================================================

;;	  0--> b  0: i 940 si=[sp+0x20]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 941 di=[sp+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 942 call [`_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 940
;;   new tail = 942

;;   ======================================================
;;   -- basic block 139 from 944 to 2258 -- after reload
;;   ======================================================

;;	  0--> b  0: i 944 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i2258 pc=L945                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 944
;;   new tail = 2258

;;   ======================================================
;;   -- basic block 140 from 851 to 853 -- after reload
;;   ======================================================

;;	  0--> b  0: i 851 si=[sp+0x20]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 852 di=[sp+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 853 call [`_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 851
;;   new tail = 853

;;   ======================================================
;;   -- basic block 141 from 855 to 2260 -- after reload
;;   ======================================================

;;	  0--> b  0: i 855 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1968 cx=dx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 856 {cx=cx>>0x1f;clobber flags;}            :athlon-direct,athlon-ieu
;;	  5--> b  0: i1970 ax=cx                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i 857 {ax=ax^dx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  7--> b  0: i 858 {ax=ax-cx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  7--> b  0: i2260 pc=L859                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 855
;;   new tail = 2260

;;   ======================================================
;;   -- basic block 142 from 749 to 751 -- after reload
;;   ======================================================

;;	  0--> b  0: i 749 si=[sp+0x20]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 750 di=[sp+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 751 call [`_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 749
;;   new tail = 751

;;   ======================================================
;;   -- basic block 143 from 753 to 2262 -- after reload
;;   ======================================================

;;	  0--> b  0: i 753 dx=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1956 cx=dx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 754 {cx=cx>>0x1f;clobber flags;}            :athlon-direct,athlon-ieu
;;	  5--> b  0: i1958 ax=cx                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i 755 {ax=ax^dx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  7--> b  0: i 756 {ax=ax-cx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  7--> b  0: i2262 pc=L757                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 753
;;   new tail = 2262

;;   ======================================================
;;   -- basic block 144 from 2006 to 347 -- after reload
;;   ======================================================

;;	  0--> b  0: i2006 si=r15+0x50                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 346 di=bp                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 347 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2006
;;   new tail = 347

;;   ======================================================
;;   -- basic block 145 from 2265 to 2265 -- after reload
;;   ======================================================

;;	  0--> b  0: i2265 pc=L366                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2265
;;   new tail = 2265

;;   ======================================================
;;   -- basic block 146 from 1601 to 1605 -- after reload
;;   ======================================================

;;	  0--> b  0: i1602 ax=[sp+0xd8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1601 [sp+0x50]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1603 [sp+0x58]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1604 ax=[sp+0xe0]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1605 [sp+0x60]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 6
;;   new head = 1602
;;   new tail = 1605

;;   ======================================================
;;   -- basic block 147 from 2012 to 2267 -- after reload
;;   ======================================================

;;	  0--> b  0: i2012 ax=r12+0x10                             :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i 245 [sp+0xd0]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i2267 pc=L256                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2012
;;   new tail = 2267

;;   ======================================================
;;   -- basic block 148 from 1610 to 1614 -- after reload
;;   ======================================================

;;	  0--> b  0: i1611 ax=[sp+0xb8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1610 [sp+0x50]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1612 [sp+0x58]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1613 ax=[sp+0xc0]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1614 [sp+0x60]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 6
;;   new head = 1611
;;   new tail = 1614

;;   ======================================================
;;   -- basic block 149 from 2007 to 2269 -- after reload
;;   ======================================================

;;	  0--> b  0: i2007 ax=r12+0x10                             :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i 313 [sp+0xb0]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i2269 pc=L324                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2007
;;   new tail = 2269

;;   ======================================================
;;   -- basic block 150 from 320 to 2271 -- after reload
;;   ======================================================

;;	  0--> b  0: i 320 si=r12                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 321 di=bp                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 322 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_']:athlon-vector,athlon-ieu
;;	  2--> b  0: i 323 ax=[sp+0xb0]                            :athlon-direct,athlon-load
;;	  2--> b  0: i2271 pc=L324                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 320
;;   new tail = 2271

;;   ======================================================
;;   -- basic block 151 from 252 to 2273 -- after reload
;;   ======================================================

;;	  0--> b  0: i 252 si=r12                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 253 di=bp                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 254 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_']:athlon-vector,athlon-ieu
;;	  2--> b  0: i 255 ax=[sp+0xd0]                            :athlon-direct,athlon-load
;;	  2--> b  0: i2273 pc=L256                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 252
;;   new tail = 2273

;;   ======================================================
;;   -- basic block 153 from 1675 to 1545 -- after reload
;;   ======================================================

;;	  0--> b  0: i1541 di=[sp+0x50]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1543 {bp=bp+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  0--> b  0: i1675 bx=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1544 flags=cmp(di,bp)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i1545 pc={(flags==0)?L1583:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1541
;;   new tail = 1545

;;   ======================================================
;;   -- basic block 154 from 1578 to 1578 -- after reload
;;   ======================================================

;;	  0--> b  0: i1578 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1578
;;   new tail = 1578

;;   ======================================================
;;   -- basic block 155 from 1586 to 1587 -- after reload
;;   ======================================================

;;	  0--> b  0: i1586 di=r15                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1587 call [`_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1586
;;   new tail = 1587

;;   ======================================================
;;   -- basic block 156 from 1593 to 1594 -- after reload
;;   ======================================================

;;	  0--> b  0: i1593 di=[sp+0x10]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1594 call [`_ZN7Pythia86PythiaD1Ev']         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1593
;;   new tail = 1594

;;   ======================================================
;;   -- basic block 157 from 1596 to 1597 -- after reload
;;   ======================================================

;;	  0--> b  0: i1596 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1597 call [`_Unwind_Resume']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1596
;;   new tail = 1597

;;   ======================================================
;;   -- basic block 158 from 1695 to 147 -- after reload
;;   ======================================================

;;	  0--> b  0: i1695 bx=ax                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1938 ax=[const(unspec[`_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE'] 2)]:athlon-direct,athlon-load
;;	  0--> b  0: i 143 di=[sp+0x1c0]                           :athlon-direct,athlon-load
;;	  3--> b  0: i2174 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i 142 [sp+0x178]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i2021 ax=r15+0x60                             :athlon-direct,athlon-agu,nothing
;;	  6--> b  0: i 146 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  7--> b  0: i 147 pc={(flags==0)?L151:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1695
;;   new tail = 147

;;   ======================================================
;;   -- basic block 159 from 150 to 150 -- after reload
;;   ======================================================

;;	  0--> b  0: i 150 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 150
;;   new tail = 150

;;   ======================================================
;;   -- basic block 160 from 1939 to 164 -- after reload
;;   ======================================================

;;	  0--> b  0: i1939 ax=[const(unspec[`_ZTVSt15basic_streambufIcSt11char_traitsIcEE'] 2)]:athlon-direct,athlon-load
;;	  0--> b  0: i2020 di=r15+0x40                             :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i2173 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i 155 [sp+0x178]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i 159 call [`_ZNSt6localeD1Ev']               :athlon-vector,athlon-ieu
;;	  6--> b  0: i 163 ax=[bp-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i 162 [sp+0x170]=bp                           :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i 164 [sp+ax+0x170]=r12                       :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 9
;;   new head = 1939
;;   new tail = 164

;;   ======================================================
;;   -- basic block 161 from 1940 to 2275 -- after reload
;;   ======================================================

;;	  0--> b  0: i1940 ax=[const(unspec[`_ZTVSt9basic_iosIcSt11char_traitsIcEE'] 2)]:athlon-direct,athlon-load
;;	  0--> b  0: i2019 di=r15+0x70                             :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i2172 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i 171 [sp+0x1e0]=ax                           :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i 175 call [`_ZNSt8ios_baseD2Ev']             :athlon-vector,athlon-ieu
;;	  6--> b  0: i2275 pc=L1590                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 1940
;;   new tail = 2275

;;   ======================================================
;;   -- basic block 162 from 1689 to 2277 -- after reload
;;   ======================================================

;;	  0--> b  0: i1689 bx=ax                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i2277 pc=L167                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1689
;;   new tail = 2277

;;   ======================================================
;;   -- basic block 163 from 1669 to 2279 -- after reload
;;   ======================================================

;;	  0--> b  0: i1669 bx=ax                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i2279 pc=L1583                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1669
;;   new tail = 2279

;;   ======================================================
;;   -- basic block 164 from 1659 to 1529 -- after reload
;;   ======================================================

;;	  0--> b  0: i1525 di=[sp+0x30]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1527 {bp=bp+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  0--> b  0: i1659 bx=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1528 flags=cmp(di,bp)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i1529 pc={(flags==0)?L1590:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1525
;;   new tail = 1529

;;   ======================================================
;;   -- basic block 165 from 1532 to 2281 -- after reload
;;   ======================================================

;;	  0--> b  0: i1532 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	  1--> b  0: i2281 pc=L1590                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1532
;;   new tail = 2281

;;   ======================================================
;;   -- basic block 166 from 542 to 542 -- after reload
;;   ======================================================

;;	  0--> b  0: i 542 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 542
;;   new tail = 542

;;   ======================================================
;;   -- basic block 167 from 1663 to 2283 -- after reload
;;   ======================================================

;;	  0--> b  0: i1663 bx=ax                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i2283 pc=L1590                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1663
;;   new tail = 2283

;;   ======================================================
;;   -- basic block 168 from 1656 to 1513 -- after reload
;;   ======================================================

;;	  0--> b  0: i1509 di=[sp+0x170]                           :athlon-direct,athlon-load
;;	  0--> b  0: i1656 bx=ax                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1999 ax=r15+0x10                             :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i1512 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i1513 pc={(flags==0)?L2065:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1509
;;   new tail = 1513

;;   ======================================================
;;   -- basic block 169 from 1516 to 2285 -- after reload
;;   ======================================================

;;	  0--> b  0: i1516 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	  1--> b  0: i2285 pc=L2065                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1516
;;   new tail = 2285

;;   ======================================================
;;   -- basic block 170 from 2287 to 2287 -- after reload
;;   ======================================================

;;	  0--> b  0: i2287 pc=L2071                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2287
;;   new tail = 2287

;;   ======================================================
;;   -- basic block 171 from 1679 to 1679 -- after reload
;;   ======================================================

;;	  0--> b  0: i1679 bx=ax                                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1679
;;   new tail = 1679

;;   ======================================================
;;   -- basic block 172 from 1571 to 1575 -- after reload
;;   ======================================================

;;	  0--> b  0: i1571 di=[sp+0x70]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1573 {bp=bp+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  3--> b  0: i1574 flags=cmp(di,bp)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i1575 pc={(flags!=0)?L2057:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1571
;;   new tail = 1575

;;   ======================================================
;;   -- basic block 173 from 2290 to 2290 -- after reload
;;   ======================================================

;;	  0--> b  0: i2290 pc=L1583                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2290
;;   new tail = 2290

;;   ======================================================
;;   -- basic block 174 from 1685 to 1561 -- after reload
;;   ======================================================

;;	  0--> b  0: i1557 di=[sp+0x90]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1559 {r12=r12+0x10;clobber flags;}           :athlon-direct,athlon-ieu
;;	  0--> b  0: i1685 bx=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1560 flags=cmp(di,r12)                       :athlon-direct,athlon-ieu
;;	  4--> b  0: i1561 pc={(flags==0)?L1569:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1557
;;   new tail = 1561

;;   ======================================================
;;   -- basic block 175 from 1564 to 2292 -- after reload
;;   ======================================================

;;	  0--> b  0: i1564 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	  1--> b  0: i2292 pc=L1569                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1564
;;   new tail = 2292

;;   ======================================================
;;   -- basic block 176 from 440 to 440 -- after reload
;;   ======================================================

;;	  0--> b  0: i 440 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 440
;;   new tail = 440



starting the processing of deferred insns
ending the processing of deferred insns


bool runPythia(int, int, const Pythia8::Vec4&, unsigned int, unsigned int, std::vector<Pythia8::Particle>&, std::vector<Pythia8::Particle>&, unsigned int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  ref usage 	r0={211d,364u} r1={192d,126u,2e} r2={89d,81u} r3={13d,28u,5e} r4={119d,52u} r5={141d,88u} r6={17d,38u,1e} r7={15d,635u} r8={67d} r9={67d} r10={67d} r11={67d} r12={67d} r13={67d} r14={67d} r15={67d} r16={10u,1e} r17={211d,66u} r18={67d} r19={67d} r20={228e} r21={168d,101u} r22={77d,9u} r23={69d,1u} r24={68d} r25={68d} r26={68d} r27={68d} r28={68d} r29={67d} r30={67d} r31={67d} r32={67d} r33={67d} r34={67d} r35={67d} r36={67d} r37={69d,2u} r38={69d,2u} r39={67d} r40={67d} r41={13d,31u,1e} r42={5d,18u,1e} r43={6d,9u,1e} r44={3d,23u} r45={67d} r46={67d} r47={67d} r48={67d} r49={67d} r50={67d} r51={67d} r52={67d} r53={67d} r54={67d} r55={67d} r56={67d} r57={67d} r58={67d} r59={67d} r60={67d} r61={67d} r62={67d} r63={67d} r64={67d} r65={67d} r66={67d} r67={67d} r68={67d} r69={67d} r70={67d} r71={67d} r72={67d} r73={67d} r74={67d} r75={67d} r76={67d} r77={67d} r78={67d} r79={67d} r80={67d} 
;;    total ref usage 7503{5579d,1684u,240e} in 1118{1051 regular + 67 call} insns.
(note 2 0 21 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(note 21 2 11 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 11 21 2032 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 2032 11 2033 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 44 r15)) mymainCascade.cc:75 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))
(insn/f 2033 2032 7 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) mymainCascade.cc:75 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn 7 2033 2034 2 (set (reg/v:SI 43 r14 [orig:459 frameType ] [459])
        (reg:SI 37 r8 [ frameType ])) mymainCascade.cc:75 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ frameType ])
        (nil)))
(insn/f:TI 2034 7 2035 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) mymainCascade.cc:75 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 2035 2034 6 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) mymainCascade.cc:75 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn 6 2035 2036 2 (set (reg/v:SI 42 r13 [orig:458 doAllQCD ] [458])
        (reg:SI 2 cx [ doAllQCD ])) mymainCascade.cc:75 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ doAllQCD ])
        (nil)))
(insn/f:TI 2036 6 2037 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) mymainCascade.cc:75 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 2037 2036 2038 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) mymainCascade.cc:75 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f:TI 2038 2037 2039 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -293864 [0xfffffffffffb8418])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mymainCascade.cc:75 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -293864 [0xfffffffffffb8418])))
            (nil))))
(note 2039 2038 2029 2 NOTE_INSN_PROLOGUE_END)
(insn:TI 2029 2039 4 2 (set (reg/f:DI 44 r15 [809])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 368 [0x170]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 4 2029 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [789 %sfp+-293824 S4 A64])
        (reg:SI 4 si [ idB ])) mymainCascade.cc:75 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ idB ])
        (nil)))
(insn 5 4 28 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [789 %sfp+-293816 S8 A64])
        (reg:DI 1 dx [ p4A ])) mymainCascade.cc:75 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ p4A ])
        (nil)))
(insn:TI 28 5 27 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fb2b6b5cf30 *.LC23>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 27 28 3 2 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fb2b6b5cf30 *.LC23>)
                (const_int 23 [0x17])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 3 27 2030 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 28 [0x1c])) [789 %sfp+-293828 S4 A32])
        (reg:SI 5 di [ idA ])) mymainCascade.cc:75 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ idA ])
        (nil)))
(insn:TI 2030 3 29 2 (set (reg/f:DI 0 ax [466])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 29 2030 8 2 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [809])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293488 [0xfffffffffffb8590]))
        (nil)))
(insn 8 29 9 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-293848 S8 A64])
        (reg:DI 38 r9 [ aStash ])) mymainCascade.cc:75 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ aStash ])
        (nil)))
(insn:TI 9 8 25 2 (set (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 293920 [0x47c20])) [791 aMesons+0 S8 A64])) mymainCascade.cc:75 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [791 aMesons+0 S8 A64])
        (nil)))
(insn:TI 25 9 30 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 368 [0x170])) [5 MEM[(struct _Alloc_hider *)&D.337269]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [466])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [466])
        (nil)))
(call_insn:TI 30 25 2031 2 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 2031 30 2181 2 (set (reg/f:DI 0 ax [807])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 752 [0x2f0]))) mymainCascade.cc:77 215 {*leadi}
     (nil))
(insn 2181 2031 34 2 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:77 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 34 2181 35 2 (set (reg:DI 4 si)
        (reg/f:DI 44 r15 [809])) mymainCascade.cc:77 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293488 [0xfffffffffffb8590]))
        (nil)))
(insn:TI 35 34 1988 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [807])) mymainCascade.cc:77 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [807])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -293104 [0xfffffffffffb8710]))
            (nil))))
(insn 1988 35 36 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [789 %sfp+-293840 S8 A64])
        (reg/f:DI 0 ax [807])) mymainCascade.cc:77 85 {*movdi_internal}
     (nil))
(call_insn:TI 36 1988 37 2 (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86PythiaC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b6f7da80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) mymainCascade.cc:77 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86PythiaC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b6f7da80 __comp_ctor >)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       168 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 3, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 38 37 2028 3 (set (reg/f:DI 5 di [orig:121 _101 ] [121])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 368 [0x170])) [5 MEM[(char * *)&D.337269]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 2028 38 41 3 (set (reg/f:DI 0 ax [471])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 41 2028 42 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:121 _101 ] [121])
            (reg/f:DI 0 ax [471]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [471])
        (nil)))
(jump_insn:TI 42 41 43 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 46)
;;  succ:       4 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              5 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 4, loop depth 0, count 0, freq 376, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL)
;;  pred:       3 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 43 42 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 45 43 46 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 5, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL)
;;  pred:       3 [30.2%]  (CAN_FALLTHRU)
;;              4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp]
;; live  kill	
(code_label 46 45 47 5 198 "" [1 uses])
(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 48 47 52 5 (set (reg/f:DI 6 bp [798])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -293808 [0xfffffffffffb8450]))
        (nil)))
(insn 52 48 53 5 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fb2b6b5c000 *.LC24>)
                (const_int 19 [0x13])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 53 52 2027 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fb2b6b5c000 *.LC24>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 2027 53 54 5 (set (reg/f:DI 0 ax [473])
        (plus:DI (reg/f:DI 6 bp [798])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 54 2027 50 5 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [798])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293808 [0xfffffffffffb8450]))
        (nil)))
(insn:TI 50 54 55 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [5 MEM[(struct _Alloc_hider *)&D.337362]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [473])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [473])
        (nil)))
(call_insn:TI 55 50 56 5 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 6 [0x6])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              167 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 6, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL)
;;  pred:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 56 55 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 61 56 59 6 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [789 %sfp+-293840 S8 A64])) mymainCascade.cc:80 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293104 [0xfffffffffffb8710]))
        (nil)))
(insn 59 61 60 6 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) mymainCascade.cc:80 86 {*movsi_internal}
     (nil))
(insn 60 59 62 6 (set (reg:DI 4 si)
        (reg/f:DI 6 bp [798])) mymainCascade.cc:80 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293808 [0xfffffffffffb8450]))
        (nil)))
(call_insn:TI 62 60 63 6 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>) [0 readString S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:80 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:QI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 5 [0x5])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       164 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 7, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn:TI 64 63 66 7 (set (reg/f:DI 5 di [orig:123 _111 ] [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [5 MEM[(char * *)&D.337362]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 66 64 67 7 (parallel [
            (set (reg/f:DI 6 bp [478])
                (plus:DI (reg/f:DI 6 bp [798])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 67 66 68 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:123 _111 ] [123])
            (reg/f:DI 6 bp [478]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [478])
        (nil)))
(jump_insn:TI 68 67 69 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 72)
;;  succ:       8 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              9 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 8, loop depth 0, count 0, freq 376, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL)
;;  pred:       7 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 69 68 71 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 71 69 72 8 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 9, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [30.2%]  (CAN_FALLTHRU)
;;              8 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 6 [bp] 41 [r12]
;; live  kill	 17 [flags]
(code_label 72 71 73 9 199 "" [1 uses])
(note 73 72 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 78 73 88 9 NOTE_INSN_DELETED)
(note 88 78 92 9 NOTE_INSN_DELETED)
(note 92 88 2026 9 NOTE_INSN_DELETED)
(insn:TI 2026 92 77 9 (set (reg/f:DI 5 di [480])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 112 [0x70]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:462 215 {*leadi}
     (nil))
(call_insn:TI 77 2026 1929 9 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_baseC2Ev") [flags 0x41]  <function_decl 0x7fb2bdfd3700 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:462 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_baseC2Ev") [flags 0x41]  <function_decl 0x7fb2bdfd3700 __base_ctor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn:TI 1929 77 82 9 (set (reg:DI 0 ax [813])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVSt9basic_iosIcSt11char_traitsIcEE") [flags 0x40]  <var_decl 0x7fb2bde766c0 _ZTVSt9basic_iosIcSt11char_traitsIcEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:462 85 {*movdi_internal}
     (nil))
(insn 82 1929 1931 9 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 704 [0x2c0])) [0 MEM[(struct basic_ios *)&lseed + 112B]._M_fill+0 S1 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:462 89 {*movqi_internal}
     (nil))
(insn 1931 82 81 9 (set (reg/f:DI 5 di [orig:149 _185 ] [149])
        (reg/f:DI 44 r15 [809])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:385 85 {*movdi_internal}
     (nil))
(insn:TI 81 1931 83 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 696 [0x2b8])) [257 MEM[(struct basic_ios *)&lseed + 112B]._M_tie+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:462 85 {*movdi_internal}
     (nil))
(insn 83 81 2180 9 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 705 [0x2c1])) [141 MEM[(struct basic_ios *)&lseed + 112B]._M_fill_init+0 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:462 89 {*movqi_internal}
     (nil))
(insn 2180 83 84 9 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:385 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 84 2180 85 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 712 [0x2c8])) [258 MEM[(struct basic_ios *)&lseed + 112B]._M_streambuf+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:462 85 {*movdi_internal}
     (nil))
(insn 85 84 2179 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 720 [0x2d0])) [259 MEM[(struct basic_ios *)&lseed + 112B]._M_ctype+0 S8 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:462 85 {*movdi_internal}
     (nil))
(insn:TI 2179 85 86 9 (parallel [
            (set (reg/f:DI 0 ax [481])
                (plus:DI (reg/f:DI 0 ax [481])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:462 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 86 2179 87 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 728 [0x2d8])) [260 MEM[(struct basic_ios *)&lseed + 112B]._M_num_put+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:462 85 {*movdi_internal}
     (nil))
(insn 87 86 80 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 736 [0x2e0])) [261 MEM[(struct basic_ios *)&lseed + 112B]._M_num_get+0 S8 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:462 85 {*movdi_internal}
     (nil))
(insn:TI 80 87 1930 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 480 [0x1e0])) [150 MEM[(struct basic_ios *)&lseed + 112B].D.51166._vptr.ios_base+0 S8 A128])
        (reg/f:DI 0 ax [481])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:462 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [481])
        (nil)))
(insn 1930 80 89 9 (set (reg:DI 0 ax [814])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE") [flags 0x40]  <var_decl 0x7fb2bd7c1d80 _ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:385 85 {*movdi_internal}
     (nil))
(insn:TI 89 1930 95 9 (set (reg/f:DI 6 bp [orig:146 _182 ] [146])
        (mem/u/f/c:DI (plus:DI (reg:DI 0 ax [814])
                (const_int 8 [0x8])) [2 MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:385 85 {*movdi_internal}
     (nil))
(insn 95 89 93 9 (set (reg/f:DI 41 r12 [orig:150 _186 ] [150])
        (mem/u/f/c:DI (plus:DI (reg:DI 0 ax [816])
                (const_int 16 [0x10])) [2 MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:385 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [816])
        (nil)))
(insn:TI 93 95 90 9 (parallel [
            (set (reg/f:DI 5 di [orig:149 _185 ] [149])
                (plus:DI (reg/f:DI 5 di [orig:149 _185 ] [149])
                    (mem:DI (plus:DI (reg/f:DI 6 bp [orig:146 _182 ] [146])
                            (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_182 + -24B]+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:385 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 90 93 96 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 368 [0x170])) [150 MEM[(struct basic_ostream *)&lseed]._vptr.basic_ostream+0 S8 A128])
        (reg/f:DI 6 bp [orig:146 _182 ] [146])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:385 85 {*movdi_internal}
     (nil))
(insn:TI 96 90 99 9 (set (mem/f:DI (reg/f:DI 5 di [orig:149 _185 ] [149]) [150 _185->D.51166._vptr.ios_base+0 S8 A64])
        (reg/f:DI 41 r12 [orig:150 _186 ] [150])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:385 85 {*movdi_internal}
     (nil))
(call_insn:TI 99 96 100 9 (call (mem:QI (symbol_ref:DI ("_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E") [flags 0x41]  <function_decl 0x7fb2bde82e00 init>) [0 init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:385 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 13 [0xd])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E") [flags 0x41]  <function_decl 0x7fb2bde82e00 init>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       10 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              162 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 10, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 100 99 101 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 101 100 107 10 NOTE_INSN_DELETED)
(note 107 101 120 10 NOTE_INSN_DELETED)
(note 120 107 1934 10 NOTE_INSN_DELETED)
(insn:TI 1934 120 2022 10 (set (reg:DI 0 ax [817])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE") [flags 0x40]  <var_decl 0x7fb2bd7c1c60 _ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:548 85 {*movdi_internal}
     (nil))
(insn 2022 1934 110 10 (set (reg/f:DI 5 di [494])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 64 [0x40]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:466 215 {*leadi}
     (nil))
(insn 110 2022 111 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 384 [0x180])) [5 MEM[(struct basic_streambuf *)&lseed + 8B]._M_in_beg+0 S8 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:466 85 {*movdi_internal}
     (nil))
(insn:TI 111 110 112 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 392 [0x188])) [5 MEM[(struct basic_streambuf *)&lseed + 8B]._M_in_cur+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:466 85 {*movdi_internal}
     (nil))
(insn 112 111 113 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 400 [0x190])) [5 MEM[(struct basic_streambuf *)&lseed + 8B]._M_in_end+0 S8 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:466 85 {*movdi_internal}
     (nil))
(insn:TI 113 112 114 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 408 [0x198])) [5 MEM[(struct basic_streambuf *)&lseed + 8B]._M_out_beg+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:466 85 {*movdi_internal}
     (nil))
(insn 114 113 2175 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 416 [0x1a0])) [5 MEM[(struct basic_streambuf *)&lseed + 8B]._M_out_cur+0 S8 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:466 85 {*movdi_internal}
     (nil))
(insn:TI 2175 114 115 10 (parallel [
            (set (reg/f:DI 0 ax [487])
                (plus:DI (reg/f:DI 0 ax [487])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:548 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 115 2175 103 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 424 [0x1a8])) [5 MEM[(struct basic_streambuf *)&lseed + 8B]._M_out_end+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:466 85 {*movdi_internal}
     (nil))
(insn:TI 103 115 1935 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 368 [0x170])) [150 lseed.D.61845._vptr.basic_ostream+0 S8 A128])
        (reg/f:DI 0 ax [487])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:548 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [487])
        (nil)))
(insn 1935 103 2176 10 (set (reg:DI 0 ax [818])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE") [flags 0x40]  <var_decl 0x7fb2bd7c1c60 _ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:548 85 {*movdi_internal}
     (nil))
(insn:TI 2176 1935 106 10 (parallel [
            (set (reg/f:DI 0 ax [489])
                (plus:DI (reg/f:DI 0 ax [489])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:548 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 106 2176 1936 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 480 [0x1e0])) [150 MEM[(struct basic_ios *)&lseed + 112B].D.51166._vptr.ios_base+0 S8 A128])
        (reg/f:DI 0 ax [489])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:548 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [489])
        (nil)))
(insn 1936 106 2177 10 (set (reg:DI 0 ax [819])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVSt15basic_streambufIcSt11char_traitsIcEE") [flags 0x40]  <var_decl 0x7fb2be02e870 _ZTVSt15basic_streambufIcSt11char_traitsIcEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:466 85 {*movdi_internal}
     (nil))
(insn:TI 2177 1936 109 10 (parallel [
            (set (reg/f:DI 0 ax [491])
                (plus:DI (reg/f:DI 0 ax [491])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:466 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 109 2177 119 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 376 [0x178])) [150 MEM[(struct basic_streambuf *)&lseed + 8B]._vptr.basic_streambuf+0 S8 A64])
        (reg/f:DI 0 ax [491])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:466 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [491])
        (nil)))
(call_insn:TI 119 109 1937 10 (call (mem:QI (symbol_ref:DI ("_ZNSt6localeC1Ev") [flags 0x41]  <function_decl 0x7fb2be2c4380 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:466 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt6localeC1Ev") [flags 0x41]  <function_decl 0x7fb2be2c4380 __comp_ctor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn:TI 1937 119 2024 10 (set (reg:DI 0 ax [820])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE") [flags 0x40]  <var_decl 0x7fb2bd7c1b40 _ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:101 85 {*movdi_internal}
     (nil))
(insn 2024 1937 2025 10 (set (reg/f:DI 4 si [500])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 8 [0x8]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:549 215 {*leadi}
     (nil))
(insn 2025 2024 123 10 (set (reg/f:DI 5 di [502])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 112 [0x70]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:549 215 {*leadi}
     (nil))
(insn:TI 123 2025 127 10 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 440 [0x1b8])) [270 MEM[(struct basic_stringbuf *)&lseed + 8B]._M_mode+0 S4 A64])
        (const_int 16 [0x10])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:101 86 {*movsi_internal}
     (nil))
(insn 127 123 128 10 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 456 [0x1c8])) [6 MEM[(size_type *)&lseed + 88B]+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (nil))
(insn:TI 128 127 2178 10 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 464 [0x1d0])) [0 MEM[(char_type &)&lseed + 96]+0 S1 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:243 89 {*movqi_internal}
     (nil))
(insn:TI 2178 128 122 10 (parallel [
            (set (reg/f:DI 0 ax [495])
                (plus:DI (reg/f:DI 0 ax [495])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:101 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 122 2178 2023 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 376 [0x178])) [150 MEM[(struct basic_stringbuf *)&lseed + 8B].D.61589._vptr.basic_streambuf+0 S8 A64])
        (reg/f:DI 0 ax [495])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:101 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [495])
        (nil)))
(insn 2023 122 126 10 (set (reg/f:DI 0 ax [498])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 96 [0x60]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn:TI 126 2023 135 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 448 [0x1c0])) [5 MEM[(struct _Alloc_hider *)&lseed + 80B]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [498])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [498])
        (nil)))
(call_insn:TI 135 126 181 10 (call (mem:QI (symbol_ref:DI ("_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E") [flags 0x41]  <function_decl 0x7fb2bde82e00 init>) [0 init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:549 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 15 [0xf])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E") [flags 0x41]  <function_decl 0x7fb2bde82e00 init>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       158 (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 11, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL)
;;  pred:       10 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 181 135 184 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn:TI 184 181 183 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fb2b6b5c090 *.LC25>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 183 184 185 11 (set (reg:DI 1 dx)
        (const_int 14 [0xe])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 185 183 186 11 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [809])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293488 [0xfffffffffffb8590]))
        (nil)))
(call_insn:TI 186 185 187 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 7 [0x7])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 12, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 187 186 2171 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2171 187 190 12 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:82 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 190 2171 191 12 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [809])) mymainCascade.cc:82 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293488 [0xfffffffffffb8590]))
        (nil)))
(call_insn:TI 191 190 192 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:82 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 7 [0x7])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       163 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 13, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 6 [bp] 17 [flags]
;; live  kill	
(note 192 191 2017 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2017 192 196 13 (set (reg/f:DI 6 bp [799])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 80 [0x50]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 196 2017 197 13 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 88 [0x58])) [6 MEM[(size_type *)&D.337367 + 8B]+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (nil))
(insn 197 196 2018 13 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 MEM[(char_type &)&D.337367 + 16]+0 S1 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:243 89 {*movqi_internal}
     (nil))
(insn:TI 2018 197 195 13 (set (reg/f:DI 0 ax [527])
        (plus:DI (reg/f:DI 6 bp [799])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn:TI 195 2018 198 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [5 MEM[(struct _Alloc_hider *)&D.337367]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [527])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [527])
        (nil)))
(insn 198 195 199 13 (set (reg/f:DI 0 ax [orig:155 _200 ] [155])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 416 [0x1a0])) [5 MEM[(char_type * *)&lseed + 48B]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 199 198 200 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:155 _200 ] [155])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:169 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 200 199 201 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 340)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:169 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 340)
;;  succ:       14 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              144 [6.7%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 14, loop depth 0, count 0, freq 502, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(note 201 200 202 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn:TI 202 201 203 14 (set (reg/f:DI 1 dx [orig:156 _201 ] [156])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 400 [0x190])) [5 MEM[(char_type * *)&lseed + 32B]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 203 202 204 14 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 0 ax [orig:155 _200 ] [155])
            (reg/f:DI 1 dx [orig:156 _201 ] [156]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:172 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 204 203 273 14 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2202)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:172 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 2202)
;;  succ:       88 [50.0%]  (CAN_FALLTHRU)
;;              15 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 15, loop depth 0, count 0, freq 251, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL)
;;  pred:       14 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 41 [r12]
;; live  kill	
(note 273 204 2010 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2010 273 280 15 (set (reg/f:DI 41 r12 [803])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 176 [0xb0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 280 2010 2011 15 (set (reg:DI 4 si)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 408 [0x198])) [5 MEM[(char_type * *)&lseed + 40B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 2011 280 281 15 (set (reg/f:DI 0 ax [544])
        (plus:DI (reg/f:DI 41 r12 [803])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 281 2011 277 15 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [803])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293680 [0xfffffffffffb84d0]))
        (nil)))
(insn:TI 277 281 282 15 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [5 MEM[(struct _Alloc_hider *)&D.440964]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [544])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [544])
        (nil)))
(call_insn:TI 282 277 283 15 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.62") [flags 0x3]  <function_decl 0x7fb2b329a380 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.62>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.62 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 16 [0x10])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.62") [flags 0x3]  <function_decl 0x7fb2b329a380 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.62>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       16 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              152 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 16, loop depth 0, count 0, freq 251, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	
(note 283 282 285 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn:TI 285 283 2009 16 (set (reg/f:DI 1 dx [orig:170 _221 ] [170])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [5 MEM[(char * *)&D.440964]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 2009 285 284 16 (set (reg/f:DI 2 cx [547])
        (plus:DI (reg/f:DI 41 r12 [803])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:633 215 {*leadi}
     (nil))
(insn 284 2009 288 16 (set (reg/f:DI 0 ax [orig:90 prephitmp_20 ] [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [5 MEM[(char * *)&D.337367]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 288 284 289 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 1 dx [orig:170 _221 ] [170])
            (reg/f:DI 2 cx [547]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:633 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [547])
        (nil)))
(jump_insn:TI 289 288 290 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 316)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:633 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 316)
;;  succ:       17 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              150 [6.7%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 17, loop depth 0, count 0, freq 234, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
(note 290 289 2008 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2008 290 293 17 (set (reg/f:DI 2 cx [549])
        (plus:DI (reg/f:DI 6 bp [799])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:639 215 {*leadi}
     (nil))
(insn:TI 293 2008 294 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:90 prephitmp_20 ] [90])
            (reg/f:DI 2 cx [549]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:639 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [549])
        (nil)))
(jump_insn:TI 294 293 295 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1608)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:639 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 1608)
;;  succ:       18 [85.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              148 [15.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 18, loop depth 0, count 0, freq 199, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [85.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	
(note 295 294 297 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn:TI 297 295 298 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [5 MEM[(char * *)&D.337367]+0 S8 A128])
        (reg/f:DI 1 dx [orig:170 _221 ] [170])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:128 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:170 _221 ] [170])
        (nil)))
(insn 298 297 302 18 (set (reg:DI 1 dx [orig:550 MEM[(long unsigned int *)&D.440964 + 8B] ] [550])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 184 [0xb8])) [6 MEM[(long unsigned int *)&D.440964 + 8B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293672 [0xfffffffffffb84d8])) [6 MEM[(long unsigned int *)&D.440964 + 8B]+0 S8 A64])
        (nil)))
(insn 302 298 296 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:90 prephitmp_20 ] [90])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:653 4 {*cmpdi_ccno_1}
     (nil))
(insn:TI 296 302 299 18 (set (reg/v:DI 2 cx [orig:171 __capacity ] [171])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 D.337367.D.24452._M_allocated_capacity+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:644 85 {*movdi_internal}
     (nil))
(insn:TI 299 296 300 18 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 88 [0x58])) [6 MEM[(size_type *)&D.337367 + 8B]+0 S8 A64])
        (reg:DI 1 dx [orig:550 MEM[(long unsigned int *)&D.440964 + 8B] ] [550])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:550 MEM[(long unsigned int *)&D.440964 + 8B] ] [550])
        (nil)))
(insn 300 299 301 18 (set (reg:DI 1 dx [orig:551 D.440964.D.24452._M_allocated_capacity ] [551])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 192 [0xc0])) [0 D.440964.D.24452._M_allocated_capacity+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:160 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293664 [0xfffffffffffb84e0])) [0 D.440964.D.24452._M_allocated_capacity+0 S8 A128])
        (nil)))
(insn:TI 301 300 303 18 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [6 MEM[(size_type *)&D.337367 + 16B]+0 S8 A128])
        (reg:DI 1 dx [orig:551 D.440964.D.24452._M_allocated_capacity ] [551])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:160 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:551 D.440964.D.24452._M_allocated_capacity ] [551])
        (nil)))
(jump_insn 303 301 304 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 309)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:653 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5 (nil)))
 -> 309)
;;  succ:       19 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              149 [0.1%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 19, loop depth 0, count 0, freq 199, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 2 [cx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 304 303 305 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn:TI 305 304 306 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [5 MEM[(char * *)&D.440964]+0 S8 A128])
        (reg/f:DI 0 ax [orig:90 prephitmp_20 ] [90])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:128 85 {*movdi_internal}
     (nil))
(insn 306 305 324 19 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 192 [0xc0])) [6 MEM[(size_type *)&D.440964 + 16B]+0 S8 A128])
        (reg/v:DI 2 cx [orig:171 __capacity ] [171])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:160 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 2 cx [orig:171 __capacity ] [171])
        (nil)))
;;  succ:       20 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 20, loop depth 0, count 0, freq 251, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       149 [100.0%]  (CAN_FALLTHRU)
;;              19 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              150 [100.0%]  (CAN_FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 41 [r12]
;; lr  def 	 5 [di] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(code_label 324 306 325 20 216 "" [2 uses])
(note 325 324 326 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn:TI 326 325 327 20 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 184 [0xb8])) [6 MEM[(size_type *)&D.440964 + 8B]+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (nil))
(insn 327 326 330 20 (set (mem:QI (reg/f:DI 0 ax [orig:90 prephitmp_20 ] [90]) [0 MEM[(char_type &)prephitmp_20]+0 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:243 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:90 prephitmp_20 ] [90])
        (nil)))
(insn 330 327 328 20 (parallel [
            (set (reg/f:DI 41 r12 [557])
                (plus:DI (reg/f:DI 41 r12 [803])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 328 330 331 20 (set (reg/f:DI 5 di [orig:160 _205 ] [160])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [5 MEM[(char * *)&D.440964]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 331 328 332 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:160 _205 ] [160])
            (reg/f:DI 41 r12 [557]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [557])
        (nil)))
(jump_insn:TI 332 331 2053 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 366)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 366)
;;  succ:       21 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              22 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 21, loop depth 0, count 0, freq 394, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              93 [78.3%]  (CAN_FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 2053 332 333 21 317 "" [1 uses])
(note 333 2053 335 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 335 333 366 21 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 22, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL)
;;  pred:       21 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              20 [21.6%]  (CAN_FALLTHRU)
;;              94 [100.0%]  (CAN_FALLTHRU)
;;              145 [100.0%]  (CAN_FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 366 335 367 22 212 "" [3 uses])
(note 367 366 372 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn:TI 372 367 370 22 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [789 %sfp+-293840 S8 A64])) mymainCascade.cc:83 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293104 [0xfffffffffffb8710]))
        (nil)))
(insn 370 372 371 22 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) mymainCascade.cc:83 86 {*movsi_internal}
     (nil))
(insn 371 370 373 22 (set (reg:DI 4 si)
        (reg/f:DI 6 bp [799])) mymainCascade.cc:83 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293776 [0xfffffffffffb8470]))
        (nil)))
(call_insn:TI 373 371 374 22 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>) [0 readString S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:83 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:QI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia10readStringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2b72727e0 readString>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       170 (ABNORMAL,ABNORMAL_CALL,EH)
;;              23 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 23, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(note 374 373 375 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn:TI 375 374 377 23 (set (reg/f:DI 5 di [orig:109 _74 ] [109])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [5 MEM[(char * *)&D.337367]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 377 375 378 23 (parallel [
            (set (reg/f:DI 6 bp [570])
                (plus:DI (reg/f:DI 6 bp [799])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 378 377 379 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:109 _74 ] [109])
            (reg/f:DI 6 bp [570]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [570])
        (nil)))
(jump_insn:TI 379 378 380 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 383)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 383)
;;  succ:       24 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              25 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 24, loop depth 0, count 0, freq 376, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL)
;;  pred:       23 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 380 379 382 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 382 380 383 24 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       25 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 25, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL)
;;  pred:       23 [30.2%]  (CAN_FALLTHRU)
;;              24 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 38 [r9] 43 [r14]
;; live  kill	
(code_label 383 382 384 25 221 "" [1 uses])
(note 384 383 386 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn:TI 386 384 1989 25 (set (reg:SI 38 r9)
        (reg/v:SI 43 r14 [orig:459 frameType ] [459])) mymainCascade.cc:85 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 43 r14 [orig:459 frameType ] [459])
        (nil)))
(insn 1989 386 388 25 (set (reg/f:DI 43 r14 [807])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [789 %sfp+-293840 S8 A64])) mymainCascade.cc:85 85 {*movdi_internal}
     (nil))
(insn 388 1989 389 25 (set (reg:DI 2 cx)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [789 %sfp+-293816 S8 A64])) mymainCascade.cc:85 85 {*movdi_internal}
     (nil))
(insn:TI 389 388 390 25 (set (reg:SI 1 dx)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [789 %sfp+-293824 S4 A64])) mymainCascade.cc:85 86 {*movsi_internal}
     (nil))
(insn 390 389 387 25 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 28 [0x1c])) [789 %sfp+-293828 S4 A32])) mymainCascade.cc:85 86 {*movsi_internal}
     (nil))
(insn 387 390 391 25 (set (reg:SI 37 r8)
        (reg/v:SI 42 r13 [orig:458 doAllQCD ] [458])) mymainCascade.cc:85 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 r13 [orig:458 doAllQCD ] [458])
        (nil)))
(insn:TI 391 387 392 25 (set (reg:DI 5 di)
        (reg/f:DI 43 r14 [807])) mymainCascade.cc:85 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293104 [0xfffffffffffb8710]))
        (nil)))
(call_insn:TI 392 391 393 25 (call (mem:QI (symbol_ref:DI ("_Z14pythiaSettingsRN7Pythia86PythiaEiiRKNS_4Vec4Ejj") [flags 0x1]  <function_decl 0x7fb2b413d0e0 pythiaSettings>) [0 pythiaSettings S1 A8])
        (const_int 0 [0])) mymainCascade.cc:85 673 {*call}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z14pythiaSettingsRN7Pythia86PythiaEiiRKNS_4Vec4Ejj") [flags 0x1]  <function_decl 0x7fb2b413d0e0 pythiaSettings>)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
;;  succ:       163 (ABNORMAL,ABNORMAL_CALL,EH)
;;              26 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 43 [r14] 44 [r15]

;; basic block 26, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL)
;;  pred:       25 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 393 392 395 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn:TI 395 393 396 26 (set (reg:DI 5 di)
        (reg/f:DI 43 r14 [807])) mymainCascade.cc:87 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [807])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -293104 [0xfffffffffffb8710]))
            (nil))))
(call_insn:TI 396 395 1643 26 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia4initEv") [flags 0x41]  <function_decl 0x7fb2b727fb60 init>) [0 init S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:87 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 7 [0x7])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia4initEv") [flags 0x41]  <function_decl 0x7fb2b727fb60 init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       163 (ABNORMAL,ABNORMAL_CALL,EH)
;;              27 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 44 [r15]

;; basic block 27, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1643 396 399 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn:TI 399 1643 400 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:91 _37 ] [91])
            (const_int 0 [0]))) mymainCascade.cc:87 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:91 _37 ] [91])
        (nil)))
(jump_insn:TI 400 399 405 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 585)
            (pc))) mymainCascade.cc:87 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 585)
;;  succ:       111 [39.0%]  (CAN_FALLTHRU)
;;              28 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

;; basic block 28, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL)
;;  pred:       27 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp]
;; live  kill	
(note 405 400 2004 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2004 405 410 28 (set (reg/f:DI 6 bp [800])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 112 [0x70]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 410 2004 411 28 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fb2b6b5c120 *.LC26>)
                (const_int 11 [0xb])))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn 411 410 2005 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fb2b6b5c120 *.LC26>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 2005 411 412 28 (set (reg/f:DI 0 ax [574])
        (plus:DI (reg/f:DI 6 bp [800])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 412 2005 408 28 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [800])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293744 [0xfffffffffffb8490]))
        (nil)))
(insn:TI 408 412 413 28 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [5 MEM[(struct _Alloc_hider *)&D.337370]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [574])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [574])
        (nil)))
(call_insn:TI 413 408 414 28 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 7 [0x7])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57") [flags 0x3]  <function_decl 0x7fb2b3695540 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.57>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       29 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

;; basic block 29, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL)
;;  pred:       28 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 41 [r12]
;; live  kill	
(note 414 413 1941 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1941 414 2002 29 (set (reg/f:DI 0 ax [807])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [789 %sfp+-293840 S8 A64])) mymainCascade.cc:88 85 {*movdi_internal}
     (nil))
(insn 2002 1941 419 29 (set (reg/f:DI 41 r12 [801])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 144 [0x90]))) mymainCascade.cc:88 215 {*leadi}
     (nil))
(insn 419 2002 420 29 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) mymainCascade.cc:88 86 {*movsi_internal}
     (nil))
(insn:TI 420 419 422 29 (set (reg:DI 1 dx)
        (reg/f:DI 6 bp [800])) mymainCascade.cc:88 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293744 [0xfffffffffffb8490]))
        (nil)))
(insn:TI 422 420 2003 29 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [801])) mymainCascade.cc:88 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293712 [0xfffffffffffb84b0]))
        (nil)))
(insn:TI 2003 422 423 29 (set (reg/f:DI 4 si [579])
        (plus:DI (reg/f:DI 0 ax [807])
            (const_int 2648 [0xa58]))) mymainCascade.cc:88 215 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [807])
        (nil)))
(call_insn:TI 423 2003 424 29 (call (mem:QI (symbol_ref:DI ("_ZN7Pythia88Settings6outputENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2bc308540 output>) [0 output S1 A8])
        (const_int 0 [0])) mymainCascade.cc:88 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 10 [0xa])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia88Settings6outputENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb") [flags 0x41]  <function_decl 0x7fb2bc308540 output>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
;;  succ:       171 (ABNORMAL,ABNORMAL_CALL,EH)
;;              30 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

;; basic block 30, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL)
;;  pred:       29 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 424 423 429 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(note 429 424 427 30 NOTE_INSN_DELETED)
(insn:TI 427 429 428 30 (set (reg:DI 1 dx)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 152 [0x98])) [6 MEM[(long unsigned int *)&D.337371 + 8B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:5330 85 {*movdi_internal}
     (nil))
(insn 428 427 430 30 (set (reg:DI 4 si)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [5 MEM[(char * *)&D.337371]+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:5330 85 {*movdi_internal}
     (nil))
(insn:TI 430 428 431 30 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:5330 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(call_insn:TI 431 430 1644 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:5330 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 11 [0xb])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       174 (ABNORMAL,ABNORMAL_CALL,EH)
;;              31 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

;; basic block 31, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 42 [r13] 43 [r14]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags] 42 [r13] 43 [r14]
;; live  kill	
(note 1644 431 432 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn:TI 432 1644 434 31 (set (reg/f:DI 43 r14 [orig:96 _51 ] [96])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:5330 85 {*movdi_internal}
     (nil))
(insn 434 432 435 31 (set (reg/f:DI 0 ax [orig:583 _51->_vptr.basic_ostream ] [583])
        (mem/f:DI (reg/f:DI 0 ax [orig:96 _51 ] [96]) [150 _51->_vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 43 r14 [orig:96 _51 ] [96]) [150 _51->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 435 434 436 31 (set (reg:DI 0 ax [orig:584 MEM[(long int *)_235 + -24B] ] [584])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:583 _51->_vptr.basic_ostream ] [583])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_235 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 436 435 437 31 (set (reg/f:DI 42 r13 [orig:185 _244 ] [185])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 43 r14 [orig:96 _51 ] [96])
                    (reg:DI 0 ax [orig:584 MEM[(long int *)_235 + -24B] ] [584]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_238]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:584 MEM[(long int *)_235 + -24B] ] [584])
        (nil)))
(insn:TI 437 436 438 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 42 r13 [orig:185 _244 ] [185])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 438 437 443 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2203)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 2203)
;;  succ:       176 [0.0%]  (CAN_FALLTHRU)
;;              32 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 32, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 443 438 444 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn:TI 444 443 445 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 42 r13 [orig:185 _244 ] [185])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_244]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 445 444 446 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 450)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 450)
;;  succ:       33 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              124 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 33, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 446 445 447 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn:TI 447 446 468 33 (set (reg:SI 4 si [orig:141 prephitmp_170 ] [141])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 42 r13 [orig:185 _244 ] [185])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_244]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [orig:185 _244 ] [185])
        (nil)))
;;  succ:       34 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]

;; basic block 34, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL)
;;  pred:       33 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              125 [80.1%]  (CAN_FALLTHRU)
;;              127 [100.0%]  (CAN_FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 468 447 469 34 226 "" [2 uses])
(note 469 468 471 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn:TI 471 469 472 34 (set (reg:DI 5 di)
        (reg/f:DI 43 r14 [orig:96 _51 ] [96])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:96 _51 ] [96])
        (nil)))
(call_insn:TI 472 471 1646 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 11 [0xb])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       174 (ABNORMAL,ABNORMAL_CALL,EH)
;;              35 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

;; basic block 35, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL)
;;  pred:       34 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1646 472 475 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn:TI 475 1646 476 35 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:183 _241 ] [183])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:183 _241 ] [183])
        (nil)))
(call_insn:TI 476 475 477 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 11 [0xb])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       36 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              174 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

;; basic block 36, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 5 [di] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 5 [di] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(note 477 476 478 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn:TI 478 477 480 36 (set (reg/f:DI 5 di [orig:92 _38 ] [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [5 MEM[(char * *)&D.337371]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 480 478 481 36 (parallel [
            (set (reg/f:DI 41 r12 [589])
                (plus:DI (reg/f:DI 41 r12 [801])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 481 480 482 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:92 _38 ] [92])
            (reg/f:DI 41 r12 [589]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [589])
        (nil)))
(jump_insn:TI 482 481 483 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 486)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 486)
;;  succ:       37 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              38 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]

;; basic block 37, loop depth 0, count 0, freq 229, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, RTL)
;;  pred:       36 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 483 482 485 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 485 483 486 37 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       38 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

;; basic block 38, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       36 [30.2%]  (CAN_FALLTHRU)
;;              37 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 486 485 487 38 227 "" [1 uses])
(note 487 486 488 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn:TI 488 487 490 38 (set (reg/f:DI 5 di [orig:93 _43 ] [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [5 MEM[(char * *)&D.337370]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 490 488 491 38 (parallel [
            (set (reg/f:DI 6 bp [591])
                (plus:DI (reg/f:DI 6 bp [800])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 491 490 492 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:93 _43 ] [93])
            (reg/f:DI 6 bp [591]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [591])
        (nil)))
(jump_insn:TI 492 491 493 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 496)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 496)
;;  succ:       39 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              40 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 7 [sp] 44 [r15]

;; basic block 39, loop depth 0, count 0, freq 229, maybe hot
;;  prev block 38, next block 40, flags: (REACHABLE, RTL)
;;  pred:       38 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 493 492 495 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 495 493 496 39 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       40 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

;; basic block 40, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 39, next block 41, flags: (REACHABLE, RTL)
;;  pred:       38 [30.2%]  (CAN_FALLTHRU)
;;              39 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 23 [xmm2]
;; live  kill	
(code_label 496 495 497 40 228 "" [1 uses])
(note 497 496 1990 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(note 1990 497 1942 40 NOTE_INSN_DELETED)
(insn:TI 1942 1990 502 40 (set (reg/v/f:DI 0 ax [orig:457 p4A ] [457])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [789 %sfp+-293816 S8 A64])) 85 {*movdi_internal}
     (nil))
(insn 502 1942 500 40 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 500 502 499 40 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fb2b6b5c240 *.LC27>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 499 500 498 40 (set (reg:DI 1 dx)
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 498 499 1943 40 (set (reg:DF 23 xmm2 [orig:124 _112 ] [124])
        (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:457 p4A ] [457])
                (const_int 16 [0x10])) [78 MEM[(double *)p4A_32(D) + 16B]+0 S8 A64])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:457 p4A ] [457])
        (nil)))
(insn:TI 1943 498 503 40 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [789 %sfp+-293816 S8 A64])
        (reg:DF 23 xmm2 [orig:124 _112 ] [124])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [orig:124 _112 ] [124])
        (nil)))
(call_insn:TI 503 1943 504 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 7 [0x7])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       41 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

;; basic block 41, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 40, next block 42, flags: (REACHABLE, RTL)
;;  pred:       40 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 504 503 505 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn:TI 505 504 507 41 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 28 [0x1c])) [789 %sfp+-293828 S4 A32])) mymainCascade.cc:90 86 {*movsi_internal}
     (nil))
(insn:TI 507 505 508 41 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:90 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(call_insn:TI 508 507 1647 41 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:90 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       163 (ABNORMAL,ABNORMAL_CALL,EH)
;;              42 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 44 [r15]

;; basic block 42, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 41, next block 43, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp]
;; live  kill	
(note 1647 508 512 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn:TI 512 1647 511 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fb2b6b5c2d0 *.LC28>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 511 512 513 42 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 513 511 509 42 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:94 _45 ] [94])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:94 _45 ] [94])
        (nil)))
(insn:TI 509 513 514 42 (set (reg/f:DI 6 bp [orig:94 _45 ] [94])
        (reg:DI 0 ax)) mymainCascade.cc:90 85 {*movdi_internal}
     (nil))
(call_insn:TI 514 509 515 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 7 [0x7])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       43 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

;; basic block 43, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 42, next block 44, flags: (REACHABLE, RTL)
;;  pred:       42 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
(note 515 514 516 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn:TI 516 515 517 43 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [789 %sfp+-293816 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 126 {*movdf_internal}
     (nil))
(insn 517 516 518 43 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:94 _45 ] [94])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:94 _45 ] [94])
        (nil)))
(call_insn:TI 518 517 1648 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       163 (ABNORMAL,ABNORMAL_CALL,EH)
;;              44 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 44 [r15]

;; basic block 44, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp]
;; live  kill	
(note 1648 518 522 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn:TI 522 1648 521 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fb2b6b5c360 *.LC29>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 521 522 523 44 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 523 521 519 44 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:89 _19 ] [89])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:89 _19 ] [89])
        (nil)))
(insn:TI 519 523 524 44 (set (reg/f:DI 6 bp [orig:89 _19 ] [89])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (nil))
(call_insn:TI 524 519 525 44 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 7 [0x7])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       45 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

;; basic block 45, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 44, next block 46, flags: (REACHABLE, RTL)
;;  pred:       44 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 525 524 526 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn:TI 526 525 527 45 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [789 %sfp+-293824 S4 A64])) mymainCascade.cc:90 86 {*movsi_internal}
     (nil))
(insn 527 526 528 45 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:89 _19 ] [89])) mymainCascade.cc:90 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:89 _19 ] [89])
        (nil)))
(call_insn:TI 528 527 1649 45 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:90 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       163 (ABNORMAL,ABNORMAL_CALL,EH)
;;              46 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 44 [r15]

;; basic block 46, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 45, next block 47, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       45 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp]
;; live  kill	
(note 1649 528 532 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn:TI 532 1649 531 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7fb2b6b5c3f0 *.LC30>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 531 532 533 46 (set (reg:DI 1 dx)
        (const_int 11 [0xb])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 533 531 529 46 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:95 _47 ] [95])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:95 _47 ] [95])
        (nil)))
(insn:TI 529 533 534 46 (set (reg/f:DI 6 bp [orig:95 _47 ] [95])
        (reg:DI 0 ax)) mymainCascade.cc:90 85 {*movdi_internal}
     (nil))
(call_insn:TI 534 529 535 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 7 [0x7])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       47 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

;; basic block 47, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       46 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags] 41 [r12]
;; live  kill	
(note 535 534 536 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn:TI 536 535 537 47 (set (reg/f:DI 0 ax [orig:594 _47->_vptr.basic_ostream ] [594])
        (mem/f:DI (reg/f:DI 6 bp [orig:95 _47 ] [95]) [150 _47->_vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 6 bp [orig:95 _47 ] [95]) [150 _47->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 537 536 538 47 (set (reg:DI 0 ax [orig:595 MEM[(long int *)_262 + -24B] ] [595])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:594 _47->_vptr.basic_ostream ] [594])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_262 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 538 537 539 47 (set (reg/f:DI 41 r12 [orig:201 _271 ] [201])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 6 bp [orig:95 _47 ] [95])
                    (reg:DI 0 ax [orig:595 MEM[(long int *)_262 + -24B] ] [595]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_265]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:595 MEM[(long int *)_262 + -24B] ] [595])
        (nil)))
(insn:TI 539 538 540 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 41 r12 [orig:201 _271 ] [201])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 540 539 545 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2204)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 2204)
;;  succ:       166 [0.0%]  (CAN_FALLTHRU)
;;              48 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

;; basic block 48, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 47, next block 49, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       47 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 545 540 546 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn:TI 546 545 547 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 41 r12 [orig:201 _271 ] [201])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_271]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 547 546 548 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 552)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 552)
;;  succ:       49 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              120 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

;; basic block 49, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 48, next block 50, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       48 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 548 547 549 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn:TI 549 548 570 49 (set (reg:SI 4 si [orig:142 _171 ] [142])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 41 r12 [orig:201 _271 ] [201])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_271]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:201 _271 ] [201])
        (nil)))
;;  succ:       50 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 44 [r15]

;; basic block 50, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 49, next block 51, flags: (REACHABLE, RTL)
;;  pred:       49 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              121 [80.1%]  (CAN_FALLTHRU)
;;              123 [100.0%]  (CAN_FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 570 549 571 50 231 "" [2 uses])
(note 571 570 573 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn:TI 573 571 574 50 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:95 _47 ] [95])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:95 _47 ] [95])
        (nil)))
(call_insn:TI 574 573 1651 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       163 (ABNORMAL,ABNORMAL_CALL,EH)
;;              51 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 44 [r15]

;; basic block 51, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, RTL)
;;  pred:       50 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1651 574 577 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn:TI 577 1651 578 51 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:199 _268 ] [199])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:199 _268 ] [199])
        (nil)))
(call_insn:TI 578 577 579 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       52 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

;; basic block 52, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 51, next block 53, flags: (REACHABLE, RTL)
;;  pred:       51 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 579 578 581 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn:TI 581 579 582 52 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [789 %sfp+-293840 S8 A64])) mymainCascade.cc:93 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293104 [0xfffffffffffb8710]))
        (nil)))
(call_insn:TI 582 581 1652 52 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86Pythia4nextEv") [flags 0x41]  <function_decl 0x7fb2b727fc40 next>) [0 next S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:93 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 7 [0x7])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86Pythia4nextEv") [flags 0x41]  <function_decl 0x7fb2b727fc40 next>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       163 (ABNORMAL,ABNORMAL_CALL,EH)
;;              53 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 44 [r15]

;; basic block 53, loop depth 0, count 0, freq 328, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       52 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1652 582 586 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn:TI 586 1652 1991 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:454 <retval> ] [454])
            (const_int 0 [0]))) mymainCascade.cc:93 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:454 <retval> ] [454])
        (nil)))
(insn 1991 586 587 53 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 28 [0x1c])) [789 %sfp+-293828 S1 A32])
        (reg:QI 0 ax [orig:454 <retval> ] [454])) mymainCascade.cc:93 89 {*movqi_internal}
     (nil))
(jump_insn:TI 587 1991 588 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 585)
            (pc))) mymainCascade.cc:93 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 585)
;;  succ:       111 [39.0%]  (CAN_FALLTHRU)
;;              54 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

;; basic block 54, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       53 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 43 [r14]
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 43 [r14]
;; live  kill	 17 [flags]
(note 588 587 590 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(note 590 588 589 54 NOTE_INSN_DELETED)
(insn:TI 589 590 1945 54 (set (reg/f:DI 0 ax [orig:129 _125 ] [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 888 [0x378])) [164 MEM[(const struct vector *)&fPythia + 136B].D.138156._M_impl._M_start+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 1945 589 593 54 (set (reg:DI 1 dx [600])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 896 [0x380])) [164 MEM[(const struct vector *)&fPythia + 136B].D.138156._M_impl._M_finish+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 593 1945 591 54 (set (reg:DI 43 r14 [605])
        (const_int -3689348814741910323 [0xcccccccccccccccd])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int -3689348814741910323 [0xcccccccccccccccd])
        (nil)))
(insn:TI 591 593 592 54 (parallel [
            (set (reg:DI 1 dx [600])
                (minus:DI (reg:DI 1 dx [600])
                    (reg/f:DI 0 ax [orig:129 _125 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 592 591 594 54 (parallel [
            (set (reg:DI 1 dx [603])
                (ashiftrt:DI (reg:DI 1 dx [600])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 594 592 595 54 (parallel [
            (set (reg:DI 1 dx [604])
                (mult:DI (reg:DI 1 dx [603])
                    (reg:DI 43 r14 [605])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [603])
                (const_int -3689348814741910323 [0xcccccccccccccccd]))
            (nil))))
(insn:TI 595 594 596 54 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 1 dx [604])
            (const_int 0 [0]))) mymainCascade.cc:94 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [604])
        (nil)))
(jump_insn:TI 596 595 601 54 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1460)
            (pc))) mymainCascade.cc:94 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 200 (nil)))
 -> 1460)
;;  succ:       55 [98.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              112 [2.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 43 [r14] 44 [r15]

;; basic block 55, loop depth 0, count 0, freq 196, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       54 [98.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 16 [argp] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 5 [di] 6 [bp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 5 [di] 6 [bp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
(note 601 596 1780 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1780 601 2001 55 (set (reg:DI 1 dx [805])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVN7Pythia88ParticleE") [flags 0x40]  <var_decl 0x7fb2bb1e16c0 _ZTVN7Pythia88ParticleE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVN7Pythia88ParticleE") [flags 0x40]  <var_decl 0x7fb2bb1e16c0 _ZTVN7Pythia88ParticleE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn 2001 1780 2169 55 (set (reg/f:DI 5 di [810])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 208 [0xd0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 215 {*leadi}
     (nil))
(insn 2169 2001 2170 55 (parallel [
            (set (reg:DI 41 r12 [orig:204 ivtmp.465 ] [204])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:94 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 2170 2169 1947 55 (parallel [
            (set (reg:DI 6 bp [orig:120 i ] [120])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:94 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1947 2170 605 55 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [789 %sfp+-293824 S8 A64])
        (reg/f:DI 5 di [810])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 5 di [810])
        (nil)))
(insn:TI 605 1947 2205 55 (set (reg/f:DI 42 r13 [606])
        (plus:DI (reg:DI 1 dx [805])
            (const_int 16 [0x10]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 215 {*leadi}
     (expr_list:REG_DEAD (reg:DI 1 dx [805])
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref:DI ("_ZTVN7Pythia88ParticleE") [flags 0x40]  <var_decl 0x7fb2bb1e16c0 _ZTVN7Pythia88ParticleE>)
                    (const_int 16 [0x10])))
            (nil))))
(jump_insn 2205 605 2206 55 (set (pc)
        (label_ref 1448)) 667 {jump}
     (nil)
 -> 1448)
;;  succ:       61 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2206 2205 1069)
;; basic block 56, loop depth 0, count 0, freq 6629, maybe hot
;; Invalid sum of incoming frequencies 8456, should be 6629
;;  prev block 55, next block 57, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       66 [86.0%]  (CAN_FALLTHRU)
;;              118 [100.0%]  (CAN_FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1069 2206 1070 56 248 "" [2 uses])
(note 1070 1069 1071 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1071 1070 1072 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
            (const_int 221 [0xdd]))) mymainCascade.cc:106 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 1072 1071 1166 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2207)
            (pc))) mymainCascade.cc:106 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1371 (nil)))
 -> 2207)
;;  succ:       71 [13.7%]  (CAN_FALLTHRU)
;;              57 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 57, loop depth 0, count 0, freq 4550, maybe hot
;; Invalid sum of incoming frequencies 6629, should be 4550
;;  prev block 56, next block 58, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       56 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              70 [86.3%]  (CAN_FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1166 1072 1167 57 253 "" [1 uses])
(note 1167 1166 1168 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1168 1167 1169 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
            (const_int 223 [0xdf]))) mymainCascade.cc:107 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 1169 1168 1263 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2208)
            (pc))) mymainCascade.cc:107 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1432 (nil)))
 -> 2208)
;;  succ:       75 [14.3%]  (CAN_FALLTHRU)
;;              58 [85.7%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 58, loop depth 0, count 0, freq 4550, maybe hot
;; Invalid sum of incoming frequencies 4801, should be 4550
;;  prev block 57, next block 59, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       57 [85.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              74 [85.7%]  (CAN_FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1263 1169 1264 58 251 "" [1 uses])
(note 1264 1263 1265 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1265 1264 1266 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
            (const_int 331 [0x14b]))) mymainCascade.cc:108 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 1266 1265 1360 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2209)
            (pc))) mymainCascade.cc:108 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1432 (nil)))
 -> 2209)
;;  succ:       79 [14.3%]  (CAN_FALLTHRU)
;;              59 [85.7%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 59, loop depth 0, count 0, freq 4550, maybe hot
;; Invalid sum of incoming frequencies 4801, should be 4550
;;  prev block 58, next block 60, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       58 [85.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              78 [85.7%]  (CAN_FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1360 1266 1361 59 256 "" [1 uses])
(note 1361 1360 1362 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1362 1361 1363 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
            (const_int 22 [0x16]))) mymainCascade.cc:109 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (nil)))
(jump_insn:TI 1363 1362 1443 59 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2210)
            (pc))) mymainCascade.cc:109 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1432 (nil)))
 -> 2210)
;;  succ:       83 [14.3%]  (CAN_FALLTHRU)
;;              60 [85.7%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 60, loop depth 0, count 0, freq 9800, maybe hot
;; Invalid sum of incoming frequencies 9132, should be 9800
;;  prev block 59, next block 61, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59 [85.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              82 [85.7%]  (CAN_FALLTHRU)
;;              115 [100.0%]  (CAN_FALLTHRU)
;;              116 [100.0%]  (CAN_FALLTHRU)
;;              95 [100.0%]  (CAN_FALLTHRU)
;;              87 [100.0%]  (CAN_FALLTHRU)
;;              117 [100.0%]  (CAN_FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 6 [bp] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 6 [bp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(code_label 1443 1363 1444 60 260 "" [6 uses])
(note 1444 1443 1449 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(note 1449 1444 1446 60 NOTE_INSN_DELETED)
(insn:TI 1446 1449 1975 60 (set (reg/f:DI 0 ax [orig:129 _125 ] [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 888 [0x378])) [164 MEM[(const struct vector *)&fPythia + 136B].D.138156._M_impl._M_start+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 1975 1446 1445 60 (set (reg:DI 1 dx [741])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 896 [0x380])) [164 MEM[(const struct vector *)&fPythia + 136B].D.138156._M_impl._M_finish+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 1445 1975 1447 60 (parallel [
            (set (reg/v:SI 6 bp [orig:120 i ] [120])
                (plus:SI (reg/v:SI 6 bp [orig:120 i ] [120])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:94 218 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1447 1445 1450 60 (parallel [
            (set (reg:DI 41 r12 [orig:204 ivtmp.465 ] [204])
                (plus:DI (reg:DI 41 r12 [orig:204 ivtmp.465 ] [204])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1450 1447 1451 60 (parallel [
            (set (reg:DI 1 dx [741])
                (minus:DI (reg:DI 1 dx [741])
                    (reg/f:DI 0 ax [orig:129 _125 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1451 1450 1453 60 (parallel [
            (set (reg:DI 1 dx [744])
                (ashiftrt:DI (reg:DI 1 dx [741])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1453 1451 1454 60 (parallel [
            (set (reg:DI 1 dx [745])
                (mult:DI (reg:DI 1 dx [744])
                    (reg:DI 43 r14 [811])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [744])
                (const_int -3689348814741910323 [0xcccccccccccccccd]))
            (nil))))
(insn:TI 1454 1453 1455 60 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 6 bp [orig:120 i ] [120])
            (reg:SI 1 dx [745]))) mymainCascade.cc:94 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [745])
        (nil)))
(jump_insn:TI 1455 1454 1448 60 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1460)
            (pc))) mymainCascade.cc:94 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 200 (nil)))
 -> 1460)
;;  succ:       61 [98.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              112 [2.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 61, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 60, next block 62, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 [98.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              55 [100.0%]  (CAN_FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1]
;; live  kill	 17 [flags]
(code_label 1448 1455 602 61 268 "" [1 uses])
(note 602 1448 657 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(note 657 602 603 61 NOTE_INSN_DELETED)
(insn:TI 603 657 606 61 (parallel [
            (set (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (plus:DI (reg/f:DI 0 ax [orig:129 _125 ] [129])
                    (reg:DI 41 r12 [orig:204 ivtmp.465 ] [204])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 606 603 611 61 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [150 lP._vptr.Particle+0 S8 A128])
        (reg/f:DI 42 r13 [606])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (nil))
(insn:TI 611 606 607 61 (set (reg:SI 4 si [orig:211 _291 ] [211])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 16 [0x10])) [22 MEM[(const struct Particle &)_133].mother1Save+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (nil))
(insn 607 611 609 61 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 8 [0x8])) [22 MEM[(const struct Particle &)_133].idSave+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:62 86 {*movsi_internal}
     (nil))
(insn:TI 609 607 623 61 (set (reg:SI 2 cx [orig:210 _290 ] [210])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 12 [0xc])) [22 MEM[(const struct Particle &)_133].statusSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (nil))
(insn 623 609 629 61 (set (reg:DF 21 xmm0 [orig:217 _297 ] [217])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_133 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 629 623 612 61 (set (reg:DF 22 xmm1 [orig:220 _300 ] [220])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 64 [0x40])) [78 MEM[(const struct Vec4 &)_133 + 40].tt+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 612 629 613 61 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [22 lP.mother1Save+0 S4 A128])
        (reg:SI 4 si [orig:211 _291 ] [211])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:211 _291 ] [211])
        (nil)))
(insn 613 612 608 61 (set (reg:SI 4 si [orig:212 _292 ] [212])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 20 [0x14])) [22 MEM[(const struct Particle &)_133].mother2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (nil))
(insn:TI 608 613 610 61 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 lP.idSave+0 S4 A64])
        (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (nil))
(insn 610 608 614 61 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 220 [0xdc])) [22 lP.statusSave+0 S4 A32])
        (reg:SI 2 cx [orig:210 _290 ] [210])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (nil))
(insn:TI 614 610 615 61 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 228 [0xe4])) [22 lP.mother2Save+0 S4 A32])
        (reg:SI 4 si [orig:212 _292 ] [212])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:212 _292 ] [212])
        (nil)))
(insn 615 614 616 61 (set (reg:SI 4 si [orig:213 _293 ] [213])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 24 [0x18])) [22 MEM[(const struct Particle &)_133].daughter1Save+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (nil))
(insn:TI 616 615 617 61 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [22 lP.daughter1Save+0 S4 A64])
        (reg:SI 4 si [orig:213 _293 ] [213])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:213 _293 ] [213])
        (nil)))
(insn 617 616 618 61 (set (reg:SI 4 si [orig:214 _294 ] [214])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 28 [0x1c])) [22 MEM[(const struct Particle &)_133].daughter2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (nil))
(insn:TI 618 617 619 61 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 236 [0xec])) [22 lP.daughter2Save+0 S4 A32])
        (reg:SI 4 si [orig:214 _294 ] [214])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:214 _294 ] [214])
        (nil)))
(insn 619 618 620 61 (set (reg:SI 4 si [orig:215 _295 ] [215])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 32 [0x20])) [22 MEM[(const struct Particle &)_133].colSave+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (nil))
(insn:TI 620 619 621 61 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [22 lP.colSave+0 S4 A128])
        (reg:SI 4 si [orig:215 _295 ] [215])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:215 _295 ] [215])
        (nil)))
(insn 621 620 624 61 (set (reg:SI 4 si [orig:216 _296 ] [216])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 36 [0x24])) [22 MEM[(const struct Particle &)_133].acolSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 86 {*movsi_internal}
     (nil))
(insn 624 621 625 61 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [78 MEM[(struct Vec4 *)&lP + 40B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:217 _297 ] [217])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:217 _297 ] [217])
        (nil)))
(insn:TI 625 624 626 61 (set (reg:DF 21 xmm0 [orig:218 _298 ] [218])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_133 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 626 625 622 61 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [78 MEM[(struct Vec4 *)&lP + 40B].yy+0 S8 A128])
        (reg:DF 21 xmm0 [orig:218 _298 ] [218])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:218 _298 ] [218])
        (nil)))
(insn 622 626 637 61 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 244 [0xf4])) [22 lP.acolSave+0 S4 A32])
        (reg:SI 4 si [orig:216 _296 ] [216])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:216 _296 ] [216])
        (nil)))
(insn 637 622 627 61 (set (reg:QI 4 si [orig:224 _304 ] [224])
        (mem:QI (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 96 [0x60])) [141 MEM[(const struct Particle &)_133].hasVertexSave+0 S1 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:68 89 {*movqi_internal}
     (nil))
(insn:TI 627 637 630 61 (set (reg:DF 21 xmm0 [orig:219 _299 ] [219])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)_133 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 630 627 631 61 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 272 [0x110])) [78 MEM[(struct Vec4 *)&lP + 40B].tt+0 S8 A128])
        (reg:DF 22 xmm1 [orig:220 _300 ] [220])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:220 _300 ] [220])
        (nil)))
(insn:TI 631 630 628 61 (set (reg:DF 22 xmm1 [orig:221 _301 ] [221])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 72 [0x48])) [78 MEM[(const struct Particle &)_133].mSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 126 {*movdf_internal}
     (nil))
(insn:TI 628 631 632 61 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 264 [0x108])) [78 MEM[(struct Vec4 *)&lP + 40B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:219 _299 ] [219])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 632 628 633 61 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 280 [0x118])) [78 lP.mSave+0 S8 A64])
        (reg:DF 22 xmm1 [orig:221 _301 ] [221])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:221 _301 ] [221])
        (nil)))
(insn:TI 633 632 634 61 (set (reg:DF 22 xmm1 [orig:222 _302 ] [222])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 80 [0x50])) [78 MEM[(const struct Particle &)_133].scaleSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (nil))
(insn:TI 634 633 635 61 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [78 lP.scaleSave+0 S8 A128])
        (reg:DF 22 xmm1 [orig:222 _302 ] [222])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:222 _302 ] [222])
        (nil)))
(insn:TI 635 634 636 61 (set (reg:DF 22 xmm1 [orig:223 _303 ] [223])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 88 [0x58])) [78 MEM[(const struct Particle &)_133].polSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (nil))
(insn:TI 636 635 638 61 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 296 [0x128])) [78 lP.polSave+0 S8 A64])
        (reg:DF 22 xmm1 [orig:223 _303 ] [223])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:223 _303 ] [223])
        (nil)))
(insn 638 636 649 61 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 304 [0x130])) [141 lP.hasVertexSave+0 S1 A128])
        (reg:QI 4 si [orig:224 _304 ] [224])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 4 si [orig:224 _304 ] [224])
        (nil)))
(insn 649 638 639 61 (set (reg/f:DI 4 si [orig:230 _310 ] [230])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 144 [0x90])) [446 MEM[(const struct Particle &)_133].pdePtr+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (nil))
(insn:TI 639 649 653 61 (set (reg:DF 22 xmm1 [orig:225 _305 ] [225])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 104 [0x68])) [78 MEM[(const struct Vec4 &)_133 + 104].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 653 639 640 61 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 21 xmm0 [orig:219 _299 ] [219])
            (mem/u/c:DF (symbol_ref/u:DI ("*.LC31") [flags 0x2]) [78  S8 A64]))) mymainCascade.cc:100 52 {*cmpiudf_mixed}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:219 _299 ] [219])
        (nil)))
(insn:TI 640 653 641 61 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 312 [0x138])) [78 MEM[(struct Vec4 *)&lP + 104B].xx+0 S8 A64])
        (reg:DF 22 xmm1 [orig:225 _305 ] [225])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:225 _305 ] [225])
        (nil)))
(insn:TI 641 640 642 61 (set (reg:DF 22 xmm1 [orig:226 _306 ] [226])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 112 [0x70])) [78 MEM[(const struct Vec4 &)_133 + 104].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 642 641 643 61 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 320 [0x140])) [78 MEM[(struct Vec4 *)&lP + 104B].yy+0 S8 A128])
        (reg:DF 22 xmm1 [orig:226 _306 ] [226])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:226 _306 ] [226])
        (nil)))
(insn:TI 643 642 644 61 (set (reg:DF 22 xmm1 [orig:227 _307 ] [227])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 120 [0x78])) [78 MEM[(const struct Vec4 &)_133 + 104].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 644 643 645 61 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 328 [0x148])) [78 MEM[(struct Vec4 *)&lP + 104B].zz+0 S8 A64])
        (reg:DF 22 xmm1 [orig:227 _307 ] [227])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:227 _307 ] [227])
        (nil)))
(insn:TI 645 644 646 61 (set (reg:DF 22 xmm1 [orig:228 _308 ] [228])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 128 [0x80])) [78 MEM[(const struct Vec4 &)_133 + 104].tt+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 646 645 647 61 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 336 [0x150])) [78 MEM[(struct Vec4 *)&lP + 104B].tt+0 S8 A128])
        (reg:DF 22 xmm1 [orig:228 _308 ] [228])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:228 _308 ] [228])
        (nil)))
(insn:TI 647 646 651 61 (set (reg:DF 22 xmm1 [orig:229 _309 ] [229])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 136 [0x88])) [78 MEM[(const struct Particle &)_133].tauSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (nil))
(insn 651 647 650 61 (set (reg/f:DI 0 ax [orig:231 _311 ] [231])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:134 _133 ] [134])
                (const_int 152 [0x98])) [447 MEM[(const struct Particle &)_133].evtPtr+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293496 [0xfffffffffffb8588])) [447 lP.evtPtr+0 S8 A64])
        (nil)))
(insn:TI 650 651 654 61 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [446 lP.pdePtr+0 S8 A128])
        (reg/f:DI 4 si [orig:230 _310 ] [230])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:230 _310 ] [230])
        (nil)))
(insn 654 650 655 61 (set (reg:QI 4 si [609])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) mymainCascade.cc:100 631 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 655 654 648 61 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 2 cx [orig:210 _290 ] [210])
            (const_int 0 [0]))) mymainCascade.cc:100 3 {*cmpsi_ccno_1}
     (nil))
(insn:TI 648 655 652 61 (set (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 344 [0x158])) [78 lP.tauSave+0 S8 A64])
        (reg:DF 22 xmm1 [orig:229 _309 ] [229])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:229 _309 ] [229])
        (nil)))
(insn:TI 652 648 656 61 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 360 [0x168])) [447 lP.evtPtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:231 _311 ] [231])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:231 _311 ] [231])
        (nil)))
(insn 656 652 658 61 (set (reg:QI 0 ax [611])
        (gt:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) mymainCascade.cc:100 631 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil)))
(insn:TI 658 656 659 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (reg:QI 4 si [609])
                (reg:QI 0 ax [611]))
            (const_int 0 [0]))) mymainCascade.cc:100 366 {*testqi_1_maybe_si}
     (expr_list:REG_DEAD (reg:QI 4 si [609])
        (expr_list:REG_DEAD (reg:QI 0 ax [611])
            (nil))))
(jump_insn:TI 659 658 1653 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 972)
            (pc))) mymainCascade.cc:100 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1400 (nil)))
 -> 972)
;;  succ:       66 [14.0%]  (CAN_FALLTHRU)
;;              62 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 62, loop depth 0, count 0, freq 8428, maybe hot
;;  prev block 61, next block 63, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       61 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1653 659 660 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(note 660 1653 661 62 NOTE_INSN_DELETED)
(note 661 660 662 62 NOTE_INSN_DELETED)
(insn:TI 662 661 663 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx [orig:210 _290 ] [210])
            (const_int 12 [0xc]))) mymainCascade.cc:100 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:210 _290 ] [210])
        (nil)))
(jump_insn:TI 663 662 1618 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 972)
            (pc))) mymainCascade.cc:100 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1628 (nil)))
 -> 972)
;;  succ:       63 [83.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              66 [16.3%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 63, loop depth 0, count 0, freq 4900, maybe hot
;; Invalid sum of incoming frequencies 7056, should be 4900
;;  prev block 62, next block 64, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62 [83.7%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
(note 1618 663 1984 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1984 1618 1619 63 (set (reg:SI 2 cx [794])
        (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])) mymainCascade.cc:101 86 {*movsi_internal}
     (nil))
(insn:TI 1619 1984 1986 63 (parallel [
            (set (reg:SI 2 cx [794])
                (ashiftrt:SI (reg:SI 2 cx [794])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:101 556 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1986 1619 1620 63 (set (reg:SI 0 ax [orig:98 _53 ] [98])
        (reg:SI 2 cx [794])) mymainCascade.cc:101 86 {*movsi_internal}
     (nil))
(insn:TI 1620 1986 1621 63 (parallel [
            (set (reg:SI 0 ax [orig:98 _53 ] [98])
                (xor:SI (reg:SI 0 ax [orig:98 _53 ] [98])
                    (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:101 409 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1621 1620 1623 63 (parallel [
            (set (reg:SI 0 ax [orig:98 _53 ] [98])
                (minus:SI (reg:SI 0 ax [orig:98 _53 ] [98])
                    (reg:SI 2 cx [794])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:101 261 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [794])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 1623 1621 1624 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:98 _53 ] [98])
            (const_int 2212 [0x8a4]))) mymainCascade.cc:101 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 1624 1623 1625 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2211)
            (pc))) mymainCascade.cc:101 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1371 (nil)))
 -> 2211)
;;  succ:       107 [13.7%]  (CAN_FALLTHRU)
;;              64 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 64, loop depth 0, count 0, freq 3837, maybe hot
;; Invalid sum of incoming frequencies 4754, should be 3837
;;  prev block 63, next block 65, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       63 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              110 [100.0%]  (CAN_FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1625 1624 767 64 282 "" [1 uses])
(note 767 1625 768 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn:TI 768 767 769 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:98 _53 ] [98])
            (const_int 2112 [0x840]))) mymainCascade.cc:102 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 769 768 870 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2212)
            (pc))) mymainCascade.cc:102 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1371 (nil)))
 -> 2212)
;;  succ:       96 [13.7%]  (CAN_FALLTHRU)
;;              65 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 65, loop depth 0, count 0, freq 2268, maybe hot
;; Invalid sum of incoming frequencies 3311, should be 2268
;;  prev block 64, next block 66, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       64 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 870 769 871 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn:TI 871 870 872 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:98 _53 ] [98])
            (const_int 211 [0xd3]))) mymainCascade.cc:103 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:98 _53 ] [98])
        (nil)))
(jump_insn:TI 872 871 972 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2213)
            (pc))) mymainCascade.cc:103 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1433 (nil)))
 -> 2213)
;;  succ:       100 [14.3%]  (CAN_FALLTHRU)
;;              66 [85.7%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 66, loop depth 0, count 0, freq 9619, maybe hot
;; Invalid sum of incoming frequencies 6837, should be 9619
;;  prev block 65, next block 67, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62 [16.3%]  (CAN_FALLTHRU)
;;              105 [100.0%]  (CAN_FALLTHRU)
;;              65 [85.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              106 [100.0%]  (CAN_FALLTHRU)
;;              61 [14.0%]  (CAN_FALLTHRU)
;;              99 [85.7%]  (CAN_FALLTHRU)
;;              119 [100.0%]  (CAN_FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 972 872 973 66 236 "" [6 uses])
(note 973 972 974 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn:TI 974 973 975 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
            (const_int 111 [0x6f]))) mymainCascade.cc:105 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 975 974 976 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1069)
            (pc))) mymainCascade.cc:105 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8603 (nil)))
 -> 1069)
;;  succ:       67 [14.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              56 [86.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 67, loop depth 0, count 0, freq 1344, maybe hot
;;  prev block 66, next block 68, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       66 [14.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 976 975 977 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn:TI 977 976 978 67 (set (reg/f:DI 0 ax [orig:312 _393 ] [312])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 85 {*movdi_internal}
     (nil))
(insn 978 977 979 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:312 _393 ] [312])
            (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                    (const_int 16 [0x10])) [164 aMesons_75(D)->D.138156._M_impl._M_end_of_storage+0 S8 A64]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 979 978 980 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1051)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 1051)
;;  succ:       68 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              136 [6.7%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 68, loop depth 0, count 0, freq 1253, maybe hot
;;  prev block 67, next block 69, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       67 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 980 979 981 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn:TI 981 980 982 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:312 _393 ] [312])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 982 981 996 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2214)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 2214)
;;  succ:       69 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              117 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 69, loop depth 0, count 0, freq 982, maybe hot
;;  prev block 68, next block 70, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       68 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 21 [xmm0]
;; live  kill	 17 [flags]
(note 996 982 1000 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1000 996 1016 69 (set (reg:SI 1 dx [orig:315 _397 ] [315])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 lP.idSave+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:62 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293640 [0xfffffffffffb84f8])) [22 lP.idSave+0 S4 A64])
        (nil)))
(insn 1016 1000 999 69 (set (reg:DF 21 xmm0 [orig:323 _405 ] [323])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293608 [0xfffffffffffb8518])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])
        (nil)))
(insn:TI 999 1016 1047 69 (set (mem/f:DI (reg/f:DI 0 ax [orig:312 _393 ] [312]) [150 _393->_vptr.Particle+0 S8 A64])
        (reg/f:DI 42 r13 [606])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (nil))
(insn 1047 999 1001 69 (parallel [
            (set (reg/f:DI 0 ax [675])
                (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                    (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
            (nil))))
(insn:TI 1001 1047 1002 69 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -152 [0xffffffffffffff68])) [22 _393->idSave+0 S4 A64])
        (reg:SI 1 dx [orig:315 _397 ] [315])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:315 _397 ] [315])
        (nil)))
(insn 1002 1001 1003 69 (set (reg:SI 1 dx [orig:316 _398 ] [316])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 220 [0xdc])) [22 lP.statusSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293636 [0xfffffffffffb84fc])) [22 lP.statusSave+0 S4 A32])
        (nil)))
(insn:TI 1003 1002 1004 69 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -148 [0xffffffffffffff6c])) [22 _393->statusSave+0 S4 A32])
        (reg:SI 1 dx [orig:316 _398 ] [316])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:316 _398 ] [316])
        (nil)))
(insn 1004 1003 1005 69 (set (reg:SI 1 dx [orig:317 _399 ] [317])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [22 lP.mother1Save+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293632 [0xfffffffffffb8500])) [22 lP.mother1Save+0 S4 A128])
        (nil)))
(insn:TI 1005 1004 1006 69 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -144 [0xffffffffffffff70])) [22 _393->mother1Save+0 S4 A64])
        (reg:SI 1 dx [orig:317 _399 ] [317])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:317 _399 ] [317])
        (nil)))
(insn 1006 1005 1007 69 (set (reg:SI 1 dx [orig:318 _400 ] [318])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 228 [0xe4])) [22 lP.mother2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293628 [0xfffffffffffb8504])) [22 lP.mother2Save+0 S4 A32])
        (nil)))
(insn:TI 1007 1006 1008 69 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -140 [0xffffffffffffff74])) [22 _393->mother2Save+0 S4 A32])
        (reg:SI 1 dx [orig:318 _400 ] [318])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:318 _400 ] [318])
        (nil)))
(insn 1008 1007 1009 69 (set (reg:SI 1 dx [orig:319 _401 ] [319])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [22 lP.daughter1Save+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293624 [0xfffffffffffb8508])) [22 lP.daughter1Save+0 S4 A64])
        (nil)))
(insn:TI 1009 1008 1010 69 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -136 [0xffffffffffffff78])) [22 _393->daughter1Save+0 S4 A64])
        (reg:SI 1 dx [orig:319 _401 ] [319])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:319 _401 ] [319])
        (nil)))
(insn 1010 1009 1011 69 (set (reg:SI 1 dx [orig:320 _402 ] [320])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 236 [0xec])) [22 lP.daughter2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293620 [0xfffffffffffb850c])) [22 lP.daughter2Save+0 S4 A32])
        (nil)))
(insn:TI 1011 1010 1012 69 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -132 [0xffffffffffffff7c])) [22 _393->daughter2Save+0 S4 A32])
        (reg:SI 1 dx [orig:320 _402 ] [320])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:320 _402 ] [320])
        (nil)))
(insn 1012 1011 1013 69 (set (reg:SI 1 dx [orig:321 _403 ] [321])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [22 lP.colSave+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293616 [0xfffffffffffb8510])) [22 lP.colSave+0 S4 A128])
        (nil)))
(insn:TI 1013 1012 1014 69 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -128 [0xffffffffffffff80])) [22 _393->colSave+0 S4 A64])
        (reg:SI 1 dx [orig:321 _403 ] [321])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:321 _403 ] [321])
        (nil)))
(insn 1014 1013 1017 69 (set (reg:SI 1 dx [orig:322 _404 ] [322])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 244 [0xf4])) [22 lP.acolSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293612 [0xfffffffffffb8514])) [22 lP.acolSave+0 S4 A32])
        (nil)))
(insn 1017 1014 1018 69 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -120 [0xffffffffffffff88])) [78 MEM[(struct Vec4 *)_393 + 40B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:323 _405 ] [323])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:323 _405 ] [323])
        (nil)))
(insn:TI 1018 1017 1019 69 (set (reg:DF 21 xmm0 [orig:324 _406 ] [324])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293600 [0xfffffffffffb8520])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])
        (nil)))
(insn:TI 1019 1018 1015 69 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -112 [0xffffffffffffff90])) [78 MEM[(struct Vec4 *)_393 + 40B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:324 _406 ] [324])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:324 _406 ] [324])
        (nil)))
(insn 1015 1019 1030 69 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -124 [0xffffffffffffff84])) [22 _393->acolSave+0 S4 A32])
        (reg:SI 1 dx [orig:322 _404 ] [322])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:322 _404 ] [322])
        (nil)))
(insn 1030 1015 1020 69 (set (reg:QI 1 dx [orig:330 _412 ] [330])
        (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 304 [0x130])) [141 lP.hasVertexSave+0 S1 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:68 89 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -293552 [0xfffffffffffb8550])) [141 lP.hasVertexSave+0 S1 A128])
        (nil)))
(insn:TI 1020 1030 1021 69 (set (reg:DF 21 xmm0 [orig:325 _407 ] [325])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 264 [0x108])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293592 [0xfffffffffffb8528])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])
        (nil)))
(insn:TI 1021 1020 1022 69 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -104 [0xffffffffffffff98])) [78 MEM[(struct Vec4 *)_393 + 40B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:325 _407 ] [325])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:325 _407 ] [325])
        (nil)))
(insn:TI 1022 1021 1023 69 (set (reg:DF 21 xmm0 [orig:326 _408 ] [326])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 272 [0x110])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293584 [0xfffffffffffb8530])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])
        (nil)))
(insn:TI 1023 1022 1024 69 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -96 [0xffffffffffffffa0])) [78 MEM[(struct Vec4 *)_393 + 40B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:326 _408 ] [326])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:326 _408 ] [326])
        (nil)))
(insn:TI 1024 1023 1025 69 (set (reg:DF 21 xmm0 [orig:327 _409 ] [327])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 280 [0x118])) [78 lP.mSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293576 [0xfffffffffffb8538])) [78 lP.mSave+0 S8 A64])
        (nil)))
(insn:TI 1025 1024 1026 69 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -88 [0xffffffffffffffa8])) [78 _393->mSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:327 _409 ] [327])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:327 _409 ] [327])
        (nil)))
(insn:TI 1026 1025 1027 69 (set (reg:DF 21 xmm0 [orig:328 _410 ] [328])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [78 lP.scaleSave+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293568 [0xfffffffffffb8540])) [78 lP.scaleSave+0 S8 A128])
        (nil)))
(insn:TI 1027 1026 1028 69 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -80 [0xffffffffffffffb0])) [78 _393->scaleSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:328 _410 ] [328])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:328 _410 ] [328])
        (nil)))
(insn:TI 1028 1027 1029 69 (set (reg:DF 21 xmm0 [orig:329 _411 ] [329])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 296 [0x128])) [78 lP.polSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293560 [0xfffffffffffb8548])) [78 lP.polSave+0 S8 A64])
        (nil)))
(insn:TI 1029 1028 1031 69 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -72 [0xffffffffffffffb8])) [78 _393->polSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:329 _411 ] [329])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:329 _411 ] [329])
        (nil)))
(insn 1031 1029 1042 69 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -64 [0xffffffffffffffc0])) [141 _393->hasVertexSave+0 S1 A64])
        (reg:QI 1 dx [orig:330 _412 ] [330])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 1 dx [orig:330 _412 ] [330])
        (nil)))
(insn 1042 1031 1032 69 (set (reg/f:DI 1 dx [orig:336 _418 ] [336])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [446 lP.pdePtr+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293504 [0xfffffffffffb8580])) [446 lP.pdePtr+0 S8 A128])
        (nil)))
(insn:TI 1032 1042 1033 69 (set (reg:DF 21 xmm0 [orig:331 _413 ] [331])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 312 [0x138])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293544 [0xfffffffffffb8558])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])
        (nil)))
(insn:TI 1033 1032 1034 69 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -56 [0xffffffffffffffc8])) [78 MEM[(struct Vec4 *)_393 + 104B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:331 _413 ] [331])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:331 _413 ] [331])
        (nil)))
(insn:TI 1034 1033 1035 69 (set (reg:DF 21 xmm0 [orig:332 _414 ] [332])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 320 [0x140])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293536 [0xfffffffffffb8560])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])
        (nil)))
(insn:TI 1035 1034 1036 69 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -48 [0xffffffffffffffd0])) [78 MEM[(struct Vec4 *)_393 + 104B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:332 _414 ] [332])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:332 _414 ] [332])
        (nil)))
(insn:TI 1036 1035 1037 69 (set (reg:DF 21 xmm0 [orig:333 _415 ] [333])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 328 [0x148])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293528 [0xfffffffffffb8568])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])
        (nil)))
(insn:TI 1037 1036 1038 69 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -40 [0xffffffffffffffd8])) [78 MEM[(struct Vec4 *)_393 + 104B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:333 _415 ] [333])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:333 _415 ] [333])
        (nil)))
(insn:TI 1038 1037 1039 69 (set (reg:DF 21 xmm0 [orig:334 _416 ] [334])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 336 [0x150])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293520 [0xfffffffffffb8570])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])
        (nil)))
(insn:TI 1039 1038 1040 69 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -32 [0xffffffffffffffe0])) [78 MEM[(struct Vec4 *)_393 + 104B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:334 _416 ] [334])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:334 _416 ] [334])
        (nil)))
(insn:TI 1040 1039 1043 69 (set (reg:DF 21 xmm0 [orig:335 _417 ] [335])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 344 [0x158])) [78 lP.tauSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293512 [0xfffffffffffb8578])) [78 lP.tauSave+0 S8 A64])
        (nil)))
(insn 1043 1040 1044 69 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -16 [0xfffffffffffffff0])) [446 _393->pdePtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:336 _418 ] [336])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:336 _418 ] [336])
        (nil)))
(insn:TI 1044 1043 1041 69 (set (reg/f:DI 1 dx [orig:337 _419 ] [337])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 360 [0x168])) [447 lP.evtPtr+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293496 [0xfffffffffffb8588])) [447 lP.evtPtr+0 S8 A64])
        (nil)))
(insn:TI 1041 1044 1045 69 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -24 [0xffffffffffffffe8])) [78 _393->tauSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:335 _417 ] [335])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:335 _417 ] [335])
        (nil)))
(insn:TI 1045 1041 1046 69 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:312 _393 ] [312])
                (const_int -8 [0xfffffffffffffff8])) [447 _393->evtPtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:337 _419 ] [337])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:337 _419 ] [337])
        (nil)))
(insn:TI 1046 1045 1048 69 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(insn 1048 1046 1059 69 (set (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 0 ax [675])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [675])
        (nil)))
;;  succ:       70 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 70, loop depth 0, count 0, freq 1054, maybe hot
;;  prev block 69, next block 71, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       69 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              137 [100.0%]  (CAN_FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(code_label 1059 1048 1060 70 252 "" [1 uses])
(note 1060 1059 1066 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(note 1066 1060 1067 70 NOTE_INSN_DELETED)
(note 1067 1066 1061 70 NOTE_INSN_DELETED)
(insn:TI 1061 1067 1068 70 (set (reg/f:DI 0 ax [677])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPi0")  <var_decl 0x7fb2b41475a0 nPi0>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:105 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPi0")  <var_decl 0x7fb2b41475a0 nPi0>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn:TI 1068 1061 2183 70 (parallel [
            (set (mem/c:SI (reg/f:DI 0 ax [677]) [22  S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 0 ax [677]) [22  S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:105 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [677])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 2183 1068 2184 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
            (const_int 221 [0xdd]))) mymainCascade.cc:106 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 2184 2183 2207 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1166)
            (pc))) mymainCascade.cc:106 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8629 (nil)))
 -> 1166)
;;  succ:       71 [13.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              57 [86.3%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 71, loop depth 0, count 0, freq 1344, maybe hot
;; Invalid sum of incoming frequencies 1054, should be 1344
;;  prev block 70, next block 72, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       56 [13.7%]  (CAN_FALLTHRU)
;;              70 [13.7%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 2207 2184 1073 71 327 "" [1 uses])
(note 1073 2207 1074 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1074 1073 1075 71 (set (reg/f:DI 0 ax [orig:338 _420 ] [338])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 85 {*movdi_internal}
     (nil))
(insn 1075 1074 1076 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:338 _420 ] [338])
            (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                    (const_int 16 [0x10])) [164 aMesons_75(D)->D.138156._M_impl._M_end_of_storage+0 S8 A64]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 1076 1075 1077 71 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1148)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 1148)
;;  succ:       72 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              128 [6.7%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 72, loop depth 0, count 0, freq 1253, maybe hot
;;  prev block 71, next block 73, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       71 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1077 1076 1078 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1078 1077 1079 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:338 _420 ] [338])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 1079 1078 1093 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2215)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 2215)
;;  succ:       73 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              116 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 73, loop depth 0, count 0, freq 982, maybe hot
;;  prev block 72, next block 74, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       72 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 21 [xmm0]
;; live  kill	 17 [flags]
(note 1093 1079 1097 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1097 1093 1113 73 (set (reg:SI 1 dx [orig:341 _424 ] [341])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 lP.idSave+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:62 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293640 [0xfffffffffffb84f8])) [22 lP.idSave+0 S4 A64])
        (nil)))
(insn 1113 1097 1096 73 (set (reg:DF 21 xmm0 [orig:349 _432 ] [349])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293608 [0xfffffffffffb8518])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])
        (nil)))
(insn:TI 1096 1113 1144 73 (set (mem/f:DI (reg/f:DI 0 ax [orig:338 _420 ] [338]) [150 _420->_vptr.Particle+0 S8 A64])
        (reg/f:DI 42 r13 [606])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (nil))
(insn 1144 1096 1098 73 (parallel [
            (set (reg/f:DI 0 ax [691])
                (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                    (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
            (nil))))
(insn:TI 1098 1144 1099 73 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -152 [0xffffffffffffff68])) [22 _420->idSave+0 S4 A64])
        (reg:SI 1 dx [orig:341 _424 ] [341])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:341 _424 ] [341])
        (nil)))
(insn 1099 1098 1100 73 (set (reg:SI 1 dx [orig:342 _425 ] [342])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 220 [0xdc])) [22 lP.statusSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293636 [0xfffffffffffb84fc])) [22 lP.statusSave+0 S4 A32])
        (nil)))
(insn:TI 1100 1099 1101 73 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -148 [0xffffffffffffff6c])) [22 _420->statusSave+0 S4 A32])
        (reg:SI 1 dx [orig:342 _425 ] [342])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:342 _425 ] [342])
        (nil)))
(insn 1101 1100 1102 73 (set (reg:SI 1 dx [orig:343 _426 ] [343])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [22 lP.mother1Save+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293632 [0xfffffffffffb8500])) [22 lP.mother1Save+0 S4 A128])
        (nil)))
(insn:TI 1102 1101 1103 73 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -144 [0xffffffffffffff70])) [22 _420->mother1Save+0 S4 A64])
        (reg:SI 1 dx [orig:343 _426 ] [343])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:343 _426 ] [343])
        (nil)))
(insn 1103 1102 1104 73 (set (reg:SI 1 dx [orig:344 _427 ] [344])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 228 [0xe4])) [22 lP.mother2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293628 [0xfffffffffffb8504])) [22 lP.mother2Save+0 S4 A32])
        (nil)))
(insn:TI 1104 1103 1105 73 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -140 [0xffffffffffffff74])) [22 _420->mother2Save+0 S4 A32])
        (reg:SI 1 dx [orig:344 _427 ] [344])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:344 _427 ] [344])
        (nil)))
(insn 1105 1104 1106 73 (set (reg:SI 1 dx [orig:345 _428 ] [345])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [22 lP.daughter1Save+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293624 [0xfffffffffffb8508])) [22 lP.daughter1Save+0 S4 A64])
        (nil)))
(insn:TI 1106 1105 1107 73 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -136 [0xffffffffffffff78])) [22 _420->daughter1Save+0 S4 A64])
        (reg:SI 1 dx [orig:345 _428 ] [345])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:345 _428 ] [345])
        (nil)))
(insn 1107 1106 1108 73 (set (reg:SI 1 dx [orig:346 _429 ] [346])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 236 [0xec])) [22 lP.daughter2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293620 [0xfffffffffffb850c])) [22 lP.daughter2Save+0 S4 A32])
        (nil)))
(insn:TI 1108 1107 1109 73 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -132 [0xffffffffffffff7c])) [22 _420->daughter2Save+0 S4 A32])
        (reg:SI 1 dx [orig:346 _429 ] [346])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:346 _429 ] [346])
        (nil)))
(insn 1109 1108 1110 73 (set (reg:SI 1 dx [orig:347 _430 ] [347])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [22 lP.colSave+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293616 [0xfffffffffffb8510])) [22 lP.colSave+0 S4 A128])
        (nil)))
(insn:TI 1110 1109 1111 73 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -128 [0xffffffffffffff80])) [22 _420->colSave+0 S4 A64])
        (reg:SI 1 dx [orig:347 _430 ] [347])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:347 _430 ] [347])
        (nil)))
(insn 1111 1110 1114 73 (set (reg:SI 1 dx [orig:348 _431 ] [348])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 244 [0xf4])) [22 lP.acolSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293612 [0xfffffffffffb8514])) [22 lP.acolSave+0 S4 A32])
        (nil)))
(insn 1114 1111 1115 73 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -120 [0xffffffffffffff88])) [78 MEM[(struct Vec4 *)_420 + 40B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:349 _432 ] [349])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:349 _432 ] [349])
        (nil)))
(insn:TI 1115 1114 1116 73 (set (reg:DF 21 xmm0 [orig:350 _433 ] [350])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293600 [0xfffffffffffb8520])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])
        (nil)))
(insn:TI 1116 1115 1112 73 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -112 [0xffffffffffffff90])) [78 MEM[(struct Vec4 *)_420 + 40B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:350 _433 ] [350])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:350 _433 ] [350])
        (nil)))
(insn 1112 1116 1127 73 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -124 [0xffffffffffffff84])) [22 _420->acolSave+0 S4 A32])
        (reg:SI 1 dx [orig:348 _431 ] [348])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:348 _431 ] [348])
        (nil)))
(insn 1127 1112 1117 73 (set (reg:QI 1 dx [orig:356 _439 ] [356])
        (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 304 [0x130])) [141 lP.hasVertexSave+0 S1 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:68 89 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -293552 [0xfffffffffffb8550])) [141 lP.hasVertexSave+0 S1 A128])
        (nil)))
(insn:TI 1117 1127 1118 73 (set (reg:DF 21 xmm0 [orig:351 _434 ] [351])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 264 [0x108])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293592 [0xfffffffffffb8528])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])
        (nil)))
(insn:TI 1118 1117 1119 73 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -104 [0xffffffffffffff98])) [78 MEM[(struct Vec4 *)_420 + 40B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:351 _434 ] [351])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:351 _434 ] [351])
        (nil)))
(insn:TI 1119 1118 1120 73 (set (reg:DF 21 xmm0 [orig:352 _435 ] [352])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 272 [0x110])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293584 [0xfffffffffffb8530])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])
        (nil)))
(insn:TI 1120 1119 1121 73 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -96 [0xffffffffffffffa0])) [78 MEM[(struct Vec4 *)_420 + 40B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:352 _435 ] [352])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:352 _435 ] [352])
        (nil)))
(insn:TI 1121 1120 1122 73 (set (reg:DF 21 xmm0 [orig:353 _436 ] [353])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 280 [0x118])) [78 lP.mSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293576 [0xfffffffffffb8538])) [78 lP.mSave+0 S8 A64])
        (nil)))
(insn:TI 1122 1121 1123 73 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -88 [0xffffffffffffffa8])) [78 _420->mSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:353 _436 ] [353])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:353 _436 ] [353])
        (nil)))
(insn:TI 1123 1122 1124 73 (set (reg:DF 21 xmm0 [orig:354 _437 ] [354])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [78 lP.scaleSave+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293568 [0xfffffffffffb8540])) [78 lP.scaleSave+0 S8 A128])
        (nil)))
(insn:TI 1124 1123 1125 73 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -80 [0xffffffffffffffb0])) [78 _420->scaleSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:354 _437 ] [354])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:354 _437 ] [354])
        (nil)))
(insn:TI 1125 1124 1126 73 (set (reg:DF 21 xmm0 [orig:355 _438 ] [355])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 296 [0x128])) [78 lP.polSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293560 [0xfffffffffffb8548])) [78 lP.polSave+0 S8 A64])
        (nil)))
(insn:TI 1126 1125 1128 73 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -72 [0xffffffffffffffb8])) [78 _420->polSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:355 _438 ] [355])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:355 _438 ] [355])
        (nil)))
(insn 1128 1126 1139 73 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -64 [0xffffffffffffffc0])) [141 _420->hasVertexSave+0 S1 A64])
        (reg:QI 1 dx [orig:356 _439 ] [356])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 1 dx [orig:356 _439 ] [356])
        (nil)))
(insn 1139 1128 1129 73 (set (reg/f:DI 1 dx [orig:362 _445 ] [362])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [446 lP.pdePtr+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293504 [0xfffffffffffb8580])) [446 lP.pdePtr+0 S8 A128])
        (nil)))
(insn:TI 1129 1139 1130 73 (set (reg:DF 21 xmm0 [orig:357 _440 ] [357])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 312 [0x138])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293544 [0xfffffffffffb8558])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])
        (nil)))
(insn:TI 1130 1129 1131 73 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -56 [0xffffffffffffffc8])) [78 MEM[(struct Vec4 *)_420 + 104B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:357 _440 ] [357])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:357 _440 ] [357])
        (nil)))
(insn:TI 1131 1130 1132 73 (set (reg:DF 21 xmm0 [orig:358 _441 ] [358])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 320 [0x140])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293536 [0xfffffffffffb8560])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])
        (nil)))
(insn:TI 1132 1131 1133 73 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -48 [0xffffffffffffffd0])) [78 MEM[(struct Vec4 *)_420 + 104B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:358 _441 ] [358])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:358 _441 ] [358])
        (nil)))
(insn:TI 1133 1132 1134 73 (set (reg:DF 21 xmm0 [orig:359 _442 ] [359])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 328 [0x148])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293528 [0xfffffffffffb8568])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])
        (nil)))
(insn:TI 1134 1133 1135 73 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -40 [0xffffffffffffffd8])) [78 MEM[(struct Vec4 *)_420 + 104B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:359 _442 ] [359])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:359 _442 ] [359])
        (nil)))
(insn:TI 1135 1134 1136 73 (set (reg:DF 21 xmm0 [orig:360 _443 ] [360])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 336 [0x150])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293520 [0xfffffffffffb8570])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])
        (nil)))
(insn:TI 1136 1135 1137 73 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -32 [0xffffffffffffffe0])) [78 MEM[(struct Vec4 *)_420 + 104B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:360 _443 ] [360])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:360 _443 ] [360])
        (nil)))
(insn:TI 1137 1136 1140 73 (set (reg:DF 21 xmm0 [orig:361 _444 ] [361])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 344 [0x158])) [78 lP.tauSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293512 [0xfffffffffffb8578])) [78 lP.tauSave+0 S8 A64])
        (nil)))
(insn 1140 1137 1141 73 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -16 [0xfffffffffffffff0])) [446 _420->pdePtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:362 _445 ] [362])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:362 _445 ] [362])
        (nil)))
(insn:TI 1141 1140 1138 73 (set (reg/f:DI 1 dx [orig:363 _446 ] [363])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 360 [0x168])) [447 lP.evtPtr+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293496 [0xfffffffffffb8588])) [447 lP.evtPtr+0 S8 A64])
        (nil)))
(insn:TI 1138 1141 1142 73 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -24 [0xffffffffffffffe8])) [78 _420->tauSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:361 _444 ] [361])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:361 _444 ] [361])
        (nil)))
(insn:TI 1142 1138 1143 73 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:338 _420 ] [338])
                (const_int -8 [0xfffffffffffffff8])) [447 _420->evtPtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:363 _446 ] [363])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:363 _446 ] [363])
        (nil)))
(insn:TI 1143 1142 1145 73 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(insn 1145 1143 1156 73 (set (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 0 ax [691])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [691])
        (nil)))
;;  succ:       74 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 74, loop depth 0, count 0, freq 1054, maybe hot
;;  prev block 73, next block 75, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       73 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              129 [100.0%]  (CAN_FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(code_label 1156 1145 1157 74 257 "" [1 uses])
(note 1157 1156 1163 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(note 1163 1157 1164 74 NOTE_INSN_DELETED)
(note 1164 1163 1158 74 NOTE_INSN_DELETED)
(insn:TI 1158 1164 1165 74 (set (reg/f:DI 0 ax [693])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nEta")  <var_decl 0x7fb2b4147630 nEta>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:106 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nEta")  <var_decl 0x7fb2b4147630 nEta>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn:TI 1165 1158 2187 74 (parallel [
            (set (mem/c:SI (reg/f:DI 0 ax [693]) [22 nEta+0 S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 0 ax [693]) [22 nEta+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:106 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [693])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 2187 1165 2188 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
            (const_int 223 [0xdf]))) mymainCascade.cc:107 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 2188 2187 2208 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1263)
            (pc))) mymainCascade.cc:107 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8568 (nil)))
 -> 1263)
;;  succ:       75 [14.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              58 [85.7%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 75, loop depth 0, count 0, freq 1344, maybe hot
;; Invalid sum of incoming frequencies 803, should be 1344
;;  prev block 74, next block 76, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       57 [14.3%]  (CAN_FALLTHRU)
;;              74 [14.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 2208 2188 1170 75 328 "" [1 uses])
(note 1170 2208 1171 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1171 1170 1172 75 (set (reg/f:DI 0 ax [orig:364 _447 ] [364])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 85 {*movdi_internal}
     (nil))
(insn 1172 1171 1173 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:364 _447 ] [364])
            (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                    (const_int 16 [0x10])) [164 aMesons_75(D)->D.138156._M_impl._M_end_of_storage+0 S8 A64]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 1173 1172 1174 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1245)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 1245)
;;  succ:       76 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              130 [6.7%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 76, loop depth 0, count 0, freq 1253, maybe hot
;;  prev block 75, next block 77, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       75 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1174 1173 1175 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1175 1174 1176 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:364 _447 ] [364])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 1176 1175 1190 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2216)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 2216)
;;  succ:       77 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              115 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 77, loop depth 0, count 0, freq 982, maybe hot
;;  prev block 76, next block 78, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       76 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 21 [xmm0]
;; live  kill	 17 [flags]
(note 1190 1176 1194 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1194 1190 1210 77 (set (reg:SI 1 dx [orig:367 _451 ] [367])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 lP.idSave+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:62 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293640 [0xfffffffffffb84f8])) [22 lP.idSave+0 S4 A64])
        (nil)))
(insn 1210 1194 1193 77 (set (reg:DF 21 xmm0 [orig:375 _459 ] [375])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293608 [0xfffffffffffb8518])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])
        (nil)))
(insn:TI 1193 1210 1241 77 (set (mem/f:DI (reg/f:DI 0 ax [orig:364 _447 ] [364]) [150 _447->_vptr.Particle+0 S8 A64])
        (reg/f:DI 42 r13 [606])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (nil))
(insn 1241 1193 1195 77 (parallel [
            (set (reg/f:DI 0 ax [707])
                (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                    (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
            (nil))))
(insn:TI 1195 1241 1196 77 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -152 [0xffffffffffffff68])) [22 _447->idSave+0 S4 A64])
        (reg:SI 1 dx [orig:367 _451 ] [367])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:367 _451 ] [367])
        (nil)))
(insn 1196 1195 1197 77 (set (reg:SI 1 dx [orig:368 _452 ] [368])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 220 [0xdc])) [22 lP.statusSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293636 [0xfffffffffffb84fc])) [22 lP.statusSave+0 S4 A32])
        (nil)))
(insn:TI 1197 1196 1198 77 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -148 [0xffffffffffffff6c])) [22 _447->statusSave+0 S4 A32])
        (reg:SI 1 dx [orig:368 _452 ] [368])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:368 _452 ] [368])
        (nil)))
(insn 1198 1197 1199 77 (set (reg:SI 1 dx [orig:369 _453 ] [369])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [22 lP.mother1Save+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293632 [0xfffffffffffb8500])) [22 lP.mother1Save+0 S4 A128])
        (nil)))
(insn:TI 1199 1198 1200 77 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -144 [0xffffffffffffff70])) [22 _447->mother1Save+0 S4 A64])
        (reg:SI 1 dx [orig:369 _453 ] [369])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:369 _453 ] [369])
        (nil)))
(insn 1200 1199 1201 77 (set (reg:SI 1 dx [orig:370 _454 ] [370])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 228 [0xe4])) [22 lP.mother2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293628 [0xfffffffffffb8504])) [22 lP.mother2Save+0 S4 A32])
        (nil)))
(insn:TI 1201 1200 1202 77 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -140 [0xffffffffffffff74])) [22 _447->mother2Save+0 S4 A32])
        (reg:SI 1 dx [orig:370 _454 ] [370])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:370 _454 ] [370])
        (nil)))
(insn 1202 1201 1203 77 (set (reg:SI 1 dx [orig:371 _455 ] [371])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [22 lP.daughter1Save+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293624 [0xfffffffffffb8508])) [22 lP.daughter1Save+0 S4 A64])
        (nil)))
(insn:TI 1203 1202 1204 77 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -136 [0xffffffffffffff78])) [22 _447->daughter1Save+0 S4 A64])
        (reg:SI 1 dx [orig:371 _455 ] [371])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:371 _455 ] [371])
        (nil)))
(insn 1204 1203 1205 77 (set (reg:SI 1 dx [orig:372 _456 ] [372])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 236 [0xec])) [22 lP.daughter2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293620 [0xfffffffffffb850c])) [22 lP.daughter2Save+0 S4 A32])
        (nil)))
(insn:TI 1205 1204 1206 77 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -132 [0xffffffffffffff7c])) [22 _447->daughter2Save+0 S4 A32])
        (reg:SI 1 dx [orig:372 _456 ] [372])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:372 _456 ] [372])
        (nil)))
(insn 1206 1205 1207 77 (set (reg:SI 1 dx [orig:373 _457 ] [373])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [22 lP.colSave+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293616 [0xfffffffffffb8510])) [22 lP.colSave+0 S4 A128])
        (nil)))
(insn:TI 1207 1206 1208 77 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -128 [0xffffffffffffff80])) [22 _447->colSave+0 S4 A64])
        (reg:SI 1 dx [orig:373 _457 ] [373])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:373 _457 ] [373])
        (nil)))
(insn 1208 1207 1211 77 (set (reg:SI 1 dx [orig:374 _458 ] [374])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 244 [0xf4])) [22 lP.acolSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293612 [0xfffffffffffb8514])) [22 lP.acolSave+0 S4 A32])
        (nil)))
(insn 1211 1208 1212 77 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -120 [0xffffffffffffff88])) [78 MEM[(struct Vec4 *)_447 + 40B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:375 _459 ] [375])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:375 _459 ] [375])
        (nil)))
(insn:TI 1212 1211 1213 77 (set (reg:DF 21 xmm0 [orig:376 _460 ] [376])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293600 [0xfffffffffffb8520])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])
        (nil)))
(insn:TI 1213 1212 1209 77 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -112 [0xffffffffffffff90])) [78 MEM[(struct Vec4 *)_447 + 40B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:376 _460 ] [376])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:376 _460 ] [376])
        (nil)))
(insn 1209 1213 1224 77 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -124 [0xffffffffffffff84])) [22 _447->acolSave+0 S4 A32])
        (reg:SI 1 dx [orig:374 _458 ] [374])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:374 _458 ] [374])
        (nil)))
(insn 1224 1209 1214 77 (set (reg:QI 1 dx [orig:382 _466 ] [382])
        (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 304 [0x130])) [141 lP.hasVertexSave+0 S1 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:68 89 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -293552 [0xfffffffffffb8550])) [141 lP.hasVertexSave+0 S1 A128])
        (nil)))
(insn:TI 1214 1224 1215 77 (set (reg:DF 21 xmm0 [orig:377 _461 ] [377])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 264 [0x108])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293592 [0xfffffffffffb8528])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])
        (nil)))
(insn:TI 1215 1214 1216 77 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -104 [0xffffffffffffff98])) [78 MEM[(struct Vec4 *)_447 + 40B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:377 _461 ] [377])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:377 _461 ] [377])
        (nil)))
(insn:TI 1216 1215 1217 77 (set (reg:DF 21 xmm0 [orig:378 _462 ] [378])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 272 [0x110])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293584 [0xfffffffffffb8530])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])
        (nil)))
(insn:TI 1217 1216 1218 77 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -96 [0xffffffffffffffa0])) [78 MEM[(struct Vec4 *)_447 + 40B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:378 _462 ] [378])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:378 _462 ] [378])
        (nil)))
(insn:TI 1218 1217 1219 77 (set (reg:DF 21 xmm0 [orig:379 _463 ] [379])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 280 [0x118])) [78 lP.mSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293576 [0xfffffffffffb8538])) [78 lP.mSave+0 S8 A64])
        (nil)))
(insn:TI 1219 1218 1220 77 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -88 [0xffffffffffffffa8])) [78 _447->mSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:379 _463 ] [379])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:379 _463 ] [379])
        (nil)))
(insn:TI 1220 1219 1221 77 (set (reg:DF 21 xmm0 [orig:380 _464 ] [380])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [78 lP.scaleSave+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293568 [0xfffffffffffb8540])) [78 lP.scaleSave+0 S8 A128])
        (nil)))
(insn:TI 1221 1220 1222 77 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -80 [0xffffffffffffffb0])) [78 _447->scaleSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:380 _464 ] [380])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:380 _464 ] [380])
        (nil)))
(insn:TI 1222 1221 1223 77 (set (reg:DF 21 xmm0 [orig:381 _465 ] [381])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 296 [0x128])) [78 lP.polSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293560 [0xfffffffffffb8548])) [78 lP.polSave+0 S8 A64])
        (nil)))
(insn:TI 1223 1222 1225 77 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -72 [0xffffffffffffffb8])) [78 _447->polSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:381 _465 ] [381])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:381 _465 ] [381])
        (nil)))
(insn 1225 1223 1236 77 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -64 [0xffffffffffffffc0])) [141 _447->hasVertexSave+0 S1 A64])
        (reg:QI 1 dx [orig:382 _466 ] [382])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 1 dx [orig:382 _466 ] [382])
        (nil)))
(insn 1236 1225 1226 77 (set (reg/f:DI 1 dx [orig:388 _472 ] [388])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [446 lP.pdePtr+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293504 [0xfffffffffffb8580])) [446 lP.pdePtr+0 S8 A128])
        (nil)))
(insn:TI 1226 1236 1227 77 (set (reg:DF 21 xmm0 [orig:383 _467 ] [383])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 312 [0x138])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293544 [0xfffffffffffb8558])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])
        (nil)))
(insn:TI 1227 1226 1228 77 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -56 [0xffffffffffffffc8])) [78 MEM[(struct Vec4 *)_447 + 104B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:383 _467 ] [383])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:383 _467 ] [383])
        (nil)))
(insn:TI 1228 1227 1229 77 (set (reg:DF 21 xmm0 [orig:384 _468 ] [384])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 320 [0x140])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293536 [0xfffffffffffb8560])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])
        (nil)))
(insn:TI 1229 1228 1230 77 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -48 [0xffffffffffffffd0])) [78 MEM[(struct Vec4 *)_447 + 104B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:384 _468 ] [384])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:384 _468 ] [384])
        (nil)))
(insn:TI 1230 1229 1231 77 (set (reg:DF 21 xmm0 [orig:385 _469 ] [385])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 328 [0x148])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293528 [0xfffffffffffb8568])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])
        (nil)))
(insn:TI 1231 1230 1232 77 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -40 [0xffffffffffffffd8])) [78 MEM[(struct Vec4 *)_447 + 104B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:385 _469 ] [385])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:385 _469 ] [385])
        (nil)))
(insn:TI 1232 1231 1233 77 (set (reg:DF 21 xmm0 [orig:386 _470 ] [386])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 336 [0x150])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293520 [0xfffffffffffb8570])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])
        (nil)))
(insn:TI 1233 1232 1234 77 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -32 [0xffffffffffffffe0])) [78 MEM[(struct Vec4 *)_447 + 104B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:386 _470 ] [386])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:386 _470 ] [386])
        (nil)))
(insn:TI 1234 1233 1237 77 (set (reg:DF 21 xmm0 [orig:387 _471 ] [387])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 344 [0x158])) [78 lP.tauSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293512 [0xfffffffffffb8578])) [78 lP.tauSave+0 S8 A64])
        (nil)))
(insn 1237 1234 1238 77 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -16 [0xfffffffffffffff0])) [446 _447->pdePtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:388 _472 ] [388])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:388 _472 ] [388])
        (nil)))
(insn:TI 1238 1237 1235 77 (set (reg/f:DI 1 dx [orig:389 _473 ] [389])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 360 [0x168])) [447 lP.evtPtr+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293496 [0xfffffffffffb8588])) [447 lP.evtPtr+0 S8 A64])
        (nil)))
(insn:TI 1235 1238 1239 77 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -24 [0xffffffffffffffe8])) [78 _447->tauSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:387 _471 ] [387])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:387 _471 ] [387])
        (nil)))
(insn:TI 1239 1235 1240 77 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:364 _447 ] [364])
                (const_int -8 [0xfffffffffffffff8])) [447 _447->evtPtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:389 _473 ] [389])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:389 _473 ] [389])
        (nil)))
(insn:TI 1240 1239 1242 77 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(insn 1242 1240 1253 77 (set (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 0 ax [707])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [707])
        (nil)))
;;  succ:       78 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 78, loop depth 0, count 0, freq 1054, maybe hot
;;  prev block 77, next block 79, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       77 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              131 [100.0%]  (CAN_FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(code_label 1253 1242 1254 78 261 "" [1 uses])
(note 1254 1253 1260 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(note 1260 1254 1261 78 NOTE_INSN_DELETED)
(note 1261 1260 1255 78 NOTE_INSN_DELETED)
(insn:TI 1255 1261 1262 78 (set (reg/f:DI 0 ax [709])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nOmega")  <var_decl 0x7fb2b41476c0 nOmega>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:107 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nOmega")  <var_decl 0x7fb2b41476c0 nOmega>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn:TI 1262 1255 2191 78 (parallel [
            (set (mem/c:SI (reg/f:DI 0 ax [709]) [22 nOmega+0 S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 0 ax [709]) [22 nOmega+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:107 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [709])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 2191 1262 2192 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
            (const_int 331 [0x14b]))) mymainCascade.cc:108 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 2192 2191 2209 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1360)
            (pc))) mymainCascade.cc:108 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8568 (nil)))
 -> 1360)
;;  succ:       79 [14.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              59 [85.7%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 79, loop depth 0, count 0, freq 1344, maybe hot
;; Invalid sum of incoming frequencies 803, should be 1344
;;  prev block 78, next block 80, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       58 [14.3%]  (CAN_FALLTHRU)
;;              78 [14.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 2209 2192 1267 79 329 "" [1 uses])
(note 1267 2209 1268 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1268 1267 1269 79 (set (reg/f:DI 0 ax [orig:390 _474 ] [390])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 85 {*movdi_internal}
     (nil))
(insn 1269 1268 1270 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:390 _474 ] [390])
            (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                    (const_int 16 [0x10])) [164 aMesons_75(D)->D.138156._M_impl._M_end_of_storage+0 S8 A64]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 1270 1269 1271 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1342)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 1342)
;;  succ:       80 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              132 [6.7%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 80, loop depth 0, count 0, freq 1253, maybe hot
;;  prev block 79, next block 81, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       79 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1271 1270 1272 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1272 1271 1273 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:390 _474 ] [390])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 1273 1272 1287 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2217)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 2217)
;;  succ:       81 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              95 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 81, loop depth 0, count 0, freq 982, maybe hot
;;  prev block 80, next block 82, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       80 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 21 [xmm0]
;; live  kill	 17 [flags]
(note 1287 1273 1291 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1291 1287 1307 81 (set (reg:SI 1 dx [orig:393 _478 ] [393])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 lP.idSave+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:62 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293640 [0xfffffffffffb84f8])) [22 lP.idSave+0 S4 A64])
        (nil)))
(insn 1307 1291 1290 81 (set (reg:DF 21 xmm0 [orig:401 _486 ] [401])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293608 [0xfffffffffffb8518])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])
        (nil)))
(insn:TI 1290 1307 1338 81 (set (mem/f:DI (reg/f:DI 0 ax [orig:390 _474 ] [390]) [150 _474->_vptr.Particle+0 S8 A64])
        (reg/f:DI 42 r13 [606])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (nil))
(insn 1338 1290 1292 81 (parallel [
            (set (reg/f:DI 0 ax [723])
                (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                    (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
            (nil))))
(insn:TI 1292 1338 1293 81 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -152 [0xffffffffffffff68])) [22 _474->idSave+0 S4 A64])
        (reg:SI 1 dx [orig:393 _478 ] [393])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:393 _478 ] [393])
        (nil)))
(insn 1293 1292 1294 81 (set (reg:SI 1 dx [orig:394 _479 ] [394])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 220 [0xdc])) [22 lP.statusSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293636 [0xfffffffffffb84fc])) [22 lP.statusSave+0 S4 A32])
        (nil)))
(insn:TI 1294 1293 1295 81 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -148 [0xffffffffffffff6c])) [22 _474->statusSave+0 S4 A32])
        (reg:SI 1 dx [orig:394 _479 ] [394])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:394 _479 ] [394])
        (nil)))
(insn 1295 1294 1296 81 (set (reg:SI 1 dx [orig:395 _480 ] [395])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [22 lP.mother1Save+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293632 [0xfffffffffffb8500])) [22 lP.mother1Save+0 S4 A128])
        (nil)))
(insn:TI 1296 1295 1297 81 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -144 [0xffffffffffffff70])) [22 _474->mother1Save+0 S4 A64])
        (reg:SI 1 dx [orig:395 _480 ] [395])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:395 _480 ] [395])
        (nil)))
(insn 1297 1296 1298 81 (set (reg:SI 1 dx [orig:396 _481 ] [396])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 228 [0xe4])) [22 lP.mother2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293628 [0xfffffffffffb8504])) [22 lP.mother2Save+0 S4 A32])
        (nil)))
(insn:TI 1298 1297 1299 81 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -140 [0xffffffffffffff74])) [22 _474->mother2Save+0 S4 A32])
        (reg:SI 1 dx [orig:396 _481 ] [396])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:396 _481 ] [396])
        (nil)))
(insn 1299 1298 1300 81 (set (reg:SI 1 dx [orig:397 _482 ] [397])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [22 lP.daughter1Save+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293624 [0xfffffffffffb8508])) [22 lP.daughter1Save+0 S4 A64])
        (nil)))
(insn:TI 1300 1299 1301 81 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -136 [0xffffffffffffff78])) [22 _474->daughter1Save+0 S4 A64])
        (reg:SI 1 dx [orig:397 _482 ] [397])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:397 _482 ] [397])
        (nil)))
(insn 1301 1300 1302 81 (set (reg:SI 1 dx [orig:398 _483 ] [398])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 236 [0xec])) [22 lP.daughter2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293620 [0xfffffffffffb850c])) [22 lP.daughter2Save+0 S4 A32])
        (nil)))
(insn:TI 1302 1301 1303 81 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -132 [0xffffffffffffff7c])) [22 _474->daughter2Save+0 S4 A32])
        (reg:SI 1 dx [orig:398 _483 ] [398])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:398 _483 ] [398])
        (nil)))
(insn 1303 1302 1304 81 (set (reg:SI 1 dx [orig:399 _484 ] [399])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [22 lP.colSave+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293616 [0xfffffffffffb8510])) [22 lP.colSave+0 S4 A128])
        (nil)))
(insn:TI 1304 1303 1305 81 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -128 [0xffffffffffffff80])) [22 _474->colSave+0 S4 A64])
        (reg:SI 1 dx [orig:399 _484 ] [399])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:399 _484 ] [399])
        (nil)))
(insn 1305 1304 1308 81 (set (reg:SI 1 dx [orig:400 _485 ] [400])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 244 [0xf4])) [22 lP.acolSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293612 [0xfffffffffffb8514])) [22 lP.acolSave+0 S4 A32])
        (nil)))
(insn 1308 1305 1309 81 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -120 [0xffffffffffffff88])) [78 MEM[(struct Vec4 *)_474 + 40B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:401 _486 ] [401])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:401 _486 ] [401])
        (nil)))
(insn:TI 1309 1308 1310 81 (set (reg:DF 21 xmm0 [orig:402 _487 ] [402])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293600 [0xfffffffffffb8520])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])
        (nil)))
(insn:TI 1310 1309 1306 81 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -112 [0xffffffffffffff90])) [78 MEM[(struct Vec4 *)_474 + 40B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:402 _487 ] [402])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:402 _487 ] [402])
        (nil)))
(insn 1306 1310 1321 81 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -124 [0xffffffffffffff84])) [22 _474->acolSave+0 S4 A32])
        (reg:SI 1 dx [orig:400 _485 ] [400])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:400 _485 ] [400])
        (nil)))
(insn 1321 1306 1311 81 (set (reg:QI 1 dx [orig:408 _493 ] [408])
        (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 304 [0x130])) [141 lP.hasVertexSave+0 S1 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:68 89 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -293552 [0xfffffffffffb8550])) [141 lP.hasVertexSave+0 S1 A128])
        (nil)))
(insn:TI 1311 1321 1312 81 (set (reg:DF 21 xmm0 [orig:403 _488 ] [403])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 264 [0x108])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293592 [0xfffffffffffb8528])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])
        (nil)))
(insn:TI 1312 1311 1313 81 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -104 [0xffffffffffffff98])) [78 MEM[(struct Vec4 *)_474 + 40B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:403 _488 ] [403])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:403 _488 ] [403])
        (nil)))
(insn:TI 1313 1312 1314 81 (set (reg:DF 21 xmm0 [orig:404 _489 ] [404])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 272 [0x110])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293584 [0xfffffffffffb8530])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])
        (nil)))
(insn:TI 1314 1313 1315 81 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -96 [0xffffffffffffffa0])) [78 MEM[(struct Vec4 *)_474 + 40B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:404 _489 ] [404])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:404 _489 ] [404])
        (nil)))
(insn:TI 1315 1314 1316 81 (set (reg:DF 21 xmm0 [orig:405 _490 ] [405])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 280 [0x118])) [78 lP.mSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293576 [0xfffffffffffb8538])) [78 lP.mSave+0 S8 A64])
        (nil)))
(insn:TI 1316 1315 1317 81 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -88 [0xffffffffffffffa8])) [78 _474->mSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:405 _490 ] [405])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:405 _490 ] [405])
        (nil)))
(insn:TI 1317 1316 1318 81 (set (reg:DF 21 xmm0 [orig:406 _491 ] [406])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [78 lP.scaleSave+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293568 [0xfffffffffffb8540])) [78 lP.scaleSave+0 S8 A128])
        (nil)))
(insn:TI 1318 1317 1319 81 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -80 [0xffffffffffffffb0])) [78 _474->scaleSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:406 _491 ] [406])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:406 _491 ] [406])
        (nil)))
(insn:TI 1319 1318 1320 81 (set (reg:DF 21 xmm0 [orig:407 _492 ] [407])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 296 [0x128])) [78 lP.polSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293560 [0xfffffffffffb8548])) [78 lP.polSave+0 S8 A64])
        (nil)))
(insn:TI 1320 1319 1322 81 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -72 [0xffffffffffffffb8])) [78 _474->polSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:407 _492 ] [407])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:407 _492 ] [407])
        (nil)))
(insn 1322 1320 1333 81 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -64 [0xffffffffffffffc0])) [141 _474->hasVertexSave+0 S1 A64])
        (reg:QI 1 dx [orig:408 _493 ] [408])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 1 dx [orig:408 _493 ] [408])
        (nil)))
(insn 1333 1322 1323 81 (set (reg/f:DI 1 dx [orig:414 _499 ] [414])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [446 lP.pdePtr+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293504 [0xfffffffffffb8580])) [446 lP.pdePtr+0 S8 A128])
        (nil)))
(insn:TI 1323 1333 1324 81 (set (reg:DF 21 xmm0 [orig:409 _494 ] [409])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 312 [0x138])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293544 [0xfffffffffffb8558])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])
        (nil)))
(insn:TI 1324 1323 1325 81 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -56 [0xffffffffffffffc8])) [78 MEM[(struct Vec4 *)_474 + 104B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:409 _494 ] [409])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:409 _494 ] [409])
        (nil)))
(insn:TI 1325 1324 1326 81 (set (reg:DF 21 xmm0 [orig:410 _495 ] [410])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 320 [0x140])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293536 [0xfffffffffffb8560])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])
        (nil)))
(insn:TI 1326 1325 1327 81 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -48 [0xffffffffffffffd0])) [78 MEM[(struct Vec4 *)_474 + 104B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:410 _495 ] [410])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:410 _495 ] [410])
        (nil)))
(insn:TI 1327 1326 1328 81 (set (reg:DF 21 xmm0 [orig:411 _496 ] [411])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 328 [0x148])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293528 [0xfffffffffffb8568])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])
        (nil)))
(insn:TI 1328 1327 1329 81 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -40 [0xffffffffffffffd8])) [78 MEM[(struct Vec4 *)_474 + 104B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:411 _496 ] [411])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:411 _496 ] [411])
        (nil)))
(insn:TI 1329 1328 1330 81 (set (reg:DF 21 xmm0 [orig:412 _497 ] [412])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 336 [0x150])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293520 [0xfffffffffffb8570])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])
        (nil)))
(insn:TI 1330 1329 1331 81 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -32 [0xffffffffffffffe0])) [78 MEM[(struct Vec4 *)_474 + 104B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:412 _497 ] [412])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:412 _497 ] [412])
        (nil)))
(insn:TI 1331 1330 1334 81 (set (reg:DF 21 xmm0 [orig:413 _498 ] [413])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 344 [0x158])) [78 lP.tauSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293512 [0xfffffffffffb8578])) [78 lP.tauSave+0 S8 A64])
        (nil)))
(insn 1334 1331 1335 81 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -16 [0xfffffffffffffff0])) [446 _474->pdePtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:414 _499 ] [414])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:414 _499 ] [414])
        (nil)))
(insn:TI 1335 1334 1332 81 (set (reg/f:DI 1 dx [orig:415 _500 ] [415])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 360 [0x168])) [447 lP.evtPtr+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293496 [0xfffffffffffb8588])) [447 lP.evtPtr+0 S8 A64])
        (nil)))
(insn:TI 1332 1335 1336 81 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -24 [0xffffffffffffffe8])) [78 _474->tauSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:413 _498 ] [413])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:413 _498 ] [413])
        (nil)))
(insn:TI 1336 1332 1337 81 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:390 _474 ] [390])
                (const_int -8 [0xfffffffffffffff8])) [447 _474->evtPtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:415 _500 ] [415])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:415 _500 ] [415])
        (nil)))
(insn:TI 1337 1336 1339 81 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(insn 1339 1337 1350 81 (set (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 0 ax [723])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [723])
        (nil)))
;;  succ:       82 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 82, loop depth 0, count 0, freq 1054, maybe hot
;;  prev block 81, next block 83, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       81 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              133 [100.0%]  (CAN_FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(code_label 1350 1339 1351 82 264 "" [1 uses])
(note 1351 1350 1357 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(note 1357 1351 1358 82 NOTE_INSN_DELETED)
(note 1358 1357 1352 82 NOTE_INSN_DELETED)
(insn:TI 1352 1358 1359 82 (set (reg/f:DI 0 ax [725])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nEtaPrime")  <var_decl 0x7fb2b4147750 nEtaPrime>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:108 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nEtaPrime")  <var_decl 0x7fb2b4147750 nEtaPrime>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn:TI 1359 1352 2195 82 (parallel [
            (set (mem/c:SI (reg/f:DI 0 ax [725]) [22 nEtaPrime+0 S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 0 ax [725]) [22 nEtaPrime+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:108 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [725])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 2195 1359 2196 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
            (const_int 22 [0x16]))) mymainCascade.cc:109 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (nil)))
(jump_insn:TI 2196 2195 2210 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1443)
            (pc))) mymainCascade.cc:109 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8568 (nil)))
 -> 1443)
;;  succ:       83 [14.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              60 [85.7%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 83, loop depth 0, count 0, freq 1344, maybe hot
;; Invalid sum of incoming frequencies 803, should be 1344
;;  prev block 82, next block 84, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59 [14.3%]  (CAN_FALLTHRU)
;;              82 [14.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 2210 2196 1364 83 330 "" [1 uses])
(note 1364 2210 1365 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1365 1364 1366 83 (set (reg/f:DI 0 ax [orig:416 _501 ] [416])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 85 {*movdi_internal}
     (nil))
(insn 1366 1365 1367 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:416 _501 ] [416])
            (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                    (const_int 16 [0x10])) [164 aMesons_75(D)->D.138156._M_impl._M_end_of_storage+0 S8 A64]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 1367 1366 1368 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1427)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 1427)
;;  succ:       84 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              134 [6.7%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 84, loop depth 0, count 0, freq 1253, maybe hot
;;  prev block 83, next block 85, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       83 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1368 1367 1369 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1369 1368 1370 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:416 _501 ] [416])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 1370 1369 1371 84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1421)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 1421)
;;  succ:       85 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              86 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 85, loop depth 0, count 0, freq 982, maybe hot
;;  prev block 84, next block 86, flags: (REACHABLE, RTL)
;;  pred:       84 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 21 [xmm0]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 21 [xmm0]
;; live  kill	
(note 1371 1370 1375 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1375 1371 1391 85 (set (reg:SI 1 dx [orig:419 _505 ] [419])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 lP.idSave+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:62 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293640 [0xfffffffffffb84f8])) [22 lP.idSave+0 S4 A64])
        (nil)))
(insn 1391 1375 1374 85 (set (reg:DF 21 xmm0 [orig:427 _513 ] [427])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293608 [0xfffffffffffb8518])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])
        (nil)))
(insn:TI 1374 1391 1376 85 (set (mem/f:DI (reg/f:DI 0 ax [orig:416 _501 ] [416]) [150 _501->_vptr.Particle+0 S8 A64])
        (reg/f:DI 42 r13 [606])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (nil))
(insn:TI 1376 1374 1377 85 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 8 [0x8])) [22 _501->idSave+0 S4 A64])
        (reg:SI 1 dx [orig:419 _505 ] [419])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:419 _505 ] [419])
        (nil)))
(insn 1377 1376 1378 85 (set (reg:SI 1 dx [orig:420 _506 ] [420])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 220 [0xdc])) [22 lP.statusSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293636 [0xfffffffffffb84fc])) [22 lP.statusSave+0 S4 A32])
        (nil)))
(insn:TI 1378 1377 1379 85 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 12 [0xc])) [22 _501->statusSave+0 S4 A32])
        (reg:SI 1 dx [orig:420 _506 ] [420])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:420 _506 ] [420])
        (nil)))
(insn 1379 1378 1380 85 (set (reg:SI 1 dx [orig:421 _507 ] [421])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [22 lP.mother1Save+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293632 [0xfffffffffffb8500])) [22 lP.mother1Save+0 S4 A128])
        (nil)))
(insn:TI 1380 1379 1381 85 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 16 [0x10])) [22 _501->mother1Save+0 S4 A64])
        (reg:SI 1 dx [orig:421 _507 ] [421])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:421 _507 ] [421])
        (nil)))
(insn 1381 1380 1382 85 (set (reg:SI 1 dx [orig:422 _508 ] [422])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 228 [0xe4])) [22 lP.mother2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293628 [0xfffffffffffb8504])) [22 lP.mother2Save+0 S4 A32])
        (nil)))
(insn:TI 1382 1381 1383 85 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 20 [0x14])) [22 _501->mother2Save+0 S4 A32])
        (reg:SI 1 dx [orig:422 _508 ] [422])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:422 _508 ] [422])
        (nil)))
(insn 1383 1382 1384 85 (set (reg:SI 1 dx [orig:423 _509 ] [423])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [22 lP.daughter1Save+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293624 [0xfffffffffffb8508])) [22 lP.daughter1Save+0 S4 A64])
        (nil)))
(insn:TI 1384 1383 1385 85 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 24 [0x18])) [22 _501->daughter1Save+0 S4 A64])
        (reg:SI 1 dx [orig:423 _509 ] [423])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:423 _509 ] [423])
        (nil)))
(insn 1385 1384 1386 85 (set (reg:SI 1 dx [orig:424 _510 ] [424])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 236 [0xec])) [22 lP.daughter2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293620 [0xfffffffffffb850c])) [22 lP.daughter2Save+0 S4 A32])
        (nil)))
(insn:TI 1386 1385 1387 85 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 28 [0x1c])) [22 _501->daughter2Save+0 S4 A32])
        (reg:SI 1 dx [orig:424 _510 ] [424])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:424 _510 ] [424])
        (nil)))
(insn 1387 1386 1388 85 (set (reg:SI 1 dx [orig:425 _511 ] [425])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [22 lP.colSave+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293616 [0xfffffffffffb8510])) [22 lP.colSave+0 S4 A128])
        (nil)))
(insn:TI 1388 1387 1389 85 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 32 [0x20])) [22 _501->colSave+0 S4 A64])
        (reg:SI 1 dx [orig:425 _511 ] [425])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:425 _511 ] [425])
        (nil)))
(insn 1389 1388 1392 85 (set (reg:SI 1 dx [orig:426 _512 ] [426])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 244 [0xf4])) [22 lP.acolSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293612 [0xfffffffffffb8514])) [22 lP.acolSave+0 S4 A32])
        (nil)))
(insn 1392 1389 1393 85 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 40 [0x28])) [78 MEM[(struct Vec4 *)_501 + 40B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:427 _513 ] [427])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:427 _513 ] [427])
        (nil)))
(insn:TI 1393 1392 1394 85 (set (reg:DF 21 xmm0 [orig:428 _514 ] [428])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293600 [0xfffffffffffb8520])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])
        (nil)))
(insn:TI 1394 1393 1390 85 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 48 [0x30])) [78 MEM[(struct Vec4 *)_501 + 40B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:428 _514 ] [428])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:428 _514 ] [428])
        (nil)))
(insn 1390 1394 1405 85 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 36 [0x24])) [22 _501->acolSave+0 S4 A32])
        (reg:SI 1 dx [orig:426 _512 ] [426])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:426 _512 ] [426])
        (nil)))
(insn 1405 1390 1395 85 (set (reg:QI 1 dx [orig:434 _520 ] [434])
        (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 304 [0x130])) [141 lP.hasVertexSave+0 S1 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:68 89 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -293552 [0xfffffffffffb8550])) [141 lP.hasVertexSave+0 S1 A128])
        (nil)))
(insn:TI 1395 1405 1396 85 (set (reg:DF 21 xmm0 [orig:429 _515 ] [429])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 264 [0x108])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293592 [0xfffffffffffb8528])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])
        (nil)))
(insn:TI 1396 1395 1397 85 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 56 [0x38])) [78 MEM[(struct Vec4 *)_501 + 40B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:429 _515 ] [429])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:429 _515 ] [429])
        (nil)))
(insn:TI 1397 1396 1398 85 (set (reg:DF 21 xmm0 [orig:430 _516 ] [430])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 272 [0x110])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293584 [0xfffffffffffb8530])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])
        (nil)))
(insn:TI 1398 1397 1399 85 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 64 [0x40])) [78 MEM[(struct Vec4 *)_501 + 40B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:430 _516 ] [430])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:430 _516 ] [430])
        (nil)))
(insn:TI 1399 1398 1400 85 (set (reg:DF 21 xmm0 [orig:431 _517 ] [431])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 280 [0x118])) [78 lP.mSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293576 [0xfffffffffffb8538])) [78 lP.mSave+0 S8 A64])
        (nil)))
(insn:TI 1400 1399 1401 85 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 72 [0x48])) [78 _501->mSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:431 _517 ] [431])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:431 _517 ] [431])
        (nil)))
(insn:TI 1401 1400 1402 85 (set (reg:DF 21 xmm0 [orig:432 _518 ] [432])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [78 lP.scaleSave+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293568 [0xfffffffffffb8540])) [78 lP.scaleSave+0 S8 A128])
        (nil)))
(insn:TI 1402 1401 1403 85 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 80 [0x50])) [78 _501->scaleSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:432 _518 ] [432])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:432 _518 ] [432])
        (nil)))
(insn:TI 1403 1402 1404 85 (set (reg:DF 21 xmm0 [orig:433 _519 ] [433])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 296 [0x128])) [78 lP.polSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293560 [0xfffffffffffb8548])) [78 lP.polSave+0 S8 A64])
        (nil)))
(insn:TI 1404 1403 1406 85 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 88 [0x58])) [78 _501->polSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:433 _519 ] [433])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:433 _519 ] [433])
        (nil)))
(insn 1406 1404 1417 85 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 96 [0x60])) [141 _501->hasVertexSave+0 S1 A64])
        (reg:QI 1 dx [orig:434 _520 ] [434])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 1 dx [orig:434 _520 ] [434])
        (nil)))
(insn 1417 1406 1407 85 (set (reg/f:DI 1 dx [orig:440 _526 ] [440])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [446 lP.pdePtr+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293504 [0xfffffffffffb8580])) [446 lP.pdePtr+0 S8 A128])
        (nil)))
(insn:TI 1407 1417 1408 85 (set (reg:DF 21 xmm0 [orig:435 _521 ] [435])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 312 [0x138])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293544 [0xfffffffffffb8558])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])
        (nil)))
(insn:TI 1408 1407 1409 85 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 104 [0x68])) [78 MEM[(struct Vec4 *)_501 + 104B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:435 _521 ] [435])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:435 _521 ] [435])
        (nil)))
(insn:TI 1409 1408 1410 85 (set (reg:DF 21 xmm0 [orig:436 _522 ] [436])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 320 [0x140])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293536 [0xfffffffffffb8560])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])
        (nil)))
(insn:TI 1410 1409 1411 85 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 112 [0x70])) [78 MEM[(struct Vec4 *)_501 + 104B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:436 _522 ] [436])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:436 _522 ] [436])
        (nil)))
(insn:TI 1411 1410 1412 85 (set (reg:DF 21 xmm0 [orig:437 _523 ] [437])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 328 [0x148])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293528 [0xfffffffffffb8568])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])
        (nil)))
(insn:TI 1412 1411 1413 85 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 120 [0x78])) [78 MEM[(struct Vec4 *)_501 + 104B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:437 _523 ] [437])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:437 _523 ] [437])
        (nil)))
(insn:TI 1413 1412 1414 85 (set (reg:DF 21 xmm0 [orig:438 _524 ] [438])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 336 [0x150])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293520 [0xfffffffffffb8570])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])
        (nil)))
(insn:TI 1414 1413 1415 85 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 128 [0x80])) [78 MEM[(struct Vec4 *)_501 + 104B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:438 _524 ] [438])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:438 _524 ] [438])
        (nil)))
(insn:TI 1415 1414 1418 85 (set (reg:DF 21 xmm0 [orig:439 _525 ] [439])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 344 [0x158])) [78 lP.tauSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293512 [0xfffffffffffb8578])) [78 lP.tauSave+0 S8 A64])
        (nil)))
(insn 1418 1415 1419 85 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 144 [0x90])) [446 _501->pdePtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:440 _526 ] [440])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:440 _526 ] [440])
        (nil)))
(insn:TI 1419 1418 1416 85 (set (reg/f:DI 1 dx [orig:441 _527 ] [441])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 360 [0x168])) [447 lP.evtPtr+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293496 [0xfffffffffffb8588])) [447 lP.evtPtr+0 S8 A64])
        (nil)))
(insn:TI 1416 1419 1420 85 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 136 [0x88])) [78 _501->tauSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:439 _525 ] [439])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:439 _525 ] [439])
        (nil)))
(insn:TI 1420 1416 1421 85 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                (const_int 152 [0x98])) [447 _501->evtPtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:441 _527 ] [441])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:441 _527 ] [441])
        (nil)))
;;  succ:       86 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 86, loop depth 0, count 0, freq 1253, maybe hot
;;  prev block 85, next block 87, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       84 [21.6%]  (CAN_FALLTHRU)
;;              85 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 1421 1420 1422 86 266 "" [1 uses])
(note 1422 1421 1423 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1423 1422 1424 86 (parallel [
            (set (reg/f:DI 0 ax [733])
                (plus:DI (reg/f:DI 0 ax [orig:416 _501 ] [416])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                    (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
            (nil))))
(insn:TI 1424 1423 1433 86 (set (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 0 ax [733])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [733])
        (nil)))
;;  succ:       87 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 87, loop depth 0, count 0, freq 1344, maybe hot
;;  prev block 86, next block 88, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       86 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              135 [100.0%]  (CAN_FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 1433 1424 1434 87 267 "" [1 uses])
(note 1434 1433 1440 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(note 1440 1434 1441 87 NOTE_INSN_DELETED)
(note 1441 1440 1435 87 NOTE_INSN_DELETED)
(insn:TI 1435 1441 1442 87 (set (reg/f:DI 0 ax [735])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nG")  <var_decl 0x7fb2b41473f0 nG>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:109 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nG")  <var_decl 0x7fb2b41473f0 nG>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn:TI 1442 1435 2218 87 (parallel [
            (set (mem/c:SI (reg/f:DI 0 ax [735]) [22  S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 0 ax [735]) [22  S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:109 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [735])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 2218 1442 2219 87 (set (pc)
        (label_ref 1443)) 667 {jump}
     (nil)
 -> 1443)
;;  succ:       60 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2219 2218 2202)
;; basic block 88, loop depth 0, count 0, freq 251, maybe hot
;;  prev block 87, next block 89, flags: (REACHABLE, RTL)
;;  pred:       14 [50.0%]  (CAN_FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 5 [di] 41 [r12]
;; live  kill	
(code_label 2202 2219 205 88 324 "" [1 uses])
(note 205 2202 2015 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2015 205 212 88 (set (reg/f:DI 41 r12 [804])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 208 [0xd0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 212 2015 2016 88 (set (reg:DI 4 si)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 408 [0x198])) [5 MEM[(char_type * *)&lseed + 40B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (nil))
(insn:TI 2016 212 213 88 (set (reg/f:DI 1 dx [529])
        (plus:DI (reg/f:DI 41 r12 [804])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 213 2016 209 88 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [804])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293648 [0xfffffffffffb84f0]))
        (nil)))
(insn:TI 209 213 211 88 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [5 MEM[(struct _Alloc_hider *)&D.440965]._M_p+0 S8 A128])
        (reg/f:DI 1 dx [529])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [529])
        (nil)))
(insn 211 209 214 88 (set (reg:DI 1 dx)
        (reg/f:DI 0 ax [orig:155 _200 ] [155])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:155 _200 ] [155])
        (nil)))
(call_insn:TI 214 211 215 88 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.62") [flags 0x3]  <function_decl 0x7fb2b329a380 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.62>) [0 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.62 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:196 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 16 [0x10])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.62") [flags 0x3]  <function_decl 0x7fb2b329a380 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.62>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       89 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              152 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 89, loop depth 0, count 0, freq 251, maybe hot
;;  prev block 88, next block 90, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       88 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	
(note 215 214 217 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn:TI 217 215 2014 89 (set (reg/f:DI 1 dx [orig:163 _210 ] [163])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [5 MEM[(char * *)&D.440965]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 2014 217 216 89 (set (reg/f:DI 2 cx [532])
        (plus:DI (reg/f:DI 41 r12 [804])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:633 215 {*leadi}
     (nil))
(insn 216 2014 220 89 (set (reg/f:DI 0 ax [orig:162 _208 ] [162])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [5 MEM[(char * *)&D.337367]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 220 216 221 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 1 dx [orig:163 _210 ] [163])
            (reg/f:DI 2 cx [532]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:633 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [532])
        (nil)))
(jump_insn:TI 221 220 222 89 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:633 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 248)
;;  succ:       90 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              151 [6.7%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 90, loop depth 0, count 0, freq 234, maybe hot
;;  prev block 89, next block 91, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       89 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
(note 222 221 2013 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2013 222 225 90 (set (reg/f:DI 2 cx [534])
        (plus:DI (reg/f:DI 6 bp [799])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:639 215 {*leadi}
     (nil))
(insn:TI 225 2013 226 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:162 _208 ] [162])
            (reg/f:DI 2 cx [534]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:639 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [534])
        (nil)))
(jump_insn:TI 226 225 227 90 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1599)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:639 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 1599)
;;  succ:       91 [85.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              146 [15.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 91, loop depth 0, count 0, freq 199, maybe hot
;;  prev block 90, next block 92, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       90 [85.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	
(note 227 226 229 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn:TI 229 227 230 91 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [5 MEM[(char * *)&D.337367]+0 S8 A128])
        (reg/f:DI 1 dx [orig:163 _210 ] [163])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:128 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:163 _210 ] [163])
        (nil)))
(insn 230 229 234 91 (set (reg:DI 1 dx [orig:535 MEM[(long unsigned int *)&D.440965 + 8B] ] [535])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [6 MEM[(long unsigned int *)&D.440965 + 8B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293640 [0xfffffffffffb84f8])) [6 MEM[(long unsigned int *)&D.440965 + 8B]+0 S8 A64])
        (nil)))
(insn 234 230 228 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:162 _208 ] [162])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:653 4 {*cmpdi_ccno_1}
     (nil))
(insn:TI 228 234 231 91 (set (reg/v:DI 2 cx [orig:164 __capacity ] [164])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [0 D.337367.D.24452._M_allocated_capacity+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:644 85 {*movdi_internal}
     (nil))
(insn:TI 231 228 232 91 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 88 [0x58])) [6 MEM[(size_type *)&D.337367 + 8B]+0 S8 A64])
        (reg:DI 1 dx [orig:535 MEM[(long unsigned int *)&D.440965 + 8B] ] [535])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:535 MEM[(long unsigned int *)&D.440965 + 8B] ] [535])
        (nil)))
(insn 232 231 233 91 (set (reg:DI 1 dx [orig:536 D.440965.D.24452._M_allocated_capacity ] [536])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [0 D.440965.D.24452._M_allocated_capacity+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:160 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293632 [0xfffffffffffb8500])) [0 D.440965.D.24452._M_allocated_capacity+0 S8 A128])
        (nil)))
(insn:TI 233 232 235 91 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [6 MEM[(size_type *)&D.337367 + 16B]+0 S8 A128])
        (reg:DI 1 dx [orig:536 D.440965.D.24452._M_allocated_capacity ] [536])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:160 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:536 D.440965.D.24452._M_allocated_capacity ] [536])
        (nil)))
(jump_insn 235 233 236 91 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 241)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:653 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5 (nil)))
 -> 241)
;;  succ:       92 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              147 [0.1%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 92, loop depth 0, count 0, freq 199, maybe hot
;;  prev block 91, next block 93, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       91 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 2 [cx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 236 235 237 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn:TI 237 236 238 92 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [5 MEM[(char * *)&D.440965]+0 S8 A128])
        (reg/f:DI 0 ax [orig:162 _208 ] [162])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:128 85 {*movdi_internal}
     (nil))
(insn 238 237 256 92 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [6 MEM[(size_type *)&D.440965 + 16B]+0 S8 A128])
        (reg/v:DI 2 cx [orig:164 __capacity ] [164])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:160 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 2 cx [orig:164 __capacity ] [164])
        (nil)))
;;  succ:       93 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 93, loop depth 0, count 0, freq 251, maybe hot
;;  prev block 92, next block 94, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       147 [100.0%]  (CAN_FALLTHRU)
;;              92 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              151 [100.0%]  (CAN_FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 41 [r12]
;; lr  def 	 5 [di] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(code_label 256 238 257 93 210 "" [2 uses])
(note 257 256 258 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn:TI 258 257 259 93 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [6 MEM[(size_type *)&D.440965 + 8B]+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (nil))
(insn 259 258 262 93 (set (mem:QI (reg/f:DI 0 ax [orig:162 _208 ] [162]) [0 MEM[(char_type &)prephitmp_954]+0 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:243 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:162 _208 ] [162])
        (nil)))
(insn 262 259 260 93 (parallel [
            (set (reg/f:DI 41 r12 [542])
                (plus:DI (reg/f:DI 41 r12 [804])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 260 262 263 93 (set (reg/f:DI 5 di [orig:158 _203 ] [158])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [5 MEM[(char * *)&D.440965]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 263 260 264 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:158 _203 ] [158])
            (reg/f:DI 41 r12 [542]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [542])
        (nil)))
(jump_insn:TI 264 263 2220 93 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2053)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7835 (nil)))
 -> 2053)
;;  succ:       21 [78.3%]  (CAN_FALLTHRU)
;;              94 [21.6%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 94, loop depth 0, count 0, freq 54, maybe hot
;;  prev block 93, next block 95, flags: (NEW, RTL, MODIFIED)
;;  pred:       93 [21.6%]  (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 2220 264 2221 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 2221 2220 2222 94 (set (pc)
        (label_ref 366)) 667 {jump}
     (nil)
 -> 366)
;;  succ:       22 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

(barrier 2222 2221 2217)
;; basic block 95, loop depth 0, count 0, freq 2117, maybe hot
;; Invalid sum of incoming frequencies 271, should be 2117
;;  prev block 94, next block 96, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       80 [21.6%]  (CAN_FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 2217 2222 1274 95 337 "" [1 uses])
(note 1274 2217 1281 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(note 1281 1274 1282 95 NOTE_INSN_DELETED)
(note 1282 1281 1276 95 NOTE_INSN_DELETED)
(insn:TI 1276 1282 1275 95 (set (reg/f:DI 0 ax [715])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nEtaPrime")  <var_decl 0x7fb2b4147750 nEtaPrime>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:108 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nEtaPrime")  <var_decl 0x7fb2b4147750 nEtaPrime>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn 1275 1276 1283 95 (set (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (const_int 160 [0xa0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (nil))
(insn:TI 1283 1275 2223 95 (parallel [
            (set (mem/c:SI (reg/f:DI 0 ax [715]) [22  S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 0 ax [715]) [22  S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:108 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [715])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 2223 1283 2224 95 (set (pc)
        (label_ref 1443)) 667 {jump}
     (nil)
 -> 1443)
;;  succ:       60 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2224 2223 2212)
;; basic block 96, loop depth 0, count 0, freq 672, maybe hot
;; Invalid sum of incoming frequencies 526, should be 672
;;  prev block 95, next block 97, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       64 [13.7%]  (CAN_FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	
(code_label 2212 2224 770 96 332 "" [1 uses])
(note 770 2212 1993 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1993 770 771 96 (set (reg/v/f:DI 0 ax [orig:460 aStash ] [460])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-293848 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 85 {*movdi_internal}
     (nil))
(insn:TI 771 1993 772 96 (set (reg/f:DI 2 cx [orig:259 _339 ] [259])
        (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:460 aStash ] [460])
                (const_int 8 [0x8])) [164 aStash_54(D)->D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 85 {*movdi_internal}
     (nil))
(insn 772 771 773 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:259 _339 ] [259])
            (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:460 aStash ] [460])
                    (const_int 16 [0x10])) [164 aStash_54(D)->D.138156._M_impl._M_end_of_storage+0 S8 A64]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 773 772 774 96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 848)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 848)
;;  succ:       97 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              140 [6.7%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 97, loop depth 0, count 0, freq 627, maybe hot
;;  prev block 96, next block 98, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       96 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 774 773 775 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn:TI 775 774 776 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:259 _339 ] [259])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 776 775 790 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2225)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 2225)
;;  succ:       98 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              106 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 98, loop depth 0, count 0, freq 491, maybe hot
;;  prev block 97, next block 99, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       97 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 21 [xmm0]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
(note 790 776 794 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn:TI 794 790 810 98 (set (reg:SI 0 ax [orig:262 _343 ] [262])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 lP.idSave+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:62 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293640 [0xfffffffffffb84f8])) [22 lP.idSave+0 S4 A64])
        (nil)))
(insn 810 794 793 98 (set (reg:DF 21 xmm0 [orig:270 _351 ] [270])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293608 [0xfffffffffffb8518])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])
        (nil)))
(insn:TI 793 810 844 98 (set (mem/f:DI (reg/f:DI 2 cx [orig:259 _339 ] [259]) [150 _339->_vptr.Particle+0 S8 A64])
        (reg/f:DI 42 r13 [606])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (nil))
(insn 844 793 795 98 (parallel [
            (set (reg/f:DI 2 cx [642])
                (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 795 844 796 98 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -152 [0xffffffffffffff68])) [22 _339->idSave+0 S4 A64])
        (reg:SI 0 ax [orig:262 _343 ] [262])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:262 _343 ] [262])
        (nil)))
(insn 796 795 797 98 (set (reg:SI 0 ax [orig:263 _344 ] [263])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 220 [0xdc])) [22 lP.statusSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293636 [0xfffffffffffb84fc])) [22 lP.statusSave+0 S4 A32])
        (nil)))
(insn:TI 797 796 798 98 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -148 [0xffffffffffffff6c])) [22 _339->statusSave+0 S4 A32])
        (reg:SI 0 ax [orig:263 _344 ] [263])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:263 _344 ] [263])
        (nil)))
(insn 798 797 799 98 (set (reg:SI 0 ax [orig:264 _345 ] [264])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [22 lP.mother1Save+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293632 [0xfffffffffffb8500])) [22 lP.mother1Save+0 S4 A128])
        (nil)))
(insn:TI 799 798 800 98 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -144 [0xffffffffffffff70])) [22 _339->mother1Save+0 S4 A64])
        (reg:SI 0 ax [orig:264 _345 ] [264])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:264 _345 ] [264])
        (nil)))
(insn 800 799 801 98 (set (reg:SI 0 ax [orig:265 _346 ] [265])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 228 [0xe4])) [22 lP.mother2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293628 [0xfffffffffffb8504])) [22 lP.mother2Save+0 S4 A32])
        (nil)))
(insn:TI 801 800 802 98 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -140 [0xffffffffffffff74])) [22 _339->mother2Save+0 S4 A32])
        (reg:SI 0 ax [orig:265 _346 ] [265])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:265 _346 ] [265])
        (nil)))
(insn 802 801 803 98 (set (reg:SI 0 ax [orig:266 _347 ] [266])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [22 lP.daughter1Save+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293624 [0xfffffffffffb8508])) [22 lP.daughter1Save+0 S4 A64])
        (nil)))
(insn:TI 803 802 804 98 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -136 [0xffffffffffffff78])) [22 _339->daughter1Save+0 S4 A64])
        (reg:SI 0 ax [orig:266 _347 ] [266])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:266 _347 ] [266])
        (nil)))
(insn 804 803 805 98 (set (reg:SI 0 ax [orig:267 _348 ] [267])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 236 [0xec])) [22 lP.daughter2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293620 [0xfffffffffffb850c])) [22 lP.daughter2Save+0 S4 A32])
        (nil)))
(insn:TI 805 804 806 98 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -132 [0xffffffffffffff7c])) [22 _339->daughter2Save+0 S4 A32])
        (reg:SI 0 ax [orig:267 _348 ] [267])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:267 _348 ] [267])
        (nil)))
(insn 806 805 807 98 (set (reg:SI 0 ax [orig:268 _349 ] [268])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [22 lP.colSave+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293616 [0xfffffffffffb8510])) [22 lP.colSave+0 S4 A128])
        (nil)))
(insn:TI 807 806 808 98 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -128 [0xffffffffffffff80])) [22 _339->colSave+0 S4 A64])
        (reg:SI 0 ax [orig:268 _349 ] [268])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:268 _349 ] [268])
        (nil)))
(insn 808 807 811 98 (set (reg:SI 0 ax [orig:269 _350 ] [269])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 244 [0xf4])) [22 lP.acolSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293612 [0xfffffffffffb8514])) [22 lP.acolSave+0 S4 A32])
        (nil)))
(insn 811 808 812 98 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -120 [0xffffffffffffff88])) [78 MEM[(struct Vec4 *)_339 + 40B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:270 _351 ] [270])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:270 _351 ] [270])
        (nil)))
(insn:TI 812 811 813 98 (set (reg:DF 21 xmm0 [orig:271 _352 ] [271])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293600 [0xfffffffffffb8520])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])
        (nil)))
(insn:TI 813 812 809 98 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -112 [0xffffffffffffff90])) [78 MEM[(struct Vec4 *)_339 + 40B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:271 _352 ] [271])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:271 _352 ] [271])
        (nil)))
(insn 809 813 824 98 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -124 [0xffffffffffffff84])) [22 _339->acolSave+0 S4 A32])
        (reg:SI 0 ax [orig:269 _350 ] [269])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:269 _350 ] [269])
        (nil)))
(insn 824 809 814 98 (set (reg:QI 0 ax [orig:277 _358 ] [277])
        (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 304 [0x130])) [141 lP.hasVertexSave+0 S1 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:68 89 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -293552 [0xfffffffffffb8550])) [141 lP.hasVertexSave+0 S1 A128])
        (nil)))
(insn:TI 814 824 815 98 (set (reg:DF 21 xmm0 [orig:272 _353 ] [272])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 264 [0x108])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293592 [0xfffffffffffb8528])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])
        (nil)))
(insn:TI 815 814 816 98 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -104 [0xffffffffffffff98])) [78 MEM[(struct Vec4 *)_339 + 40B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:272 _353 ] [272])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:272 _353 ] [272])
        (nil)))
(insn:TI 816 815 817 98 (set (reg:DF 21 xmm0 [orig:273 _354 ] [273])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 272 [0x110])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293584 [0xfffffffffffb8530])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])
        (nil)))
(insn:TI 817 816 818 98 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -96 [0xffffffffffffffa0])) [78 MEM[(struct Vec4 *)_339 + 40B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:273 _354 ] [273])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:273 _354 ] [273])
        (nil)))
(insn:TI 818 817 819 98 (set (reg:DF 21 xmm0 [orig:274 _355 ] [274])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 280 [0x118])) [78 lP.mSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293576 [0xfffffffffffb8538])) [78 lP.mSave+0 S8 A64])
        (nil)))
(insn:TI 819 818 820 98 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -88 [0xffffffffffffffa8])) [78 _339->mSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:274 _355 ] [274])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:274 _355 ] [274])
        (nil)))
(insn:TI 820 819 821 98 (set (reg:DF 21 xmm0 [orig:275 _356 ] [275])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [78 lP.scaleSave+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293568 [0xfffffffffffb8540])) [78 lP.scaleSave+0 S8 A128])
        (nil)))
(insn:TI 821 820 822 98 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -80 [0xffffffffffffffb0])) [78 _339->scaleSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:275 _356 ] [275])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:275 _356 ] [275])
        (nil)))
(insn:TI 822 821 823 98 (set (reg:DF 21 xmm0 [orig:276 _357 ] [276])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 296 [0x128])) [78 lP.polSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293560 [0xfffffffffffb8548])) [78 lP.polSave+0 S8 A64])
        (nil)))
(insn:TI 823 822 825 98 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -72 [0xffffffffffffffb8])) [78 _339->polSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:276 _357 ] [276])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:276 _357 ] [276])
        (nil)))
(insn 825 823 836 98 (set (mem:QI (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -64 [0xffffffffffffffc0])) [141 _339->hasVertexSave+0 S1 A64])
        (reg:QI 0 ax [orig:277 _358 ] [277])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:277 _358 ] [277])
        (nil)))
(insn 836 825 826 98 (set (reg/f:DI 0 ax [orig:283 _364 ] [283])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [446 lP.pdePtr+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293504 [0xfffffffffffb8580])) [446 lP.pdePtr+0 S8 A128])
        (nil)))
(insn:TI 826 836 840 98 (set (reg:DF 21 xmm0 [orig:278 _359 ] [278])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 312 [0x138])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293544 [0xfffffffffffb8558])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])
        (nil)))
(insn 840 826 1967 98 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(insn:TI 1967 840 827 98 (set (reg/v/f:DI 5 di [orig:460 aStash ] [460])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-293848 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (nil))
(insn:TI 827 1967 828 98 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -56 [0xffffffffffffffc8])) [78 MEM[(struct Vec4 *)_339 + 104B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:278 _359 ] [278])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:278 _359 ] [278])
        (nil)))
(insn:TI 828 827 1963 98 (set (reg:DF 21 xmm0 [orig:279 _360 ] [279])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 320 [0x140])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293536 [0xfffffffffffb8560])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])
        (nil)))
(insn 1963 828 841 98 (set (reg:SI 4 si [641])
        (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])) 86 {*movsi_internal}
     (nil))
(insn:TI 841 1963 829 98 (parallel [
            (set (reg:SI 4 si [641])
                (ashiftrt:SI (reg:SI 4 si [641])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) 556 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 829 841 830 98 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -48 [0xffffffffffffffd0])) [78 MEM[(struct Vec4 *)_339 + 104B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:279 _360 ] [279])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:279 _360 ] [279])
        (nil)))
(insn:TI 830 829 831 98 (set (reg:DF 21 xmm0 [orig:280 _361 ] [280])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 328 [0x148])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293528 [0xfffffffffffb8568])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])
        (nil)))
(insn:TI 831 830 832 98 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -40 [0xffffffffffffffd8])) [78 MEM[(struct Vec4 *)_339 + 104B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:280 _361 ] [280])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:280 _361 ] [280])
        (nil)))
(insn:TI 832 831 833 98 (set (reg:DF 21 xmm0 [orig:281 _362 ] [281])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 336 [0x150])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293520 [0xfffffffffffb8570])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])
        (nil)))
(insn:TI 833 832 834 98 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -32 [0xffffffffffffffe0])) [78 MEM[(struct Vec4 *)_339 + 104B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:281 _362 ] [281])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:281 _362 ] [281])
        (nil)))
(insn:TI 834 833 837 98 (set (reg:DF 21 xmm0 [orig:282 _363 ] [282])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 344 [0x158])) [78 lP.tauSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293512 [0xfffffffffffb8578])) [78 lP.tauSave+0 S8 A64])
        (nil)))
(insn 837 834 838 98 (set (mem/f:DI (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -16 [0xfffffffffffffff0])) [446 _339->pdePtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:283 _364 ] [283])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:283 _364 ] [283])
        (nil)))
(insn:TI 838 837 835 98 (set (reg/f:DI 0 ax [orig:284 _365 ] [284])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 360 [0x168])) [447 lP.evtPtr+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293496 [0xfffffffffffb8588])) [447 lP.evtPtr+0 S8 A64])
        (nil)))
(insn:TI 835 838 839 98 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -24 [0xffffffffffffffe8])) [78 _339->tauSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:282 _363 ] [282])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:282 _363 ] [282])
        (nil)))
(insn:TI 839 835 1965 98 (set (mem/f:DI (plus:DI (reg/f:DI 2 cx [orig:259 _339 ] [259])
                (const_int -8 [0xfffffffffffffff8])) [447 _339->evtPtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:284 _365 ] [284])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:284 _365 ] [284])
        (nil)))
(insn 1965 839 842 98 (set (reg:SI 0 ax [orig:98 _53 ] [98])
        (reg:SI 4 si [641])) 86 {*movsi_internal}
     (nil))
(insn:TI 842 1965 845 98 (parallel [
            (set (reg:SI 0 ax [orig:98 _53 ] [98])
                (xor:SI (reg:SI 0 ax [orig:98 _53 ] [98])
                    (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 845 842 843 98 (set (mem/f:DI (plus:DI (reg/v/f:DI 5 di [orig:460 aStash ] [460])
                (const_int 8 [0x8])) [164 aStash_54(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 2 cx [642])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:460 aStash ] [460])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [642])
            (nil))))
(insn:TI 843 845 859 98 (parallel [
            (set (reg:SI 0 ax [orig:98 _53 ] [98])
                (minus:SI (reg:SI 0 ax [orig:98 _53 ] [98])
                    (reg:SI 4 si [641])))
            (clobber (reg:CC 17 flags))
        ]) 261 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [641])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;  succ:       99 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 99, loop depth 0, count 0, freq 526, maybe hot
;;  prev block 98, next block 100, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       98 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              141 [100.0%]  (CAN_FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 859 843 860 99 243 "" [1 uses])
(note 860 859 866 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(note 866 860 867 99 NOTE_INSN_DELETED)
(note 867 866 861 99 NOTE_INSN_DELETED)
(insn:TI 861 867 868 99 (set (reg/f:DI 2 cx [645])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nN")  <var_decl 0x7fb2b4147360 nN>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:102 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nN")  <var_decl 0x7fb2b4147360 nN>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn:TI 868 861 2199 99 (parallel [
            (set (mem/c:SI (reg/f:DI 2 cx [645]) [22 nN+0 S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 2 cx [645]) [22 nN+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:102 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [645])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 2199 868 2200 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:98 _53 ] [98])
            (const_int 211 [0xd3]))) mymainCascade.cc:103 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:98 _53 ] [98])
        (nil)))
(jump_insn:TI 2200 2199 2213 99 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 972)
            (pc))) mymainCascade.cc:103 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8567 (nil)))
 -> 972)
;;  succ:       100 [14.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              66 [85.7%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 100, loop depth 0, count 0, freq 672, maybe hot
;; Invalid sum of incoming frequencies 400, should be 672
;;  prev block 99, next block 101, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       65 [14.3%]  (CAN_FALLTHRU)
;;              99 [14.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 2213 2200 873 100 333 "" [1 uses])
(note 873 2213 1994 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1994 873 874 100 (set (reg/v/f:DI 5 di [orig:460 aStash ] [460])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-293848 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 85 {*movdi_internal}
     (nil))
(insn:TI 874 1994 875 100 (set (reg/f:DI 0 ax [orig:285 _366 ] [285])
        (mem/f:DI (plus:DI (reg/f:DI 5 di [orig:460 aStash ] [460])
                (const_int 8 [0x8])) [164 aStash_54(D)->D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 85 {*movdi_internal}
     (nil))
(insn 875 874 876 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:285 _366 ] [285])
            (mem/f:DI (plus:DI (reg/v/f:DI 5 di [orig:460 aStash ] [460])
                    (const_int 16 [0x10])) [164 aStash_54(D)->D.138156._M_impl._M_end_of_storage+0 S8 A64]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:460 aStash ] [460])
        (nil)))
(jump_insn:TI 876 875 877 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 937)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 937)
;;  succ:       101 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              138 [6.7%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 101, loop depth 0, count 0, freq 627, maybe hot
;;  prev block 100, next block 102, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       100 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 877 876 878 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn:TI 878 877 879 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:285 _366 ] [285])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 879 878 880 101 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 931)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 931)
;;  succ:       102 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              103 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 102, loop depth 0, count 0, freq 491, maybe hot
;;  prev block 101, next block 103, flags: (REACHABLE, RTL)
;;  pred:       101 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 21 [xmm0]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 21 [xmm0]
;; live  kill	
(note 880 879 884 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn:TI 884 880 900 102 (set (reg:SI 1 dx [orig:289 _370 ] [289])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 lP.idSave+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:62 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293640 [0xfffffffffffb84f8])) [22 lP.idSave+0 S4 A64])
        (nil)))
(insn 900 884 883 102 (set (reg:DF 21 xmm0 [orig:297 _378 ] [297])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293608 [0xfffffffffffb8518])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])
        (nil)))
(insn:TI 883 900 885 102 (set (mem/f:DI (reg/f:DI 0 ax [orig:285 _366 ] [285]) [150 _366->_vptr.Particle+0 S8 A64])
        (reg/f:DI 42 r13 [606])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (nil))
(insn:TI 885 883 886 102 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 8 [0x8])) [22 _366->idSave+0 S4 A64])
        (reg:SI 1 dx [orig:289 _370 ] [289])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:289 _370 ] [289])
        (nil)))
(insn 886 885 887 102 (set (reg:SI 1 dx [orig:290 _371 ] [290])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 220 [0xdc])) [22 lP.statusSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293636 [0xfffffffffffb84fc])) [22 lP.statusSave+0 S4 A32])
        (nil)))
(insn:TI 887 886 888 102 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 12 [0xc])) [22 _366->statusSave+0 S4 A32])
        (reg:SI 1 dx [orig:290 _371 ] [290])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:290 _371 ] [290])
        (nil)))
(insn 888 887 889 102 (set (reg:SI 1 dx [orig:291 _372 ] [291])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [22 lP.mother1Save+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293632 [0xfffffffffffb8500])) [22 lP.mother1Save+0 S4 A128])
        (nil)))
(insn:TI 889 888 890 102 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 16 [0x10])) [22 _366->mother1Save+0 S4 A64])
        (reg:SI 1 dx [orig:291 _372 ] [291])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:291 _372 ] [291])
        (nil)))
(insn 890 889 891 102 (set (reg:SI 1 dx [orig:292 _373 ] [292])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 228 [0xe4])) [22 lP.mother2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293628 [0xfffffffffffb8504])) [22 lP.mother2Save+0 S4 A32])
        (nil)))
(insn:TI 891 890 892 102 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 20 [0x14])) [22 _366->mother2Save+0 S4 A32])
        (reg:SI 1 dx [orig:292 _373 ] [292])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:292 _373 ] [292])
        (nil)))
(insn 892 891 893 102 (set (reg:SI 1 dx [orig:293 _374 ] [293])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [22 lP.daughter1Save+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293624 [0xfffffffffffb8508])) [22 lP.daughter1Save+0 S4 A64])
        (nil)))
(insn:TI 893 892 894 102 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 24 [0x18])) [22 _366->daughter1Save+0 S4 A64])
        (reg:SI 1 dx [orig:293 _374 ] [293])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:293 _374 ] [293])
        (nil)))
(insn 894 893 895 102 (set (reg:SI 1 dx [orig:294 _375 ] [294])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 236 [0xec])) [22 lP.daughter2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293620 [0xfffffffffffb850c])) [22 lP.daughter2Save+0 S4 A32])
        (nil)))
(insn:TI 895 894 896 102 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 28 [0x1c])) [22 _366->daughter2Save+0 S4 A32])
        (reg:SI 1 dx [orig:294 _375 ] [294])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:294 _375 ] [294])
        (nil)))
(insn 896 895 897 102 (set (reg:SI 1 dx [orig:295 _376 ] [295])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [22 lP.colSave+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293616 [0xfffffffffffb8510])) [22 lP.colSave+0 S4 A128])
        (nil)))
(insn:TI 897 896 898 102 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 32 [0x20])) [22 _366->colSave+0 S4 A64])
        (reg:SI 1 dx [orig:295 _376 ] [295])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:295 _376 ] [295])
        (nil)))
(insn 898 897 901 102 (set (reg:SI 1 dx [orig:296 _377 ] [296])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 244 [0xf4])) [22 lP.acolSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293612 [0xfffffffffffb8514])) [22 lP.acolSave+0 S4 A32])
        (nil)))
(insn 901 898 902 102 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 40 [0x28])) [78 MEM[(struct Vec4 *)_366 + 40B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:297 _378 ] [297])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:297 _378 ] [297])
        (nil)))
(insn:TI 902 901 903 102 (set (reg:DF 21 xmm0 [orig:298 _379 ] [298])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293600 [0xfffffffffffb8520])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])
        (nil)))
(insn:TI 903 902 899 102 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 48 [0x30])) [78 MEM[(struct Vec4 *)_366 + 40B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:298 _379 ] [298])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:298 _379 ] [298])
        (nil)))
(insn 899 903 914 102 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 36 [0x24])) [22 _366->acolSave+0 S4 A32])
        (reg:SI 1 dx [orig:296 _377 ] [296])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:296 _377 ] [296])
        (nil)))
(insn 914 899 904 102 (set (reg:QI 1 dx [orig:304 _385 ] [304])
        (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 304 [0x130])) [141 lP.hasVertexSave+0 S1 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:68 89 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -293552 [0xfffffffffffb8550])) [141 lP.hasVertexSave+0 S1 A128])
        (nil)))
(insn:TI 904 914 905 102 (set (reg:DF 21 xmm0 [orig:299 _380 ] [299])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 264 [0x108])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293592 [0xfffffffffffb8528])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])
        (nil)))
(insn:TI 905 904 906 102 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 56 [0x38])) [78 MEM[(struct Vec4 *)_366 + 40B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:299 _380 ] [299])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:299 _380 ] [299])
        (nil)))
(insn:TI 906 905 907 102 (set (reg:DF 21 xmm0 [orig:300 _381 ] [300])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 272 [0x110])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293584 [0xfffffffffffb8530])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])
        (nil)))
(insn:TI 907 906 908 102 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 64 [0x40])) [78 MEM[(struct Vec4 *)_366 + 40B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:300 _381 ] [300])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:300 _381 ] [300])
        (nil)))
(insn:TI 908 907 909 102 (set (reg:DF 21 xmm0 [orig:301 _382 ] [301])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 280 [0x118])) [78 lP.mSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293576 [0xfffffffffffb8538])) [78 lP.mSave+0 S8 A64])
        (nil)))
(insn:TI 909 908 910 102 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 72 [0x48])) [78 _366->mSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:301 _382 ] [301])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:301 _382 ] [301])
        (nil)))
(insn:TI 910 909 911 102 (set (reg:DF 21 xmm0 [orig:302 _383 ] [302])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [78 lP.scaleSave+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293568 [0xfffffffffffb8540])) [78 lP.scaleSave+0 S8 A128])
        (nil)))
(insn:TI 911 910 912 102 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 80 [0x50])) [78 _366->scaleSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:302 _383 ] [302])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:302 _383 ] [302])
        (nil)))
(insn:TI 912 911 913 102 (set (reg:DF 21 xmm0 [orig:303 _384 ] [303])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 296 [0x128])) [78 lP.polSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293560 [0xfffffffffffb8548])) [78 lP.polSave+0 S8 A64])
        (nil)))
(insn:TI 913 912 915 102 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 88 [0x58])) [78 _366->polSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:303 _384 ] [303])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:303 _384 ] [303])
        (nil)))
(insn 915 913 926 102 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 96 [0x60])) [141 _366->hasVertexSave+0 S1 A64])
        (reg:QI 1 dx [orig:304 _385 ] [304])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 1 dx [orig:304 _385 ] [304])
        (nil)))
(insn 926 915 916 102 (set (reg/f:DI 1 dx [orig:310 _391 ] [310])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [446 lP.pdePtr+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293504 [0xfffffffffffb8580])) [446 lP.pdePtr+0 S8 A128])
        (nil)))
(insn:TI 916 926 917 102 (set (reg:DF 21 xmm0 [orig:305 _386 ] [305])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 312 [0x138])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293544 [0xfffffffffffb8558])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])
        (nil)))
(insn:TI 917 916 918 102 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 104 [0x68])) [78 MEM[(struct Vec4 *)_366 + 104B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:305 _386 ] [305])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:305 _386 ] [305])
        (nil)))
(insn:TI 918 917 919 102 (set (reg:DF 21 xmm0 [orig:306 _387 ] [306])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 320 [0x140])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293536 [0xfffffffffffb8560])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])
        (nil)))
(insn:TI 919 918 920 102 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 112 [0x70])) [78 MEM[(struct Vec4 *)_366 + 104B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:306 _387 ] [306])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:306 _387 ] [306])
        (nil)))
(insn:TI 920 919 921 102 (set (reg:DF 21 xmm0 [orig:307 _388 ] [307])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 328 [0x148])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293528 [0xfffffffffffb8568])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])
        (nil)))
(insn:TI 921 920 922 102 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 120 [0x78])) [78 MEM[(struct Vec4 *)_366 + 104B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:307 _388 ] [307])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:307 _388 ] [307])
        (nil)))
(insn:TI 922 921 923 102 (set (reg:DF 21 xmm0 [orig:308 _389 ] [308])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 336 [0x150])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293520 [0xfffffffffffb8570])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])
        (nil)))
(insn:TI 923 922 924 102 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 128 [0x80])) [78 MEM[(struct Vec4 *)_366 + 104B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:308 _389 ] [308])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:308 _389 ] [308])
        (nil)))
(insn:TI 924 923 927 102 (set (reg:DF 21 xmm0 [orig:309 _390 ] [309])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 344 [0x158])) [78 lP.tauSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293512 [0xfffffffffffb8578])) [78 lP.tauSave+0 S8 A64])
        (nil)))
(insn 927 924 928 102 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 144 [0x90])) [446 _366->pdePtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:310 _391 ] [310])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:310 _391 ] [310])
        (nil)))
(insn:TI 928 927 925 102 (set (reg/f:DI 1 dx [orig:311 _392 ] [311])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 360 [0x168])) [447 lP.evtPtr+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293496 [0xfffffffffffb8588])) [447 lP.evtPtr+0 S8 A64])
        (nil)))
(insn:TI 925 928 929 102 (set (mem:DF (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 136 [0x88])) [78 _366->tauSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:309 _390 ] [309])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:309 _390 ] [309])
        (nil)))
(insn:TI 929 925 930 102 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                (const_int 152 [0x98])) [447 _366->evtPtr+0 S8 A64])
        (reg/f:DI 1 dx [orig:311 _392 ] [311])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:311 _392 ] [311])
        (nil)))
(insn:TI 930 929 931 102 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
;;  succ:       103 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 103, loop depth 0, count 0, freq 627, maybe hot
;;  prev block 102, next block 104, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       101 [21.6%]  (CAN_FALLTHRU)
;;              102 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	 17 [flags]
(code_label 931 930 932 103 245 "" [1 uses])
(note 932 931 1974 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1974 932 933 103 (set (reg/v/f:DI 5 di [orig:460 aStash ] [460])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-293848 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (nil))
(insn 933 1974 934 103 (parallel [
            (set (reg/f:DI 0 ax [653])
                (plus:DI (reg/f:DI 0 ax [orig:285 _366 ] [285])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 934 933 945 103 (set (mem/f:DI (plus:DI (reg/v/f:DI 5 di [orig:460 aStash ] [460])
                (const_int 8 [0x8])) [164 aStash_54(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 0 ax [653])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:460 aStash ] [460])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [653])
            (nil))))
;;  succ:       104 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 104, loop depth 0, count 0, freq 672, maybe hot
;;  prev block 103, next block 105, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       103 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              139 [100.0%]  (CAN_FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 945 934 946 104 246 "" [1 uses])
(note 946 945 947 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn:TI 947 946 948 104 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
            (const_int 0 [0]))) mymainCascade.cc:103 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 948 947 949 104 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 960)
            (pc))) mymainCascade.cc:103 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 960)
;;  succ:       105 [73.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              118 [27.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 105, loop depth 0, count 0, freq 490, maybe hot
;;  prev block 104, next block 106, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       104 [73.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(note 949 948 955 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(note 955 949 956 105 NOTE_INSN_DELETED)
(note 956 955 950 105 NOTE_INSN_DELETED)
(insn:TI 950 956 957 105 (set (reg/f:DI 0 ax [655])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPiP")  <var_decl 0x7fb2b4147480 nPiP>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:103 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPiP")  <var_decl 0x7fb2b4147480 nPiP>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn:TI 957 950 2226 105 (parallel [
            (set (mem/c:SI (reg/f:DI 0 ax [655]) [22  S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 0 ax [655]) [22  S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:103 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [655])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 2226 957 2227 105 (set (pc)
        (label_ref 972)) 667 {jump}
     (nil)
 -> 972)
;;  succ:       66 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2227 2226 2225)
;; basic block 106, loop depth 0, count 0, freq 1063, maybe hot
;; Invalid sum of incoming frequencies 136, should be 1063
;;  prev block 105, next block 107, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       97 [21.6%]  (CAN_FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 2225 2227 777 106 338 "" [1 uses])
(note 777 2225 784 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(note 784 777 785 106 NOTE_INSN_DELETED)
(note 785 784 778 106 NOTE_INSN_DELETED)
(insn:TI 778 785 779 106 (set (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:460 aStash ] [460])
                (const_int 8 [0x8])) [164 aStash_54(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (const_int 160 [0xa0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:460 aStash ] [460])
        (nil)))
(insn 779 778 786 106 (set (reg/f:DI 0 ax [633])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nN")  <var_decl 0x7fb2b4147360 nN>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:102 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nN")  <var_decl 0x7fb2b4147360 nN>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn:TI 786 779 2228 106 (parallel [
            (set (mem/c:SI (reg/f:DI 0 ax [633]) [22  S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 0 ax [633]) [22  S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:102 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [633])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 2228 786 2229 106 (set (pc)
        (label_ref 972)) 667 {jump}
     (nil)
 -> 972)
;;  succ:       66 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2229 2228 2211)
;; basic block 107, loop depth 0, count 0, freq 672, maybe hot
;;  prev block 106, next block 108, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       63 [13.7%]  (CAN_FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	
(code_label 2211 2229 668 107 331 "" [1 uses])
(note 668 2211 1992 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1992 668 669 107 (set (reg/v/f:DI 0 ax [orig:460 aStash ] [460])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-293848 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 85 {*movdi_internal}
     (nil))
(insn:TI 669 1992 670 107 (set (reg/f:DI 2 cx [orig:232 _312 ] [232])
        (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:460 aStash ] [460])
                (const_int 8 [0x8])) [164 aStash_54(D)->D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 85 {*movdi_internal}
     (nil))
(insn 670 669 671 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:232 _312 ] [232])
            (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:460 aStash ] [460])
                    (const_int 16 [0x10])) [164 aStash_54(D)->D.138156._M_impl._M_end_of_storage+0 S8 A64]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 671 670 672 107 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 746)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:916 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 746)
;;  succ:       108 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              142 [6.7%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 108, loop depth 0, count 0, freq 627, maybe hot
;;  prev block 107, next block 109, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       107 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 672 671 673 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn:TI 673 672 674 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:232 _312 ] [232])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 674 673 688 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2230)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:120 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 2230)
;;  succ:       109 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              119 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 109, loop depth 0, count 0, freq 491, maybe hot
;;  prev block 108, next block 110, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 21 [xmm0]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
(note 688 674 692 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn:TI 692 688 708 109 (set (reg:SI 0 ax [orig:236 _316 ] [236])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 lP.idSave+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:62 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293640 [0xfffffffffffb84f8])) [22 lP.idSave+0 S4 A64])
        (nil)))
(insn 708 692 691 109 (set (reg:DF 21 xmm0 [orig:244 _324 ] [244])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293608 [0xfffffffffffb8518])) [78 MEM[(const struct Vec4 &)&lP + 40].xx+0 S8 A64])
        (nil)))
(insn:TI 691 708 742 109 (set (mem/f:DI (reg/f:DI 2 cx [orig:232 _312 ] [232]) [150 _312->_vptr.Particle+0 S8 A64])
        (reg/f:DI 42 r13 [606])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (nil))
(insn 742 691 693 109 (parallel [
            (set (reg/f:DI 2 cx [624])
                (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 693 742 694 109 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -152 [0xffffffffffffff68])) [22 _312->idSave+0 S4 A64])
        (reg:SI 0 ax [orig:236 _316 ] [236])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:236 _316 ] [236])
        (nil)))
(insn 694 693 695 109 (set (reg:SI 0 ax [orig:237 _317 ] [237])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 220 [0xdc])) [22 lP.statusSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293636 [0xfffffffffffb84fc])) [22 lP.statusSave+0 S4 A32])
        (nil)))
(insn:TI 695 694 696 109 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -148 [0xffffffffffffff6c])) [22 _312->statusSave+0 S4 A32])
        (reg:SI 0 ax [orig:237 _317 ] [237])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:237 _317 ] [237])
        (nil)))
(insn 696 695 697 109 (set (reg:SI 0 ax [orig:238 _318 ] [238])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [22 lP.mother1Save+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:63 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293632 [0xfffffffffffb8500])) [22 lP.mother1Save+0 S4 A128])
        (nil)))
(insn:TI 697 696 698 109 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -144 [0xffffffffffffff70])) [22 _312->mother1Save+0 S4 A64])
        (reg:SI 0 ax [orig:238 _318 ] [238])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:238 _318 ] [238])
        (nil)))
(insn 698 697 699 109 (set (reg:SI 0 ax [orig:239 _319 ] [239])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 228 [0xe4])) [22 lP.mother2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293628 [0xfffffffffffb8504])) [22 lP.mother2Save+0 S4 A32])
        (nil)))
(insn:TI 699 698 700 109 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -140 [0xffffffffffffff74])) [22 _312->mother2Save+0 S4 A32])
        (reg:SI 0 ax [orig:239 _319 ] [239])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:239 _319 ] [239])
        (nil)))
(insn 700 699 701 109 (set (reg:SI 0 ax [orig:240 _320 ] [240])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [22 lP.daughter1Save+0 S4 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:64 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293624 [0xfffffffffffb8508])) [22 lP.daughter1Save+0 S4 A64])
        (nil)))
(insn:TI 701 700 702 109 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -136 [0xffffffffffffff78])) [22 _312->daughter1Save+0 S4 A64])
        (reg:SI 0 ax [orig:240 _320 ] [240])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:240 _320 ] [240])
        (nil)))
(insn 702 701 703 109 (set (reg:SI 0 ax [orig:241 _321 ] [241])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 236 [0xec])) [22 lP.daughter2Save+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293620 [0xfffffffffffb850c])) [22 lP.daughter2Save+0 S4 A32])
        (nil)))
(insn:TI 703 702 704 109 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -132 [0xffffffffffffff7c])) [22 _312->daughter2Save+0 S4 A32])
        (reg:SI 0 ax [orig:241 _321 ] [241])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:241 _321 ] [241])
        (nil)))
(insn 704 703 705 109 (set (reg:SI 0 ax [orig:242 _322 ] [242])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [22 lP.colSave+0 S4 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:65 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293616 [0xfffffffffffb8510])) [22 lP.colSave+0 S4 A128])
        (nil)))
(insn:TI 705 704 706 109 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -128 [0xffffffffffffff80])) [22 _312->colSave+0 S4 A64])
        (reg:SI 0 ax [orig:242 _322 ] [242])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:242 _322 ] [242])
        (nil)))
(insn 706 705 709 109 (set (reg:SI 0 ax [orig:243 _323 ] [243])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 244 [0xf4])) [22 lP.acolSave+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 86 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -293612 [0xfffffffffffb8514])) [22 lP.acolSave+0 S4 A32])
        (nil)))
(insn 709 706 710 109 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -120 [0xffffffffffffff88])) [78 MEM[(struct Vec4 *)_312 + 40B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:244 _324 ] [244])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:244 _324 ] [244])
        (nil)))
(insn:TI 710 709 711 109 (set (reg:DF 21 xmm0 [orig:245 _325 ] [245])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293600 [0xfffffffffffb8520])) [78 MEM[(const struct Vec4 &)&lP + 40].yy+0 S8 A128])
        (nil)))
(insn:TI 711 710 707 109 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -112 [0xffffffffffffff90])) [78 MEM[(struct Vec4 *)_312 + 40B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:245 _325 ] [245])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:245 _325 ] [245])
        (nil)))
(insn 707 711 722 109 (set (mem:SI (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -124 [0xffffffffffffff84])) [22 _312->acolSave+0 S4 A32])
        (reg:SI 0 ax [orig:243 _323 ] [243])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:243 _323 ] [243])
        (nil)))
(insn 722 707 712 109 (set (reg:QI 0 ax [orig:251 _331 ] [251])
        (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 304 [0x130])) [141 lP.hasVertexSave+0 S1 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:68 89 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -293552 [0xfffffffffffb8550])) [141 lP.hasVertexSave+0 S1 A128])
        (nil)))
(insn:TI 712 722 713 109 (set (reg:DF 21 xmm0 [orig:246 _326 ] [246])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 264 [0x108])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293592 [0xfffffffffffb8528])) [78 MEM[(const struct Vec4 &)&lP + 40].zz+0 S8 A64])
        (nil)))
(insn:TI 713 712 714 109 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -104 [0xffffffffffffff98])) [78 MEM[(struct Vec4 *)_312 + 40B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:246 _326 ] [246])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:246 _326 ] [246])
        (nil)))
(insn:TI 714 713 715 109 (set (reg:DF 21 xmm0 [orig:247 _327 ] [247])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 272 [0x110])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293584 [0xfffffffffffb8530])) [78 MEM[(const struct Vec4 &)&lP + 40].tt+0 S8 A128])
        (nil)))
(insn:TI 715 714 716 109 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -96 [0xffffffffffffffa0])) [78 MEM[(struct Vec4 *)_312 + 40B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:247 _327 ] [247])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:247 _327 ] [247])
        (nil)))
(insn:TI 716 715 717 109 (set (reg:DF 21 xmm0 [orig:248 _328 ] [248])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 280 [0x118])) [78 lP.mSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:66 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293576 [0xfffffffffffb8538])) [78 lP.mSave+0 S8 A64])
        (nil)))
(insn:TI 717 716 718 109 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -88 [0xffffffffffffffa8])) [78 _312->mSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:248 _328 ] [248])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:248 _328 ] [248])
        (nil)))
(insn:TI 718 717 719 109 (set (reg:DF 21 xmm0 [orig:249 _329 ] [249])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [78 lP.scaleSave+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293568 [0xfffffffffffb8540])) [78 lP.scaleSave+0 S8 A128])
        (nil)))
(insn:TI 719 718 720 109 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -80 [0xffffffffffffffb0])) [78 _312->scaleSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:249 _329 ] [249])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:249 _329 ] [249])
        (nil)))
(insn:TI 720 719 721 109 (set (reg:DF 21 xmm0 [orig:250 _330 ] [250])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 296 [0x128])) [78 lP.polSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:67 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293560 [0xfffffffffffb8548])) [78 lP.polSave+0 S8 A64])
        (nil)))
(insn:TI 721 720 723 109 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -72 [0xffffffffffffffb8])) [78 _312->polSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:250 _330 ] [250])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:250 _330 ] [250])
        (nil)))
(insn 723 721 734 109 (set (mem:QI (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -64 [0xffffffffffffffc0])) [141 _312->hasVertexSave+0 S1 A64])
        (reg:QI 0 ax [orig:251 _331 ] [251])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:251 _331 ] [251])
        (nil)))
(insn 734 723 724 109 (set (reg/f:DI 0 ax [orig:257 _337 ] [257])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [446 lP.pdePtr+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293504 [0xfffffffffffb8580])) [446 lP.pdePtr+0 S8 A128])
        (nil)))
(insn:TI 724 734 738 109 (set (reg:DF 21 xmm0 [orig:252 _332 ] [252])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 312 [0x138])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293544 [0xfffffffffffb8558])) [78 MEM[(const struct Vec4 &)&lP + 104].xx+0 S8 A64])
        (nil)))
(insn 738 724 1955 109 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(insn:TI 1955 738 725 109 (set (reg/v/f:DI 5 di [orig:460 aStash ] [460])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-293848 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (nil))
(insn:TI 725 1955 726 109 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -56 [0xffffffffffffffc8])) [78 MEM[(struct Vec4 *)_312 + 104B].xx+0 S8 A64])
        (reg:DF 21 xmm0 [orig:252 _332 ] [252])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:252 _332 ] [252])
        (nil)))
(insn:TI 726 725 1951 109 (set (reg:DF 21 xmm0 [orig:253 _333 ] [253])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 320 [0x140])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293536 [0xfffffffffffb8560])) [78 MEM[(const struct Vec4 &)&lP + 104].yy+0 S8 A128])
        (nil)))
(insn 1951 726 739 109 (set (reg:SI 4 si [623])
        (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])) 86 {*movsi_internal}
     (nil))
(insn:TI 739 1951 727 109 (parallel [
            (set (reg:SI 4 si [623])
                (ashiftrt:SI (reg:SI 4 si [623])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) 556 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 727 739 728 109 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -48 [0xffffffffffffffd0])) [78 MEM[(struct Vec4 *)_312 + 104B].yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:253 _333 ] [253])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:253 _333 ] [253])
        (nil)))
(insn:TI 728 727 729 109 (set (reg:DF 21 xmm0 [orig:254 _334 ] [254])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 328 [0x148])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293528 [0xfffffffffffb8568])) [78 MEM[(const struct Vec4 &)&lP + 104].zz+0 S8 A64])
        (nil)))
(insn:TI 729 728 730 109 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -40 [0xffffffffffffffd8])) [78 MEM[(struct Vec4 *)_312 + 104B].zz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:254 _334 ] [254])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:254 _334 ] [254])
        (nil)))
(insn:TI 730 729 731 109 (set (reg:DF 21 xmm0 [orig:255 _335 ] [255])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 336 [0x150])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293520 [0xfffffffffffb8570])) [78 MEM[(const struct Vec4 &)&lP + 104].tt+0 S8 A128])
        (nil)))
(insn:TI 731 730 732 109 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -32 [0xffffffffffffffe0])) [78 MEM[(struct Vec4 *)_312 + 104B].tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:255 _335 ] [255])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:255 _335 ] [255])
        (nil)))
(insn:TI 732 731 735 109 (set (reg:DF 21 xmm0 [orig:256 _336 ] [256])
        (mem/c:DF (plus:DI (reg/f:DI 7 sp)
                (const_int 344 [0x158])) [78 lP.tauSave+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_EQUIV (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -293512 [0xfffffffffffb8578])) [78 lP.tauSave+0 S8 A64])
        (nil)))
(insn 735 732 736 109 (set (mem/f:DI (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -16 [0xfffffffffffffff0])) [446 _312->pdePtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:257 _337 ] [257])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:257 _337 ] [257])
        (nil)))
(insn:TI 736 735 733 109 (set (reg/f:DI 0 ax [orig:258 _338 ] [258])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 360 [0x168])) [447 lP.evtPtr+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293496 [0xfffffffffffb8588])) [447 lP.evtPtr+0 S8 A64])
        (nil)))
(insn:TI 733 736 737 109 (set (mem:DF (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -24 [0xffffffffffffffe8])) [78 _312->tauSave+0 S8 A64])
        (reg:DF 21 xmm0 [orig:256 _336 ] [256])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:256 _336 ] [256])
        (nil)))
(insn:TI 737 733 1953 109 (set (mem/f:DI (plus:DI (reg/f:DI 2 cx [orig:232 _312 ] [232])
                (const_int -8 [0xfffffffffffffff8])) [447 _312->evtPtr+0 S8 A64])
        (reg/f:DI 0 ax [orig:258 _338 ] [258])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:69 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:258 _338 ] [258])
        (nil)))
(insn 1953 737 740 109 (set (reg:SI 0 ax [orig:98 _53 ] [98])
        (reg:SI 4 si [623])) 86 {*movsi_internal}
     (nil))
(insn:TI 740 1953 743 109 (parallel [
            (set (reg:SI 0 ax [orig:98 _53 ] [98])
                (xor:SI (reg:SI 0 ax [orig:98 _53 ] [98])
                    (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 743 740 741 109 (set (mem/f:DI (plus:DI (reg/v/f:DI 5 di [orig:460 aStash ] [460])
                (const_int 8 [0x8])) [164 aStash_54(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 2 cx [624])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:460 aStash ] [460])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [624])
            (nil))))
(insn:TI 741 743 757 109 (parallel [
            (set (reg:SI 0 ax [orig:98 _53 ] [98])
                (minus:SI (reg:SI 0 ax [orig:98 _53 ] [98])
                    (reg:SI 4 si [623])))
            (clobber (reg:CC 17 flags))
        ]) 261 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [623])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;  succ:       110 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 110, loop depth 0, count 0, freq 526, maybe hot
;;  prev block 109, next block 111, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       109 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              143 [100.0%]  (CAN_FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]
(code_label 757 741 758 110 239 "" [1 uses])
(note 758 757 764 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(note 764 758 765 110 NOTE_INSN_DELETED)
(note 765 764 759 110 NOTE_INSN_DELETED)
(insn:TI 759 765 766 110 (set (reg/f:DI 2 cx [627])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nP")  <var_decl 0x7fb2b41472d0 nP>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:101 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nP")  <var_decl 0x7fb2b41472d0 nP>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn:TI 766 759 2231 110 (parallel [
            (set (mem/c:SI (reg/f:DI 2 cx [627]) [22 nP+0 S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 2 cx [627]) [22 nP+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:101 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [627])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 2231 766 2232 110 (set (pc)
        (label_ref 1625)) 667 {jump}
     (nil)
 -> 1625)
;;  succ:       64 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2232 2231 585)
;; basic block 111, loop depth 0, count 0, freq 338, maybe hot
;;  prev block 110, next block 112, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [39.0%]  (CAN_FALLTHRU)
;;              53 [39.0%]  (CAN_FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 585 2232 401 111 232 "" [2 uses])
(note 401 585 20 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn:TI 20 401 1460 111 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 28 [0x1c])) [789 %sfp+-293828 S1 A32])
        (const_int 0 [0])) mymainCascade.cc:87 89 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       112 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 7 [sp] 44 [r15]
;; live  out 	 7 [sp] 44 [r15]

;; basic block 112, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 111, next block 113, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 [2.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              54 [2.0%]  (CAN_FALLTHRU)
;;              111 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 1460 20 1461 112 223 "" [2 uses])
(note 1461 1460 1977 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1977 1461 1471 112 (set (reg:DI 0 ax [850])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE") [flags 0x40]  <var_decl 0x7fb2bd7c1c60 _ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:577 85 {*movdi_internal}
     (nil))
(insn 1471 1977 2166 112 (set (reg/f:DI 5 di [orig:448 _536 ] [448])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 448 [0x1c0])) [5 MEM[(char * *)&lseed + 80B]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 2166 1471 1464 112 (parallel [
            (set (reg/f:DI 0 ax [747])
                (plus:DI (reg/f:DI 0 ax [747])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:577 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1464 2166 1978 112 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 368 [0x170])) [150 lseed.D.61845._vptr.basic_ostream+0 S8 A128])
        (reg/f:DI 0 ax [747])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:577 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [747])
        (nil)))
(insn 1978 1464 2167 112 (set (reg:DI 0 ax [851])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE") [flags 0x40]  <var_decl 0x7fb2bd7c1c60 _ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:577 85 {*movdi_internal}
     (nil))
(insn:TI 2167 1978 1467 112 (parallel [
            (set (reg/f:DI 0 ax [749])
                (plus:DI (reg/f:DI 0 ax [749])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:577 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1467 2167 1979 112 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 480 [0x1e0])) [150 MEM[(struct basic_ios *)&lseed + 112B].D.51166._vptr.ios_base+0 S8 A128])
        (reg/f:DI 0 ax [749])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:577 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [749])
        (nil)))
(insn 1979 1467 2168 112 (set (reg:DI 0 ax [852])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE") [flags 0x40]  <var_decl 0x7fb2bd7c1b40 _ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:65 85 {*movdi_internal}
     (nil))
(insn:TI 2168 1979 1470 112 (parallel [
            (set (reg/f:DI 0 ax [751])
                (plus:DI (reg/f:DI 0 ax [751])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:65 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1470 2168 2000 112 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 376 [0x178])) [150 MEM[(struct basic_stringbuf *)&lseed + 8B].D.61589._vptr.basic_streambuf+0 S8 A64])
        (reg/f:DI 0 ax [751])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:65 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [751])
        (nil)))
(insn 2000 1470 1474 112 (set (reg/f:DI 0 ax [754])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 96 [0x60]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 1474 2000 1475 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:448 _536 ] [448])
            (reg/f:DI 0 ax [754]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [754])
        (nil)))
(jump_insn:TI 1475 1474 1476 112 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1479)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 1479)
;;  succ:       113 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              114 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 5 [di] 7 [sp] 44 [r15]
;; live  out 	 5 [di] 7 [sp] 44 [r15]

;; basic block 113, loop depth 0, count 0, freq 421, maybe hot
;;  prev block 112, next block 114, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       112 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1476 1475 1478 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1478 1476 1479 113 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       114 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 7 [sp] 44 [r15]
;; live  out 	 7 [sp] 44 [r15]

;; basic block 114, loop depth 0, count 0, freq 538, maybe hot
;;  prev block 113, next block 115, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       112 [21.6%]  (CAN_FALLTHRU)
;;              113 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 1479 1478 1480 114 270 "" [1 uses])
(note 1480 1479 1980 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1980 1480 1997 114 (set (reg:DI 0 ax [853])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVSt15basic_streambufIcSt11char_traitsIcEE") [flags 0x40]  <var_decl 0x7fb2be02e870 _ZTVSt15basic_streambufIcSt11char_traitsIcEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:198 85 {*movdi_internal}
     (nil))
(insn 1997 1980 2164 114 (set (reg/f:DI 5 di [758])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 64 [0x40]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:198 215 {*leadi}
     (nil))
(insn:TI 2164 1997 1483 114 (parallel [
            (set (reg/f:DI 0 ax [755])
                (plus:DI (reg/f:DI 0 ax [755])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:198 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1483 2164 1487 114 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 376 [0x178])) [150 MEM[(struct basic_streambuf *)&lseed + 8B]._vptr.basic_streambuf+0 S8 A64])
        (reg/f:DI 0 ax [755])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:198 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [755])
        (nil)))
(call_insn:TI 1487 1483 1981 114 (call (mem:QI (symbol_ref:DI ("_ZNSt6localeD1Ev") [flags 0x41]  <function_decl 0x7fb2be2c4540 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:198 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt6localeD1Ev") [flags 0x41]  <function_decl 0x7fb2be2c4540 __comp_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn:TI 1981 1487 1982 114 (set (reg:DI 0 ax [854])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE") [flags 0x40]  <var_decl 0x7fb2bd7c1d80 _ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:93 85 {*movdi_internal}
     (nil))
(insn 1982 1981 1998 114 (set (reg:DI 3 bx [855])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE") [flags 0x40]  <var_decl 0x7fb2bd7c1d80 _ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:93 85 {*movdi_internal}
     (nil))
(insn 1998 1982 1489 114 (set (reg/f:DI 5 di [766])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 112 [0x70]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:282 215 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [809])
        (nil)))
(insn:TI 1489 1998 1493 114 (set (reg/f:DI 0 ax [orig:443 _530 ] [443])
        (mem/u/f/c:DI (plus:DI (reg:DI 0 ax [854])
                (const_int 8 [0x8])) [2 MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 8B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:93 85 {*movdi_internal}
     (nil))
(insn 1493 1489 1490 114 (set (reg/f:DI 1 dx [orig:762 MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B] ] [762])
        (mem/u/f/c:DI (plus:DI (reg:DI 3 bx [855])
                (const_int 16 [0x10])) [2 MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:93 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [855])
        (nil)))
(insn:TI 1490 1493 1491 114 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 368 [0x170])) [150 MEM[(struct basic_ostream *)&lseed]._vptr.basic_ostream+0 S8 A128])
        (reg/f:DI 0 ax [orig:443 _530 ] [443])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:93 85 {*movdi_internal}
     (nil))
(insn 1491 1490 1494 114 (set (reg:DI 0 ax [orig:760 MEM[(long int *)_530 + -24B] ] [760])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:443 _530 ] [443])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_530 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:93 85 {*movdi_internal}
     (nil))
(insn:TI 1494 1491 1983 114 (set (mem/f:DI (plus:DI (plus:DI (reg/f:DI 7 sp)
                    (reg:DI 0 ax [orig:760 MEM[(long int *)_530 + -24B] ] [760]))
                (const_int 368 [0x170])) [150 _533->D.51166._vptr.ios_base+0 S8 A64])
        (reg/f:DI 1 dx [orig:762 MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B] ] [762])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:93 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:762 MEM[(const void * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE + 16B] ] [762])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:760 MEM[(long int *)_530 + -24B] ] [760])
            (nil))))
(insn 1983 1494 2165 114 (set (reg:DI 0 ax [856])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVSt9basic_iosIcSt11char_traitsIcEE") [flags 0x40]  <var_decl 0x7fb2bde766c0 _ZTVSt9basic_iosIcSt11char_traitsIcEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:282 85 {*movdi_internal}
     (nil))
(insn:TI 2165 1983 1497 114 (parallel [
            (set (reg/f:DI 0 ax [763])
                (plus:DI (reg/f:DI 0 ax [763])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:282 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1497 2165 1501 114 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 480 [0x1e0])) [150 MEM[(struct basic_ios *)&lseed + 112B].D.51166._vptr.ios_base+0 S8 A128])
        (reg/f:DI 0 ax [763])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:282 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [763])
        (nil)))
(call_insn:TI 1501 1497 1503 114 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_baseD2Ev") [flags 0x41]  <function_decl 0x7fb2bdfd39a0 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:282 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_baseD2Ev") [flags 0x41]  <function_decl 0x7fb2bdfd39a0 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn:TI 1503 1501 1504 114 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [789 %sfp+-293840 S8 A64])) mymainCascade.cc:77 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293104 [0xfffffffffffb8710]))
        (nil)))
(call_insn:TI 1504 1503 1630 114 (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86PythiaD1Ev") [flags 0x41]  <function_decl 0x7fb2b6f7dc40 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) mymainCascade.cc:77 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86PythiaD1Ev") [flags 0x41]  <function_decl 0x7fb2b6f7dc40 __comp_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn:TI 1630 1504 2294 114 (set (reg/i:QI 0 ax)
        (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 28 [0x1c])) [789 %sfp+-293828 S1 A32])) mymainCascade.cc:115 89 {*movqi_internal}
     (nil))
(note 2294 1630 2043 114 NOTE_INSN_EPILOGUE_BEG)
(insn/f 2043 2294 1631 114 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 293864 [0x47be8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mymainCascade.cc:115 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 293864 [0x47be8])))
            (nil))))
(insn 1631 2043 2044 114 (use (reg/i:QI 0 ax)) mymainCascade.cc:115 -1
     (nil))
(insn/f:TI 2044 1631 2045 114 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:115 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 2045 2044 2046 114 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:115 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 2046 2045 2047 114 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:115 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 2047 2046 2048 114 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:115 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 2048 2047 2049 114 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:115 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 2049 2048 2050 114 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:115 71 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 2050 2049 2051 114 (simple_return) mymainCascade.cc:115 697 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2051 2050 2216)
;; basic block 115, loop depth 0, count 0, freq 290, maybe hot
;;  prev block 114, next block 116, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       76 [21.6%]  (CAN_FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 2216 2051 1177 115 336 "" [1 uses])
(note 1177 2216 1184 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(note 1184 1177 1185 115 NOTE_INSN_DELETED)
(note 1185 1184 1179 115 NOTE_INSN_DELETED)
(insn:TI 1179 1185 1178 115 (set (reg/f:DI 0 ax [699])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nOmega")  <var_decl 0x7fb2b41476c0 nOmega>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:107 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nOmega")  <var_decl 0x7fb2b41476c0 nOmega>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn 1178 1179 1186 115 (set (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (const_int 160 [0xa0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (nil))
(insn:TI 1186 1178 2233 115 (parallel [
            (set (mem/c:SI (reg/f:DI 0 ax [699]) [22  S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 0 ax [699]) [22  S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:107 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [699])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 2233 1186 2234 115 (set (pc)
        (label_ref 1443)) 667 {jump}
     (nil)
 -> 1443)
;;  succ:       60 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2234 2233 2215)
;; basic block 116, loop depth 0, count 0, freq 290, maybe hot
;;  prev block 115, next block 117, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       72 [21.6%]  (CAN_FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 2215 2234 1080 116 335 "" [1 uses])
(note 1080 2215 1087 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(note 1087 1080 1088 116 NOTE_INSN_DELETED)
(note 1088 1087 1082 116 NOTE_INSN_DELETED)
(insn:TI 1082 1088 1081 116 (set (reg/f:DI 0 ax [683])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nEta")  <var_decl 0x7fb2b4147630 nEta>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:106 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nEta")  <var_decl 0x7fb2b4147630 nEta>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn 1081 1082 1089 116 (set (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (const_int 160 [0xa0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (nil))
(insn:TI 1089 1081 2235 116 (parallel [
            (set (mem/c:SI (reg/f:DI 0 ax [683]) [22  S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 0 ax [683]) [22  S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:106 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [683])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 2235 1089 2236 116 (set (pc)
        (label_ref 1443)) 667 {jump}
     (nil)
 -> 1443)
;;  succ:       60 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2236 2235 2214)
;; basic block 117, loop depth 0, count 0, freq 290, maybe hot
;;  prev block 116, next block 118, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       68 [21.6%]  (CAN_FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 2214 2236 983 117 334 "" [1 uses])
(note 983 2214 990 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(note 990 983 991 117 NOTE_INSN_DELETED)
(note 991 990 985 117 NOTE_INSN_DELETED)
(insn:TI 985 991 984 117 (set (reg/f:DI 0 ax [667])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPi0")  <var_decl 0x7fb2b41475a0 nPi0>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:105 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPi0")  <var_decl 0x7fb2b41475a0 nPi0>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn 984 985 992 117 (set (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])
                (const_int 8 [0x8])) [164 aMesons_75(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (const_int 160 [0xa0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (nil))
(insn:TI 992 984 2237 117 (parallel [
            (set (mem/c:SI (reg/f:DI 0 ax [667]) [22  S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 0 ax [667]) [22  S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:105 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [667])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 2237 992 2238 117 (set (pc)
        (label_ref 1443)) 667 {jump}
     (nil)
 -> 1443)
;;  succ:       60 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2238 2237 960)
;; basic block 118, loop depth 0, count 0, freq 181, maybe hot
;;  prev block 117, next block 119, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       104 [27.0%]  (CAN_FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 960 2238 961 118 247 "" [1 uses])
(note 961 960 967 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(note 967 961 968 118 NOTE_INSN_DELETED)
(note 968 967 962 118 NOTE_INSN_DELETED)
(insn:TI 962 968 969 118 (set (reg/f:DI 0 ax [661])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPiM")  <var_decl 0x7fb2b4147510 nPiM>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:103 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPiM")  <var_decl 0x7fb2b4147510 nPiM>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn:TI 969 962 2239 118 (parallel [
            (set (mem/c:SI (reg/f:DI 0 ax [661]) [22  S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 0 ax [661]) [22  S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:103 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [661])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 2239 969 2240 118 (set (pc)
        (label_ref 1069)) 667 {jump}
     (nil)
 -> 1069)
;;  succ:       56 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2240 2239 2230)
;; basic block 119, loop depth 0, count 0, freq 146, maybe hot
;;  prev block 118, next block 120, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108 [21.6%]  (CAN_FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 2230 2240 675 119 339 "" [1 uses])
(note 675 2230 682 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(note 682 675 683 119 NOTE_INSN_DELETED)
(note 683 682 676 119 NOTE_INSN_DELETED)
(insn:TI 676 683 677 119 (set (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:460 aStash ] [460])
                (const_int 8 [0x8])) [164 aStash_54(D)->D.138156._M_impl._M_finish+0 S8 A64])
        (const_int 160 [0xa0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:920 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:460 aStash ] [460])
        (nil)))
(insn 677 676 684 119 (set (reg/f:DI 0 ax [615])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nP")  <var_decl 0x7fb2b41472d0 nP>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:101 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nP")  <var_decl 0x7fb2b41472d0 nP>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])
        (nil)))
(insn:TI 684 677 2241 119 (parallel [
            (set (mem/c:SI (reg/f:DI 0 ax [615]) [22  S4 A32])
                (plus:SI (mem/c:SI (reg/f:DI 0 ax [615]) [22  S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:101 218 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [615])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 2241 684 2242 119 (set (pc)
        (label_ref 972)) 667 {jump}
     (nil)
 -> 972)
;;  succ:       66 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2242 2241 552)
;; basic block 120, loop depth 0, count 0, freq 128, maybe hot
;;  prev block 119, next block 121, flags: (REACHABLE, RTL)
;;  pred:       48 [39.0%]  (CAN_FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 552 2242 553 120 230 "" [1 uses])
(note 553 552 554 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn:TI 554 553 555 120 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:201 _271 ] [201])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 555 554 556 120 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 7 [0x7])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       121 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

;; basic block 121, loop depth 0, count 0, freq 128, maybe hot
;;  prev block 120, next block 122, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       120 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 556 555 559 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(note 559 556 557 121 NOTE_INSN_DELETED)
(insn:TI 557 559 17 121 (set (reg/f:DI 0 ax [orig:596 MEM[(const struct ctype *)_271].D.47997._vptr.facet ] [596])
        (mem/f:DI (reg/f:DI 41 r12 [orig:201 _271 ] [201]) [150 MEM[(const struct ctype *)_271].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:201 _271 ] [201]) [150 MEM[(const struct ctype *)_271].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 17 557 558 121 (set (reg:SI 4 si [orig:142 _171 ] [142])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 558 17 561 121 (set (reg/f:DI 0 ax [orig:206 _280 ] [206])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:596 MEM[(const struct ctype *)_271].D.47997._vptr.facet ] [596])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_279 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 561 558 562 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:206 _280 ] [206])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 562 561 563 121 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 570)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8009 (nil)))
 -> 570)
;;  succ:       50 [80.1%]  (CAN_FALLTHRU)
;;              122 [19.9%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

;; basic block 122, loop depth 0, count 0, freq 25, maybe hot
;;  prev block 121, next block 123, flags: (REACHABLE, RTL)
;;  pred:       121 [19.9%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 563 562 565 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn:TI 565 563 566 122 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:201 _271 ] [201])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:201 _271 ] [201])
        (nil)))
(call_insn:TI 566 565 1650 122 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:206 _280 ] [206]) [0 *OBJ_TYPE_REF(_280;(const struct ctype)_271->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       163 (ABNORMAL,ABNORMAL_CALL,EH)
;;              123 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 44 [r15]

;; basic block 123, loop depth 0, count 0, freq 25, maybe hot
;;  prev block 122, next block 124, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       122 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 1650 566 569 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn:TI 569 1650 2243 123 (set (reg:SI 4 si [orig:142 _171 ] [142])
        (sign_extend:SI (reg:QI 0 ax [orig:209 _286 ] [209]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:209 _286 ] [209])
        (nil)))
(jump_insn 2243 569 2244 123 (set (pc)
        (label_ref 570)) 667 {jump}
     (nil)
 -> 570)
;;  succ:       50 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 44 [r15]

(barrier 2244 2243 450)
;; basic block 124, loop depth 0, count 0, freq 128, maybe hot
;;  prev block 123, next block 125, flags: (REACHABLE, RTL)
;;  pred:       32 [39.0%]  (CAN_FALLTHRU)
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 450 2244 451 124 225 "" [1 uses])
(note 451 450 452 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn:TI 452 451 453 124 (set (reg:DI 5 di)
        (reg/f:DI 42 r13 [orig:185 _244 ] [185])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 453 452 454 124 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 11 [0xb])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       125 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              174 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 125, loop depth 0, count 0, freq 128, maybe hot
;;  prev block 124, next block 126, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       124 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 454 453 457 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(note 457 454 455 125 NOTE_INSN_DELETED)
(insn:TI 455 457 16 125 (set (reg/f:DI 0 ax [orig:585 MEM[(const struct ctype *)_244].D.47997._vptr.facet ] [585])
        (mem/f:DI (reg/f:DI 42 r13 [orig:185 _244 ] [185]) [150 MEM[(const struct ctype *)_244].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 42 r13 [orig:185 _244 ] [185]) [150 MEM[(const struct ctype *)_244].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 16 455 456 125 (set (reg:SI 4 si [orig:141 prephitmp_170 ] [141])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 456 16 459 125 (set (reg/f:DI 0 ax [orig:189 _253 ] [189])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:585 MEM[(const struct ctype *)_244].D.47997._vptr.facet ] [585])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_252 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 459 456 460 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:189 _253 ] [189])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 460 459 461 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 468)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8009 (nil)))
 -> 468)
;;  succ:       34 [80.1%]  (CAN_FALLTHRU)
;;              126 [19.9%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 126, loop depth 0, count 0, freq 25, maybe hot
;;  prev block 125, next block 127, flags: (REACHABLE, RTL)
;;  pred:       125 [19.9%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 461 460 463 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn:TI 463 461 464 126 (set (reg:DI 5 di)
        (reg/f:DI 42 r13 [orig:185 _244 ] [185])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [orig:185 _244 ] [185])
        (nil)))
(call_insn:TI 464 463 1645 126 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:189 _253 ] [189]) [0 *OBJ_TYPE_REF(_253;(const struct ctype)_244->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 11 [0xb])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       174 (ABNORMAL,ABNORMAL_CALL,EH)
;;              127 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]

;; basic block 127, loop depth 0, count 0, freq 25, maybe hot
;;  prev block 126, next block 128, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       126 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 1645 464 467 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn:TI 467 1645 2245 127 (set (reg:SI 4 si [orig:141 prephitmp_170 ] [141])
        (sign_extend:SI (reg:QI 0 ax [orig:192 _259 ] [192]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:192 _259 ] [192])
        (nil)))
(jump_insn 2245 467 2246 127 (set (pc)
        (label_ref 468)) 667 {jump}
     (nil)
 -> 468)
;;  succ:       34 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 43 [r14] 44 [r15]

(barrier 2246 2245 1148)
;; basic block 128, loop depth 0, count 0, freq 90, maybe hot
;;  prev block 127, next block 129, flags: (REACHABLE, RTL)
;;  pred:       71 [6.7%]  (CAN_FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
(code_label 1148 2246 1149 128 254 "" [1 uses])
(note 1149 1148 1151 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1151 1149 1152 128 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [789 %sfp+-293824 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293648 [0xfffffffffffb84f0]))
        (nil)))
(insn 1152 1151 1153 128 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (nil))
(call_insn:TI 1153 1152 1154 128 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>) [0 _M_emplace_back_aux S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       129 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 129, loop depth 0, count 0, freq 90, maybe hot
;;  prev block 128, next block 130, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       128 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
(note 1154 1153 1155 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1155 1154 2247 129 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(jump_insn 2247 1155 2248 129 (set (pc)
        (label_ref 1156)) 667 {jump}
     (nil)
 -> 1156)
;;  succ:       74 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2248 2247 1245)
;; basic block 130, loop depth 0, count 0, freq 90, maybe hot
;;  prev block 129, next block 131, flags: (REACHABLE, RTL)
;;  pred:       75 [6.7%]  (CAN_FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
(code_label 1245 2248 1246 130 258 "" [1 uses])
(note 1246 1245 1248 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1248 1246 1249 130 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [789 %sfp+-293824 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293648 [0xfffffffffffb84f0]))
        (nil)))
(insn 1249 1248 1250 130 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (nil))
(call_insn:TI 1250 1249 1251 130 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>) [0 _M_emplace_back_aux S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       131 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 131, loop depth 0, count 0, freq 90, maybe hot
;;  prev block 130, next block 132, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       130 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
(note 1251 1250 1252 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1252 1251 2249 131 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(jump_insn 2249 1252 2250 131 (set (pc)
        (label_ref 1253)) 667 {jump}
     (nil)
 -> 1253)
;;  succ:       78 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2250 2249 1342)
;; basic block 132, loop depth 0, count 0, freq 90, maybe hot
;;  prev block 131, next block 133, flags: (REACHABLE, RTL)
;;  pred:       79 [6.7%]  (CAN_FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
(code_label 1342 2250 1343 132 262 "" [1 uses])
(note 1343 1342 1345 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1345 1343 1346 132 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [789 %sfp+-293824 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293648 [0xfffffffffffb84f0]))
        (nil)))
(insn 1346 1345 1347 132 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (nil))
(call_insn:TI 1347 1346 1348 132 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>) [0 _M_emplace_back_aux S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       133 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 133, loop depth 0, count 0, freq 90, maybe hot
;;  prev block 132, next block 134, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       132 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
(note 1348 1347 1349 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1349 1348 2251 133 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(jump_insn 2251 1349 2252 133 (set (pc)
        (label_ref 1350)) 667 {jump}
     (nil)
 -> 1350)
;;  succ:       82 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2252 2251 1427)
;; basic block 134, loop depth 0, count 0, freq 90, maybe hot
;;  prev block 133, next block 135, flags: (REACHABLE, RTL)
;;  pred:       83 [6.7%]  (CAN_FALLTHRU)
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
(code_label 1427 2252 1428 134 265 "" [1 uses])
(note 1428 1427 1430 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1430 1428 1431 134 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [789 %sfp+-293824 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293648 [0xfffffffffffb84f0]))
        (nil)))
(insn 1431 1430 1432 134 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (nil))
(call_insn:TI 1432 1431 2253 134 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>) [0 _M_emplace_back_aux S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       135 [100.0%]  (FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 135, loop depth 0, count 0, freq 90, maybe hot
;;  prev block 134, next block 136, flags: (NEW, RTL, MODIFIED)
;;  pred:       134 [100.0%]  (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 2253 1432 2254 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 2254 2253 2255 135 (set (pc)
        (label_ref 1433)) 667 {jump}
     (nil)
 -> 1433)
;;  succ:       87 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2255 2254 1051)
;; basic block 136, loop depth 0, count 0, freq 90, maybe hot
;;  prev block 135, next block 137, flags: (REACHABLE, RTL)
;;  pred:       67 [6.7%]  (CAN_FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
(code_label 1051 2255 1052 136 249 "" [1 uses])
(note 1052 1051 1054 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1054 1052 1055 136 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [789 %sfp+-293824 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293648 [0xfffffffffffb84f0]))
        (nil)))
(insn 1055 1054 1056 136 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:461 aMesons ] [461])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (nil))
(call_insn:TI 1056 1055 1057 136 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>) [0 _M_emplace_back_aux S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       137 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 137, loop depth 0, count 0, freq 90, maybe hot
;;  prev block 136, next block 138, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       136 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
(note 1057 1056 1058 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1058 1057 2256 137 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(jump_insn 2256 1058 2257 137 (set (pc)
        (label_ref 1059)) 667 {jump}
     (nil)
 -> 1059)
;;  succ:       70 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2257 2256 937)
;; basic block 138, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 137, next block 139, flags: (REACHABLE, RTL)
;;  pred:       100 [6.7%]  (CAN_FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
(code_label 937 2257 938 138 244 "" [1 uses])
(note 938 937 940 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn:TI 940 938 941 138 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [789 %sfp+-293824 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293648 [0xfffffffffffb84f0]))
        (nil)))
(insn 941 940 942 138 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-293848 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (nil))
(call_insn:TI 942 941 943 138 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>) [0 _M_emplace_back_aux S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       139 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 139, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 138, next block 140, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       138 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
(note 943 942 944 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn:TI 944 943 2258 139 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(jump_insn 2258 944 2259 139 (set (pc)
        (label_ref 945)) 667 {jump}
     (nil)
 -> 945)
;;  succ:       104 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2259 2258 848)
;; basic block 140, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 139, next block 141, flags: (REACHABLE, RTL)
;;  pred:       96 [6.7%]  (CAN_FALLTHRU)
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
(code_label 848 2259 849 140 241 "" [1 uses])
(note 849 848 851 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn:TI 851 849 852 140 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [789 %sfp+-293824 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293648 [0xfffffffffffb84f0]))
        (nil)))
(insn 852 851 853 140 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-293848 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (nil))
(call_insn:TI 853 852 854 140 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>) [0 _M_emplace_back_aux S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       141 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 141, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 140, next block 142, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       140 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	 17 [flags]
(note 854 853 855 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn:TI 855 854 1968 141 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(insn:TI 1968 855 856 141 (set (reg:SI 2 cx [644])
        (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])) 86 {*movsi_internal}
     (nil))
(insn:TI 856 1968 1970 141 (parallel [
            (set (reg:SI 2 cx [644])
                (ashiftrt:SI (reg:SI 2 cx [644])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) 556 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1970 856 857 141 (set (reg:SI 0 ax [orig:98 _53 ] [98])
        (reg:SI 2 cx [644])) 86 {*movsi_internal}
     (nil))
(insn:TI 857 1970 858 141 (parallel [
            (set (reg:SI 0 ax [orig:98 _53 ] [98])
                (xor:SI (reg:SI 0 ax [orig:98 _53 ] [98])
                    (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 858 857 2260 141 (parallel [
            (set (reg:SI 0 ax [orig:98 _53 ] [98])
                (minus:SI (reg:SI 0 ax [orig:98 _53 ] [98])
                    (reg:SI 2 cx [644])))
            (clobber (reg:CC 17 flags))
        ]) 261 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [644])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 2260 858 2261 141 (set (pc)
        (label_ref 859)) 667 {jump}
     (nil)
 -> 859)
;;  succ:       99 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2261 2260 746)
;; basic block 142, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 141, next block 143, flags: (REACHABLE, RTL)
;;  pred:       107 [6.7%]  (CAN_FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
(code_label 746 2261 747 142 237 "" [1 uses])
(note 747 746 749 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn:TI 749 747 750 142 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [789 %sfp+-293824 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293648 [0xfffffffffffb84f0]))
        (nil)))
(insn 750 749 751 142 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [789 %sfp+-293848 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 85 {*movdi_internal}
     (nil))
(call_insn:TI 751 750 752 142 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>) [0 _M_emplace_back_aux S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:924 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_") [flags 0x1]  <function_decl 0x7fb2b2f8e2a0 _M_emplace_back_aux>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       143 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 143, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 142, next block 144, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       142 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	 17 [flags]
(note 752 751 753 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn:TI 753 752 1956 143 (set (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [22 MEM[(int *)&lP + 8B]+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(insn:TI 1956 753 754 143 (set (reg:SI 2 cx [626])
        (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])) 86 {*movsi_internal}
     (nil))
(insn:TI 754 1956 1958 143 (parallel [
            (set (reg:SI 2 cx [626])
                (ashiftrt:SI (reg:SI 2 cx [626])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) 556 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1958 754 755 143 (set (reg:SI 0 ax [orig:98 _53 ] [98])
        (reg:SI 2 cx [626])) 86 {*movsi_internal}
     (nil))
(insn:TI 755 1958 756 143 (parallel [
            (set (reg:SI 0 ax [orig:98 _53 ] [98])
                (xor:SI (reg:SI 0 ax [orig:98 _53 ] [98])
                    (reg:SI 1 dx [orig:145 prephitmp_177 ] [145])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 756 755 2262 143 (parallel [
            (set (reg:SI 0 ax [orig:98 _53 ] [98])
                (minus:SI (reg:SI 0 ax [orig:98 _53 ] [98])
                    (reg:SI 2 cx [626])))
            (clobber (reg:CC 17 flags))
        ]) 261 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [626])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 2262 756 2263 143 (set (pc)
        (label_ref 757)) 667 {jump}
     (nil)
 -> 757)
;;  succ:       110 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2263 2262 340)
;; basic block 144, loop depth 0, count 0, freq 36, maybe hot
;;  prev block 143, next block 145, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [6.7%]  (CAN_FALLTHRU)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
(code_label 340 2263 341 144 205 "" [1 uses])
(note 341 340 2006 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2006 341 346 144 (set (reg/f:DI 4 si [559])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 80 [0x50]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1181 215 {*leadi}
     (nil))
(insn 346 2006 347 144 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [799])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1181 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293776 [0xfffffffffffb8470]))
        (nil)))
(call_insn:TI 347 346 2264 144 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_") [flags 0x41]  <function_decl 0x7fb2bed34ee0 _M_assign>) [0 _M_assign S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1181 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 16 [0x10])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_") [flags 0x41]  <function_decl 0x7fb2bed34ee0 _M_assign>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       152 (ABNORMAL,ABNORMAL_CALL,EH)
;;              145 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

;; basic block 145, loop depth 0, count 0, freq 36, maybe hot
;;  prev block 144, next block 146, flags: (NEW, RTL, MODIFIED)
;;  pred:       144 [100.0%]  (FALLTHRU)
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 2264 347 2265 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 2265 2264 2266 145 (set (pc)
        (label_ref 366)) 667 {jump}
     (nil)
 -> 366)
;;  succ:       22 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

(barrier 2266 2265 1599)
;; basic block 146, loop depth 0, count 0, freq 35, maybe hot
;;  prev block 145, next block 147, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       90 [15.0%]  (CAN_FALLTHRU)
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 1599 2266 1600 146 208 "" [1 uses])
(note 1600 1599 1602 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1602 1600 1601 146 (set (reg:DI 0 ax [orig:790 MEM[(long unsigned int *)&D.440965 + 8B] ] [790])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [6 MEM[(long unsigned int *)&D.440965 + 8B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293640 [0xfffffffffffb84f8])) [6 MEM[(long unsigned int *)&D.440965 + 8B]+0 S8 A64])
        (nil)))
(insn 1601 1602 1603 146 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [5 MEM[(char * *)&D.337367]+0 S8 A128])
        (reg/f:DI 1 dx [orig:163 _210 ] [163])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:128 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:163 _210 ] [163])
        (nil)))
(insn:TI 1603 1601 1604 146 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 88 [0x58])) [6 MEM[(size_type *)&D.337367 + 8B]+0 S8 A64])
        (reg:DI 0 ax [orig:790 MEM[(long unsigned int *)&D.440965 + 8B] ] [790])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:790 MEM[(long unsigned int *)&D.440965 + 8B] ] [790])
        (nil)))
(insn 1604 1603 1605 146 (set (reg:DI 0 ax [orig:791 D.440965.D.24452._M_allocated_capacity ] [791])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [0 D.440965.D.24452._M_allocated_capacity+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:160 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293632 [0xfffffffffffb8500])) [0 D.440965.D.24452._M_allocated_capacity+0 S8 A128])
        (nil)))
(insn:TI 1605 1604 241 146 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [6 MEM[(size_type *)&D.337367 + 16B]+0 S8 A128])
        (reg:DI 0 ax [orig:791 D.440965.D.24452._M_allocated_capacity ] [791])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:160 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:791 D.440965.D.24452._M_allocated_capacity ] [791])
        (nil)))
;;  succ:       147 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 147, loop depth 0, count 0, freq 35, maybe hot
;;  prev block 146, next block 148, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       91 [0.1%]  (CAN_FALLTHRU)
;;              146 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 241 1605 242 147 209 "" [1 uses])
(note 242 241 2012 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2012 242 245 147 (set (reg/f:DI 0 ax [538])
        (plus:DI (reg/f:DI 41 r12 [804])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:128 215 {*leadi}
     (nil))
(insn:TI 245 2012 2267 147 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [5 MEM[(char * *)&D.440965]+0 S8 A128])
        (reg/f:DI 0 ax [538])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:128 85 {*movdi_internal}
     (nil))
(jump_insn 2267 245 2268 147 (set (pc)
        (label_ref 256)) 667 {jump}
     (nil)
 -> 256)
;;  succ:       93 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2268 2267 1608)
;; basic block 148, loop depth 0, count 0, freq 35, maybe hot
;;  prev block 147, next block 149, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [15.0%]  (CAN_FALLTHRU)
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 1608 2268 1609 148 214 "" [1 uses])
(note 1609 1608 1611 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1611 1609 1610 148 (set (reg:DI 0 ax [orig:792 MEM[(long unsigned int *)&D.440964 + 8B] ] [792])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 184 [0xb8])) [6 MEM[(long unsigned int *)&D.440964 + 8B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293672 [0xfffffffffffb84d8])) [6 MEM[(long unsigned int *)&D.440964 + 8B]+0 S8 A64])
        (nil)))
(insn 1610 1611 1612 148 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [5 MEM[(char * *)&D.337367]+0 S8 A128])
        (reg/f:DI 1 dx [orig:170 _221 ] [170])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:128 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:170 _221 ] [170])
        (nil)))
(insn:TI 1612 1610 1613 148 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 88 [0x58])) [6 MEM[(size_type *)&D.337367 + 8B]+0 S8 A64])
        (reg:DI 0 ax [orig:792 MEM[(long unsigned int *)&D.440964 + 8B] ] [792])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:792 MEM[(long unsigned int *)&D.440964 + 8B] ] [792])
        (nil)))
(insn 1613 1612 1614 148 (set (reg:DI 0 ax [orig:793 D.440964.D.24452._M_allocated_capacity ] [793])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 192 [0xc0])) [0 D.440964.D.24452._M_allocated_capacity+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:160 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -293664 [0xfffffffffffb84e0])) [0 D.440964.D.24452._M_allocated_capacity+0 S8 A128])
        (nil)))
(insn:TI 1614 1613 309 148 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [6 MEM[(size_type *)&D.337367 + 16B]+0 S8 A128])
        (reg:DI 0 ax [orig:793 D.440964.D.24452._M_allocated_capacity ] [793])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:160 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:793 D.440964.D.24452._M_allocated_capacity ] [793])
        (nil)))
;;  succ:       149 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 149, loop depth 0, count 0, freq 35, maybe hot
;;  prev block 148, next block 150, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [0.1%]  (CAN_FALLTHRU)
;;              148 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 309 1614 310 149 215 "" [1 uses])
(note 310 309 2007 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2007 310 313 149 (set (reg/f:DI 0 ax [553])
        (plus:DI (reg/f:DI 41 r12 [803])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:128 215 {*leadi}
     (nil))
(insn:TI 313 2007 2269 149 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [5 MEM[(char * *)&D.440964]+0 S8 A128])
        (reg/f:DI 0 ax [553])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:128 85 {*movdi_internal}
     (nil))
(jump_insn 2269 313 2270 149 (set (pc)
        (label_ref 324)) 667 {jump}
     (nil)
 -> 324)
;;  succ:       20 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2270 2269 316)
;; basic block 150, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 149, next block 151, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [6.7%]  (CAN_FALLTHRU)
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 316 2270 317 150 213 "" [1 uses])
(note 317 316 320 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn:TI 320 317 321 150 (set (reg:DI 4 si)
        (reg/f:DI 41 r12 [803])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1181 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293680 [0xfffffffffffb84d0]))
        (nil)))
(insn 321 320 322 150 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [799])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1181 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293776 [0xfffffffffffb8470]))
        (nil)))
(call_insn:TI 322 321 323 150 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_") [flags 0x41]  <function_decl 0x7fb2bed34ee0 _M_assign>) [0 _M_assign S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1181 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int -32 [0xffffffffffffffe0])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_") [flags 0x41]  <function_decl 0x7fb2bed34ee0 _M_assign>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn:TI 323 322 2271 150 (set (reg/f:DI 0 ax [orig:90 prephitmp_20 ] [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [5 MEM[(char * *)&D.440964]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(jump_insn 2271 323 2272 150 (set (pc)
        (label_ref 324)) 667 {jump}
     (nil)
 -> 324)
;;  succ:       20 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2272 2271 248)
;; basic block 151, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 150, next block 152, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       89 [6.7%]  (CAN_FALLTHRU)
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 248 2272 249 151 207 "" [1 uses])
(note 249 248 252 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn:TI 252 249 253 151 (set (reg:DI 4 si)
        (reg/f:DI 41 r12 [804])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1181 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293648 [0xfffffffffffb84f0]))
        (nil)))
(insn 253 252 254 151 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [799])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1181 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293776 [0xfffffffffffb8470]))
        (nil)))
(call_insn:TI 254 253 255 151 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_") [flags 0x41]  <function_decl 0x7fb2bed34ee0 _M_assign>) [0 _M_assign S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1181 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int -31 [0xffffffffffffffe1])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_") [flags 0x41]  <function_decl 0x7fb2bed34ee0 _M_assign>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn:TI 255 254 2273 151 (set (reg/f:DI 0 ax [orig:162 _208 ] [162])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [5 MEM[(char * *)&D.440965]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(jump_insn 2273 255 2274 151 (set (pc)
        (label_ref 256)) 667 {jump}
     (nil)
 -> 256)
;;  succ:       93 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 2274 2273 1698)
;; basic block 152, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 151, next block 153, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       88 (ABNORMAL,ABNORMAL_CALL,EH)
;;              15 (ABNORMAL,ABNORMAL_CALL,EH)
;;              144 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 152 artificial_defs: { d167(0){ }d373(1){ }}
;; bb 152 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 1698 2274 1701 152 294 "" [1 uses])
(note 1701 1698 2071 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
;;  succ:       153 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 44 [r15]

;; basic block 153, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 152, next block 154, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       152 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              170 [100.0%]  (CAN_FALLTHRU)
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 2071 1701 2069 153 321 "" [1 uses])
(note 2069 2071 1541 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1541 2069 1543 153 (set (reg/f:DI 5 di [orig:137 _136 ] [137])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [5 MEM[(char * *)&D.337367]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1543 1541 1675 153 (parallel [
            (set (reg/f:DI 6 bp [777])
                (plus:DI (reg/f:DI 6 bp [799])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1675 1543 1544 153 (set (reg:DI 3 bx [778])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn:TI 1544 1675 1545 153 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:137 _136 ] [137])
            (reg/f:DI 6 bp [777]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [777])
        (nil)))
(jump_insn:TI 1545 1544 2057 153 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1583)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 1583)
;;  succ:       154 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              155 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 7 [sp] 44 [r15]

;; basic block 154, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 153, next block 155, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       172 [69.8%]  (CAN_FALLTHRU)
;;              153 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 2057 1545 1576 154 318 "" [1 uses])
(note 1576 2057 1578 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1578 1576 1583 154 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       155 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

;; basic block 155, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 154, next block 156, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       154 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              163 [100.0%]  (CAN_FALLTHRU)
;;              153 [30.2%]  (CAN_FALLTHRU)
;;              173 [100.0%]  (CAN_FALLTHRU)
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1583 1578 1584 155 220 "" [3 uses])
(note 1584 1583 1586 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1586 1584 1587 155 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [809])) mymainCascade.cc:81 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [809])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -293488 [0xfffffffffffb8590]))
            (nil))))
(call_insn:TI 1587 1586 1590 155 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fb2bd7f28c0 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) mymainCascade.cc:81 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7fb2bd7f28c0 __comp_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       156 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 156, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 155, next block 157, flags: (REACHABLE, RTL)
;;  pred:       155 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              164 [30.2%]  (CAN_FALLTHRU)
;;              165 [100.0%]  (CAN_FALLTHRU)
;;              161 [100.0%]  (CAN_FALLTHRU)
;;              167 [100.0%]  (CAN_FALLTHRU)
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1590 1587 1591 156 204 "" [4 uses])
(note 1591 1590 1593 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1593 1591 1594 156 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [789 %sfp+-293840 S8 A64])) mymainCascade.cc:77 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -293104 [0xfffffffffffb8710]))
        (nil)))
(call_insn:TI 1594 1593 2065 156 (call (mem:QI (symbol_ref:DI ("_ZN7Pythia86PythiaD1Ev") [flags 0x41]  <function_decl 0x7fb2b6f7dc40 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) mymainCascade.cc:77 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7Pythia86PythiaD1Ev") [flags 0x41]  <function_decl 0x7fb2b6f7dc40 __comp_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       157 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 157, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 156, next block 158, flags: (REACHABLE, RTL)
;;  pred:       156 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              168 [30.2%]  (CAN_FALLTHRU)
;;              169 [100.0%]  (CAN_FALLTHRU)
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 2065 1594 2063 157 319 "" [2 uses])
(note 2063 2065 1596 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1596 2063 1597 157 (set (reg:DI 5 di)
        (reg:DI 3 bx [522])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [522])
        (nil)))
(call_insn:TI 1597 1596 1598 157 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb2c1d469a0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb2c1d469a0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 1598 1597 1694)
;; basic block 158, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 157, next block 159, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 158 artificial_defs: { d191(0){ }d396(1){ }}
;; bb 158 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label/s 1694 1598 1697 158 293 "" [1 uses])
(note 1697 1694 1695 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1695 1697 1938 158 (set (reg:DI 3 bx [512])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1938 1695 143 158 (set (reg:DI 0 ax [821])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE") [flags 0x40]  <var_decl 0x7fb2bd7c1b40 _ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:65 85 {*movdi_internal}
     (nil))
(insn 143 1938 2174 158 (set (reg/f:DI 5 di [orig:154 _196 ] [154])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 448 [0x1c0])) [5 MEM[(char * *)&lseed + 80B]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 2174 143 142 158 (parallel [
            (set (reg/f:DI 0 ax [503])
                (plus:DI (reg/f:DI 0 ax [503])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:65 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 142 2174 2021 158 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 376 [0x178])) [150 MEM[(struct basic_stringbuf *)&lseed + 8B].D.61589._vptr.basic_streambuf+0 S8 A64])
        (reg/f:DI 0 ax [503])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/sstream:65 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [503])
        (nil)))
(insn 2021 142 146 158 (set (reg/f:DI 0 ax [506])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 96 [0x60]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (nil))
(insn:TI 146 2021 147 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:154 _196 ] [154])
            (reg/f:DI 0 ax [506]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [506])
        (nil)))
(jump_insn:TI 147 146 148 158 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 151)
;;  succ:       159 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              160 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

;; basic block 159, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 158, next block 160, flags: (REACHABLE, RTL)
;;  pred:       158 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	
;; live  kill	
(note 148 147 150 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 150 148 151 159 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       160 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]

;; basic block 160, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 159, next block 161, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       158 [21.6%]  (CAN_FALLTHRU)
;;              159 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	 17 [flags]
(code_label 151 150 152 160 202 "" [1 uses])
(note 152 151 1939 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1939 152 2020 160 (set (reg:DI 0 ax [822])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVSt15basic_streambufIcSt11char_traitsIcEE") [flags 0x40]  <var_decl 0x7fb2be02e870 _ZTVSt15basic_streambufIcSt11char_traitsIcEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:198 85 {*movdi_internal}
     (nil))
(insn 2020 1939 2173 160 (set (reg/f:DI 5 di [510])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 64 [0x40]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:198 215 {*leadi}
     (nil))
(insn:TI 2173 2020 155 160 (parallel [
            (set (reg/f:DI 0 ax [507])
                (plus:DI (reg/f:DI 0 ax [507])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:198 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 155 2173 159 160 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 376 [0x178])) [150 MEM[(struct basic_streambuf *)&lseed + 8B]._vptr.basic_streambuf+0 S8 A64])
        (reg/f:DI 0 ax [507])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:198 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [507])
        (nil)))
(call_insn:TI 159 155 163 160 (call (mem:QI (symbol_ref:DI ("_ZNSt6localeD1Ev") [flags 0x41]  <function_decl 0x7fb2be2c4540 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/streambuf:198 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt6localeD1Ev") [flags 0x41]  <function_decl 0x7fb2be2c4540 __comp_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn:TI 163 159 162 160 (set (reg:DI 0 ax [orig:515 MEM[(long int *)_182 + -24B] ] [515])
        (mem:DI (plus:DI (reg/f:DI 6 bp [orig:146 _182 ] [146])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_182 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:93 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:146 _182 ] [146])
        (nil)))
(insn 162 163 164 160 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 368 [0x170])) [150 MEM[(struct basic_ostream *)&lseed]._vptr.basic_ostream+0 S8 A128])
        (reg/f:DI 6 bp [orig:146 _182 ] [146])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:93 85 {*movdi_internal}
     (nil))
(insn:TI 164 162 167 160 (set (mem/f:DI (plus:DI (plus:DI (reg/f:DI 7 sp)
                    (reg:DI 0 ax [orig:515 MEM[(long int *)_182 + -24B] ] [515]))
                (const_int 368 [0x170])) [150 _195->D.51166._vptr.ios_base+0 S8 A64])
        (reg/f:DI 41 r12 [orig:150 _186 ] [150])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:93 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:150 _186 ] [150])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:515 MEM[(long int *)_182 + -24B] ] [515])
            (nil))))
;;  succ:       161 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

;; basic block 161, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 160, next block 162, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       160 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              162 [100.0%]  (CAN_FALLTHRU)
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	 17 [flags]
(code_label 167 164 168 161 203 "" [1 uses])
(note 168 167 1940 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1940 168 2019 161 (set (reg:DI 0 ax [823])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZTVSt9basic_iosIcSt11char_traitsIcEE") [flags 0x40]  <var_decl 0x7fb2bde766c0 _ZTVSt9basic_iosIcSt11char_traitsIcEE>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:282 85 {*movdi_internal}
     (nil))
(insn 2019 1940 2172 161 (set (reg/f:DI 5 di [521])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 112 [0x70]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:282 215 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [809])
        (nil)))
(insn:TI 2172 2019 171 161 (parallel [
            (set (reg/f:DI 0 ax [518])
                (plus:DI (reg/f:DI 0 ax [518])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:282 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 171 2172 175 161 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 480 [0x1e0])) [150 MEM[(struct basic_ios *)&lseed + 112B].D.51166._vptr.ios_base+0 S8 A128])
        (reg/f:DI 0 ax [518])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:282 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [518])
        (nil)))
(call_insn:TI 175 171 2275 161 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_baseD2Ev") [flags 0x41]  <function_decl 0x7fb2bdfd39a0 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:282 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_baseD2Ev") [flags 0x41]  <function_decl 0x7fb2bdfd39a0 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn:TI 2275 175 2276 161 (set (pc)
        (label_ref 1590)) 667 {jump}
     (nil)
 -> 1590)
;;  succ:       156 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 2276 2275 1688)
;; basic block 162, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 161, next block 163, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 162 artificial_defs: { d185(0){ }d393(1){ }}
;; bb 162 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(code_label/s 1688 2276 1693 162 292 "" [1 uses])
(note 1693 1688 1689 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1689 1693 2277 162 (set (reg:DI 3 bx [516])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 2277 1689 2278 162 (set (pc)
        (label_ref 167)) 667 {jump}
     (nil)
 -> 167)
;;  succ:       161 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

(barrier 2278 2277 1668)
;; basic block 163, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 162, next block 164, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 (ABNORMAL,ABNORMAL_CALL,EH)
;;              25 (ABNORMAL,ABNORMAL_CALL,EH)
;;              26 (ABNORMAL,ABNORMAL_CALL,EH)
;;              28 (ABNORMAL,ABNORMAL_CALL,EH)
;;              40 (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 (ABNORMAL,ABNORMAL_CALL,EH)
;;              42 (ABNORMAL,ABNORMAL_CALL,EH)
;;              43 (ABNORMAL,ABNORMAL_CALL,EH)
;;              44 (ABNORMAL,ABNORMAL_CALL,EH)
;;              45 (ABNORMAL,ABNORMAL_CALL,EH)
;;              46 (ABNORMAL,ABNORMAL_CALL,EH)
;;              166 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              120 (ABNORMAL,ABNORMAL_CALL,EH)
;;              122 (ABNORMAL,ABNORMAL_CALL,EH)
;;              50 (ABNORMAL,ABNORMAL_CALL,EH)
;;              51 (ABNORMAL,ABNORMAL_CALL,EH)
;;              52 (ABNORMAL,ABNORMAL_CALL,EH)
;;              142 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              140 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              138 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              136 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              128 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              130 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              132 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              134 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; bb 163 artificial_defs: { d35(0){ }d225(1){ }}
;; bb 163 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(code_label/s 1668 2278 1673 163 288 "" [1 uses])
(note 1673 1668 1669 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1669 1673 2279 163 (set (reg:DI 3 bx [563])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 2279 1669 2280 163 (set (pc)
        (label_ref 1583)) 667 {jump}
     (nil)
 -> 1583)
;;  succ:       155 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

(barrier 2280 2279 1658)
;; basic block 164, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 163, next block 165, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 164 artificial_defs: { d43(0){ }d233(1){ }}
;; bb 164 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(code_label/s 1658 2280 1661 164 286 "" [1 uses])
(note 1661 1658 1525 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1525 1661 1527 164 (set (reg/f:DI 5 di [orig:136 _135 ] [136])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [5 MEM[(char * *)&D.337362]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1527 1525 1659 164 (parallel [
            (set (reg/f:DI 6 bp [773])
                (plus:DI (reg/f:DI 6 bp [798])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1659 1527 1528 164 (set (reg:DI 3 bx [774])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn:TI 1528 1659 1529 164 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:136 _135 ] [136])
            (reg/f:DI 6 bp [773]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [773])
        (nil)))
(jump_insn:TI 1529 1528 1530 164 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1590)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 1590)
;;  succ:       165 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              156 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

;; basic block 165, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 164, next block 166, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       164 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
(note 1530 1529 1532 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1532 1530 2281 165 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn:TI 2281 1532 2282 165 (set (pc)
        (label_ref 1590)) 667 {jump}
     (nil)
 -> 1590)
;;  succ:       156 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 2282 2281 2204)
;; basic block 166, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 165, next block 167, flags: (REACHABLE, RTL)
;;  pred:       47 [0.0%]  (CAN_FALLTHRU)
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 2204 2282 541 166 326 "" [1 uses])
(note 541 2204 542 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 542 541 543 166 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 7 [0x7])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       163 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 7 [sp] 44 [r15]

(barrier 543 542 1662)
;; basic block 167, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 166, next block 168, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 167 artificial_defs: { d33(0){ }d223(1){ }}
;; bb 167 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(code_label/s 1662 543 1667 167 287 "" [1 uses])
(note 1667 1662 1663 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1663 1667 2283 167 (set (reg:DI 3 bx [522])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 2283 1663 2284 167 (set (pc)
        (label_ref 1590)) 667 {jump}
     (nil)
 -> 1590)
;;  succ:       156 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 2284 2283 1655)
;; basic block 168, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 167, next block 169, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 168 artificial_defs: { d46(0){ }d236(1){ }}
;; bb 168 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 1655 2284 1657 168 285 "" [1 uses])
(note 1657 1655 1509 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1509 1657 1656 168 (set (reg/f:DI 5 di [orig:135 _134 ] [135])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 368 [0x170])) [5 MEM[(char * *)&D.337269]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1656 1509 1999 168 (set (reg:DI 3 bx [771])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1999 1656 1512 168 (set (reg/f:DI 0 ax [770])
        (plus:DI (reg/f:DI 44 r15 [809])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 215 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [809])
        (nil)))
(insn:TI 1512 1999 1513 168 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:135 _134 ] [135])
            (reg/f:DI 0 ax [770]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [770])
        (nil)))
(jump_insn:TI 1513 1512 1514 168 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2065)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 2065)
;;  succ:       169 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              157 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

;; basic block 169, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 168, next block 170, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       168 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
(note 1514 1513 1516 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1516 1514 2285 169 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn:TI 2285 1516 2286 169 (set (pc)
        (label_ref 2065)) 667 {jump}
     (nil)
 -> 2065)
;;  succ:       157 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 2286 2285 1674)
;; basic block 170, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 169, next block 171, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 170 artificial_defs: { d41(0){ }d231(1){ }}
;; bb 170 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label/s 1674 2286 1677 170 289 "" [1 uses])
(note 1677 1674 2287 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 2287 1677 2288 170 (set (pc)
        (label_ref 2071)) 667 {jump}
     (nil)
 -> 2071)
;;  succ:       153 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 44 [r15]

(barrier 2288 2287 1678)
;; basic block 171, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 170, next block 172, flags: (REACHABLE, RTL)
;;  pred:       29 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 171 artificial_defs: { d37(0){ }d227(1){ }}
;; bb 171 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(code_label/s 1678 2288 1683 171 290 "" [1 uses])
(note 1683 1678 1679 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1679 1683 1569 171 (set (reg:DI 3 bx [782])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       172 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

;; basic block 172, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 171, next block 173, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       171 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              174 [30.2%]  (CAN_FALLTHRU)
;;              175 [100.0%]  (CAN_FALLTHRU)
;; bb 172 artificial_defs: { }
;; bb 172 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 5 [di] 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 1569 1679 1570 172 279 "" [2 uses])
(note 1570 1569 1571 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1571 1570 1573 172 (set (reg/f:DI 5 di [orig:139 _138 ] [139])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [5 MEM[(char * *)&D.337370]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1573 1571 1574 172 (parallel [
            (set (reg/f:DI 6 bp [787])
                (plus:DI (reg/f:DI 6 bp [800])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1574 1573 1575 172 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:139 _138 ] [139])
            (reg/f:DI 6 bp [787]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [787])
        (nil)))
(jump_insn:TI 1575 1574 2289 172 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2057)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6983 (nil)))
 -> 2057)
;;  succ:       154 [69.8%]  (CAN_FALLTHRU)
;;              173 [30.2%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 7 [sp] 44 [r15]

;; basic block 173, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 172, next block 174, flags: (NEW, RTL, MODIFIED)
;;  pred:       172 [30.2%]  (FALLTHRU)
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 2289 1575 2290 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 2290 2289 2291 173 (set (pc)
        (label_ref 1583)) 667 {jump}
     (nil)
 -> 1583)
;;  succ:       155 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 7 [sp] 44 [r15]

(barrier 2291 2290 1684)
;; basic block 174, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 173, next block 175, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 (ABNORMAL,ABNORMAL_CALL,EH)
;;              176 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              124 (ABNORMAL,ABNORMAL_CALL,EH)
;;              126 (ABNORMAL,ABNORMAL_CALL,EH)
;;              34 (ABNORMAL,ABNORMAL_CALL,EH)
;;              35 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 174 artificial_defs: { d39(0){ }d229(1){ }}
;; bb 174 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags] 41 [r12]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(code_label/s 1684 2291 1687 174 291 "" [1 uses])
(note 1687 1684 1557 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1557 1687 1559 174 (set (reg/f:DI 5 di [orig:138 _137 ] [138])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [5 MEM[(char * *)&D.337371]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn 1559 1557 1685 174 (parallel [
            (set (reg/f:DI 41 r12 [781])
                (plus:DI (reg/f:DI 41 r12 [801])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1685 1559 1560 174 (set (reg:DI 3 bx [783])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn:TI 1560 1685 1561 174 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:138 _137 ] [138])
            (reg/f:DI 41 r12 [781]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [781])
        (nil)))
(jump_insn:TI 1561 1560 1562 174 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1569)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 1569)
;;  succ:       175 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              172 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]

;; basic block 175, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 174, next block 176, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       174 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 175 artificial_defs: { }
;; bb 175 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1562 1561 1564 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1564 1562 2292 175 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn:TI 2292 1564 2293 175 (set (pc)
        (label_ref 1569)) 667 {jump}
     (nil)
 -> 1569)
;;  succ:       172 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

(barrier 2293 2292 2203)
;; basic block 176, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 175, next block 1, flags: (REACHABLE, RTL)
;;  pred:       31 [0.0%]  (CAN_FALLTHRU)
;; bb 176 artificial_defs: { }
;; bb 176 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 2203 2293 439 176 325 "" [1 uses])
(note 439 2203 440 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 440 439 441 176 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 11 [0xb])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       174 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]

(barrier 441 440 1927)
(note 1927 441 0 NOTE_INSN_DELETED)

;; Function (static initializers for mymainCascade.cc) (_GLOBAL__sub_I_mymainCascade.cc, funcdef_no=19588, decl_uid=436590, cgraph_uid=15567, symbol_order=17323) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 19 to 14 -- after reload
;;   ======================================================

;;	  0--> b  0: i   5 di=`_ZStL8__ioinit'                     :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i  19 {sp=sp-0x8;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  2--> b  0: i   6 call [`_ZNSt8ios_base4InitC1Ev']        :athlon-vector,athlon-ieu
;;	  3--> b  0: i  10 di=[const(unspec[`_ZNSt8ios_base4InitD1Ev'] 2)]:athlon-direct,athlon-load
;;	  3--> b  0: i   8 si=`_ZStL8__ioinit'                     :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i   7 dx=`__dso_handle'                       :athlon-direct,athlon-agu,nothing
;;	  6--> b  0: i  11 ax=call [`__cxa_atexit']                :athlon-vector,athlon-ieu
;;	  7--> b  0: i  13 di=`_ZL13gVersionCheck'                 :athlon-direct,athlon-agu,nothing
;;	  7--> b  0: i  12 si=0x60e00                              :athlon-direct,athlon-ieu
;;	  7--> b  0: i  23 {sp=sp+0x8;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  9--> b  0: i  14 call [`_ZN13TVersionCheckC1Ei']         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 5
;;   new tail = 14



starting the processing of deferred insns
ending the processing of deferred insns


(static initializers for mymainCascade.cc)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d} r1={5d,1u} r2={4d} r4={6d,2u} r5={7d,3u} r7={3d,9u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={5d} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 257{242d,15u,0e} in 11{8 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn:TI 5 2 19 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7fb2bdc2b480 __ioinit>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/iostream:74 85 {*movdi_internal}
     (nil))
(insn/f 19 5 20 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mymainCascade.cc:443 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 20 19 6 2 NOTE_INSN_PROLOGUE_END)
(call_insn:TI 6 20 10 2 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7fb2bdfc6c40 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/iostream:74 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7fb2bdfc6c40 __comp_ctor >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn:TI 10 6 8 2 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7fb2bdfc6e00 __comp_dtor >)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/iostream:74 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7fb2bdfc6e00 __comp_dtor >)
        (nil)))
(insn 8 10 7 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7fb2bdc2b480 __ioinit>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/iostream:74 85 {*movdi_internal}
     (nil))
(insn 7 8 11 2 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7fb2ba49bcf0 __dso_handle>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/iostream:74 85 {*movdi_internal}
     (nil))
(call_insn:TI 11 7 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7fb2b36a89a0 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/iostream:74 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7fb2b36a89a0 __cxa_atexit>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn:TI 13 11 12 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZL13gVersionCheck") [flags 0x2]  <var_decl 0x7fb2b6c10cf0 gVersionCheck>)) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TVersionCheck.h:42 85 {*movdi_internal}
     (nil))
(insn 12 13 25 2 (set (reg:SI 4 si)
        (const_int 396800 [0x60e00])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TVersionCheck.h:42 86 {*movsi_internal}
     (nil))
(note 25 12 23 2 NOTE_INSN_EPILOGUE_BEG)
(insn/f 23 25 14 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mymainCascade.cc:443 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(call_insn/j:TI 14 23 15 2 (call (mem:QI (symbol_ref:DI ("_ZN13TVersionCheckC1Ei") [flags 0x41]  <function_decl 0x7fb2b6bffd20 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TVersionCheck.h:42 677 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN13TVersionCheckC1Ei") [flags 0x41]  <function_decl 0x7fb2b6bffd20 __comp_ctor >)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 15 14 18)
(note 18 15 0 NOTE_INSN_DELETED)

;; Function int main() (main, funcdef_no=11348, decl_uid=337380, cgraph_uid=7327, symbol_order=7550) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 489 n_edges 858 count 525 (  1.1)


int main()

Dataflow summary:
def_info->table_size = 24895, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;;  ref usage 	r0={543d,534u} r1={488d,177u,6e} r2={395d,82u} r3={134d,245u,27e} r4={535d,202u} r5={606d,303u} r6={3d,825u} r7={23d,833u} r8={319d} r9={319d} r10={319d} r11={319d} r12={319d} r13={319d} r14={319d} r15={319d} r16={9u} r17={557d,111u,2e} r18={319d} r19={319d} r20={1d,10u,92e} r21={382d,99u} r22={381d,68u} r23={341d,28u} r24={323d,3u} r25={323d,3u} r26={325d,6u} r27={325d,7u} r28={324d,5u} r29={319d} r30={319d} r31={319d} r32={319d} r33={319d} r34={319d} r35={319d} r36={319d} r37={356d,36u} r38={322d,2u} r39={321d,2u} r40={321d,2u} r41={48d,89u,13e} r42={18d,28u,3e} r43={18d,26u} r44={16d,82u} r45={321d,2u} r46={319d} r47={319d} r48={319d} r49={319d} r50={319d} r51={319d} r52={319d} r53={319d} r54={319d} r55={319d} r56={319d} r57={319d} r58={319d} r59={319d} r60={319d} r61={319d} r62={319d} r63={319d} r64={319d} r65={319d} r66={319d} r67={319d} r68={319d} r69={319d} r70={319d} r71={319d} r72={319d} r73={319d} r74={319d} r75={319d} r76={319d} r77={319d} r78={319d} r79={319d} r80={319d} 
;;    total ref usage 28619{24657d,3819u,143e} in 2177{1858 regular + 319 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 16 [argp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 0 )->[2]->( 3 395(EH) )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 2 )->[3]->( 4 396(EH) )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 3 )->[4]->( 398 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 4 )->[5]->( 6 396(EH) )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 5 )->[6]->( 396(EH) 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 6 )->[7]->( 399 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 7 )->[8]->( 488(EH) 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 8 )->[9]->( 378 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]

( 10 378 )->[11]->( 483(EH) 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 12 13 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 14 15 )->[16]->( 395(EH) 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 16 )->[17]->( 395(EH) 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 17 )->[18]->( 395(EH) 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 18 )->[19]->( 487(EH) 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 19 )->[20]->( 395(EH) 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 20 )->[21]->( 395(EH) 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 21 )->[22]->( 387(EH) 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 22 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 24 23 )->[24]->( 25 24 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 26 [xmm5] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags] 26 [xmm5] 27 [xmm6] 28 [xmm7]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 24 )->[25]->( 395(EH) 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 25 )->[26]->( 395(EH) 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 26 )->[27]->( 395(EH) 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 27 )->[28]->( 395(EH) 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 28 )->[29]->( 395(EH) 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 29 )->[30]->( 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 31 30 )->[31]->( 32 31 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 22 [xmm1] 23 [xmm2]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags] 22 [xmm1] 23 [xmm2] 26 [xmm5]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 31 )->[32]->( 395(EH) 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 32 )->[33]->( 395(EH) 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 33 )->[34]->( 395(EH) 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 34 )->[35]->( 395(EH) 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 35 )->[36]->( 395(EH) 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 36 )->[37]->( 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 38 37 )->[38]->( 39 38 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 27 [xmm6] 28 [xmm7]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags] 23 [xmm2] 27 [xmm6] 28 [xmm7]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 38 )->[39]->( 395(EH) 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 39 )->[40]->( 395(EH) 41 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 40 )->[41]->( 395(EH) 42 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 41 )->[42]->( 395(EH) 43 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 42 )->[43]->( 395(EH) 44 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 43 )->[44]->( 45 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 45 44 )->[45]->( 46 45 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 22 [xmm1] 26 [xmm5]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags] 22 [xmm1] 26 [xmm5] 27 [xmm6]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 45 )->[46]->( 395(EH) 47 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 46 )->[47]->( 395(EH) 48 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 47 )->[48]->( 395(EH) 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 48 )->[49]->( 395(EH) 50 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 49 )->[50]->( 395(EH) 51 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 50 )->[51]->( 52 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 52 51 )->[52]->( 53 52 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags] 23 [xmm2] 28 [xmm7]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags] 22 [xmm1] 23 [xmm2] 28 [xmm7]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 52 )->[53]->( 395(EH) 54 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 53 )->[54]->( 395(EH) 55 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 54 )->[55]->( 395(EH) 56 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 55 )->[56]->( 395(EH) 57 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 56 )->[57]->( 395(EH) 58 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 57 )->[58]->( 395(EH) 59 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 58 )->[59]->( 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 60 59 )->[60]->( 61 60 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 26 [xmm5] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags] 26 [xmm5] 27 [xmm6] 28 [xmm7]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

( 60 )->[61]->( 395(EH) 62 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 61 )->[62]->( 395(EH) 63 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 62 )->[63]->( 395(EH) 64 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 63 )->[64]->( 395(EH) 65 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 64 )->[65]->( 395(EH) 66 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 65 )->[66]->( 395(EH) 67 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 66 )->[67]->( 118 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 120 )->[68]->( 69 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 68 122 124 )->[69]->( 388(EH) 70 )
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 69 )->[70]->( 388(EH) 71 )
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 70 )->[71]->( 72 388(EH) )
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 71 )->[72]->( 390 73 )
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 72 )->[73]->( 74 141 )
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 73 )->[74]->( 75 )
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 74 142 144 )->[75]->( 388(EH) 76 )
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 75 )->[76]->( 388(EH) 77 )
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 76 )->[77]->( 78 388(EH) )
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 77 )->[78]->( 391 79 )
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 78 )->[79]->( 80 145 )
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 79 )->[80]->( 81 )
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 80 146 148 )->[81]->( 388(EH) 82 )
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 81 )->[82]->( 83 388(EH) )
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 82 )->[83]->( 84 388(EH) )
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 83 )->[84]->( 388(EH) 85 )
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 84 )->[85]->( 392 86 )
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 85 )->[86]->( 87 137 )
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 86 )->[87]->( 88 )
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 87 138 140 )->[88]->( 388(EH) 89 )
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 88 )->[89]->( 90 388(EH) )
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 89 )->[90]->( 91 388(EH) )
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 90 )->[91]->( 393 92 )
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 91 )->[92]->( 93 133 )
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 92 )->[93]->( 94 )
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 93 134 136 )->[94]->( 388(EH) 95 )
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 94 )->[95]->( 388(EH) 96 )
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 95 )->[96]->( 97 388(EH) )
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 96 )->[97]->( 394 98 )
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 97 )->[98]->( 99 129 )
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 98 )->[99]->( 100 )
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 99 130 132 )->[100]->( 388(EH) 101 )
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 100 )->[101]->( 388(EH) 102 )
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 101 )->[102]->( 103 388(EH) )
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 102 )->[103]->( 404 104 )
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 103 )->[104]->( 105 125 )
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 104 )->[105]->( 106 )
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 105 126 128 )->[106]->( 388(EH) 107 )
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 106 )->[107]->( 108 388(EH) )
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 107 )->[108]->( 405(EH) 109 )
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 108 )->[109]->( 379(EH) 110 )
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 109 )->[110]->( 379(EH) 111 )
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 44 [r15]

( 110 )->[111]->( 379(EH) 112 )
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 111 )->[112]->( 113 149 )
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 112 325 )->[113]->( 114 115 )
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 113 )->[114]->( 115 )
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 113 114 )->[115]->( 116 117 )
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 115 )->[116]->( 117 )
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 115 116 )->[117]->( 408 118 )
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 117 67 )->[118]->( 119 388(EH) )
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 118 )->[119]->( 389 120 )
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 119 )->[120]->( 68 121 )
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 120 )->[121]->( 122 388(EH) )
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 121 )->[122]->( 69 123 )
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 122 )->[123]->( 388(EH) 124 )
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 123 )->[124]->( 69 )
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 104 )->[125]->( 126 388(EH) )
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 125 )->[126]->( 106 127 )
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 126 )->[127]->( 388(EH) 128 )
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 127 )->[128]->( 106 )
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 98 )->[129]->( 130 388(EH) )
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 129 )->[130]->( 100 131 )
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 130 )->[131]->( 388(EH) 132 )
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 131 )->[132]->( 100 )
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 92 )->[133]->( 134 388(EH) )
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 133 )->[134]->( 94 135 )
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 134 )->[135]->( 388(EH) 136 )
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 135 )->[136]->( 94 )
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 86 )->[137]->( 138 388(EH) )
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 137 )->[138]->( 88 139 )
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 138 )->[139]->( 388(EH) 140 )
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 139 )->[140]->( 88 )
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 73 )->[141]->( 142 388(EH) )
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 141 )->[142]->( 75 143 )
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 142 )->[143]->( 388(EH) 144 )
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 143 )->[144]->( 75 )
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 79 )->[145]->( 146 388(EH) )
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 145 )->[146]->( 81 147 )
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 146 )->[147]->( 388(EH) 148 )
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 147 )->[148]->( 81 )
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 112 )->[149]->( 150 379(EH) )
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 149 )->[150]->( 379(EH) 151 )
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 150 )->[151]->( 400 152 )
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 151 )->[152]->( 153 299 )
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 152 )->[153]->( 154 )
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 153 300 302 )->[154]->( 379(EH) 155 )
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 154 )->[155]->( 156 379(EH) )
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 155 )->[156]->( 157 379(EH) )
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 156 )->[157]->( 379(EH) 158 )
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 157 )->[158]->( 401 159 )
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 158 )->[159]->( 160 295 )
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 159 )->[160]->( 161 )
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 160 296 298 )->[161]->( 379(EH) 162 )
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 161 )->[162]->( 163 379(EH) )
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 162 )->[163]->( 164 379(EH) )
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 163 )->[164]->( 379(EH) 165 )
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 164 )->[165]->( 402 166 )
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 165 )->[166]->( 167 291 )
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 166 )->[167]->( 168 )
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 167 292 294 )->[168]->( 379(EH) 169 )
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 168 )->[169]->( 170 379(EH) )
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 169 )->[170]->( 171 190 )
;; bb 170 artificial_defs: { }
;; bb 170 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 43 [r14]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14]

( 170 )->[171]->( 176 )
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 43 [r14]
;; live  gen 	 3 [bx] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

( 185 )->[172]->( 173 )
;; bb 172 artificial_defs: { }
;; bb 172 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 172 187 189 )->[173]->( 379(EH) 174 )
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

( 173 )->[174]->( 175 379(EH) )
;; bb 174 artificial_defs: { }
;; bb 174 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

( 174 )->[175]->( 176 190 )
;; bb 175 artificial_defs: { }
;; bb 175 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

( 175 171 )->[176]->( 177 379(EH) )
;; bb 176 artificial_defs: { }
;; bb 176 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 23 [xmm2] 42 [r13] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 176 )->[177]->( 379(EH) 178 )
;; bb 177 artificial_defs: { }
;; bb 177 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 177 )->[178]->( 179 379(EH) )
;; bb 178 artificial_defs: { }
;; bb 178 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 178 )->[179]->( 379(EH) 180 )
;; bb 179 artificial_defs: { }
;; bb 179 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 179 )->[180]->( 181 379(EH) )
;; bb 180 artificial_defs: { }
;; bb 180 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 180 )->[181]->( 379(EH) 182 )
;; bb 181 artificial_defs: { }
;; bb 181 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 181 )->[182]->( 183 379(EH) )
;; bb 182 artificial_defs: { }
;; bb 182 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 182 )->[183]->( 379(EH) 184 )
;; bb 183 artificial_defs: { }
;; bb 183 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

( 183 )->[184]->( 403 185 )
;; bb 184 artificial_defs: { }
;; bb 184 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 184 )->[185]->( 172 186 )
;; bb 185 artificial_defs: { }
;; bb 185 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 185 )->[186]->( 187 379(EH) )
;; bb 186 artificial_defs: { }
;; bb 186 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 186 )->[187]->( 173 188 )
;; bb 187 artificial_defs: { }
;; bb 187 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 187 )->[188]->( 379(EH) 189 )
;; bb 188 artificial_defs: { }
;; bb 188 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 188 )->[189]->( 173 )
;; bb 189 artificial_defs: { }
;; bb 189 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

( 175 170 )->[190]->( 191 )
;; bb 190 artificial_defs: { }
;; bb 190 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags] 44 [r15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 190 235 240 )->[191]->( 192 304 )
;; bb 191 artificial_defs: { }
;; bb 191 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 2 [cx] 3 [bx] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 191 )->[192]->( 379(EH) 193 )
;; bb 192 artificial_defs: { }
;; bb 192 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 44 [r15]

( 192 )->[193]->( 194 379(EH) )
;; bb 193 artificial_defs: { }
;; bb 193 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags] 22 [xmm1] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 193 )->[194]->( 379(EH) 195 )
;; bb 194 artificial_defs: { }
;; bb 194 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 194 )->[195]->( 196 379(EH) )
;; bb 195 artificial_defs: { }
;; bb 195 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 195 )->[196]->( 379(EH) 197 )
;; bb 196 artificial_defs: { }
;; bb 196 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 196 )->[197]->( 198 379(EH) )
;; bb 197 artificial_defs: { }
;; bb 197 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 197 )->[198]->( 379(EH) 199 )
;; bb 198 artificial_defs: { }
;; bb 198 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 198 )->[199]->( 200 379(EH) )
;; bb 199 artificial_defs: { }
;; bb 199 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 199 )->[200]->( 379(EH) 201 )
;; bb 200 artificial_defs: { }
;; bb 200 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 200 )->[201]->( 480 202 )
;; bb 201 artificial_defs: { }
;; bb 201 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 201 )->[202]->( 203 255 )
;; bb 202 artificial_defs: { }
;; bb 202 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 202 )->[203]->( 204 )
;; bb 203 artificial_defs: { }
;; bb 203 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 203 256 258 )->[204]->( 379(EH) 205 )
;; bb 204 artificial_defs: { }
;; bb 204 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 204 )->[205]->( 206 379(EH) )
;; bb 205 artificial_defs: { }
;; bb 205 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 205 )->[206]->( 271 207 )
;; bb 206 artificial_defs: { }
;; bb 206 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 206 274 285 )->[207]->( 209 208 )
;; bb 207 artificial_defs: { }
;; bb 207 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 207 )->[208]->( 346 209 )
;; bb 208 artificial_defs: { }
;; bb 208 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 208 207 )->[209]->( 379(EH) 210 )
;; bb 209 artificial_defs: { }
;; bb 209 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 7 [sp] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 209 )->[210]->( 211 214 )
;; bb 210 artificial_defs: { }
;; bb 210 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 4 [si] 7 [sp] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 210 )->[211]->( 214 212 )
;; bb 211 artificial_defs: { }
;; bb 211 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 211 )->[212]->( 213 )
;; bb 212 artificial_defs: { }
;; bb 212 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 212 213 )->[213]->( 214 213 )
;; bb 213 artificial_defs: { }
;; bb 213 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 210 211 213 )->[214]->( 379(EH) 215 )
;; bb 214 artificial_defs: { }
;; bb 214 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 214 )->[215]->( 379(EH) 216 )
;; bb 215 artificial_defs: { }
;; bb 215 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 215 )->[216]->( 481 217 )
;; bb 216 artificial_defs: { }
;; bb 216 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 216 )->[217]->( 218 263 )
;; bb 217 artificial_defs: { }
;; bb 217 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 217 )->[218]->( 219 )
;; bb 218 artificial_defs: { }
;; bb 218 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 218 264 266 )->[219]->( 379(EH) 220 )
;; bb 219 artificial_defs: { }
;; bb 219 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 219 )->[220]->( 221 379(EH) )
;; bb 220 artificial_defs: { }
;; bb 220 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 220 )->[221]->( 222 379(EH) )
;; bb 221 artificial_defs: { }
;; bb 221 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 221 )->[222]->( 379(EH) 223 )
;; bb 222 artificial_defs: { }
;; bb 222 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 222 )->[223]->( 482 224 )
;; bb 223 artificial_defs: { }
;; bb 223 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 223 )->[224]->( 225 259 )
;; bb 224 artificial_defs: { }
;; bb 224 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 224 )->[225]->( 226 )
;; bb 225 artificial_defs: { }
;; bb 225 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 225 260 262 )->[226]->( 379(EH) 227 )
;; bb 226 artificial_defs: { }
;; bb 226 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 226 )->[227]->( 228 379(EH) )
;; bb 227 artificial_defs: { }
;; bb 227 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 227 )->[228]->( 229 379(EH) )
;; bb 228 artificial_defs: { }
;; bb 228 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 228 )->[229]->( 379(EH) 230 )
;; bb 229 artificial_defs: { }
;; bb 229 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 229 )->[230]->( 406 231 )
;; bb 230 artificial_defs: { }
;; bb 230 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 230 )->[231]->( 232 267 )
;; bb 231 artificial_defs: { }
;; bb 231 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 231 )->[232]->( 233 )
;; bb 232 artificial_defs: { }
;; bb 232 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 232 268 270 )->[233]->( 379(EH) 234 )
;; bb 233 artificial_defs: { }
;; bb 233 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 233 )->[234]->( 235 379(EH) )
;; bb 234 artificial_defs: { }
;; bb 234 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 234 )->[235]->( 236 191 )
;; bb 235 artificial_defs: { }
;; bb 235 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 235 )->[236]->( 241 )
;; bb 236 artificial_defs: { }
;; bb 236 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 3 [bx] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 250 )->[237]->( 238 )
;; bb 237 artificial_defs: { }
;; bb 237 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 237 252 254 )->[238]->( 379(EH) 239 )
;; bb 238 artificial_defs: { }
;; bb 238 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 238 )->[239]->( 240 379(EH) )
;; bb 239 artificial_defs: { }
;; bb 239 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 239 )->[240]->( 241 191 )
;; bb 240 artificial_defs: { }
;; bb 240 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 240 236 )->[241]->( 242 379(EH) )
;; bb 241 artificial_defs: { }
;; bb 241 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 24 [xmm3] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 241 )->[242]->( 379(EH) 243 )
;; bb 242 artificial_defs: { }
;; bb 242 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 242 )->[243]->( 244 379(EH) )
;; bb 243 artificial_defs: { }
;; bb 243 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 243 )->[244]->( 379(EH) 245 )
;; bb 244 artificial_defs: { }
;; bb 244 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 244 )->[245]->( 246 379(EH) )
;; bb 245 artificial_defs: { }
;; bb 245 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 245 )->[246]->( 379(EH) 247 )
;; bb 246 artificial_defs: { }
;; bb 246 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 246 )->[247]->( 248 379(EH) )
;; bb 247 artificial_defs: { }
;; bb 247 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 247 )->[248]->( 379(EH) 249 )
;; bb 248 artificial_defs: { }
;; bb 248 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 248 )->[249]->( 303 250 )
;; bb 249 artificial_defs: { }
;; bb 249 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 249 )->[250]->( 237 251 )
;; bb 250 artificial_defs: { }
;; bb 250 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 250 )->[251]->( 252 379(EH) )
;; bb 251 artificial_defs: { }
;; bb 251 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 251 )->[252]->( 238 253 )
;; bb 252 artificial_defs: { }
;; bb 252 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 252 )->[253]->( 379(EH) 254 )
;; bb 253 artificial_defs: { }
;; bb 253 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 253 )->[254]->( 238 )
;; bb 254 artificial_defs: { }
;; bb 254 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 202 )->[255]->( 256 379(EH) )
;; bb 255 artificial_defs: { }
;; bb 255 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 255 )->[256]->( 204 257 )
;; bb 256 artificial_defs: { }
;; bb 256 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 256 )->[257]->( 379(EH) 258 )
;; bb 257 artificial_defs: { }
;; bb 257 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 257 )->[258]->( 204 )
;; bb 258 artificial_defs: { }
;; bb 258 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 224 )->[259]->( 260 379(EH) )
;; bb 259 artificial_defs: { }
;; bb 259 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 259 )->[260]->( 226 261 )
;; bb 260 artificial_defs: { }
;; bb 260 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 260 )->[261]->( 379(EH) 262 )
;; bb 261 artificial_defs: { }
;; bb 261 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 261 )->[262]->( 226 )
;; bb 262 artificial_defs: { }
;; bb 262 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 217 )->[263]->( 264 379(EH) )
;; bb 263 artificial_defs: { }
;; bb 263 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 263 )->[264]->( 219 265 )
;; bb 264 artificial_defs: { }
;; bb 264 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 264 )->[265]->( 379(EH) 266 )
;; bb 265 artificial_defs: { }
;; bb 265 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 265 )->[266]->( 219 )
;; bb 266 artificial_defs: { }
;; bb 266 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 231 )->[267]->( 268 379(EH) )
;; bb 267 artificial_defs: { }
;; bb 267 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 267 )->[268]->( 233 269 )
;; bb 268 artificial_defs: { }
;; bb 268 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 268 )->[269]->( 379(EH) 270 )
;; bb 269 artificial_defs: { }
;; bb 269 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 269 )->[270]->( 233 )
;; bb 270 artificial_defs: { }
;; bb 270 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 206 )->[271]->( 272 275 )
;; bb 271 artificial_defs: { }
;; bb 271 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 271 )->[272]->( 286 273 )
;; bb 272 artificial_defs: { }
;; bb 272 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]

( 272 )->[273]->( 274 )
;; bb 273 artificial_defs: { }
;; bb 273 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]

( 273 286 )->[274]->( 207 )
;; bb 274 artificial_defs: { }
;; bb 274 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 22 [xmm1] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 21 [xmm0] 22 [xmm1] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 271 )->[275]->( 276 379(EH) )
;; bb 275 artificial_defs: { }
;; bb 275 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 275 )->[276]->( 379(EH) 277 )
;; bb 276 artificial_defs: { }
;; bb 276 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 276 )->[277]->( 278 379(EH) )
;; bb 277 artificial_defs: { }
;; bb 277 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 277 )->[278]->( 379(EH) 279 )
;; bb 278 artificial_defs: { }
;; bb 278 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 278 )->[279]->( 280 379(EH) )
;; bb 279 artificial_defs: { }
;; bb 279 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 41 [r12]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 279 )->[280]->( 407 281 )
;; bb 280 artificial_defs: { }
;; bb 280 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 280 )->[281]->( 282 287 )
;; bb 281 artificial_defs: { }
;; bb 281 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 281 )->[282]->( 283 )
;; bb 282 artificial_defs: { }
;; bb 282 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 282 288 290 )->[283]->( 379(EH) 284 )
;; bb 283 artificial_defs: { }
;; bb 283 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 283 )->[284]->( 285 379(EH) )
;; bb 284 artificial_defs: { }
;; bb 284 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 284 )->[285]->( 207 )
;; bb 285 artificial_defs: { }
;; bb 285 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 272 )->[286]->( 274 )
;; bb 286 artificial_defs: { }
;; bb 286 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx] 21 [xmm0] 22 [xmm1]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]

( 281 )->[287]->( 288 379(EH) )
;; bb 287 artificial_defs: { }
;; bb 287 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 287 )->[288]->( 283 289 )
;; bb 288 artificial_defs: { }
;; bb 288 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 288 )->[289]->( 379(EH) 290 )
;; bb 289 artificial_defs: { }
;; bb 289 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 289 )->[290]->( 283 )
;; bb 290 artificial_defs: { }
;; bb 290 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

( 166 )->[291]->( 292 379(EH) )
;; bb 291 artificial_defs: { }
;; bb 291 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 291 )->[292]->( 168 293 )
;; bb 292 artificial_defs: { }
;; bb 292 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 292 )->[293]->( 379(EH) 294 )
;; bb 293 artificial_defs: { }
;; bb 293 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 293 )->[294]->( 168 )
;; bb 294 artificial_defs: { }
;; bb 294 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	

( 159 )->[295]->( 296 379(EH) )
;; bb 295 artificial_defs: { }
;; bb 295 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 295 )->[296]->( 161 297 )
;; bb 296 artificial_defs: { }
;; bb 296 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 296 )->[297]->( 379(EH) 298 )
;; bb 297 artificial_defs: { }
;; bb 297 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 297 )->[298]->( 161 )
;; bb 298 artificial_defs: { }
;; bb 298 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	

( 152 )->[299]->( 300 379(EH) )
;; bb 299 artificial_defs: { }
;; bb 299 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 299 )->[300]->( 154 301 )
;; bb 300 artificial_defs: { }
;; bb 300 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 300 )->[301]->( 379(EH) 302 )
;; bb 301 artificial_defs: { }
;; bb 301 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 301 )->[302]->( 154 )
;; bb 302 artificial_defs: { }
;; bb 302 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	

( 249 )->[303]->( 379(EH) )
;; bb 303 artificial_defs: { }
;; bb 303 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 191 )->[304]->( 326 305 )
;; bb 304 artificial_defs: { }
;; bb 304 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

( 304 )->[305]->( 318 306 )
;; bb 305 artificial_defs: { }
;; bb 305 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13]

( 305 332 )->[306]->( 312 )
;; bb 306 artificial_defs: { }
;; bb 306 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 43 [r14] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; live  gen 	 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 312 )->[307]->( 333 308 )
;; bb 307 artificial_defs: { }
;; bb 307 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 307 )->[308]->( 339 309 )
;; bb 308 artificial_defs: { }
;; bb 308 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 308 )->[309]->( 342 310 )
;; bb 309 artificial_defs: { }
;; bb 309 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 309 )->[310]->( 370 311 )
;; bb 310 artificial_defs: { }
;; bb 310 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 344 337 341 310 372 )->[311]->( 318 312 )
;; bb 311 artificial_defs: { }
;; bb 311 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 17 [flags] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 317 311 306 )->[312]->( 313 307 )
;; bb 312 artificial_defs: { }
;; bb 312 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 312 )->[313]->( 314 315 )
;; bb 313 artificial_defs: { }
;; bb 313 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 41 [r12]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 41 [r12]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 313 )->[314]->( 315 )
;; bb 314 artificial_defs: { }
;; bb 314 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 21 [xmm0] 22 [xmm1]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 314 313 )->[315]->( 316 369 )
;; bb 315 artificial_defs: { }
;; bb 315 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 21 [xmm0] 22 [xmm1] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 315 )->[316]->( 317 )
;; bb 316 artificial_defs: { }
;; bb 316 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 316 369 )->[317]->( 318 312 )
;; bb 317 artificial_defs: { }
;; bb 317 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 17 [flags] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 305 311 317 )->[318]->( 379(EH) 319 )
;; bb 318 artificial_defs: { }
;; bb 318 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 318 )->[319]->( 379(EH) 320 )
;; bb 319 artificial_defs: { }
;; bb 319 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 319 )->[320]->( 379(EH) 321 )
;; bb 320 artificial_defs: { }
;; bb 320 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 320 )->[321]->( 379(EH) 322 )
;; bb 321 artificial_defs: { }
;; bb 321 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 321 )->[322]->( 323 379(EH) )
;; bb 322 artificial_defs: { }
;; bb 322 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 322 )->[323]->( 379(EH) 324 )
;; bb 323 artificial_defs: { }
;; bb 323 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 323 )->[324]->( 325 379(EH) )
;; bb 324 artificial_defs: { }
;; bb 324 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 324 )->[325]->( 113 )
;; bb 325 artificial_defs: { }
;; bb 325 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	

( 304 )->[326]->( 327 379(EH) )
;; bb 326 artificial_defs: { }
;; bb 326 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 326 )->[327]->( 379(EH) 328 )
;; bb 327 artificial_defs: { }
;; bb 327 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 327 )->[328]->( 329 379(EH) )
;; bb 328 artificial_defs: { }
;; bb 328 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

( 328 )->[329]->( 379(EH) 330 )
;; bb 329 artificial_defs: { }
;; bb 329 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 329 )->[330]->( 331 379(EH) )
;; bb 330 artificial_defs: { }
;; bb 330 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 330 )->[331]->( 332 379(EH) )
;; bb 331 artificial_defs: { }
;; bb 331 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 331 )->[332]->( 306 )
;; bb 332 artificial_defs: { }
;; bb 332 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 42 [r13]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13]

( 307 )->[333]->( 338 334 )
;; bb 333 artificial_defs: { }
;; bb 333 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]

( 333 )->[334]->( 335 )
;; bb 334 artificial_defs: { }
;; bb 334 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 41 [r12]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 41 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 334 338 )->[335]->( 336 345 )
;; bb 335 artificial_defs: { }
;; bb 335 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 21 [xmm0] 22 [xmm1] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 335 )->[336]->( 337 )
;; bb 336 artificial_defs: { }
;; bb 336 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 336 345 )->[337]->( 311 )
;; bb 337 artificial_defs: { }
;; bb 337 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 333 )->[338]->( 335 )
;; bb 338 artificial_defs: { }
;; bb 338 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 21 [xmm0] 22 [xmm1] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 308 )->[339]->( 340 373 )
;; bb 339 artificial_defs: { }
;; bb 339 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 339 )->[340]->( 341 )
;; bb 340 artificial_defs: { }
;; bb 340 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 340 373 )->[341]->( 311 )
;; bb 341 artificial_defs: { }
;; bb 341 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 309 )->[342]->( 343 374 )
;; bb 342 artificial_defs: { }
;; bb 342 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 342 )->[343]->( 344 )
;; bb 343 artificial_defs: { }
;; bb 343 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 343 374 )->[344]->( 311 )
;; bb 344 artificial_defs: { }
;; bb 344 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 335 )->[345]->( 337 )
;; bb 345 artificial_defs: { }
;; bb 345 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 208 )->[346]->( 347 379(EH) )
;; bb 346 artificial_defs: { }
;; bb 346 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 346 )->[347]->( 379(EH) 348 )
;; bb 347 artificial_defs: { }
;; bb 347 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 347 )->[348]->( 349 379(EH) )
;; bb 348 artificial_defs: { }
;; bb 348 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 348 )->[349]->( 355 350 )
;; bb 349 artificial_defs: { }
;; bb 349 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 17 [flags] 41 [r12] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags] 41 [r12] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 349 )->[350]->( 377 )
;; bb 350 artificial_defs: { }
;; bb 350 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	

( 364 )->[351]->( 352 )
;; bb 351 artificial_defs: { }
;; bb 351 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 351 366 368 )->[352]->( 379(EH) 353 )
;; bb 352 artificial_defs: { }
;; bb 352 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 352 )->[353]->( 354 379(EH) )
;; bb 353 artificial_defs: { }
;; bb 353 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 353 )->[354]->( 355 377 )
;; bb 354 artificial_defs: { }
;; bb 354 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 349 354 )->[355]->( 356 379(EH) )
;; bb 355 artificial_defs: { }
;; bb 355 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 25 [xmm4] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 355 )->[356]->( 379(EH) 357 )
;; bb 356 artificial_defs: { }
;; bb 356 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 356 )->[357]->( 358 379(EH) )
;; bb 357 artificial_defs: { }
;; bb 357 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 357 )->[358]->( 379(EH) 359 )
;; bb 358 artificial_defs: { }
;; bb 358 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 358 )->[359]->( 360 379(EH) )
;; bb 359 artificial_defs: { }
;; bb 359 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 359 )->[360]->( 379(EH) 361 )
;; bb 360 artificial_defs: { }
;; bb 360 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 360 )->[361]->( 362 379(EH) )
;; bb 361 artificial_defs: { }
;; bb 361 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 361 )->[362]->( 379(EH) 363 )
;; bb 362 artificial_defs: { }
;; bb 362 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

( 362 )->[363]->( 376 364 )
;; bb 363 artificial_defs: { }
;; bb 363 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 363 )->[364]->( 351 365 )
;; bb 364 artificial_defs: { }
;; bb 364 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 364 )->[365]->( 366 379(EH) )
;; bb 365 artificial_defs: { }
;; bb 365 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 365 )->[366]->( 352 367 )
;; bb 366 artificial_defs: { }
;; bb 366 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 366 )->[367]->( 379(EH) 368 )
;; bb 367 artificial_defs: { }
;; bb 367 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 367 )->[368]->( 352 )
;; bb 368 artificial_defs: { }
;; bb 368 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

( 315 )->[369]->( 317 )
;; bb 369 artificial_defs: { }
;; bb 369 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 310 )->[370]->( 371 375 )
;; bb 370 artificial_defs: { }
;; bb 370 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 370 )->[371]->( 372 )
;; bb 371 artificial_defs: { }
;; bb 371 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 371 375 )->[372]->( 311 )
;; bb 372 artificial_defs: { }
;; bb 372 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 339 )->[373]->( 341 )
;; bb 373 artificial_defs: { }
;; bb 373 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 342 )->[374]->( 344 )
;; bb 374 artificial_defs: { }
;; bb 374 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 370 )->[375]->( 372 )
;; bb 375 artificial_defs: { }
;; bb 375 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 363 )->[376]->( 379(EH) )
;; bb 376 artificial_defs: { }
;; bb 376 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 354 350 )->[377]->( )
;; bb 377 artificial_defs: { }
;; bb 377 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 9 )->[378]->( 11 )
;; bb 378 artificial_defs: { }
;; bb 378 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 3 [bx]
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 3 [bx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]

( 109(EH) 110(EH) 111(EH) 149(EH) 150(EH) 400(EH) 299(EH) 301(EH) 154(EH) 155(EH) 156(EH) 157(EH) 401(EH) 295(EH) 297(EH) 161(EH) 162(EH) 163(EH) 164(EH) 402(EH) 291(EH) 293(EH) 168(EH) 169(EH) 176(EH) 177(EH) 178(EH) 179(EH) 180(EH) 181(EH) 182(EH) 183(EH) 403(EH) 186(EH) 188(EH) 173(EH) 174(EH) 192(EH) 193(EH) 194(EH) 195(EH) 196(EH) 197(EH) 198(EH) 199(EH) 200(EH) 480(EH) 255(EH) 257(EH) 204(EH) 205(EH) 275(EH) 276(EH) 277(EH) 278(EH) 279(EH) 407(EH) 287(EH) 289(EH) 283(EH) 284(EH) 346(EH) 347(EH) 348(EH) 355(EH) 356(EH) 357(EH) 358(EH) 359(EH) 360(EH) 361(EH) 362(EH) 376(EH) 365(EH) 367(EH) 352(EH) 353(EH) 209(EH) 214(EH) 215(EH) 481(EH) 263(EH) 265(EH) 219(EH) 220(EH) 221(EH) 222(EH) 482(EH) 259(EH) 261(EH) 226(EH) 227(EH) 228(EH) 229(EH) 406(EH) 267(EH) 269(EH) 233(EH) 234(EH) 241(EH) 242(EH) 243(EH) 244(EH) 245(EH) 246(EH) 247(EH) 248(EH) 303(EH) 251(EH) 253(EH) 238(EH) 239(EH) 326(EH) 327(EH) 328(EH) 329(EH) 330(EH) 331(EH) 318(EH) 319(EH) 320(EH) 321(EH) 322(EH) 323(EH) 324(EH) )->[379]->( 380 381 )
;; bb 379 artificial_defs: { d16(0){ }d608(1){ }}
;; bb 379 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 379 )->[380]->( 381 )
;; bb 380 artificial_defs: { }
;; bb 380 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 380 379 405 )->[381]->( 382 383 )
;; bb 381 artificial_defs: { }
;; bb 381 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 381 )->[382]->( 383 )
;; bb 382 artificial_defs: { }
;; bb 382 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 382 381 388 )->[383]->( 384 )
;; bb 383 artificial_defs: { }
;; bb 383 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 387 395 397 396 486 383 487 )->[384]->( 385 386 )
;; bb 384 artificial_defs: { }
;; bb 384 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 384 )->[385]->( 386 )
;; bb 385 artificial_defs: { }
;; bb 385 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 384 385 )->[386]->( )
;; bb 386 artificial_defs: { }
;; bb 386 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 22(EH) )->[387]->( 384 )
;; bb 387 artificial_defs: { d17(0){ }d609(1){ }}
;; bb 387 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 118(EH) 389(EH) 121(EH) 123(EH) 69(EH) 70(EH) 71(EH) 390(EH) 141(EH) 143(EH) 75(EH) 76(EH) 77(EH) 391(EH) 145(EH) 147(EH) 81(EH) 82(EH) 83(EH) 84(EH) 392(EH) 137(EH) 139(EH) 88(EH) 89(EH) 90(EH) 393(EH) 133(EH) 135(EH) 94(EH) 95(EH) 96(EH) 394(EH) 129(EH) 131(EH) 100(EH) 101(EH) 102(EH) 404(EH) 125(EH) 127(EH) 106(EH) 107(EH) 408(EH) 409(EH) 410(EH) 411(EH) 412(EH) 413(EH) 414(EH) 415(EH) 416(EH) 417(EH) 418(EH) 419(EH) 420(EH) 421(EH) 422(EH) 423(EH) 424(EH) 425(EH) 426(EH) 427(EH) 428(EH) 429(EH) 430(EH) 431(EH) 432(EH) 433(EH) 434(EH) 435(EH) 436(EH) 437(EH) 438(EH) 439(EH) 440(EH) 441(EH) 442(EH) 443(EH) 444(EH) 445(EH) 446(EH) 447(EH) 448(EH) 449(EH) 450(EH) 451(EH) 452(EH) 453(EH) 454(EH) 455(EH) 456(EH) 457(EH) 458(EH) 459(EH) 460(EH) 461(EH) 462(EH) 463(EH) 464(EH) 465(EH) 466(EH) 467(EH) 468(EH) 469(EH) 470(EH) 471(EH) 472(EH) 473(EH) 474(EH) 475(EH) 476(EH) )->[388]->( 383 )
;; bb 388 artificial_defs: { d12(0){ }d604(1){ }}
;; bb 388 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 119 )->[389]->( 388(EH) )
;; bb 389 artificial_defs: { }
;; bb 389 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 72 )->[390]->( 388(EH) )
;; bb 390 artificial_defs: { }
;; bb 390 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 78 )->[391]->( 388(EH) )
;; bb 391 artificial_defs: { }
;; bb 391 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 85 )->[392]->( 388(EH) )
;; bb 392 artificial_defs: { }
;; bb 392 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 91 )->[393]->( 388(EH) )
;; bb 393 artificial_defs: { }
;; bb 393 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 97 )->[394]->( 388(EH) )
;; bb 394 artificial_defs: { }
;; bb 394 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 2(EH) 16(EH) 17(EH) 18(EH) 20(EH) 21(EH) 25(EH) 26(EH) 27(EH) 28(EH) 29(EH) 32(EH) 33(EH) 34(EH) 35(EH) 36(EH) 39(EH) 40(EH) 41(EH) 42(EH) 43(EH) 46(EH) 47(EH) 48(EH) 49(EH) 50(EH) 53(EH) 54(EH) 55(EH) 56(EH) 57(EH) 58(EH) 61(EH) 62(EH) 63(EH) 64(EH) 65(EH) 66(EH) )->[395]->( 384 )
;; bb 395 artificial_defs: { d10(0){ }d602(1){ }}
;; bb 395 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 3(EH) 398(EH) 5(EH) 6(EH) )->[396]->( 397 384 )
;; bb 396 artificial_defs: { d577(0){ }d1074(1){ }}
;; bb 396 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 485 396 )->[397]->( 384 )
;; bb 397 artificial_defs: { }
;; bb 397 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 4 )->[398]->( 396(EH) )
;; bb 398 artificial_defs: { }
;; bb 398 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 7 )->[399]->( 488(EH) )
;; bb 399 artificial_defs: { }
;; bb 399 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 151 )->[400]->( 379(EH) )
;; bb 400 artificial_defs: { }
;; bb 400 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 158 )->[401]->( 379(EH) )
;; bb 401 artificial_defs: { }
;; bb 401 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 165 )->[402]->( 379(EH) )
;; bb 402 artificial_defs: { }
;; bb 402 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 184 )->[403]->( 379(EH) )
;; bb 403 artificial_defs: { }
;; bb 403 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 103 )->[404]->( 388(EH) )
;; bb 404 artificial_defs: { }
;; bb 404 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 108(EH) )->[405]->( 381 )
;; bb 405 artificial_defs: { d14(0){ }d606(1){ }}
;; bb 405 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 230 )->[406]->( 379(EH) )
;; bb 406 artificial_defs: { }
;; bb 406 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 280 )->[407]->( 379(EH) )
;; bb 407 artificial_defs: { }
;; bb 407 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 117 )->[408]->( 409 388(EH) )
;; bb 408 artificial_defs: { }
;; bb 408 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 408 )->[409]->( 388(EH) 410 )
;; bb 409 artificial_defs: { }
;; bb 409 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 409 )->[410]->( 411 388(EH) )
;; bb 410 artificial_defs: { }
;; bb 410 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 410 )->[411]->( 388(EH) 412 )
;; bb 411 artificial_defs: { }
;; bb 411 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 411 )->[412]->( 413 388(EH) )
;; bb 412 artificial_defs: { }
;; bb 412 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 412 )->[413]->( 388(EH) 414 )
;; bb 413 artificial_defs: { }
;; bb 413 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 413 )->[414]->( 415 388(EH) )
;; bb 414 artificial_defs: { }
;; bb 414 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 414 )->[415]->( 388(EH) 416 )
;; bb 415 artificial_defs: { }
;; bb 415 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 415 )->[416]->( 388(EH) 417 )
;; bb 416 artificial_defs: { }
;; bb 416 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 416 )->[417]->( 418 388(EH) )
;; bb 417 artificial_defs: { }
;; bb 417 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

( 417 )->[418]->( 388(EH) 419 )
;; bb 418 artificial_defs: { }
;; bb 418 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 418 )->[419]->( 420 388(EH) )
;; bb 419 artificial_defs: { }
;; bb 419 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 419 )->[420]->( 388(EH) 421 )
;; bb 420 artificial_defs: { }
;; bb 420 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 420 )->[421]->( 422 388(EH) )
;; bb 421 artificial_defs: { }
;; bb 421 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 421 )->[422]->( 388(EH) 423 )
;; bb 422 artificial_defs: { }
;; bb 422 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 422 )->[423]->( 388(EH) 424 )
;; bb 423 artificial_defs: { }
;; bb 423 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 423 )->[424]->( 425 388(EH) )
;; bb 424 artificial_defs: { }
;; bb 424 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

( 424 )->[425]->( 388(EH) 426 )
;; bb 425 artificial_defs: { }
;; bb 425 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 425 )->[426]->( 427 388(EH) )
;; bb 426 artificial_defs: { }
;; bb 426 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 426 )->[427]->( 388(EH) 428 )
;; bb 427 artificial_defs: { }
;; bb 427 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 427 )->[428]->( 429 388(EH) )
;; bb 428 artificial_defs: { }
;; bb 428 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 428 )->[429]->( 388(EH) 430 )
;; bb 429 artificial_defs: { }
;; bb 429 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 429 )->[430]->( 388(EH) 431 )
;; bb 430 artificial_defs: { }
;; bb 430 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 430 )->[431]->( 432 388(EH) )
;; bb 431 artificial_defs: { }
;; bb 431 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

( 431 )->[432]->( 388(EH) 433 )
;; bb 432 artificial_defs: { }
;; bb 432 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 432 )->[433]->( 434 388(EH) )
;; bb 433 artificial_defs: { }
;; bb 433 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 433 )->[434]->( 388(EH) 435 )
;; bb 434 artificial_defs: { }
;; bb 434 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 434 )->[435]->( 436 388(EH) )
;; bb 435 artificial_defs: { }
;; bb 435 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 435 )->[436]->( 388(EH) 437 )
;; bb 436 artificial_defs: { }
;; bb 436 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 436 )->[437]->( 388(EH) 438 )
;; bb 437 artificial_defs: { }
;; bb 437 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 437 )->[438]->( 439 388(EH) )
;; bb 438 artificial_defs: { }
;; bb 438 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 438 )->[439]->( 388(EH) 440 )
;; bb 439 artificial_defs: { }
;; bb 439 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 439 )->[440]->( 441 388(EH) )
;; bb 440 artificial_defs: { }
;; bb 440 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 440 )->[441]->( 388(EH) 442 )
;; bb 441 artificial_defs: { }
;; bb 441 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 441 )->[442]->( 443 388(EH) )
;; bb 442 artificial_defs: { }
;; bb 442 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 442 )->[443]->( 388(EH) 444 )
;; bb 443 artificial_defs: { }
;; bb 443 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 443 )->[444]->( 388(EH) 445 )
;; bb 444 artificial_defs: { }
;; bb 444 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 444 )->[445]->( 446 388(EH) )
;; bb 445 artificial_defs: { }
;; bb 445 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 445 )->[446]->( 388(EH) 447 )
;; bb 446 artificial_defs: { }
;; bb 446 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 446 )->[447]->( 448 388(EH) )
;; bb 447 artificial_defs: { }
;; bb 447 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 447 )->[448]->( 388(EH) 449 )
;; bb 448 artificial_defs: { }
;; bb 448 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 448 )->[449]->( 450 388(EH) )
;; bb 449 artificial_defs: { }
;; bb 449 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 449 )->[450]->( 388(EH) 451 )
;; bb 450 artificial_defs: { }
;; bb 450 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 450 )->[451]->( 388(EH) 452 )
;; bb 451 artificial_defs: { }
;; bb 451 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 451 )->[452]->( 453 388(EH) )
;; bb 452 artificial_defs: { }
;; bb 452 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 452 )->[453]->( 388(EH) 454 )
;; bb 453 artificial_defs: { }
;; bb 453 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 453 )->[454]->( 455 388(EH) )
;; bb 454 artificial_defs: { }
;; bb 454 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 454 )->[455]->( 388(EH) 456 )
;; bb 455 artificial_defs: { }
;; bb 455 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 455 )->[456]->( 457 388(EH) )
;; bb 456 artificial_defs: { }
;; bb 456 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 456 )->[457]->( 388(EH) 458 )
;; bb 457 artificial_defs: { }
;; bb 457 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 457 )->[458]->( 388(EH) 459 )
;; bb 458 artificial_defs: { }
;; bb 458 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 458 )->[459]->( 460 388(EH) )
;; bb 459 artificial_defs: { }
;; bb 459 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 459 )->[460]->( 388(EH) 461 )
;; bb 460 artificial_defs: { }
;; bb 460 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 460 )->[461]->( 462 388(EH) )
;; bb 461 artificial_defs: { }
;; bb 461 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 461 )->[462]->( 388(EH) 463 )
;; bb 462 artificial_defs: { }
;; bb 462 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 462 )->[463]->( 464 388(EH) )
;; bb 463 artificial_defs: { }
;; bb 463 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 463 )->[464]->( 388(EH) 465 )
;; bb 464 artificial_defs: { }
;; bb 464 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 464 )->[465]->( 388(EH) 466 )
;; bb 465 artificial_defs: { }
;; bb 465 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 465 )->[466]->( 467 388(EH) )
;; bb 466 artificial_defs: { }
;; bb 466 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 466 )->[467]->( 388(EH) 468 )
;; bb 467 artificial_defs: { }
;; bb 467 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 467 )->[468]->( 469 388(EH) )
;; bb 468 artificial_defs: { }
;; bb 468 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 468 )->[469]->( 388(EH) 470 )
;; bb 469 artificial_defs: { }
;; bb 469 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 469 )->[470]->( 471 388(EH) )
;; bb 470 artificial_defs: { }
;; bb 470 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 470 )->[471]->( 388(EH) 472 )
;; bb 471 artificial_defs: { }
;; bb 471 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 471 )->[472]->( 473 388(EH) )
;; bb 472 artificial_defs: { }
;; bb 472 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 472 )->[473]->( 388(EH) 474 )
;; bb 473 artificial_defs: { }
;; bb 473 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 473 )->[474]->( 388(EH) 475 )
;; bb 474 artificial_defs: { }
;; bb 474 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 474 )->[475]->( 388(EH) 476 )
;; bb 475 artificial_defs: { }
;; bb 475 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 475 )->[476]->( 388(EH) 477 )
;; bb 476 artificial_defs: { }
;; bb 476 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 476 )->[477]->( 478 479 )
;; bb 477 artificial_defs: { }
;; bb 477 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 477 )->[478]->( 479 )
;; bb 478 artificial_defs: { }
;; bb 478 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 477 478 )->[479]->( 1 )
;; bb 479 artificial_defs: { }
;; bb 479 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 201 )->[480]->( 379(EH) )
;; bb 480 artificial_defs: { }
;; bb 480 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 216 )->[481]->( 379(EH) )
;; bb 481 artificial_defs: { }
;; bb 481 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 223 )->[482]->( 379(EH) )
;; bb 482 artificial_defs: { }
;; bb 482 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 11(EH) )->[483]->( 484 485 )
;; bb 483 artificial_defs: { d24(0){ }d618(1){ }}
;; bb 483 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 483 )->[484]->( 485 )
;; bb 484 artificial_defs: { }
;; bb 484 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 484 483 488 )->[485]->( 397 486 )
;; bb 485 artificial_defs: { }
;; bb 485 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 485 )->[486]->( 384 )
;; bb 486 artificial_defs: { }
;; bb 486 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	

( 19(EH) )->[487]->( 384 )
;; bb 487 artificial_defs: { d19(0){ }d611(1){ }}
;; bb 487 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 399(EH) 8(EH) )->[488]->( 485 )
;; bb 488 artificial_defs: { d22(0){ }d616(1){ }}
;; bb 488 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 479 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(20){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 102 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 4333 to worklist
  Adding insn 4552 to worklist
  Adding insn 4551 to worklist
  Adding insn 4550 to worklist
  Adding insn 4549 to worklist
  Adding insn 4548 to worklist
  Adding insn 4546 to worklist
  Adding insn 114 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 4331 to worklist
  Adding insn 119 to worklist
  Adding insn 130 to worklist
  Adding insn 138 to worklist
  Adding insn 162 to worklist
  Adding insn 173 to worklist
  Adding insn 182 to worklist
  Adding insn 178 to worklist
  Adding insn 4335 to worklist
  Adding insn 192 to worklist
  Adding insn 190 to worklist
  Adding insn 206 to worklist
  Adding insn 199 to worklist
  Adding insn 198 to worklist
  Adding insn 197 to worklist
  Adding insn 196 to worklist
  Adding insn 213 to worklist
  Adding insn 207 to worklist
  Adding insn 216 to worklist
  Adding insn 223 to worklist
  Adding insn 226 to worklist
  Adding insn 234 to worklist
  Adding insn 236 to worklist
  Adding insn 241 to worklist
  Adding insn 249 to worklist
  Adding insn 4338 to worklist
  Adding insn 251 to worklist
  Adding insn 256 to worklist
  Adding insn 264 to worklist
  Adding insn 4337 to worklist
  Adding insn 266 to worklist
  Adding insn 282 to worklist
  Adding insn 278 to worklist
  Adding insn 276 to worklist
  Adding insn 273 to worklist
  Adding insn 270 to worklist
  Adding insn 290 to worklist
  Adding insn 300 to worklist
  Adding insn 310 to worklist
  Adding insn 320 to worklist
  Adding insn 330 to worklist
  Adding insn 332 to worklist
  Adding insn 348 to worklist
  Adding insn 344 to worklist
  Adding insn 342 to worklist
  Adding insn 339 to worklist
  Adding insn 336 to worklist
  Adding insn 356 to worklist
  Adding insn 366 to worklist
  Adding insn 376 to worklist
  Adding insn 386 to worklist
  Adding insn 396 to worklist
  Adding insn 398 to worklist
  Adding insn 414 to worklist
  Adding insn 410 to worklist
  Adding insn 408 to worklist
  Adding insn 405 to worklist
  Adding insn 402 to worklist
  Adding insn 422 to worklist
  Adding insn 432 to worklist
  Adding insn 442 to worklist
  Adding insn 452 to worklist
  Adding insn 462 to worklist
  Adding insn 464 to worklist
  Adding insn 480 to worklist
  Adding insn 476 to worklist
  Adding insn 474 to worklist
  Adding insn 471 to worklist
  Adding insn 468 to worklist
  Adding insn 488 to worklist
  Adding insn 498 to worklist
  Adding insn 508 to worklist
  Adding insn 518 to worklist
  Adding insn 528 to worklist
  Adding insn 530 to worklist
  Adding insn 548 to worklist
  Adding insn 544 to worklist
  Adding insn 542 to worklist
  Adding insn 540 to worklist
  Adding insn 537 to worklist
  Adding insn 534 to worklist
  Adding insn 556 to worklist
  Adding insn 4076 to worklist
  Adding insn 566 to worklist
  Adding insn 576 to worklist
  Adding insn 586 to worklist
  Adding insn 596 to worklist
  Adding insn 606 to worklist
  Adding insn 608 to worklist
  Adding insn 624 to worklist
  Adding insn 620 to worklist
  Adding insn 618 to worklist
  Adding insn 615 to worklist
  Adding insn 612 to worklist
  Adding insn 632 to worklist
  Adding insn 642 to worklist
  Adding insn 652 to worklist
  Adding insn 662 to worklist
  Adding insn 672 to worklist
  Adding insn 695 to worklist
  Adding insn 691 to worklist
  Adding insn 689 to worklist
  Adding insn 687 to worklist
  Adding insn 685 to worklist
  Adding insn 683 to worklist
  Adding insn 681 to worklist
  Adding insn 679 to worklist
  Adding insn 677 to worklist
  Adding insn 675 to worklist
  Adding insn 4731 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 745 to worklist
  Adding insn 749 to worklist
  Adding insn 755 to worklist
  Adding insn 761 to worklist
  Adding insn 768 to worklist
  Adding insn 795 to worklist
  Adding insn 799 to worklist
  Adding insn 805 to worklist
  Adding insn 811 to worklist
  Adding insn 818 to worklist
  Adding insn 845 to worklist
  Adding insn 849 to worklist
  Adding insn 855 to worklist
  Adding insn 860 to worklist
  Adding insn 867 to worklist
  Adding insn 874 to worklist
  Adding insn 901 to worklist
  Adding insn 905 to worklist
  Adding insn 911 to worklist
  Adding insn 919 to worklist
  Adding insn 926 to worklist
  Adding insn 954 to worklist
  Adding insn 958 to worklist
  Adding insn 964 to worklist
  Adding insn 970 to worklist
  Adding insn 977 to worklist
  Adding insn 1004 to worklist
  Adding insn 1008 to worklist
  Adding insn 1014 to worklist
  Adding insn 1020 to worklist
  Adding insn 1027 to worklist
  Adding insn 1054 to worklist
  Adding insn 1058 to worklist
  Adding insn 1066 to worklist
  Adding insn 4404 to worklist
  Adding insn 1062 to worklist
  Adding insn 1061 to worklist
  Adding insn 1060 to worklist
  Adding insn 1074 to worklist
  Adding insn 4402 to worklist
  Adding insn 1070 to worklist
  Adding insn 1069 to worklist
  Adding insn 1068 to worklist
  Adding insn 1078 to worklist
  Adding insn 1118 to worklist
  Adding insn 1111 to worklist
  Adding insn 1109 to worklist
  Adding insn 1106 to worklist
  Adding insn 1105 to worklist
  Adding insn 1104 to worklist
  Adding insn 1102 to worklist
  Adding insn 1100 to worklist
  Adding insn 1098 to worklist
  Adding insn 1097 to worklist
  Adding insn 1095 to worklist
  Adding insn 1093 to worklist
  Adding insn 1091 to worklist
  Adding insn 1123 to worklist
  Adding insn 2660 to worklist
  Adding insn 2663 to worklist
  Adding insn 2668 to worklist
  Adding insn 2675 to worklist
  Adding insn 2681 to worklist
  Adding insn 2679 to worklist
  Adding insn 2678 to worklist
  Adding insn 702 to worklist
  Adding insn 710 to worklist
  Adding insn 717 to worklist
  Adding insn 725 to worklist
  Adding insn 732 to worklist
  Adding insn 736 to worklist
  Adding insn 4743 to worklist
  Adding insn 1035 to worklist
  Adding insn 1042 to worklist
  Adding insn 1046 to worklist
  Adding insn 4745 to worklist
  Adding insn 985 to worklist
  Adding insn 992 to worklist
  Adding insn 996 to worklist
  Adding insn 4747 to worklist
  Adding insn 934 to worklist
  Adding insn 941 to worklist
  Adding insn 945 to worklist
  Adding insn 4749 to worklist
  Adding insn 882 to worklist
  Adding insn 889 to worklist
  Adding insn 893 to worklist
  Adding insn 4751 to worklist
  Adding insn 776 to worklist
  Adding insn 783 to worklist
  Adding insn 787 to worklist
  Adding insn 4753 to worklist
  Adding insn 826 to worklist
  Adding insn 833 to worklist
  Adding insn 837 to worklist
  Adding insn 4755 to worklist
  Adding insn 1135 to worklist
  Adding insn 1140 to worklist
  Adding insn 1147 to worklist
  Adding insn 1154 to worklist
  Adding insn 1180 to worklist
  Adding insn 1184 to worklist
  Adding insn 1196 to worklist
  Adding insn 1201 to worklist
  Adding insn 1208 to worklist
  Adding insn 1215 to worklist
  Adding insn 1241 to worklist
  Adding insn 1245 to worklist
  Adding insn 1257 to worklist
  Adding insn 1262 to worklist
  Adding insn 1269 to worklist
  Adding insn 1276 to worklist
  Adding insn 1302 to worklist
  Adding insn 1306 to worklist
  Adding insn 1315 to worklist
  Adding insn 4405 to worklist
  Adding insn 4760 to worklist
  Adding insn 1407 to worklist
  Adding insn 1411 to worklist
  Adding insn 1423 to worklist
  Adding insn 4407 to worklist
  Adding insn 1331 to worklist
  Adding insn 4202 to worklist
  Adding insn 1336 to worklist
  Adding insn 1342 to worklist
  Adding insn 1346 to worklist
  Adding insn 1352 to worklist
  Adding insn 1356 to worklist
  Adding insn 1362 to worklist
  Adding insn 1366 to worklist
  Adding insn 1373 to worklist
  Adding insn 1380 to worklist
  Adding insn 1388 to worklist
  Adding insn 1395 to worklist
  Adding insn 1399 to worklist
  Adding insn 4764 to worklist
  Adding insn 4210 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 4208 to worklist
  Adding insn 4207 to worklist
  Adding insn 1430 to worklist
  Adding insn 1435 to worklist
  Adding insn 1432 to worklist
  Adding insn 1458 to worklist
  Adding insn 1464 to worklist
  Adding insn 1470 to worklist
  Adding insn 1474 to worklist
  Adding insn 1480 to worklist
  Adding insn 1484 to worklist
  Adding insn 1490 to worklist
  Adding insn 1494 to worklist
  Adding insn 1501 to worklist
  Adding insn 1508 to worklist
  Adding insn 1535 to worklist
  Adding insn 1539 to worklist
  Adding insn 1543 to worklist
  Adding insn 1684 to worklist
  Adding insn 1674 to worklist
  Adding insn 1688 to worklist
  Adding insn 1852 to worklist
  Adding insn 1845 to worklist
  Adding insn 1843 to worklist
  Adding insn 1840 to worklist
  Adding insn 1838 to worklist
  Adding insn 1836 to worklist
  Adding insn 1834 to worklist
  Adding insn 1858 to worklist
  Adding insn 1882 to worklist
  Adding insn 1935 to worklist
  Adding insn 1932 to worklist
  Adding insn 1930 to worklist
  Adding insn 1928 to worklist
  Adding insn 1926 to worklist
  Adding insn 1924 to worklist
  Adding insn 1922 to worklist
  Adding insn 1920 to worklist
  Adding insn 1918 to worklist
  Adding insn 1916 to worklist
  Adding insn 1914 to worklist
  Adding insn 1912 to worklist
  Adding insn 1910 to worklist
  Adding insn 1908 to worklist
  Adding insn 1906 to worklist
  Adding insn 1904 to worklist
  Adding insn 1902 to worklist
  Adding insn 1900 to worklist
  Adding insn 1898 to worklist
  Adding insn 1896 to worklist
  Adding insn 1894 to worklist
  Adding insn 1892 to worklist
  Adding insn 1890 to worklist
  Adding insn 1888 to worklist
  Adding insn 1871 to worklist
  Adding insn 1861 to worklist
  Adding insn 1945 to worklist
  Adding insn 1952 to worklist
  Adding insn 1959 to worklist
  Adding insn 1986 to worklist
  Adding insn 1990 to worklist
  Adding insn 2002 to worklist
  Adding insn 2007 to worklist
  Adding insn 2014 to worklist
  Adding insn 2021 to worklist
  Adding insn 2048 to worklist
  Adding insn 2052 to worklist
  Adding insn 2064 to worklist
  Adding insn 2069 to worklist
  Adding insn 2076 to worklist
  Adding insn 2083 to worklist
  Adding insn 2110 to worklist
  Adding insn 2114 to worklist
  Adding insn 2123 to worklist
  Adding insn 4772 to worklist
  Adding insn 2220 to worklist
  Adding insn 2224 to worklist
  Adding insn 2236 to worklist
  Adding insn 2144 to worklist
  Adding insn 4260 to worklist
  Adding insn 2149 to worklist
  Adding insn 2155 to worklist
  Adding insn 2159 to worklist
  Adding insn 2165 to worklist
  Adding insn 2169 to worklist
  Adding insn 2175 to worklist
  Adding insn 2179 to worklist
  Adding insn 2186 to worklist
  Adding insn 2193 to worklist
  Adding insn 2201 to worklist
  Adding insn 2208 to worklist
  Adding insn 2212 to worklist
  Adding insn 4776 to worklist
  Adding insn 1516 to worklist
  Adding insn 1523 to worklist
  Adding insn 1527 to worklist
  Adding insn 4778 to worklist
  Adding insn 2029 to worklist
  Adding insn 2036 to worklist
  Adding insn 2040 to worklist
  Adding insn 4780 to worklist
  Adding insn 1967 to worklist
  Adding insn 1974 to worklist
  Adding insn 1978 to worklist
  Adding insn 4782 to worklist
  Adding insn 2091 to worklist
  Adding insn 2098 to worklist
  Adding insn 2102 to worklist
  Adding insn 4784 to worklist
  Adding insn 1547 to worklist
  Adding insn 1560 to worklist
  Adding insn 4787 to worklist
  Adding insn 1593 to worklist
  Adding insn 1591 to worklist
  Adding insn 1588 to worklist
  Adding insn 1585 to worklist
  Adding insn 1582 to worklist
  Adding insn 4228 to worklist
  Adding insn 1576 to worklist
  Adding insn 1573 to worklist
  Adding insn 4225 to worklist
  Adding insn 1568 to worklist
  Adding insn 1603 to worklist
  Adding insn 1608 to worklist
  Adding insn 1614 to worklist
  Adding insn 1619 to worklist
  Adding insn 1625 to worklist
  Adding insn 1631 to worklist
  Adding insn 1638 to worklist
  Adding insn 1665 to worklist
  Adding insn 1669 to worklist
  Adding insn 4790 to worklist
  Adding insn 4792 to worklist
  Adding insn 1563 to worklist
  Adding insn 4411 to worklist
  Adding insn 1646 to worklist
  Adding insn 1653 to worklist
  Adding insn 1657 to worklist
  Adding insn 4794 to worklist
  Adding insn 1284 to worklist
  Adding insn 1291 to worklist
  Adding insn 1295 to worklist
  Adding insn 4797 to worklist
  Adding insn 1223 to worklist
  Adding insn 1230 to worklist
  Adding insn 1234 to worklist
  Adding insn 4800 to worklist
  Adding insn 1162 to worklist
  Adding insn 1169 to worklist
  Adding insn 1173 to worklist
  Adding insn 4803 to worklist
  Adding insn 2188 to worklist
  Adding insn 2251 to worklist
  Adding insn 2299 to worklist
  Adding insn 2297 to worklist
  Adding insn 2296 to worklist
  Adding insn 2295 to worklist
  Adding insn 2294 to worklist
  Adding insn 2293 to worklist
  Adding insn 4806 to worklist
  Adding insn 2388 to worklist
  Adding insn 2451 to worklist
  Adding insn 2508 to worklist
  Adding insn 2565 to worklist
  Adding insn 2622 to worklist
  Adding insn 2325 to worklist
  Adding insn 2339 to worklist
  Adding insn 2342 to worklist
  Adding insn 4425 to worklist
  Adding insn 2370 to worklist
  Adding insn 2368 to worklist
  Adding insn 2365 to worklist
  Adding insn 2357 to worklist
  Adding insn 2354 to worklist
  Adding insn 2346 to worklist
  Adding insn 4427 to worklist
  Adding insn 2373 to worklist
  Adding insn 4726 to worklist
  Adding insn 2382 to worklist
  Adding insn 2304 to worklist
  Adding insn 2632 to worklist
  Adding insn 2637 to worklist
  Adding insn 2641 to worklist
  Adding insn 2647 to worklist
  Adding insn 2652 to worklist
  Adding insn 2656 to worklist
  Adding insn 4813 to worklist
  Adding insn 2257 to worklist
  Adding insn 2262 to worklist
  Adding insn 2268 to worklist
  Adding insn 2273 to worklist
  Adding insn 2279 to worklist
  Adding insn 2282 to worklist
  Adding insn 4815 to worklist
  Adding insn 2288 to worklist
  Adding insn 2287 to worklist
  Adding insn 2286 to worklist
  Adding insn 2285 to worklist
  Adding insn 2284 to worklist
  Adding insn 2402 to worklist
  Adding insn 2433 to worklist
  Adding insn 2431 to worklist
  Adding insn 2428 to worklist
  Adding insn 2420 to worklist
  Adding insn 2417 to worklist
  Adding insn 2412 to worklist
  Adding insn 2436 to worklist
  Adding insn 4818 to worklist
  Adding insn 2445 to worklist
  Adding insn 4820 to worklist
  Adding insn 2405 to worklist
  Adding insn 4429 to worklist
  Adding insn 4431 to worklist
  Adding insn 2490 to worklist
  Adding insn 2488 to worklist
  Adding insn 2485 to worklist
  Adding insn 2477 to worklist
  Adding insn 2474 to worklist
  Adding insn 2466 to worklist
  Adding insn 2463 to worklist
  Adding insn 2493 to worklist
  Adding insn 4822 to worklist
  Adding insn 2502 to worklist
  Adding insn 2547 to worklist
  Adding insn 2545 to worklist
  Adding insn 2542 to worklist
  Adding insn 2534 to worklist
  Adding insn 2531 to worklist
  Adding insn 2523 to worklist
  Adding insn 2520 to worklist
  Adding insn 2550 to worklist
  Adding insn 4824 to worklist
  Adding insn 2559 to worklist
  Adding insn 4826 to worklist
  Adding insn 2442 to worklist
  Adding insn 1694 to worklist
  Adding insn 1700 to worklist
  Adding insn 1704 to worklist
  Adding insn 1713 to worklist
  Adding insn 4829 to worklist
  Adding insn 1810 to worklist
  Adding insn 1814 to worklist
  Adding insn 1826 to worklist
  Adding insn 1734 to worklist
  Adding insn 4241 to worklist
  Adding insn 1739 to worklist
  Adding insn 1745 to worklist
  Adding insn 1749 to worklist
  Adding insn 1755 to worklist
  Adding insn 1759 to worklist
  Adding insn 1765 to worklist
  Adding insn 1769 to worklist
  Adding insn 1776 to worklist
  Adding insn 1783 to worklist
  Adding insn 1791 to worklist
  Adding insn 1798 to worklist
  Adding insn 1802 to worklist
  Adding insn 4833 to worklist
  Adding insn 4835 to worklist
  Adding insn 2379 to worklist
  Adding insn 2604 to worklist
  Adding insn 2602 to worklist
  Adding insn 2599 to worklist
  Adding insn 2591 to worklist
  Adding insn 2588 to worklist
  Adding insn 2580 to worklist
  Adding insn 2577 to worklist
  Adding insn 2607 to worklist
  Adding insn 4837 to worklist
  Adding insn 2616 to worklist
  Adding insn 4839 to worklist
  Adding insn 2499 to worklist
  Adding insn 4841 to worklist
  Adding insn 2556 to worklist
  Adding insn 4843 to worklist
  Adding insn 2613 to worklist
  Adding insn 1778 to worklist
  Adding insn 1716 to worklist
  Adding insn 4845 to worklist
  Adding insn 4531 to worklist
  Adding insn 4530 to worklist
  Adding insn 3279 to worklist
  Adding insn 3282 to worklist
  Adding insn 3291 to worklist
  Adding insn 3294 to worklist
  Adding insn 3303 to worklist
  Adding insn 3312 to worklist
  Adding insn 3315 to worklist
  Adding insn 3320 to worklist
  Adding insn 4847 to worklist
  Adding insn 3270 to worklist
  Adding insn 4849 to worklist
  Adding insn 712 to worklist
  Adding insn 763 to worklist
  Adding insn 813 to worklist
  Adding insn 869 to worklist
  Adding insn 921 to worklist
  Adding insn 972 to worklist
  Adding insn 4851 to worklist
  Adding insn 147 to worklist
  Adding insn 4853 to worklist
  Adding insn 3252 to worklist
  Adding insn 122 to worklist
  Adding insn 165 to worklist
  Adding insn 1149 to worklist
  Adding insn 1210 to worklist
  Adding insn 1271 to worklist
  Adding insn 1375 to worklist
  Adding insn 1022 to worklist
  Adding insn 4855 to worklist
  Adding insn 2078 to worklist
  Adding insn 1633 to worklist
  Adding insn 2864 to worklist
  Adding insn 4317 to worklist
  Adding insn 4314 to worklist
  Adding insn 4311 to worklist
  Adding insn 4308 to worklist
  Adding insn 4305 to worklist
  Adding insn 4483 to worklist
  Adding insn 4301 to worklist
  Adding insn 4486 to worklist
  Adding insn 4297 to worklist
  Adding insn 4489 to worklist
  Adding insn 4293 to worklist
  Adding insn 4492 to worklist
  Adding insn 4289 to worklist
  Adding insn 4495 to worklist
  Adding insn 2868 to worklist
  Adding insn 2874 to worklist
  Adding insn 2879 to worklist
  Adding insn 2885 to worklist
  Adding insn 2889 to worklist
  Adding insn 2895 to worklist
  Adding insn 2899 to worklist
  Adding insn 2903 to worklist
  Adding insn 2909 to worklist
  Adding insn 2914 to worklist
  Adding insn 2920 to worklist
  Adding insn 2924 to worklist
  Adding insn 2930 to worklist
  Adding insn 2934 to worklist
  Adding insn 2938 to worklist
  Adding insn 2944 to worklist
  Adding insn 2949 to worklist
  Adding insn 2955 to worklist
  Adding insn 2959 to worklist
  Adding insn 2965 to worklist
  Adding insn 2969 to worklist
  Adding insn 2973 to worklist
  Adding insn 2979 to worklist
  Adding insn 2984 to worklist
  Adding insn 2990 to worklist
  Adding insn 2994 to worklist
  Adding insn 3000 to worklist
  Adding insn 3004 to worklist
  Adding insn 3008 to worklist
  Adding insn 3014 to worklist
  Adding insn 3019 to worklist
  Adding insn 3025 to worklist
  Adding insn 3029 to worklist
  Adding insn 3035 to worklist
  Adding insn 3039 to worklist
  Adding insn 3043 to worklist
  Adding insn 3049 to worklist
  Adding insn 3054 to worklist
  Adding insn 3060 to worklist
  Adding insn 3064 to worklist
  Adding insn 3070 to worklist
  Adding insn 3074 to worklist
  Adding insn 3078 to worklist
  Adding insn 3084 to worklist
  Adding insn 3089 to worklist
  Adding insn 3095 to worklist
  Adding insn 3099 to worklist
  Adding insn 3105 to worklist
  Adding insn 3109 to worklist
  Adding insn 3113 to worklist
  Adding insn 3119 to worklist
  Adding insn 3124 to worklist
  Adding insn 3130 to worklist
  Adding insn 3134 to worklist
  Adding insn 3140 to worklist
  Adding insn 3144 to worklist
  Adding insn 3148 to worklist
  Adding insn 3154 to worklist
  Adding insn 3159 to worklist
  Adding insn 3165 to worklist
  Adding insn 3169 to worklist
  Adding insn 3175 to worklist
  Adding insn 3179 to worklist
  Adding insn 3183 to worklist
  Adding insn 3189 to worklist
  Adding insn 3197 to worklist
  Adding insn 3205 to worklist
  Adding insn 3211 to worklist
  Adding insn 3220 to worklist
  Adding insn 3215 to worklist
  Adding insn 3223 to worklist
  Adding insn 4565 to worklist
  Adding insn 3324 to worklist
  Adding insn 1503 to worklist
  Adding insn 1954 to worklist
  Adding insn 2016 to worklist
  Adding insn 3235 to worklist
  Adding insn 3238 to worklist
  Adding insn 3249 to worklist
  Adding insn 4858 to worklist
  Adding insn 4860 to worklist
  Adding insn 3262 to worklist
  Adding insn 4862 to worklist
Finished finding needed instructions:
processing block 386 lr out =  7 [sp]
  Adding insn 3319 to worklist
processing block 385 lr out =  3 [bx] 6 [bp] 7 [sp]
processing block 384 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 3311 to worklist
  Adding insn 3310 to worklist
  Adding insn 4328 to worklist
  Adding insn 3308 to worklist
processing block 397 lr out =  3 [bx] 6 [bp] 7 [sp]
processing block 396 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 4103 to worklist
  Adding insn 143 to worklist
  Adding insn 3610 to worklist
processing block 398 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 121 to worklist
processing block 486 lr out =  3 [bx] 6 [bp] 7 [sp]
processing block 485 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 3248 to worklist
  Adding insn 3247 to worklist
  Adding insn 4326 to worklist
  Adding insn 3245 to worklist
processing block 488 lr out =  3 [bx] 6 [bp] 7 [sp]
  Adding insn 3576 to worklist
processing block 399 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 164 to worklist
processing block 484 lr out =  3 [bx] 6 [bp] 7 [sp]
processing block 483 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 3234 to worklist
  Adding insn 3233 to worklist
  Adding insn 4324 to worklist
  Adding insn 3231 to worklist
  Adding insn 3582 to worklist
processing block 395 lr out =  3 [bx] 6 [bp] 7 [sp]
  Adding insn 3570 to worklist
processing block 487 lr out =  3 [bx] 6 [bp] 7 [sp]
  Adding insn 3261 to worklist
  Adding insn 3586 to worklist
processing block 387 lr out =  3 [bx] 6 [bp] 7 [sp]
  Adding insn 3269 to worklist
  Adding insn 3590 to worklist
processing block 383 lr out =  3 [bx] 6 [bp] 7 [sp]
  Adding insn 3302 to worklist
processing block 388 lr out =  3 [bx] 6 [bp] 7 [sp]
  Adding insn 3604 to worklist
processing block 389 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 390 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 391 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 392 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 393 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 394 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 404 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 382 lr out =  3 [bx] 6 [bp] 7 [sp]
processing block 381 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 3290 to worklist
  Adding insn 3289 to worklist
processing block 405 lr out =  3 [bx] 6 [bp] 7 [sp]
  Adding insn 3594 to worklist
processing block 380 lr out =  3 [bx] 6 [bp] 7 [sp]
processing block 379 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 3278 to worklist
  Adding insn 3277 to worklist
  Adding insn 3600 to worklist
processing block 479 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 4564 to worklist
  Adding insn 4563 to worklist
  Adding insn 4562 to worklist
  Adding insn 4561 to worklist
  Adding insn 4560 to worklist
  Adding insn 4559 to worklist
  Adding insn 4558 to worklist
  Adding insn 4695 to worklist
processing block 478 lr out =  6 [bp] 7 [sp] 20 [frame]
processing block 477 lr out =  5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 3219 to worklist
  Adding insn 3218 to worklist
  Adding insn 4322 to worklist
  Adding insn 3216 to worklist
  Adding insn 3214 to worklist
processing block 476 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3210 to worklist
  Adding insn 3209 to worklist
  Adding insn 3207 to worklist
processing block 475 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 4698 to worklist
  Adding insn 4697 to worklist
  Adding insn 4696 to worklist
  Adding insn 3199 to worklist
  Adding insn 4436 to worklist
processing block 474 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 4701 to worklist
  Adding insn 4700 to worklist
  Adding insn 4699 to worklist
  Adding insn 3191 to worklist
  Adding insn 4437 to worklist
processing block 473 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3188 to worklist
  Adding insn 4702 to worklist
  Adding insn 3185 to worklist
  Adding insn 4439 to worklist
processing block 472 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3182 to worklist
processing block 471 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3178 to worklist
  Adding insn 3177 to worklist
processing block 470 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3174 to worklist
  Adding insn 3173 to worklist
  Adding insn 3172 to worklist
  Adding insn 3170 to worklist
processing block 469 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3168 to worklist
  Adding insn 3167 to worklist
processing block 468 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3164 to worklist
  Adding insn 3163 to worklist
  Adding insn 3162 to worklist
  Adding insn 3160 to worklist
processing block 467 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3158 to worklist
  Adding insn 3157 to worklist
processing block 466 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3153 to worklist
  Adding insn 3152 to worklist
  Adding insn 3151 to worklist
  Adding insn 3149 to worklist
processing block 465 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3147 to worklist
processing block 464 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3143 to worklist
  Adding insn 3142 to worklist
processing block 463 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3139 to worklist
  Adding insn 3138 to worklist
  Adding insn 3137 to worklist
  Adding insn 3135 to worklist
processing block 462 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3133 to worklist
  Adding insn 3132 to worklist
processing block 461 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3129 to worklist
  Adding insn 3128 to worklist
  Adding insn 3127 to worklist
  Adding insn 3125 to worklist
processing block 460 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3123 to worklist
  Adding insn 3122 to worklist
processing block 459 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3118 to worklist
  Adding insn 3117 to worklist
  Adding insn 3116 to worklist
  Adding insn 3114 to worklist
processing block 458 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3112 to worklist
processing block 457 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3108 to worklist
  Adding insn 3107 to worklist
processing block 456 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3104 to worklist
  Adding insn 3103 to worklist
  Adding insn 3102 to worklist
  Adding insn 3100 to worklist
processing block 455 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3098 to worklist
  Adding insn 3097 to worklist
processing block 454 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3094 to worklist
  Adding insn 3093 to worklist
  Adding insn 3092 to worklist
  Adding insn 3090 to worklist
processing block 453 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3088 to worklist
  Adding insn 3087 to worklist
processing block 452 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3083 to worklist
  Adding insn 3082 to worklist
  Adding insn 3081 to worklist
  Adding insn 3079 to worklist
processing block 451 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3077 to worklist
processing block 450 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3073 to worklist
  Adding insn 3072 to worklist
processing block 449 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3069 to worklist
  Adding insn 3068 to worklist
  Adding insn 3067 to worklist
  Adding insn 3065 to worklist
processing block 448 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3063 to worklist
  Adding insn 3062 to worklist
processing block 447 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3059 to worklist
  Adding insn 3058 to worklist
  Adding insn 3057 to worklist
  Adding insn 3055 to worklist
processing block 446 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3053 to worklist
  Adding insn 3052 to worklist
processing block 445 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3048 to worklist
  Adding insn 3047 to worklist
  Adding insn 3046 to worklist
  Adding insn 3044 to worklist
processing block 444 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3042 to worklist
processing block 443 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3038 to worklist
  Adding insn 3037 to worklist
processing block 442 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3034 to worklist
  Adding insn 3033 to worklist
  Adding insn 3032 to worklist
  Adding insn 3030 to worklist
processing block 441 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3028 to worklist
  Adding insn 3027 to worklist
processing block 440 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3024 to worklist
  Adding insn 3023 to worklist
  Adding insn 3022 to worklist
  Adding insn 3020 to worklist
processing block 439 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3018 to worklist
  Adding insn 3017 to worklist
processing block 438 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3013 to worklist
  Adding insn 3012 to worklist
  Adding insn 3011 to worklist
  Adding insn 3009 to worklist
processing block 437 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3007 to worklist
processing block 436 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 3003 to worklist
  Adding insn 3002 to worklist
processing block 435 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2999 to worklist
  Adding insn 2998 to worklist
  Adding insn 2997 to worklist
  Adding insn 2995 to worklist
processing block 434 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2993 to worklist
  Adding insn 2992 to worklist
processing block 433 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2989 to worklist
  Adding insn 2988 to worklist
  Adding insn 2987 to worklist
  Adding insn 2985 to worklist
processing block 432 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2983 to worklist
  Adding insn 2982 to worklist
processing block 431 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2978 to worklist
  Adding insn 2977 to worklist
  Adding insn 2976 to worklist
  Adding insn 2974 to worklist
processing block 430 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2972 to worklist
processing block 429 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2968 to worklist
  Adding insn 2967 to worklist
processing block 428 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2964 to worklist
  Adding insn 2963 to worklist
  Adding insn 2962 to worklist
  Adding insn 2960 to worklist
processing block 427 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2958 to worklist
  Adding insn 2957 to worklist
processing block 426 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2954 to worklist
  Adding insn 2953 to worklist
  Adding insn 2952 to worklist
  Adding insn 2950 to worklist
processing block 425 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2948 to worklist
  Adding insn 2947 to worklist
processing block 424 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 2943 to worklist
  Adding insn 2942 to worklist
  Adding insn 2941 to worklist
  Adding insn 2939 to worklist
processing block 423 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 2937 to worklist
processing block 422 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 2933 to worklist
  Adding insn 2932 to worklist
processing block 421 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 2929 to worklist
  Adding insn 2928 to worklist
  Adding insn 2927 to worklist
  Adding insn 2925 to worklist
processing block 420 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 2923 to worklist
  Adding insn 2922 to worklist
processing block 419 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 2919 to worklist
  Adding insn 2918 to worklist
  Adding insn 2917 to worklist
  Adding insn 2915 to worklist
processing block 418 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 2913 to worklist
  Adding insn 2912 to worklist
processing block 417 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2908 to worklist
  Adding insn 2907 to worklist
  Adding insn 2906 to worklist
  Adding insn 2904 to worklist
processing block 416 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2902 to worklist
processing block 415 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2898 to worklist
  Adding insn 2897 to worklist
processing block 414 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2894 to worklist
  Adding insn 2893 to worklist
  Adding insn 2892 to worklist
  Adding insn 2890 to worklist
processing block 413 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2888 to worklist
  Adding insn 2887 to worklist
processing block 412 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2884 to worklist
  Adding insn 2883 to worklist
  Adding insn 2882 to worklist
  Adding insn 2880 to worklist
processing block 411 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2878 to worklist
  Adding insn 2877 to worklist
processing block 410 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2873 to worklist
  Adding insn 2872 to worklist
  Adding insn 2871 to worklist
  Adding insn 2869 to worklist
processing block 409 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2867 to worklist
processing block 408 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2863 to worklist
  Adding insn 2861 to worklist
  Adding insn 2860 to worklist
  Adding insn 2859 to worklist
  Adding insn 4316 to worklist
  Adding insn 4514 to worklist
  Adding insn 4513 to worklist
  Adding insn 2845 to worklist
  Adding insn 4315 to worklist
  Adding insn 2842 to worklist
  Adding insn 4313 to worklist
  Adding insn 4512 to worklist
  Adding insn 4511 to worklist
  Adding insn 2828 to worklist
  Adding insn 4312 to worklist
  Adding insn 2825 to worklist
  Adding insn 4310 to worklist
  Adding insn 4510 to worklist
  Adding insn 4509 to worklist
  Adding insn 2811 to worklist
  Adding insn 4309 to worklist
  Adding insn 2808 to worklist
  Adding insn 4508 to worklist
  Adding insn 4507 to worklist
  Adding insn 2794 to worklist
  Adding insn 4306 to worklist
  Adding insn 2791 to worklist
  Adding insn 4304 to worklist
  Adding insn 4506 to worklist
  Adding insn 4505 to worklist
  Adding insn 2777 to worklist
  Adding insn 4302 to worklist
  Adding insn 2774 to worklist
  Adding insn 4300 to worklist
  Adding insn 4504 to worklist
  Adding insn 4503 to worklist
  Adding insn 2760 to worklist
  Adding insn 4298 to worklist
  Adding insn 2757 to worklist
  Adding insn 4296 to worklist
  Adding insn 4502 to worklist
  Adding insn 4501 to worklist
  Adding insn 2743 to worklist
  Adding insn 4294 to worklist
  Adding insn 2740 to worklist
  Adding insn 4292 to worklist
  Adding insn 4500 to worklist
  Adding insn 4499 to worklist
  Adding insn 2726 to worklist
  Adding insn 4290 to worklist
  Adding insn 2723 to worklist
  Adding insn 2722 to worklist
  Adding insn 4498 to worklist
  Adding insn 4497 to worklist
  Adding insn 2709 to worklist
  Adding insn 4286 to worklist
processing block 117 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2680 to worklist
  Adding insn 4462 to worklist
processing block 116 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 115 lr out =  5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2667 to worklist
  Adding insn 2666 to worklist
processing block 114 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 113 lr out =  5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2659 to worklist
  Adding insn 2658 to worklist
processing block 400 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 401 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 402 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 403 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 480 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 481 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 482 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 406 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 303 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 240 lr out =  0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2235 to worklist
  Adding insn 2234 to worklist
  Adding insn 2232 to worklist
  Adding insn 2231 to worklist
  Adding insn 4261 to worklist
  Adding insn 2229 to worklist
  Adding insn 2228 to worklist
  Adding insn 4545 to worklist
  Adding insn 4865 to worklist
processing block 239 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2223 to worklist
processing block 238 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2219 to worklist
processing block 237 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 2195 to worklist
processing block 254 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 2215 to worklist
processing block 253 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 2211 to worklist
processing block 252 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 2207 to worklist
  Adding insn 87 to worklist
  Adding insn 2204 to worklist
  Adding insn 2203 to worklist
processing block 251 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 2200 to worklist
processing block 250 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 2192 to worklist
processing block 249 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 2185 to worklist
  Adding insn 2184 to worklist
  Adding insn 2183 to worklist
  Adding insn 2182 to worklist
  Adding insn 2180 to worklist
processing block 248 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2178 to worklist
  Adding insn 2177 to worklist
processing block 247 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 2174 to worklist
  Adding insn 2173 to worklist
  Adding insn 2172 to worklist
  Adding insn 2170 to worklist
processing block 246 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 2168 to worklist
  Adding insn 2167 to worklist
processing block 245 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 2164 to worklist
  Adding insn 2163 to worklist
  Adding insn 2162 to worklist
  Adding insn 2160 to worklist
processing block 244 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 2158 to worklist
  Adding insn 2157 to worklist
processing block 243 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2154 to worklist
  Adding insn 2153 to worklist
  Adding insn 2152 to worklist
  Adding insn 2150 to worklist
processing block 242 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2148 to worklist
  Adding insn 2146 to worklist
processing block 241 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2143 to worklist
  Adding insn 2141 to worklist
  Adding insn 2140 to worklist
  Adding insn 2139 to worklist
  Adding insn 2138 to worklist
  Adding insn 2137 to worklist
  Adding insn 2136 to worklist
  Adding insn 2134 to worklist
  Adding insn 2133 to worklist
processing block 236 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 4705 to worklist
  Adding insn 4704 to worklist
processing block 235 lr out =  0 [ax] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2122 to worklist
  Adding insn 2121 to worklist
  Adding insn 2119 to worklist
  Adding insn 2118 to worklist
  Adding insn 4258 to worklist
  Adding insn 2117 to worklist
  Adding insn 2116 to worklist
processing block 234 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2113 to worklist
processing block 233 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2109 to worklist
processing block 232 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2085 to worklist
processing block 270 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2105 to worklist
processing block 269 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2101 to worklist
processing block 268 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2097 to worklist
  Adding insn 84 to worklist
  Adding insn 2094 to worklist
  Adding insn 2093 to worklist
processing block 267 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2090 to worklist
processing block 231 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2082 to worklist
processing block 230 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2075 to worklist
  Adding insn 2074 to worklist
  Adding insn 2073 to worklist
  Adding insn 2072 to worklist
  Adding insn 2070 to worklist
processing block 229 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2068 to worklist
  Adding insn 2066 to worklist
processing block 228 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2063 to worklist
  Adding insn 2061 to worklist
  Adding insn 2060 to worklist
  Adding insn 2058 to worklist
  Adding insn 2056 to worklist
  Adding insn 2055 to worklist
  Adding insn 2054 to worklist
processing block 227 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2051 to worklist
processing block 226 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2047 to worklist
processing block 225 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2023 to worklist
processing block 262 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2043 to worklist
processing block 261 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2039 to worklist
processing block 260 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2035 to worklist
  Adding insn 83 to worklist
  Adding insn 2032 to worklist
  Adding insn 2031 to worklist
processing block 259 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2028 to worklist
processing block 224 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2020 to worklist
processing block 223 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 2013 to worklist
  Adding insn 2012 to worklist
  Adding insn 2011 to worklist
  Adding insn 2010 to worklist
  Adding insn 2008 to worklist
processing block 222 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2006 to worklist
  Adding insn 2004 to worklist
processing block 221 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 2001 to worklist
  Adding insn 1999 to worklist
  Adding insn 1998 to worklist
  Adding insn 1996 to worklist
  Adding insn 1994 to worklist
  Adding insn 1993 to worklist
  Adding insn 1992 to worklist
processing block 220 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 1989 to worklist
processing block 219 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 1985 to worklist
processing block 218 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 1961 to worklist
processing block 266 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 1981 to worklist
processing block 265 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 1977 to worklist
processing block 264 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 1973 to worklist
  Adding insn 82 to worklist
  Adding insn 1970 to worklist
  Adding insn 1969 to worklist
processing block 263 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 1966 to worklist
processing block 217 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 1958 to worklist
processing block 216 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 1951 to worklist
  Adding insn 1950 to worklist
  Adding insn 1949 to worklist
  Adding insn 1948 to worklist
  Adding insn 1946 to worklist
processing block 215 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 1944 to worklist
  Adding insn 1942 to worklist
processing block 214 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 1870 to worklist
  Adding insn 1868 to worklist
  Adding insn 1867 to worklist
  Adding insn 1865 to worklist
  Adding insn 4251 to worklist
  Adding insn 1863 to worklist
  Adding insn 1862 to worklist
  Adding insn 1860 to worklist
processing block 213 lr out =  0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 1934 to worklist
  Adding insn 4706 to worklist
  Adding insn 1931 to worklist
  Adding insn 1929 to worklist
  Adding insn 1927 to worklist
  Adding insn 1925 to worklist
  Adding insn 1923 to worklist
  Adding insn 1921 to worklist
  Adding insn 1919 to worklist
  Adding insn 1917 to worklist
  Adding insn 1915 to worklist
  Adding insn 1913 to worklist
  Adding insn 1911 to worklist
  Adding insn 1909 to worklist
  Adding insn 1907 to worklist
  Adding insn 1905 to worklist
  Adding insn 1903 to worklist
  Adding insn 1901 to worklist
  Adding insn 1899 to worklist
  Adding insn 1897 to worklist
  Adding insn 1895 to worklist
  Adding insn 1893 to worklist
  Adding insn 1891 to worklist
  Adding insn 1889 to worklist
  Adding insn 1887 to worklist
processing block 212 lr out =  0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 1884 to worklist
  Adding insn 4422 to worklist
processing block 211 lr out =  2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 1881 to worklist
  Adding insn 1880 to worklist
  Adding insn 1878 to worklist
  Adding insn 4255 to worklist
  Adding insn 1876 to worklist
  Adding insn 4252 to worklist
processing block 210 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 1857 to worklist
  Adding insn 1855 to worklist
  Adding insn 4708 to worklist
  Adding insn 4707 to worklist
processing block 209 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 1850 to worklist
  Adding insn 1849 to worklist
  Adding insn 1848 to worklist
  Adding insn 1847 to worklist
  Adding insn 1846 to worklist
  Adding insn 4248 to worklist
  Adding insn 1839 to worklist
  Adding insn 1837 to worklist
  Adding insn 1835 to worklist
  Adding insn 1833 to worklist
  Adding insn 4421 to worklist
processing block 376 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 377 lr out =  7 [sp]
  Adding insn 1715 to worklist
processing block 354 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 1825 to worklist
  Adding insn 1824 to worklist
  Adding insn 1822 to worklist
  Adding insn 1821 to worklist
  Adding insn 4242 to worklist
  Adding insn 1818 to worklist
  Adding insn 4544 to worklist
  Adding insn 4864 to worklist
processing block 353 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 1813 to worklist
processing block 352 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 1809 to worklist
processing block 351 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1785 to worklist
processing block 368 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1805 to worklist
processing block 367 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1801 to worklist
processing block 366 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1797 to worklist
  Adding insn 80 to worklist
  Adding insn 1794 to worklist
  Adding insn 1793 to worklist
processing block 365 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1790 to worklist
processing block 364 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1782 to worklist
processing block 363 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1775 to worklist
  Adding insn 1774 to worklist
  Adding insn 1773 to worklist
  Adding insn 1772 to worklist
  Adding insn 1770 to worklist
processing block 362 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 1768 to worklist
  Adding insn 1767 to worklist
processing block 361 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1764 to worklist
  Adding insn 1763 to worklist
  Adding insn 1762 to worklist
  Adding insn 1760 to worklist
processing block 360 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1758 to worklist
  Adding insn 1757 to worklist
processing block 359 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1754 to worklist
  Adding insn 1753 to worklist
  Adding insn 1752 to worklist
  Adding insn 1750 to worklist
processing block 358 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1748 to worklist
  Adding insn 1747 to worklist
processing block 357 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1744 to worklist
  Adding insn 1743 to worklist
  Adding insn 1742 to worklist
  Adding insn 1740 to worklist
processing block 356 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1738 to worklist
  Adding insn 1736 to worklist
processing block 355 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1733 to worklist
  Adding insn 1731 to worklist
  Adding insn 1730 to worklist
  Adding insn 1729 to worklist
  Adding insn 1728 to worklist
  Adding insn 1727 to worklist
  Adding insn 1726 to worklist
  Adding insn 1724 to worklist
  Adding insn 1723 to worklist
processing block 350 lr out =  6 [bp] 7 [sp]
processing block 349 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 1712 to worklist
  Adding insn 4710 to worklist
  Adding insn 4709 to worklist
  Adding insn 1711 to worklist
  Adding insn 1710 to worklist
  Adding insn 1709 to worklist
  Adding insn 1708 to worklist
  Adding insn 4239 to worklist
  Adding insn 1706 to worklist
processing block 348 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1703 to worklist
processing block 347 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1699 to worklist
  Adding insn 1696 to worklist
processing block 346 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1693 to worklist
  Adding insn 1691 to worklist
  Adding insn 1690 to worklist
processing block 208 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 1687 to worklist
processing block 207 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 1683 to worklist
  Adding insn 1681 to worklist
  Adding insn 1680 to worklist
  Adding insn 1679 to worklist
  Adding insn 1678 to worklist
  Adding insn 1677 to worklist
  Adding insn 1676 to worklist
  Adding insn 4237 to worklist
  Adding insn 1675 to worklist
  Adding insn 4235 to worklist
processing block 274 lr out =  5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 1594 to worklist
  Adding insn 1592 to worklist
  Adding insn 1589 to worklist
  Adding insn 4543 to worklist
  Adding insn 1586 to worklist
  Adding insn 1581 to worklist
  Adding insn 1580 to worklist
  Adding insn 1579 to worklist
  Adding insn 1577 to worklist
  Adding insn 1572 to worklist
  Adding insn 1571 to worklist
  Adding insn 1570 to worklist
  Adding insn 4417 to worklist
processing block 286 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 4412 to worklist
  Adding insn 1564 to worklist
processing block 273 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 76 to worklist
processing block 272 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1559 to worklist
  Adding insn 4518 to worklist
  Adding insn 1557 to worklist
  Adding insn 1556 to worklist
  Adding insn 1555 to worklist
  Adding insn 1554 to worklist
  Adding insn 1553 to worklist
  Adding insn 1552 to worklist
  Adding insn 1551 to worklist
  Adding insn 1550 to worklist
  Adding insn 1549 to worklist
processing block 407 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 285 lr out =  5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 1671 to worklist
  Adding insn 4232 to worklist
processing block 284 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 1668 to worklist
processing block 283 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 1664 to worklist
processing block 282 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1640 to worklist
processing block 290 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1660 to worklist
processing block 289 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1656 to worklist
processing block 288 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1652 to worklist
  Adding insn 77 to worklist
  Adding insn 1649 to worklist
  Adding insn 1648 to worklist
processing block 287 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1645 to worklist
processing block 281 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1637 to worklist
processing block 280 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1630 to worklist
  Adding insn 1629 to worklist
  Adding insn 1628 to worklist
  Adding insn 1627 to worklist
processing block 279 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1624 to worklist
  Adding insn 1623 to worklist
  Adding insn 1622 to worklist
  Adding insn 1620 to worklist
processing block 278 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 1618 to worklist
  Adding insn 1616 to worklist
processing block 277 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1613 to worklist
  Adding insn 1612 to worklist
  Adding insn 1611 to worklist
  Adding insn 1609 to worklist
processing block 276 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1607 to worklist
  Adding insn 1605 to worklist
processing block 275 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1602 to worklist
  Adding insn 1600 to worklist
  Adding insn 1599 to worklist
processing block 271 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1546 to worklist
  Adding insn 1545 to worklist
processing block 206 lr out =  0 [ax] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 1542 to worklist
  Adding insn 1541 to worklist
  Adding insn 4219 to worklist
processing block 205 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 1538 to worklist
processing block 204 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 1534 to worklist
processing block 203 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1510 to worklist
processing block 258 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1530 to worklist
processing block 257 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1526 to worklist
processing block 256 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1522 to worklist
  Adding insn 75 to worklist
  Adding insn 1519 to worklist
  Adding insn 1518 to worklist
processing block 255 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1515 to worklist
processing block 202 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1507 to worklist
processing block 201 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 1500 to worklist
  Adding insn 1499 to worklist
  Adding insn 1498 to worklist
  Adding insn 1497 to worklist
  Adding insn 1495 to worklist
processing block 200 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 1493 to worklist
  Adding insn 1492 to worklist
processing block 199 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 1489 to worklist
  Adding insn 1488 to worklist
  Adding insn 1487 to worklist
  Adding insn 1485 to worklist
processing block 198 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 1483 to worklist
  Adding insn 1482 to worklist
processing block 197 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1479 to worklist
  Adding insn 1478 to worklist
  Adding insn 1477 to worklist
  Adding insn 1475 to worklist
processing block 196 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1473 to worklist
  Adding insn 1472 to worklist
processing block 195 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1469 to worklist
  Adding insn 1468 to worklist
  Adding insn 1467 to worklist
  Adding insn 1465 to worklist
processing block 194 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1463 to worklist
  Adding insn 1460 to worklist
processing block 193 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1457 to worklist
  Adding insn 1455 to worklist
  Adding insn 1454 to worklist
  Adding insn 1452 to worklist
  Adding insn 1450 to worklist
  Adding insn 1449 to worklist
  Adding insn 1448 to worklist
  Adding insn 1447 to worklist
  Adding insn 3863 to worklist
  Adding insn 4216 to worklist
  Adding insn 4031 to worklist
  Adding insn 3859 to worklist
  Adding insn 4215 to worklist
processing block 192 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 44 [r15]
  Adding insn 1434 to worklist
processing block 325 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 324 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2655 to worklist
processing block 323 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2651 to worklist
  Adding insn 2649 to worklist
processing block 322 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 2646 to worklist
  Adding insn 2645 to worklist
  Adding insn 2644 to worklist
  Adding insn 2642 to worklist
processing block 321 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 2640 to worklist
processing block 320 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 2636 to worklist
  Adding insn 2634 to worklist
  Adding insn 4278 to worklist
processing block 319 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2629 to worklist
  Adding insn 4433 to worklist
processing block 318 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2301 to worklist
  Adding insn 4424 to worklist
processing block 317 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 4725 to worklist
  Adding insn 4724 to worklist
processing block 316 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 369 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 315 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2369 to worklist
  Adding insn 2372 to worklist
  Adding insn 2363 to worklist
  Adding insn 2362 to worklist
  Adding insn 2360 to worklist
  Adding insn 2358 to worklist
  Adding insn 4428 to worklist
  Adding insn 2352 to worklist
  Adding insn 2351 to worklist
  Adding insn 2349 to worklist
processing block 314 lr out =  1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 4426 to worklist
  Adding insn 3807 to worklist
  Adding insn 3806 to worklist
processing block 313 lr out =  1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2338 to worklist
  Adding insn 4516 to worklist
  Adding insn 2336 to worklist
  Adding insn 2335 to worklist
  Adding insn 2334 to worklist
  Adding insn 2333 to worklist
  Adding insn 2332 to worklist
  Adding insn 2331 to worklist
  Adding insn 2330 to worklist
  Adding insn 2329 to worklist
  Adding insn 2328 to worklist
  Adding insn 3809 to worklist
  Adding insn 2327 to worklist
processing block 311 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2621 to worklist
  Adding insn 2619 to worklist
processing block 337 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 336 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 345 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 335 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2432 to worklist
  Adding insn 2435 to worklist
  Adding insn 2426 to worklist
  Adding insn 2425 to worklist
  Adding insn 2423 to worklist
  Adding insn 2421 to worklist
  Adding insn 2415 to worklist
  Adding insn 2414 to worklist
processing block 338 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 4432 to worklist
  Adding insn 4430 to worklist
  Adding insn 2408 to worklist
  Adding insn 4269 to worklist
  Adding insn 2406 to worklist
processing block 334 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 91 to worklist
processing block 333 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2401 to worklist
  Adding insn 4515 to worklist
  Adding insn 2399 to worklist
  Adding insn 2398 to worklist
  Adding insn 2397 to worklist
  Adding insn 2396 to worklist
  Adding insn 2395 to worklist
  Adding insn 2394 to worklist
  Adding insn 2393 to worklist
  Adding insn 2392 to worklist
  Adding insn 2391 to worklist
  Adding insn 2390 to worklist
processing block 341 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 340 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 373 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 339 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2489 to worklist
  Adding insn 2492 to worklist
  Adding insn 2483 to worklist
  Adding insn 2482 to worklist
  Adding insn 2480 to worklist
  Adding insn 2478 to worklist
  Adding insn 2472 to worklist
  Adding insn 2471 to worklist
  Adding insn 2469 to worklist
  Adding insn 4271 to worklist
  Adding insn 2467 to worklist
  Adding insn 2461 to worklist
  Adding insn 2460 to worklist
  Adding insn 2459 to worklist
  Adding insn 2458 to worklist
  Adding insn 2457 to worklist
  Adding insn 2456 to worklist
  Adding insn 2455 to worklist
  Adding insn 2454 to worklist
  Adding insn 2453 to worklist
processing block 344 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 343 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 374 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 342 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2546 to worklist
  Adding insn 2549 to worklist
  Adding insn 2540 to worklist
  Adding insn 2539 to worklist
  Adding insn 2537 to worklist
  Adding insn 2535 to worklist
  Adding insn 2529 to worklist
  Adding insn 2528 to worklist
  Adding insn 2526 to worklist
  Adding insn 4273 to worklist
  Adding insn 2524 to worklist
  Adding insn 2518 to worklist
  Adding insn 2517 to worklist
  Adding insn 2516 to worklist
  Adding insn 2515 to worklist
  Adding insn 2514 to worklist
  Adding insn 2513 to worklist
  Adding insn 2512 to worklist
  Adding insn 2511 to worklist
  Adding insn 2510 to worklist
processing block 372 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 371 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 375 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
processing block 370 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2603 to worklist
  Adding insn 2606 to worklist
  Adding insn 2597 to worklist
  Adding insn 2596 to worklist
  Adding insn 2594 to worklist
  Adding insn 2592 to worklist
  Adding insn 2586 to worklist
  Adding insn 2585 to worklist
  Adding insn 2583 to worklist
  Adding insn 4275 to worklist
  Adding insn 2581 to worklist
  Adding insn 2575 to worklist
  Adding insn 2574 to worklist
  Adding insn 2573 to worklist
  Adding insn 2572 to worklist
  Adding insn 2571 to worklist
  Adding insn 2570 to worklist
  Adding insn 2569 to worklist
  Adding insn 2568 to worklist
  Adding insn 2567 to worklist
processing block 310 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2564 to worklist
processing block 309 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2507 to worklist
processing block 308 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2450 to worklist
processing block 307 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2387 to worklist
processing block 312 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 2324 to worklist
  Adding insn 2323 to worklist
  Adding insn 4517 to worklist
  Adding insn 2321 to worklist
  Adding insn 2318 to worklist
  Adding insn 2317 to worklist
processing block 306 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 4703 to worklist
  Adding insn 2313 to worklist
  Adding insn 2310 to worklist
  Adding insn 2309 to worklist
  Adding insn 4264 to worklist
processing block 332 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13]
  Adding insn 88 to worklist
processing block 331 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2281 to worklist
processing block 330 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2278 to worklist
  Adding insn 2277 to worklist
  Adding insn 2276 to worklist
  Adding insn 2274 to worklist
processing block 329 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2272 to worklist
  Adding insn 2270 to worklist
processing block 328 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 2267 to worklist
  Adding insn 2266 to worklist
  Adding insn 2265 to worklist
  Adding insn 2263 to worklist
processing block 327 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2261 to worklist
  Adding insn 2259 to worklist
processing block 326 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 2256 to worklist
  Adding insn 2254 to worklist
  Adding insn 2253 to worklist
processing block 305 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13]
  Adding insn 2298 to worklist
processing block 304 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13]
  Adding insn 2250 to worklist
  Adding insn 2249 to worklist
  Adding insn 2247 to worklist
  Adding insn 2246 to worklist
  Adding insn 2245 to worklist
  Adding insn 2244 to worklist
  Adding insn 2243 to worklist
processing block 191 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 1429 to worklist
  Adding insn 4408 to worklist
processing block 190 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 1856 to worklist
  Adding insn 4211 to worklist
  Adding insn 1451 to worklist
  Adding insn 4209 to worklist
  Adding insn 1427 to worklist
  Adding insn 1426 to worklist
processing block 175 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
  Adding insn 1422 to worklist
  Adding insn 1421 to worklist
  Adding insn 1419 to worklist
  Adding insn 1418 to worklist
  Adding insn 4204 to worklist
  Adding insn 1416 to worklist
  Adding insn 1415 to worklist
  Adding insn 4542 to worklist
  Adding insn 4866 to worklist
processing block 174 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
  Adding insn 1410 to worklist
processing block 173 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
  Adding insn 1406 to worklist
processing block 172 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 1382 to worklist
processing block 189 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 1402 to worklist
processing block 188 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 1398 to worklist
processing block 187 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 1394 to worklist
  Adding insn 70 to worklist
  Adding insn 1391 to worklist
  Adding insn 1390 to worklist
processing block 186 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 1387 to worklist
processing block 185 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 1379 to worklist
processing block 184 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 1372 to worklist
  Adding insn 1371 to worklist
  Adding insn 1370 to worklist
  Adding insn 1369 to worklist
  Adding insn 1367 to worklist
processing block 183 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
  Adding insn 1365 to worklist
  Adding insn 1364 to worklist
processing block 182 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 1361 to worklist
  Adding insn 1360 to worklist
  Adding insn 1359 to worklist
  Adding insn 1357 to worklist
processing block 181 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 1355 to worklist
  Adding insn 1354 to worklist
processing block 180 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 1351 to worklist
  Adding insn 1350 to worklist
  Adding insn 1349 to worklist
  Adding insn 1347 to worklist
processing block 179 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 1345 to worklist
  Adding insn 1344 to worklist
processing block 178 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1341 to worklist
  Adding insn 1340 to worklist
  Adding insn 1339 to worklist
  Adding insn 1337 to worklist
processing block 177 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1335 to worklist
  Adding insn 1333 to worklist
processing block 176 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1330 to worklist
  Adding insn 1328 to worklist
  Adding insn 1327 to worklist
  Adding insn 1326 to worklist
  Adding insn 1325 to worklist
  Adding insn 1324 to worklist
  Adding insn 1323 to worklist
  Adding insn 1321 to worklist
  Adding insn 1320 to worklist
processing block 171 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
  Adding insn 4712 to worklist
  Adding insn 4711 to worklist
processing block 170 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14]
  Adding insn 1314 to worklist
  Adding insn 1313 to worklist
  Adding insn 1312 to worklist
  Adding insn 1311 to worklist
  Adding insn 1310 to worklist
  Adding insn 4198 to worklist
  Adding insn 1309 to worklist
  Adding insn 1308 to worklist
processing block 169 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1305 to worklist
processing block 168 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1301 to worklist
  Adding insn 1299 to worklist
processing block 167 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1278 to worklist
processing block 294 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
processing block 293 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1294 to worklist
  Adding insn 1293 to worklist
processing block 292 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1290 to worklist
  Adding insn 67 to worklist
  Adding insn 1287 to worklist
  Adding insn 1286 to worklist
processing block 291 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1283 to worklist
processing block 166 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1275 to worklist
processing block 165 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1268 to worklist
  Adding insn 1267 to worklist
  Adding insn 1266 to worklist
  Adding insn 1265 to worklist
  Adding insn 1263 to worklist
processing block 164 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1261 to worklist
  Adding insn 1259 to worklist
processing block 163 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1256 to worklist
  Adding insn 1254 to worklist
  Adding insn 1253 to worklist
  Adding insn 1251 to worklist
  Adding insn 1250 to worklist
  Adding insn 1249 to worklist
  Adding insn 1248 to worklist
  Adding insn 1247 to worklist
processing block 162 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1244 to worklist
processing block 161 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1240 to worklist
  Adding insn 1238 to worklist
processing block 160 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1217 to worklist
processing block 298 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
processing block 297 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1233 to worklist
  Adding insn 1232 to worklist
processing block 296 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1229 to worklist
  Adding insn 66 to worklist
  Adding insn 1226 to worklist
  Adding insn 1225 to worklist
processing block 295 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1222 to worklist
processing block 159 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1214 to worklist
processing block 158 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1207 to worklist
  Adding insn 1206 to worklist
  Adding insn 1205 to worklist
  Adding insn 1204 to worklist
  Adding insn 1202 to worklist
processing block 157 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1200 to worklist
  Adding insn 1198 to worklist
processing block 156 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1195 to worklist
  Adding insn 1193 to worklist
  Adding insn 1192 to worklist
  Adding insn 1190 to worklist
  Adding insn 1189 to worklist
  Adding insn 1188 to worklist
  Adding insn 1187 to worklist
  Adding insn 1186 to worklist
processing block 155 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1183 to worklist
processing block 154 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1179 to worklist
  Adding insn 1177 to worklist
processing block 153 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1156 to worklist
processing block 302 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
processing block 301 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1172 to worklist
  Adding insn 1171 to worklist
processing block 300 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1168 to worklist
  Adding insn 65 to worklist
  Adding insn 1165 to worklist
  Adding insn 1164 to worklist
processing block 299 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1161 to worklist
processing block 152 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1153 to worklist
processing block 151 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1146 to worklist
  Adding insn 1145 to worklist
  Adding insn 1144 to worklist
  Adding insn 1143 to worklist
  Adding insn 1141 to worklist
processing block 150 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1139 to worklist
  Adding insn 1137 to worklist
processing block 149 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1134 to worklist
  Adding insn 1132 to worklist
  Adding insn 1131 to worklist
  Adding insn 1129 to worklist
  Adding insn 1128 to worklist
  Adding insn 1127 to worklist
  Adding insn 1126 to worklist
  Adding insn 1125 to worklist
processing block 112 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1122 to worklist
  Adding insn 4714 to worklist
  Adding insn 4713 to worklist
processing block 111 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1117 to worklist
  Adding insn 1114 to worklist
  Adding insn 1113 to worklist
  Adding insn 1112 to worklist
  Adding insn 4196 to worklist
  Adding insn 4519 to worklist
  Adding insn 4195 to worklist
  Adding insn 4194 to worklist
  Adding insn 4193 to worklist
  Adding insn 3858 to worklist
  Adding insn 4033 to worklist
  Adding insn 4032 to worklist
  Adding insn 3854 to worklist
  Adding insn 4192 to worklist
processing block 110 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 44 [r15]
  Adding insn 1077 to worklist
processing block 109 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 1073 to worklist
  Adding insn 1072 to worklist
  Adding insn 4191 to worklist
  Adding insn 4520 to worklist
processing block 108 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1065 to worklist
  Adding insn 1064 to worklist
  Adding insn 4190 to worklist
  Adding insn 4521 to worklist
processing block 107 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1057 to worklist
processing block 106 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1053 to worklist
processing block 105 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1029 to worklist
processing block 128 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1049 to worklist
processing block 127 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1045 to worklist
processing block 126 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1041 to worklist
  Adding insn 62 to worklist
  Adding insn 1038 to worklist
  Adding insn 1037 to worklist
processing block 125 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1034 to worklist
processing block 104 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1026 to worklist
processing block 103 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 1019 to worklist
  Adding insn 1018 to worklist
  Adding insn 1017 to worklist
  Adding insn 1016 to worklist
processing block 102 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1013 to worklist
  Adding insn 1012 to worklist
  Adding insn 1011 to worklist
  Adding insn 1009 to worklist
processing block 101 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1007 to worklist
processing block 100 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 1003 to worklist
processing block 99 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 979 to worklist
processing block 132 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 999 to worklist
processing block 131 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 995 to worklist
processing block 130 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 991 to worklist
  Adding insn 61 to worklist
  Adding insn 988 to worklist
  Adding insn 987 to worklist
processing block 129 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 984 to worklist
processing block 98 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 976 to worklist
processing block 97 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 969 to worklist
  Adding insn 968 to worklist
  Adding insn 967 to worklist
  Adding insn 966 to worklist
processing block 96 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 963 to worklist
  Adding insn 962 to worklist
  Adding insn 961 to worklist
  Adding insn 959 to worklist
processing block 95 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 957 to worklist
processing block 94 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 953 to worklist
processing block 93 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 928 to worklist
processing block 136 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 948 to worklist
processing block 135 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 944 to worklist
processing block 134 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 940 to worklist
  Adding insn 60 to worklist
  Adding insn 937 to worklist
  Adding insn 936 to worklist
processing block 133 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 933 to worklist
processing block 92 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 925 to worklist
processing block 91 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 918 to worklist
  Adding insn 917 to worklist
  Adding insn 4189 to worklist
  Adding insn 915 to worklist
  Adding insn 914 to worklist
  Adding insn 4188 to worklist
processing block 90 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 910 to worklist
  Adding insn 908 to worklist
  Adding insn 907 to worklist
processing block 89 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 904 to worklist
processing block 88 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 900 to worklist
processing block 87 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 876 to worklist
processing block 140 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 896 to worklist
processing block 139 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 892 to worklist
processing block 138 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 888 to worklist
  Adding insn 59 to worklist
  Adding insn 885 to worklist
  Adding insn 884 to worklist
processing block 137 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 881 to worklist
processing block 86 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 873 to worklist
processing block 85 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 866 to worklist
  Adding insn 865 to worklist
  Adding insn 864 to worklist
  Adding insn 863 to worklist
  Adding insn 861 to worklist
processing block 84 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 859 to worklist
  Adding insn 857 to worklist
processing block 83 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 854 to worklist
  Adding insn 852 to worklist
  Adding insn 851 to worklist
processing block 82 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 848 to worklist
processing block 81 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 844 to worklist
processing block 80 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 820 to worklist
processing block 148 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 840 to worklist
processing block 147 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 836 to worklist
processing block 146 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 832 to worklist
  Adding insn 58 to worklist
  Adding insn 829 to worklist
  Adding insn 828 to worklist
processing block 145 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 825 to worklist
processing block 79 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 817 to worklist
processing block 78 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 810 to worklist
  Adding insn 809 to worklist
  Adding insn 808 to worklist
  Adding insn 807 to worklist
processing block 77 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 804 to worklist
  Adding insn 803 to worklist
  Adding insn 802 to worklist
  Adding insn 800 to worklist
processing block 76 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 798 to worklist
processing block 75 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 794 to worklist
processing block 74 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 770 to worklist
processing block 144 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 790 to worklist
processing block 143 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 786 to worklist
processing block 142 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 782 to worklist
  Adding insn 57 to worklist
  Adding insn 779 to worklist
  Adding insn 778 to worklist
processing block 141 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 775 to worklist
processing block 73 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 767 to worklist
processing block 72 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
  Adding insn 760 to worklist
  Adding insn 759 to worklist
  Adding insn 758 to worklist
  Adding insn 757 to worklist
processing block 71 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 754 to worklist
  Adding insn 753 to worklist
  Adding insn 752 to worklist
  Adding insn 750 to worklist
processing block 70 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 748 to worklist
processing block 69 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 744 to worklist
processing block 68 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 719 to worklist
processing block 124 lr out =  4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 739 to worklist
processing block 123 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 735 to worklist
processing block 122 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 731 to worklist
  Adding insn 56 to worklist
  Adding insn 728 to worklist
  Adding insn 727 to worklist
processing block 121 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 724 to worklist
processing block 120 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 716 to worklist
processing block 119 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 709 to worklist
  Adding insn 708 to worklist
  Adding insn 4187 to worklist
  Adding insn 706 to worklist
  Adding insn 705 to worklist
  Adding insn 4186 to worklist
processing block 118 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 701 to worklist
  Adding insn 699 to worklist
  Adding insn 698 to worklist
processing block 67 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 66 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 694 to worklist
  Adding insn 693 to worklist
  Adding insn 4185 to worklist
  Adding insn 4184 to worklist
  Adding insn 4183 to worklist
  Adding insn 4182 to worklist
  Adding insn 4181 to worklist
  Adding insn 4180 to worklist
  Adding insn 4179 to worklist
  Adding insn 4178 to worklist
  Adding insn 4177 to worklist
processing block 65 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 671 to worklist
  Adding insn 670 to worklist
  Adding insn 669 to worklist
  Adding insn 668 to worklist
  Adding insn 667 to worklist
  Adding insn 665 to worklist
processing block 64 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 661 to worklist
  Adding insn 660 to worklist
  Adding insn 659 to worklist
  Adding insn 658 to worklist
  Adding insn 657 to worklist
  Adding insn 655 to worklist
processing block 63 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 651 to worklist
  Adding insn 650 to worklist
  Adding insn 649 to worklist
  Adding insn 648 to worklist
  Adding insn 647 to worklist
  Adding insn 645 to worklist
processing block 62 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 641 to worklist
  Adding insn 640 to worklist
  Adding insn 639 to worklist
  Adding insn 638 to worklist
  Adding insn 637 to worklist
  Adding insn 635 to worklist
processing block 61 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 631 to worklist
  Adding insn 4399 to worklist
  Adding insn 630 to worklist
  Adding insn 628 to worklist
  Adding insn 627 to worklist
  Adding insn 4522 to worklist
  Adding insn 4087 to worklist
processing block 60 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 623 to worklist
  Adding insn 621 to worklist
  Adding insn 4170 to worklist
  Adding insn 4169 to worklist
  Adding insn 4168 to worklist
processing block 59 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 4083 to worklist
  Adding insn 3804 to worklist
  Adding insn 3803 to worklist
  Adding insn 3802 to worklist
  Adding insn 3801 to worklist
  Adding insn 4715 to worklist
processing block 58 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 605 to worklist
  Adding insn 604 to worklist
  Adding insn 603 to worklist
  Adding insn 602 to worklist
  Adding insn 601 to worklist
  Adding insn 599 to worklist
processing block 57 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 595 to worklist
  Adding insn 594 to worklist
  Adding insn 593 to worklist
  Adding insn 592 to worklist
  Adding insn 591 to worklist
  Adding insn 589 to worklist
processing block 56 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 585 to worklist
  Adding insn 584 to worklist
  Adding insn 583 to worklist
  Adding insn 582 to worklist
  Adding insn 581 to worklist
  Adding insn 579 to worklist
processing block 55 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
  Adding insn 575 to worklist
  Adding insn 574 to worklist
  Adding insn 573 to worklist
  Adding insn 572 to worklist
  Adding insn 571 to worklist
  Adding insn 569 to worklist
processing block 54 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 565 to worklist
  Adding insn 564 to worklist
  Adding insn 563 to worklist
  Adding insn 562 to worklist
  Adding insn 561 to worklist
  Adding insn 559 to worklist
processing block 53 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 555 to worklist
  Adding insn 4390 to worklist
  Adding insn 554 to worklist
  Adding insn 552 to worklist
  Adding insn 551 to worklist
  Adding insn 4523 to worklist
processing block 52 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 547 to worklist
  Adding insn 545 to worklist
  Adding insn 4157 to worklist
  Adding insn 4156 to worklist
processing block 51 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 4071 to worklist
  Adding insn 3800 to worklist
  Adding insn 3799 to worklist
  Adding insn 3798 to worklist
  Adding insn 3797 to worklist
  Adding insn 3796 to worklist
  Adding insn 4716 to worklist
processing block 50 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 527 to worklist
  Adding insn 526 to worklist
  Adding insn 525 to worklist
  Adding insn 524 to worklist
  Adding insn 523 to worklist
  Adding insn 521 to worklist
processing block 49 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 517 to worklist
  Adding insn 516 to worklist
  Adding insn 515 to worklist
  Adding insn 514 to worklist
  Adding insn 513 to worklist
  Adding insn 511 to worklist
processing block 48 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 507 to worklist
  Adding insn 506 to worklist
  Adding insn 505 to worklist
  Adding insn 504 to worklist
  Adding insn 503 to worklist
  Adding insn 501 to worklist
processing block 47 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 497 to worklist
  Adding insn 496 to worklist
  Adding insn 495 to worklist
  Adding insn 494 to worklist
  Adding insn 493 to worklist
  Adding insn 491 to worklist
processing block 46 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 487 to worklist
  Adding insn 4378 to worklist
  Adding insn 486 to worklist
  Adding insn 484 to worklist
  Adding insn 483 to worklist
  Adding insn 4524 to worklist
  Adding insn 4067 to worklist
processing block 45 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 479 to worklist
  Adding insn 477 to worklist
  Adding insn 4147 to worklist
  Adding insn 4146 to worklist
  Adding insn 4145 to worklist
processing block 44 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 4063 to worklist
  Adding insn 3795 to worklist
  Adding insn 3794 to worklist
  Adding insn 3793 to worklist
  Adding insn 3792 to worklist
  Adding insn 4717 to worklist
processing block 43 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 461 to worklist
  Adding insn 460 to worklist
  Adding insn 459 to worklist
  Adding insn 458 to worklist
  Adding insn 457 to worklist
  Adding insn 455 to worklist
processing block 42 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 451 to worklist
  Adding insn 450 to worklist
  Adding insn 449 to worklist
  Adding insn 448 to worklist
  Adding insn 447 to worklist
  Adding insn 445 to worklist
processing block 41 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 441 to worklist
  Adding insn 440 to worklist
  Adding insn 439 to worklist
  Adding insn 438 to worklist
  Adding insn 437 to worklist
  Adding insn 435 to worklist
processing block 40 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 431 to worklist
  Adding insn 430 to worklist
  Adding insn 429 to worklist
  Adding insn 428 to worklist
  Adding insn 427 to worklist
  Adding insn 425 to worklist
processing block 39 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 421 to worklist
  Adding insn 4368 to worklist
  Adding insn 420 to worklist
  Adding insn 418 to worklist
  Adding insn 417 to worklist
  Adding insn 4525 to worklist
  Adding insn 4058 to worklist
processing block 38 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 413 to worklist
  Adding insn 411 to worklist
  Adding insn 4136 to worklist
  Adding insn 4135 to worklist
  Adding insn 4134 to worklist
processing block 37 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 4054 to worklist
  Adding insn 3791 to worklist
  Adding insn 3790 to worklist
  Adding insn 3789 to worklist
  Adding insn 3788 to worklist
  Adding insn 4718 to worklist
processing block 36 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 395 to worklist
  Adding insn 394 to worklist
  Adding insn 393 to worklist
  Adding insn 392 to worklist
  Adding insn 391 to worklist
  Adding insn 389 to worklist
processing block 35 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 385 to worklist
  Adding insn 384 to worklist
  Adding insn 383 to worklist
  Adding insn 382 to worklist
  Adding insn 381 to worklist
  Adding insn 379 to worklist
processing block 34 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 375 to worklist
  Adding insn 374 to worklist
  Adding insn 373 to worklist
  Adding insn 372 to worklist
  Adding insn 371 to worklist
  Adding insn 369 to worklist
processing block 33 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 365 to worklist
  Adding insn 364 to worklist
  Adding insn 363 to worklist
  Adding insn 362 to worklist
  Adding insn 361 to worklist
  Adding insn 359 to worklist
processing block 32 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 355 to worklist
  Adding insn 4358 to worklist
  Adding insn 354 to worklist
  Adding insn 352 to worklist
  Adding insn 351 to worklist
  Adding insn 4526 to worklist
  Adding insn 4050 to worklist
processing block 31 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 347 to worklist
  Adding insn 345 to worklist
  Adding insn 4125 to worklist
  Adding insn 4124 to worklist
  Adding insn 4123 to worklist
processing block 30 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 4046 to worklist
  Adding insn 3787 to worklist
  Adding insn 3786 to worklist
  Adding insn 3785 to worklist
  Adding insn 3784 to worklist
  Adding insn 4719 to worklist
processing block 29 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 329 to worklist
  Adding insn 328 to worklist
  Adding insn 327 to worklist
  Adding insn 326 to worklist
  Adding insn 325 to worklist
  Adding insn 323 to worklist
processing block 28 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
  Adding insn 319 to worklist
  Adding insn 318 to worklist
  Adding insn 317 to worklist
  Adding insn 316 to worklist
  Adding insn 315 to worklist
  Adding insn 313 to worklist
processing block 27 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
  Adding insn 309 to worklist
  Adding insn 308 to worklist
  Adding insn 307 to worklist
  Adding insn 306 to worklist
  Adding insn 305 to worklist
  Adding insn 303 to worklist
processing block 26 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
  Adding insn 299 to worklist
  Adding insn 298 to worklist
  Adding insn 297 to worklist
  Adding insn 296 to worklist
  Adding insn 295 to worklist
  Adding insn 293 to worklist
processing block 25 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 289 to worklist
  Adding insn 4348 to worklist
  Adding insn 288 to worklist
  Adding insn 286 to worklist
  Adding insn 285 to worklist
  Adding insn 4527 to worklist
  Adding insn 4039 to worklist
processing block 24 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 281 to worklist
  Adding insn 279 to worklist
  Adding insn 4114 to worklist
  Adding insn 4113 to worklist
  Adding insn 4112 to worklist
processing block 23 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
  Adding insn 4035 to worklist
  Adding insn 3783 to worklist
  Adding insn 3782 to worklist
  Adding insn 3780 to worklist
  Adding insn 3778 to worklist
  Adding insn 4720 to worklist
processing block 22 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 263 to worklist
  Adding insn 262 to worklist
  Adding insn 261 to worklist
  Adding insn 260 to worklist
  Adding insn 259 to worklist
processing block 21 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 255 to worklist
  Adding insn 254 to worklist
processing block 20 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 19 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 248 to worklist
  Adding insn 247 to worklist
  Adding insn 246 to worklist
  Adding insn 245 to worklist
  Adding insn 244 to worklist
processing block 18 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 240 to worklist
  Adding insn 239 to worklist
processing block 17 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 16 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 4721 to worklist
  Adding insn 230 to worklist
  Adding insn 4339 to worklist
processing block 15 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 14 lr out =  5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 222 to worklist
  Adding insn 221 to worklist
  Adding insn 4108 to worklist
  Adding insn 219 to worklist
processing block 13 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 12 lr out =  5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 212 to worklist
  Adding insn 211 to worklist
  Adding insn 4107 to worklist
  Adding insn 209 to worklist
processing block 11 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 203 to worklist
  Adding insn 202 to worklist
  Adding insn 4722 to worklist
  Adding insn 195 to worklist
processing block 378 lr out =  0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 4529 to worklist
  Adding insn 4528 to worklist
processing block 10 lr out =  0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 191 to worklist
processing block 9 lr out =  0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 181 to worklist
  Adding insn 4534 to worklist
  Adding insn 179 to worklist
  Adding insn 4533 to worklist
  Adding insn 4532 to worklist
processing block 8 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 170 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 161 to worklist
  Adding insn 160 to worklist
  Adding insn 159 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 137 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
processing block 5 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 129 to worklist
  Adding insn 4334 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 118 to worklist
  Adding insn 117 to worklist
  Adding insn 116 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 4536 to worklist
  Adding insn 4102 to worklist
  Adding insn 105 to worklist
  Adding insn 4100 to worklist
  Adding insn 4535 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 100 to worklist
  Adding insn 95 to worklist
  Adding insn 4098 to worklist
  Adding insn 4537 to worklist
  Adding insn 4553 to worklist
  Adding insn 4547 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 489 n_edges 858 count 699 (  1.4)
;;   ======================================================
;;   -- basic block 2 from 4546 to 102 -- after reload
;;   ======================================================

;;	  0--> b  0: i4546 [--sp]=bp                               :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 100 si=`*.LC32'                             :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i4547 bp=sp                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i4548 [--sp]=r15                              :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i4549 [--sp]=r14                              :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i4537 ax=bp-0x4dd0                            :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i4550 [--sp]=r13                              :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i4551 [--sp]=r12                              :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i4552 [--sp]=bx                               :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i4098 di=ax                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i4553 {sp=sp-0x4ea8;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  6--> b  0: i4333 [bp-0x4ea8]=ax                          :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i  95 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  7--> b  0: i  96 [bp-0x4dd0]=ax                          :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i  97 [bp-0x4dc8]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  8--> b  0: i  98 [bp-0x4dc0]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i 102 ax=call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 4546
;;   new tail = 102

;;   ======================================================
;;   -- basic block 3 from 4535 to 114 -- after reload
;;   ======================================================

;;	  0--> b  0: i4535 ax=bp-0x4d90                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 107 [bp-0x4d88]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 108 [bp-0x4d80]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i4100 di=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i4331 [bp-0x4e68]=ax                          :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 105 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  3--> b  0: i 106 [bp-0x4d90]=ax                          :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i4102 ax=[bp-0x4dc8]                          :athlon-direct,athlon-load
;;	  6--> b  0: i4536 si=ax+0x11                              :athlon-direct,athlon-agu,nothing
;;	  8--> b  0: i 114 call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 4535
;;   new tail = 114

;;   ======================================================
;;   -- basic block 4 from 116 to 119 -- after reload
;;   ======================================================

;;	  0--> b  0: i 116 ax=0x7fffffffffffffff                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 117 {ax=ax-[bp-0x4d88];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 118 flags=cmp(ax,0x10)                      :athlon-direct,athlon-ieu
;;	  5--> b  0: i 119 pc={(leu(flags,0))?L4728:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 116
;;   new tail = 119

;;   ======================================================
;;   -- basic block 5 from 127 to 130 -- after reload
;;   ======================================================

;;	  0--> b  0: i4334 bx=[bp-0x4e68]                          :athlon-direct,athlon-load
;;	  0--> b  0: i 128 si=`*.LC34'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 127 dx=0x11                                 :athlon-direct,athlon-ieu
;;	  3--> b  0: i 129 di=bx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 130 ax=call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 4334
;;   new tail = 130

;;   ======================================================
;;   -- basic block 6 from 135 to 138 -- after reload
;;   ======================================================

;;	  0--> b  0: i 135 dx=[bp-0x4dc8]                          :athlon-direct,athlon-load
;;	  0--> b  0: i 136 si=[bp-0x4dd0]                          :athlon-direct,athlon-load
;;	  0--> b  0: i 137 di=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i 138 ax=call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 135
;;   new tail = 138

;;   ======================================================
;;   -- basic block 7 from 159 to 162 -- after reload
;;   ======================================================

;;	  0--> b  0: i 159 ax=0x7fffffffffffffff                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 160 {ax=ax-[bp-0x4d88];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 161 flags=cmp(ax,0x4)                       :athlon-direct,athlon-ieu
;;	  5--> b  0: i 162 pc={(leu(flags,0))?L4729:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 159
;;   new tail = 162

;;   ======================================================
;;   -- basic block 8 from 170 to 173 -- after reload
;;   ======================================================

;;	  0--> b  0: i 172 di=[bp-0x4e68]                          :athlon-direct,athlon-load
;;	  0--> b  0: i 171 si=`*.LC35'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 170 dx=0x5                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 173 ax=call [`_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 172
;;   new tail = 173

;;   ======================================================
;;   -- basic block 9 from 4532 to 182 -- after reload
;;   ======================================================

;;	  0--> b  0: i4532 cx=bp-0xa40                             :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i4533 dx=cx+0x10                              :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i4335 [bp-0x4e60]=cx                          :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 178 [bp-0xa40]=dx                           :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 179 cx=[ax]                                 :athlon-direct,athlon-load
;;	  4--> b  0: i4534 dx=ax+0x10                              :athlon-direct,athlon-agu,nothing
;;	  7--> b  0: i 181 flags=cmp(cx,dx)                        :athlon-direct,athlon-ieu
;;	  8--> b  0: i 182 pc={(flags==0)?L4730:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 4532
;;   new tail = 182

;;   ======================================================
;;   -- basic block 10 from 190 to 192 -- after reload
;;   ======================================================

;;	  0--> b  0: i 190 [bp-0xa40]=cx                           :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 191 cx=[ax+0x10]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 192 [bp-0xa30]=cx                           :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 3
;;   new head = 190
;;   new tail = 192

;;   ======================================================
;;   -- basic block 11 from 195 to 206 -- after reload
;;   ======================================================

;;	  0--> b  0: i 195 cx=[ax+0x8]                             :athlon-direct,athlon-load
;;	  0--> b  0: i 204 si=`*.LC37'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i4722 {r8=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i 196 [bp-0xa38]=cx                           :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 197 [ax]=dx                                 :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 203 dx=`*.LC36'                             :athlon-direct,athlon-agu,nothing
;;	  4--> b  0: i 199 [ax+0x10]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 205 di=[bp-0xa40]                           :athlon-direct,athlon-load
;;	  4--> b  0: i 202 cx=0x1                                  :athlon-direct,athlon-ieu
;;	  5--> b  0: i 198 [ax+0x8]=0                              :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i 206 ax=call [`_ZN5TFile4OpenEPKcS1_S1_ii']  :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 195
;;   new tail = 206

;;   ======================================================
;;   -- basic block 12 from 207 to 213 -- after reload
;;   ======================================================

;;	  0--> b  0: i 207 [bp-0x4ea0]=ax                          :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i4107 ax=[bp-0x4e60]                          :athlon-direct,athlon-load
;;	  1--> b  0: i 209 di=[bp-0xa40]                           :athlon-direct,athlon-load
;;	  3--> b  0: i 211 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i 212 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  5--> b  0: i 213 pc={(flags==0)?L217:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 207
;;   new tail = 213

;;   ======================================================
;;   -- basic block 13 from 216 to 216 -- after reload
;;   ======================================================

;;	  0--> b  0: i 216 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 216
;;   new tail = 216

;;   ======================================================
;;   -- basic block 14 from 219 to 223 -- after reload
;;   ======================================================

;;	  0--> b  0: i4108 ax=[bp-0x4e68]                          :athlon-direct,athlon-load
;;	  0--> b  0: i 219 di=[bp-0x4d90]                          :athlon-direct,athlon-load
;;	  3--> b  0: i 221 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i 222 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  5--> b  0: i 223 pc={(flags==0)?L227:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 4108
;;   new tail = 223

;;   ======================================================
;;   -- basic block 15 from 226 to 226 -- after reload
;;   ======================================================

;;	  0--> b  0: i 226 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 226
;;   new tail = 226

;;   ======================================================
;;   -- basic block 16 from 4339 to 234 -- after reload
;;   ======================================================

;;	  0--> b  0: i4339 di=[bp-0x4ea0]                          :athlon-direct,athlon-load
;;	  0--> b  0: i4721 {si=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i 230 ax=[di]                                 :athlon-direct,athlon-load
;;	  6--> b  0: i 234 ax=call [[ax+0x238]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 4339
;;   new tail = 234

;;   ======================================================
;;   -- basic block 17 from 236 to 236 -- after reload
;;   ======================================================

;;	  0--> b  0: i 236 ax=call [`_ZN10TDirectory16CurrentDirectoryEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 236
;;   new tail = 236

;;   ======================================================
;;   -- basic block 18 from 239 to 241 -- after reload
;;   ======================================================

;;	  0--> b  0: i 240 di=0x2b8                                :athlon-direct,athlon-ieu
;;	  0--> b  0: i 239 bx=[ax]                                 :athlon-direct,athlon-load
;;	  1--> b  0: i 241 ax=call [`_ZN8TStorage11ObjectAllocEm'] :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 240
;;   new tail = 241

;;   ======================================================
;;   -- basic block 19 from 4338 to 249 -- after reload
;;   ======================================================

;;	  0--> b  0: i 246 dx=`*.LC38'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 247 si=`*.LC39'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 244 r8=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 245 cx=0x63                                 :athlon-direct,athlon-ieu
;;	  1--> b  0: i 248 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i4338 [bp-0x4e90]=ax                          :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 249 call [`_ZN5TTreeC1EPKcS1_iP10TDirectory']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 246
;;   new tail = 249

;;   ======================================================
;;   -- basic block 20 from 251 to 251 -- after reload
;;   ======================================================

;;	  0--> b  0: i 251 ax=call [`_ZN10TDirectory16CurrentDirectoryEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 251
;;   new tail = 251

;;   ======================================================
;;   -- basic block 21 from 254 to 256 -- after reload
;;   ======================================================

;;	  0--> b  0: i 255 di=0x2b8                                :athlon-direct,athlon-ieu
;;	  0--> b  0: i 254 bx=[ax]                                 :athlon-direct,athlon-load
;;	  1--> b  0: i 256 ax=call [`_ZN8TStorage11ObjectAllocEm'] :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 255
;;   new tail = 256

;;   ======================================================
;;   -- basic block 22 from 4337 to 264 -- after reload
;;   ======================================================

;;	  0--> b  0: i 261 dx=`*.LC40'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 262 si=`*.LC41'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 259 r8=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 260 cx=0x63                                 :athlon-direct,athlon-ieu
;;	  1--> b  0: i 263 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i4337 [bp-0x4e98]=ax                          :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 264 call [`_ZN5TTreeC1EPKcS1_iP10TDirectory']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 261
;;   new tail = 264

;;   ======================================================
;;   -- basic block 23 from 266 to 4035 -- after reload
;;   ======================================================

;;	  0--> b  0: i3782 cx=bp-0x3c40                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3778 r13=bp-0x4280                           :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3780 r12=bp-0x3f60                           :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i3783 bx=bp-0x4d70                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 266 [bp-0x4e28]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i4720 {ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i4035 dx=cx                                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3782
;;   new tail = 4035

;;   ======================================================
;;   -- basic block 24 from 4112 to 282 -- after reload
;;   ======================================================

;;	  0--> b  0: i4113 xmm6=[`*.LC43']                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i4114 cx=dx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 278 [bx+ax]=0xffffffffffffffff              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i4112 xmm5=[`*.LC42']                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  2--> b  0: i 273 [ax*0x2+r12]=xmm6                       :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  3--> b  0: i 270 [ax*0x2+r13]=xmm5                       :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  4--> b  0: i 276 [ax*0x2+cx]=xmm6                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  4--> b  0: i 279 {ax=ax+0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	  5--> b  0: i 281 flags=cmp(ax,0x190)                     :athlon-direct,athlon-ieu
;;	  6--> b  0: i 282 pc={(flags!=0)?L280:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 4113
;;   new tail = 282

;;   ======================================================
;;   -- basic block 25 from 4039 to 290 -- after reload
;;   ======================================================

;;	  0--> b  0: i4348 r15=[bp-0x4e90]                         :athlon-direct,athlon-load
;;	  0--> b  0: i4039 r14=dx                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 288 si=`*.LC44'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i4527 dx=bp-0x4e28                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 285 r8=0x63                                 :athlon-direct,athlon-ieu
;;	  1--> b  0: i 286 cx=0x7d00                               :athlon-direct,athlon-ieu
;;	  3--> b  0: i 289 di=r15                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 290 ax=call [`_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 4348
;;   new tail = 290

;;   ======================================================
;;   -- basic block 26 from 293 to 300 -- after reload
;;   ======================================================

;;	  0--> b  0: i 293 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 295 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 296 cx=`*.LC45'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 297 dx=r13                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 298 si=`*.LC46'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 299 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 300 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 293
;;   new tail = 300

;;   ======================================================
;;   -- basic block 27 from 303 to 310 -- after reload
;;   ======================================================

;;	  0--> b  0: i 303 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 305 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 306 cx=`*.LC47'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 307 dx=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 308 si=`*.LC48'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 309 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 310 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 303
;;   new tail = 310

;;   ======================================================
;;   -- basic block 28 from 313 to 320 -- after reload
;;   ======================================================

;;	  0--> b  0: i 313 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 315 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 316 cx=`*.LC49'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 317 dx=r14                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 318 si=`*.LC50'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 319 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 320 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 313
;;   new tail = 320

;;   ======================================================
;;   -- basic block 29 from 323 to 330 -- after reload
;;   ======================================================

;;	  0--> b  0: i 323 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 325 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 326 cx=`*.LC51'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 327 dx=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 328 si=`*.LC52'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 329 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 330 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 323
;;   new tail = 330

;;   ======================================================
;;   -- basic block 30 from 332 to 4046 -- after reload
;;   ======================================================

;;	  0--> b  0: i3786 cx=bp-0x32e0                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3784 r13=bp-0x3920                           :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3785 r12=bp-0x3600                           :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i3787 bx=bp-0x4be0                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 332 [bp-0x4e24]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i4719 {ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i4046 dx=cx                                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3786
;;   new tail = 4046

;;   ======================================================
;;   -- basic block 31 from 4123 to 348 -- after reload
;;   ======================================================

;;	  0--> b  0: i4124 xmm1=[`*.LC43']                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i4125 cx=dx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 344 [bx+ax]=0xffffffffffffffff              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i4123 xmm2=[`*.LC42']                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  2--> b  0: i 339 [ax*0x2+r12]=xmm1                       :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  3--> b  0: i 336 [ax*0x2+r13]=xmm2                       :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  4--> b  0: i 342 [ax*0x2+cx]=xmm1                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  4--> b  0: i 345 {ax=ax+0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	  5--> b  0: i 347 flags=cmp(ax,0x190)                     :athlon-direct,athlon-ieu
;;	  6--> b  0: i 348 pc={(flags!=0)?L346:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 4124
;;   new tail = 348

;;   ======================================================
;;   -- basic block 32 from 4050 to 356 -- after reload
;;   ======================================================

;;	  0--> b  0: i4358 r15=[bp-0x4e90]                         :athlon-direct,athlon-load
;;	  0--> b  0: i4050 r14=dx                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 354 si=`*.LC53'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i4526 dx=bp-0x4e24                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 351 r8=0x63                                 :athlon-direct,athlon-ieu
;;	  1--> b  0: i 352 cx=0x7d00                               :athlon-direct,athlon-ieu
;;	  3--> b  0: i 355 di=r15                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 356 ax=call [`_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 4358
;;   new tail = 356

;;   ======================================================
;;   -- basic block 33 from 359 to 366 -- after reload
;;   ======================================================

;;	  0--> b  0: i 359 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 361 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 362 cx=`*.LC54'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 363 dx=r13                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 364 si=`*.LC55'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 365 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 366 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 359
;;   new tail = 366

;;   ======================================================
;;   -- basic block 34 from 369 to 376 -- after reload
;;   ======================================================

;;	  0--> b  0: i 369 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 371 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 372 cx=`*.LC56'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 373 dx=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 374 si=`*.LC57'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 375 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 376 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 369
;;   new tail = 376

;;   ======================================================
;;   -- basic block 35 from 379 to 386 -- after reload
;;   ======================================================

;;	  0--> b  0: i 379 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 381 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 382 cx=`*.LC58'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 383 dx=r14                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 384 si=`*.LC59'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 385 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 386 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 379
;;   new tail = 386

;;   ======================================================
;;   -- basic block 36 from 389 to 396 -- after reload
;;   ======================================================

;;	  0--> b  0: i 389 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 391 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 392 cx=`*.LC60'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 393 dx=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 394 si=`*.LC61'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 395 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 396 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 389
;;   new tail = 396

;;   ======================================================
;;   -- basic block 37 from 398 to 4054 -- after reload
;;   ======================================================

;;	  0--> b  0: i3790 cx=bp-0x2980                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3788 r13=bp-0x2fc0                           :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3789 r12=bp-0x2ca0                           :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i3791 bx=bp-0x4a50                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 398 [bp-0x4e20]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i4718 {ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i4054 dx=cx                                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3790
;;   new tail = 4054

;;   ======================================================
;;   -- basic block 38 from 4134 to 414 -- after reload
;;   ======================================================

;;	  0--> b  0: i4135 xmm7=[`*.LC43']                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i4136 cx=dx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 410 [bx+ax]=0xffffffffffffffff              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i4134 xmm6=[`*.LC42']                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  2--> b  0: i 405 [ax*0x2+r12]=xmm7                       :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  3--> b  0: i 402 [ax*0x2+r13]=xmm6                       :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  4--> b  0: i 408 [ax*0x2+cx]=xmm7                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  4--> b  0: i 411 {ax=ax+0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	  5--> b  0: i 413 flags=cmp(ax,0x190)                     :athlon-direct,athlon-ieu
;;	  6--> b  0: i 414 pc={(flags!=0)?L412:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 4135
;;   new tail = 414

;;   ======================================================
;;   -- basic block 39 from 4058 to 422 -- after reload
;;   ======================================================

;;	  0--> b  0: i4368 r15=[bp-0x4e90]                         :athlon-direct,athlon-load
;;	  0--> b  0: i4058 r14=dx                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 420 si=`*.LC62'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i4525 dx=bp-0x4e20                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 417 r8=0x63                                 :athlon-direct,athlon-ieu
;;	  1--> b  0: i 418 cx=0x7d00                               :athlon-direct,athlon-ieu
;;	  3--> b  0: i 421 di=r15                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 422 ax=call [`_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 4368
;;   new tail = 422

;;   ======================================================
;;   -- basic block 40 from 425 to 432 -- after reload
;;   ======================================================

;;	  0--> b  0: i 425 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 427 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 428 cx=`*.LC63'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 429 dx=r13                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 430 si=`*.LC64'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 431 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 432 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 425
;;   new tail = 432

;;   ======================================================
;;   -- basic block 41 from 435 to 442 -- after reload
;;   ======================================================

;;	  0--> b  0: i 435 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 437 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 438 cx=`*.LC65'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 439 dx=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 440 si=`*.LC66'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 441 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 442 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 435
;;   new tail = 442

;;   ======================================================
;;   -- basic block 42 from 445 to 452 -- after reload
;;   ======================================================

;;	  0--> b  0: i 445 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 447 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 448 cx=`*.LC67'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 449 dx=r14                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 450 si=`*.LC68'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 451 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 452 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 445
;;   new tail = 452

;;   ======================================================
;;   -- basic block 43 from 455 to 462 -- after reload
;;   ======================================================

;;	  0--> b  0: i 455 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 457 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 458 cx=`*.LC69'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 459 dx=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 460 si=`*.LC70'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 461 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 462 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 455
;;   new tail = 462

;;   ======================================================
;;   -- basic block 44 from 464 to 4063 -- after reload
;;   ======================================================

;;	  0--> b  0: i3794 cx=bp-0x2020                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3792 r13=bp-0x2660                           :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3793 r12=bp-0x2340                           :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i3795 bx=bp-0x48c0                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 464 [bp-0x4e1c]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i4717 {ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i4063 dx=cx                                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3794
;;   new tail = 4063

;;   ======================================================
;;   -- basic block 45 from 4145 to 480 -- after reload
;;   ======================================================

;;	  0--> b  0: i4146 xmm5=[`*.LC43']                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i4147 cx=dx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 476 [bx+ax]=0xffffffffffffffff              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i4145 xmm1=[`*.LC42']                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  2--> b  0: i 471 [ax*0x2+r12]=xmm5                       :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  3--> b  0: i 468 [ax*0x2+r13]=xmm1                       :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  4--> b  0: i 474 [ax*0x2+cx]=xmm5                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  4--> b  0: i 477 {ax=ax+0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	  5--> b  0: i 479 flags=cmp(ax,0x190)                     :athlon-direct,athlon-ieu
;;	  6--> b  0: i 480 pc={(flags!=0)?L478:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 4146
;;   new tail = 480

;;   ======================================================
;;   -- basic block 46 from 4067 to 488 -- after reload
;;   ======================================================

;;	  0--> b  0: i4378 r15=[bp-0x4e90]                         :athlon-direct,athlon-load
;;	  0--> b  0: i4067 r14=dx                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 486 si=`*.LC71'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i4524 dx=bp-0x4e1c                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 483 r8=0x63                                 :athlon-direct,athlon-ieu
;;	  1--> b  0: i 484 cx=0x7d00                               :athlon-direct,athlon-ieu
;;	  3--> b  0: i 487 di=r15                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 488 ax=call [`_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 4378
;;   new tail = 488

;;   ======================================================
;;   -- basic block 47 from 491 to 498 -- after reload
;;   ======================================================

;;	  0--> b  0: i 491 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 493 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 494 cx=`*.LC72'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 495 dx=r13                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 496 si=`*.LC73'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 497 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 498 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 491
;;   new tail = 498

;;   ======================================================
;;   -- basic block 48 from 501 to 508 -- after reload
;;   ======================================================

;;	  0--> b  0: i 501 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 503 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 504 cx=`*.LC74'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 505 dx=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 506 si=`*.LC75'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 507 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 508 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 501
;;   new tail = 508

;;   ======================================================
;;   -- basic block 49 from 511 to 518 -- after reload
;;   ======================================================

;;	  0--> b  0: i 511 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 513 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 514 cx=`*.LC76'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 515 dx=r14                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 516 si=`*.LC77'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 517 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 518 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 511
;;   new tail = 518

;;   ======================================================
;;   -- basic block 50 from 521 to 528 -- after reload
;;   ======================================================

;;	  0--> b  0: i 521 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 523 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 524 cx=`*.LC78'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 525 dx=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 526 si=`*.LC79'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 527 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 528 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 521
;;   new tail = 528

;;   ======================================================
;;   -- basic block 51 from 530 to 4071 -- after reload
;;   ======================================================

;;	  0--> b  0: i3799 cx=bp-0x4730                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3796 r14=bp-0x1d00                           :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3797 r13=bp-0x19e0                           :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i3798 r12=bp-0x16c0                           :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i3800 bx=bp-0x45a0                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 530 [bp-0x4e18]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i4716 {ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i4071 dx=cx                                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3799
;;   new tail = 4071

;;   ======================================================
;;   -- basic block 52 from 4156 to 548 -- after reload
;;   ======================================================

;;	  0--> b  0: i4157 xmm2=[`*.LC43']                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i 542 [dx+ax]=0xffffffffffffffff              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i4156 xmm7=[`*.LC42']                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  1--> b  0: i 544 [bx+ax]=0xffffffffffffffff              :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 537 [ax*0x2+r13]=xmm2                       :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  3--> b  0: i 534 [ax*0x2+r14]=xmm7                       :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  4--> b  0: i 540 [ax*0x2+r12]=xmm2                       :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  4--> b  0: i 545 {ax=ax+0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	  5--> b  0: i 547 flags=cmp(ax,0x190)                     :athlon-direct,athlon-ieu
;;	  6--> b  0: i 548 pc={(flags!=0)?L546:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 4157
;;   new tail = 548

;;   ======================================================
;;   -- basic block 53 from 4076 to 556 -- after reload
;;   ======================================================

;;	  0--> b  0: i4390 r15=[bp-0x4e98]                         :athlon-direct,athlon-load
;;	  0--> b  0: i4076 [bp-0x4e38]=dx                          :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 554 si=`*.LC80'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i4523 dx=bp-0x4e18                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 551 r8=0x63                                 :athlon-direct,athlon-ieu
;;	  1--> b  0: i 552 cx=0x7d00                               :athlon-direct,athlon-ieu
;;	  3--> b  0: i 555 di=r15                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 556 ax=call [`_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 4390
;;   new tail = 556

;;   ======================================================
;;   -- basic block 54 from 559 to 566 -- after reload
;;   ======================================================

;;	  0--> b  0: i 559 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 561 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 562 cx=`*.LC81'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 563 dx=r14                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 564 si=`*.LC82'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 565 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 566 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 559
;;   new tail = 566

;;   ======================================================
;;   -- basic block 55 from 569 to 576 -- after reload
;;   ======================================================

;;	  0--> b  0: i 569 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 571 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 572 cx=`*.LC83'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 573 dx=r13                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 574 si=`*.LC84'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 575 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 576 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 569
;;   new tail = 576

;;   ======================================================
;;   -- basic block 56 from 579 to 586 -- after reload
;;   ======================================================

;;	  0--> b  0: i 579 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 581 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 582 cx=`*.LC85'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 583 dx=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 584 si=`*.LC86'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 585 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 586 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 579
;;   new tail = 586

;;   ======================================================
;;   -- basic block 57 from 589 to 596 -- after reload
;;   ======================================================

;;	  0--> b  0: i 589 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 591 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 592 cx=`*.LC87'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 593 dx=[bp-0x4e38]                          :athlon-direct,athlon-load
;;	  1--> b  0: i 594 si=`*.LC88'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 595 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 596 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 589
;;   new tail = 596

;;   ======================================================
;;   -- basic block 58 from 599 to 606 -- after reload
;;   ======================================================

;;	  0--> b  0: i 599 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 601 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 602 cx=`*.LC89'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 603 dx=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 604 si=`*.LC90'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 605 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 606 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 599
;;   new tail = 606

;;   ======================================================
;;   -- basic block 59 from 608 to 4083 -- after reload
;;   ======================================================

;;	  0--> b  0: i3803 cx=bp-0xd60                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3801 r13=bp-0x13a0                           :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3802 r12=bp-0x1080                           :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i3804 bx=bp-0x4410                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 608 [bp-0x4e14]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i4715 {ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i4083 dx=cx                                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3803
;;   new tail = 4083

;;   ======================================================
;;   -- basic block 60 from 4168 to 624 -- after reload
;;   ======================================================

;;	  0--> b  0: i4169 xmm6=[`*.LC43']                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i4170 cx=dx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 620 [bx+ax]=0xffffffffffffffff              :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i4168 xmm5=[`*.LC42']                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  2--> b  0: i 615 [ax*0x2+r12]=xmm6                       :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  3--> b  0: i 612 [ax*0x2+r13]=xmm5                       :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  4--> b  0: i 618 [ax*0x2+cx]=xmm6                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  4--> b  0: i 621 {ax=ax+0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	  5--> b  0: i 623 flags=cmp(ax,0x190)                     :athlon-direct,athlon-ieu
;;	  6--> b  0: i 624 pc={(flags!=0)?L622:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 4169
;;   new tail = 624

;;   ======================================================
;;   -- basic block 61 from 4087 to 632 -- after reload
;;   ======================================================

;;	  0--> b  0: i4399 r15=[bp-0x4e98]                         :athlon-direct,athlon-load
;;	  0--> b  0: i4087 r14=dx                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 630 si=`*.LC91'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i4522 dx=bp-0x4e14                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 627 r8=0x63                                 :athlon-direct,athlon-ieu
;;	  1--> b  0: i 628 cx=0x7d00                               :athlon-direct,athlon-ieu
;;	  3--> b  0: i 631 di=r15                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i 632 ax=call [`_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 4399
;;   new tail = 632

;;   ======================================================
;;   -- basic block 62 from 635 to 642 -- after reload
;;   ======================================================

;;	  0--> b  0: i 635 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 637 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 638 cx=`*.LC92'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 639 dx=r13                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 640 si=`*.LC93'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 641 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 642 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 635
;;   new tail = 642

;;   ======================================================
;;   -- basic block 63 from 645 to 652 -- after reload
;;   ======================================================

;;	  0--> b  0: i 645 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 647 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 648 cx=`*.LC94'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 649 dx=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 650 si=`*.LC95'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 651 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 652 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 645
;;   new tail = 652

;;   ======================================================
;;   -- basic block 64 from 655 to 662 -- after reload
;;   ======================================================

;;	  0--> b  0: i 655 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 657 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 658 cx=`*.LC96'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 659 dx=r14                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 660 si=`*.LC97'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 661 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 662 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 655
;;   new tail = 662

;;   ======================================================
;;   -- basic block 65 from 665 to 672 -- after reload
;;   ======================================================

;;	  0--> b  0: i 665 ax=[r15]                                :athlon-direct,athlon-load
;;	  0--> b  0: i 667 r8=0x7d00                               :athlon-direct,athlon-ieu
;;	  0--> b  0: i 668 cx=`*.LC98'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 669 dx=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 670 si=`*.LC99'                             :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 671 di=r15                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 672 ax=call [[ax+0x2a8]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 665
;;   new tail = 672

;;   ======================================================
;;   -- basic block 66 from 4177 to 695 -- after reload
;;   ======================================================

;;	  0--> b  0: i4177 ax=[const(unspec[`nP'] 2)]              :athlon-direct,athlon-load
;;	  0--> b  0: i 694 di=[bp-0x4e60]                          :athlon-direct,athlon-load
;;	  0--> b  0: i 693 si=0x1105                               :athlon-direct,athlon-ieu
;;	  3--> b  0: i 675 [ax]=0                                  :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i4178 ax=[const(unspec[`nN'] 2)]              :athlon-direct,athlon-load
;;	  6--> b  0: i 677 [ax]=0                                  :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i4179 ax=[const(unspec[`nG'] 2)]              :athlon-direct,athlon-load
;;	  9--> b  0: i 679 [ax]=0                                  :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i4180 ax=[const(unspec[`nPiP'] 2)]            :athlon-direct,athlon-load
;;	 12--> b  0: i 681 [ax]=0                                  :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i4181 ax=[const(unspec[`nPiM'] 2)]            :athlon-direct,athlon-load
;;	 15--> b  0: i 683 [ax]=0                                  :athlon-direct,athlon-agu,athlon-store
;;	 15--> b  0: i4182 ax=[const(unspec[`nPi0'] 2)]            :athlon-direct,athlon-load
;;	 18--> b  0: i 685 [ax]=0                                  :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i4183 ax=[const(unspec[`nEta'] 2)]            :athlon-direct,athlon-load
;;	 21--> b  0: i 687 [ax]=0                                  :athlon-direct,athlon-agu,athlon-store
;;	 21--> b  0: i4184 ax=[const(unspec[`nOmega'] 2)]          :athlon-direct,athlon-load
;;	 24--> b  0: i 689 [ax]=0                                  :athlon-direct,athlon-agu,athlon-store
;;	 24--> b  0: i4185 ax=[const(unspec[`nEtaPrime'] 2)]       :athlon-direct,athlon-load
;;	 27--> b  0: i 691 [ax]=0                                  :athlon-direct,athlon-agu,athlon-store
;;	 28--> b  0: i 695 call [`_ZN8TRandom3C1Ej']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 28
;;   new head = 4177
;;   new tail = 695

;;   ======================================================
;;   -- basic block 67 from 54 to 4731 -- after reload
;;   ======================================================

;;	  0--> b  0: i  54 [bp-0x4e88]=0x1                         :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i  55 [bp-0x4e80]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i4731 pc=L2682                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 54
;;   new tail = 4731

;;   ======================================================
;;   -- basic block 68 from 719 to 719 -- after reload
;;   ======================================================

;;	  0--> b  0: i 719 si=sxn([bx+0x43])                       :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 719
;;   new tail = 719

;;   ======================================================
;;   -- basic block 69 from 744 to 745 -- after reload
;;   ======================================================

;;	  0--> b  0: i 744 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  3--> b  0: i 745 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 744
;;   new tail = 745

;;   ======================================================
;;   -- basic block 70 from 748 to 749 -- after reload
;;   ======================================================

;;	  0--> b  0: i 748 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 749 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 748
;;   new tail = 749

;;   ======================================================
;;   -- basic block 71 from 750 to 755 -- after reload
;;   ======================================================

;;	  0--> b  0: i 753 si=`*.LC100'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 752 dx=0x25                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i 754 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 750 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 755 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 753
;;   new tail = 755

;;   ======================================================
;;   -- basic block 72 from 757 to 761 -- after reload
;;   ======================================================

;;	  0--> b  0: i 757 ax=[bx]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i 758 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i 759 r12=[bx+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i 760 flags=cmp(r12,0)                        :athlon-direct,athlon-ieu
;;	 10--> b  0: i 761 pc={(flags==0)?L4733:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 757
;;   new tail = 761

;;   ======================================================
;;   -- basic block 73 from 767 to 768 -- after reload
;;   ======================================================

;;	  0--> b  0: i 767 flags=cmp([r12+0x38],0)                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 768 pc={(flags==0)?L773:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 767
;;   new tail = 768

;;   ======================================================
;;   -- basic block 74 from 770 to 770 -- after reload
;;   ======================================================

;;	  0--> b  0: i 770 si=sxn([r12+0x43])                      :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 770
;;   new tail = 770

;;   ======================================================
;;   -- basic block 75 from 794 to 795 -- after reload
;;   ======================================================

;;	  0--> b  0: i 794 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 795 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 794
;;   new tail = 795

;;   ======================================================
;;   -- basic block 76 from 798 to 799 -- after reload
;;   ======================================================

;;	  0--> b  0: i 798 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 799 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 798
;;   new tail = 799

;;   ======================================================
;;   -- basic block 77 from 800 to 805 -- after reload
;;   ======================================================

;;	  0--> b  0: i 803 si=`*.LC100'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 802 dx=0x25                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i 804 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 800 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 805 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 803
;;   new tail = 805

;;   ======================================================
;;   -- basic block 78 from 807 to 811 -- after reload
;;   ======================================================

;;	  0--> b  0: i 807 ax=[bx]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i 808 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i 809 r12=[bx+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i 810 flags=cmp(r12,0)                        :athlon-direct,athlon-ieu
;;	 10--> b  0: i 811 pc={(flags==0)?L4734:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 807
;;   new tail = 811

;;   ======================================================
;;   -- basic block 79 from 817 to 818 -- after reload
;;   ======================================================

;;	  0--> b  0: i 817 flags=cmp([r12+0x38],0)                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 818 pc={(flags==0)?L823:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 817
;;   new tail = 818

;;   ======================================================
;;   -- basic block 80 from 820 to 820 -- after reload
;;   ======================================================

;;	  0--> b  0: i 820 si=sxn([r12+0x43])                      :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 820
;;   new tail = 820

;;   ======================================================
;;   -- basic block 81 from 844 to 845 -- after reload
;;   ======================================================

;;	  0--> b  0: i 844 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 845 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 844
;;   new tail = 845

;;   ======================================================
;;   -- basic block 82 from 848 to 849 -- after reload
;;   ======================================================

;;	  0--> b  0: i 848 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 849 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 848
;;   new tail = 849

;;   ======================================================
;;   -- basic block 83 from 851 to 855 -- after reload
;;   ======================================================

;;	  0--> b  0: i 854 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i 852 si=`*.LC101'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 851 dx=0x1b                                 :athlon-direct,athlon-ieu
;;	  3--> b  0: i 855 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 854
;;   new tail = 855

;;   ======================================================
;;   -- basic block 84 from 857 to 860 -- after reload
;;   ======================================================

;;	  0--> b  0: i 857 si=[bp-0x4e80]                          :athlon-direct,athlon-load
;;	  0--> b  0: i 859 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  3--> b  0: i 860 ax=call [`_ZNSolsEi']                   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 857
;;   new tail = 860

;;   ======================================================
;;   -- basic block 85 from 861 to 867 -- after reload
;;   ======================================================

;;	  0--> b  0: i 861 r12=ax                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 863 ax=[ax]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i 864 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i 865 bx=[r12+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i 866 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i 867 pc={(flags==0)?L4735:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 861
;;   new tail = 867

;;   ======================================================
;;   -- basic block 86 from 873 to 874 -- after reload
;;   ======================================================

;;	  0--> b  0: i 873 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 874 pc={(flags==0)?L879:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 873
;;   new tail = 874

;;   ======================================================
;;   -- basic block 87 from 876 to 876 -- after reload
;;   ======================================================

;;	  0--> b  0: i 876 si=sxn([bx+0x43])                       :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 876
;;   new tail = 876

;;   ======================================================
;;   -- basic block 88 from 900 to 901 -- after reload
;;   ======================================================

;;	  0--> b  0: i 900 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 901 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 900
;;   new tail = 901

;;   ======================================================
;;   -- basic block 89 from 904 to 905 -- after reload
;;   ======================================================

;;	  0--> b  0: i 904 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 905 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 904
;;   new tail = 905

;;   ======================================================
;;   -- basic block 90 from 907 to 911 -- after reload
;;   ======================================================

;;	  0--> b  0: i 910 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i 908 si=`*.LC100'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 907 dx=0x25                                 :athlon-direct,athlon-ieu
;;	  3--> b  0: i 911 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 910
;;   new tail = 911

;;   ======================================================
;;   -- basic block 91 from 4188 to 919 -- after reload
;;   ======================================================

;;	  0--> b  0: i4188 ax=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i4189 cx=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  3--> b  0: i 914 ax=[ax]                                 :athlon-direct,athlon-load
;;	  6--> b  0: i 915 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  9--> b  0: i 917 bx=[ax+cx+0xf0]                         :athlon-direct,athlon-load
;;	 12--> b  0: i 918 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 13--> b  0: i 919 pc={(flags==0)?L4736:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 13
;;   new head = 4188
;;   new tail = 919

;;   ======================================================
;;   -- basic block 92 from 925 to 926 -- after reload
;;   ======================================================

;;	  0--> b  0: i 925 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 926 pc={(flags==0)?L931:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 925
;;   new tail = 926

;;   ======================================================
;;   -- basic block 93 from 928 to 928 -- after reload
;;   ======================================================

;;	  0--> b  0: i 928 si=sxn([bx+0x43])                       :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 928
;;   new tail = 928

;;   ======================================================
;;   -- basic block 94 from 953 to 954 -- after reload
;;   ======================================================

;;	  0--> b  0: i 953 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  3--> b  0: i 954 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 953
;;   new tail = 954

;;   ======================================================
;;   -- basic block 95 from 957 to 958 -- after reload
;;   ======================================================

;;	  0--> b  0: i 957 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 958 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 957
;;   new tail = 958

;;   ======================================================
;;   -- basic block 96 from 959 to 964 -- after reload
;;   ======================================================

;;	  0--> b  0: i 962 si=`*.LC100'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 961 dx=0x25                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i 963 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 959 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 964 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 962
;;   new tail = 964

;;   ======================================================
;;   -- basic block 97 from 966 to 970 -- after reload
;;   ======================================================

;;	  0--> b  0: i 966 ax=[bx]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i 967 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i 968 r12=[bx+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i 969 flags=cmp(r12,0)                        :athlon-direct,athlon-ieu
;;	 10--> b  0: i 970 pc={(flags==0)?L4737:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 966
;;   new tail = 970

;;   ======================================================
;;   -- basic block 98 from 976 to 977 -- after reload
;;   ======================================================

;;	  0--> b  0: i 976 flags=cmp([r12+0x38],0)                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 977 pc={(flags==0)?L982:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 976
;;   new tail = 977

;;   ======================================================
;;   -- basic block 99 from 979 to 979 -- after reload
;;   ======================================================

;;	  0--> b  0: i 979 si=sxn([r12+0x43])                      :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 979
;;   new tail = 979

;;   ======================================================
;;   -- basic block 100 from 1003 to 1004 -- after reload
;;   ======================================================

;;	  0--> b  0: i1003 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1004 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1003
;;   new tail = 1004

;;   ======================================================
;;   -- basic block 101 from 1007 to 1008 -- after reload
;;   ======================================================

;;	  0--> b  0: i1007 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1008 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1007
;;   new tail = 1008

;;   ======================================================
;;   -- basic block 102 from 1009 to 1014 -- after reload
;;   ======================================================

;;	  0--> b  0: i1012 si=`*.LC100'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1011 dx=0x25                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i1013 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1009 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1014 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1012
;;   new tail = 1014

;;   ======================================================
;;   -- basic block 103 from 1016 to 1020 -- after reload
;;   ======================================================

;;	  0--> b  0: i1016 ax=[bx]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i1017 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1018 r12=[bx+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i1019 flags=cmp(r12,0)                        :athlon-direct,athlon-ieu
;;	 10--> b  0: i1020 pc={(flags==0)?L4738:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 1016
;;   new tail = 1020

;;   ======================================================
;;   -- basic block 104 from 1026 to 1027 -- after reload
;;   ======================================================

;;	  0--> b  0: i1026 flags=cmp([r12+0x38],0)                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1027 pc={(flags==0)?L1032:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1026
;;   new tail = 1027

;;   ======================================================
;;   -- basic block 105 from 1029 to 1029 -- after reload
;;   ======================================================

;;	  0--> b  0: i1029 si=sxn([r12+0x43])                      :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1029
;;   new tail = 1029

;;   ======================================================
;;   -- basic block 106 from 1053 to 1054 -- after reload
;;   ======================================================

;;	  0--> b  0: i1053 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1054 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1053
;;   new tail = 1054

;;   ======================================================
;;   -- basic block 107 from 1057 to 1058 -- after reload
;;   ======================================================

;;	  0--> b  0: i1057 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1058 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1057
;;   new tail = 1058

;;   ======================================================
;;   -- basic block 108 from 1060 to 1066 -- after reload
;;   ======================================================

;;	  0--> b  0: i4521 ax=bp-0x4e10                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1064 si=0x64                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i1060 [bp-0x4e10]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1061 [bp-0x4e08]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1062 [bp-0x4e00]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i1065 di=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i4190 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i4404 [bp-0x4e70]=ax                          :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1066 call [`_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE7reserveEm']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 4521
;;   new tail = 1066

;;   ======================================================
;;   -- basic block 109 from 1068 to 1074 -- after reload
;;   ======================================================

;;	  0--> b  0: i4520 ax=bp-0x4df0                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1072 si=0x64                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i1068 [bp-0x4df0]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1069 [bp-0x4de8]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1070 [bp-0x4de0]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i1073 di=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i4191 r15=ax                                  :athlon-direct,athlon-ieu
;;	  2--> b  0: i4402 [bp-0x4e78]=ax                          :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1074 call [`_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE7reserveEm']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 4520
;;   new tail = 1074

;;   ======================================================
;;   -- basic block 110 from 1077 to 1078 -- after reload
;;   ======================================================

;;	  0--> b  0: i1077 di=[bp-0x4e60]                          :athlon-direct,athlon-load
;;	  3--> b  0: i1078 xmm0=call [`_ZN8TRandom34RndmEv']       :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1077
;;   new tail = 1078

;;   ======================================================
;;   -- basic block 111 from 4192 to 1118 -- after reload
;;   ======================================================

;;	  0--> b  0: i4192 xmm1=[`*.LC102']                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i4032 ax=0x840                                :athlon-direct,athlon-ieu
;;	  1--> b  0: i4033 si=0x8a4                                :athlon-direct,athlon-ieu
;;	  1--> b  0: i4195 xmm2=[`*.LC103']                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  2--> b  0: i3854 flags=cmp(xmm1,xmm0)                    :athlon-vector,athlon-fpsched,athlon-fadd
;;	  3--> b  0: i4193 xmm1=[`*.LC103']                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  3--> b  0: i4519 dx=bp-0x4db0                            :athlon-direct,athlon-agu,nothing
;;	  4--> b  0: i1112 r9=bx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i1113 r8=0x2                                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i1114 cx=0x1                                  :athlon-direct,athlon-ieu
;;	  5--> b  0: i1095 [bp-0x4da0]=xmm1                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  5--> b  0: i1117 di=0x8a4                                :athlon-direct,athlon-ieu
;;	  5--> b  0: i1091 [bp-0x4db0]=0.0                         :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i3858 si={(flags>0)?si:ax}                    :athlon-direct,athlon-ieu
;;	  6--> b  0: i4196 ax=[bp-0x4e88]                          :athlon-direct,athlon-load
;;	  6--> b  0: i1093 [bp-0x4da8]=0.0                         :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i4194 xmm1=[`*.LC104']                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  8--> b  0: i1098 [bp-0x4e18]=0x1                         :athlon-direct,athlon-agu,athlon-store
;;	  8--> b  0: i1100 [bp-0x1d00]=xmm2                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  8--> b  0: i1102 [bp-0x19e0]=0.0                         :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i1109 [pre sp+=0xfffffffffffffff8]=ax         :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i1111 [--sp]=r15                              :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i1097 [bp-0x4d98]=xmm1                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 10--> b  0: i1104 [bp-0x16c0]=0.0                         :athlon-direct,athlon-agu,athlon-store
;;	 11--> b  0: i1105 [bp-0x4730]=0x1                         :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i1106 [bp-0x45a0]=0xc                         :athlon-direct,athlon-agu,athlon-store
;;	 13--> b  0: i1118 ax=call [`_Z9runPythiaiiRKN7Pythia84Vec4EjjRSt6vectorINS_8ParticleESaIS4_EES7_j']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 13
;;   new head = 4192
;;   new tail = 1118

;;   ======================================================
;;   -- basic block 112 from 4713 to 1123 -- after reload
;;   ======================================================

;;	  0--> b  0: i1122 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i4713 cx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  2--> b  0: i4714 si=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  3--> b  0: i1123 pc={(flags!=0)?L4739:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1122
;;   new tail = 1123

;;   ======================================================
;;   -- basic block 113 from 2658 to 2660 -- after reload
;;   ======================================================

;;	  0--> b  0: i2658 di=[bp-0x4df0]                          :athlon-direct,athlon-load
;;	  3--> b  0: i2659 flags=cmp(di,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i2660 pc={(flags==0)?L2664:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 2658
;;   new tail = 2660

;;   ======================================================
;;   -- basic block 114 from 2663 to 2663 -- after reload
;;   ======================================================

;;	  0--> b  0: i2663 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2663
;;   new tail = 2663

;;   ======================================================
;;   -- basic block 115 from 2666 to 2668 -- after reload
;;   ======================================================

;;	  0--> b  0: i2666 di=[bp-0x4e10]                          :athlon-direct,athlon-load
;;	  3--> b  0: i2667 flags=cmp(di,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i2668 pc={(flags==0)?L2676:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 2666
;;   new tail = 2668

;;   ======================================================
;;   -- basic block 116 from 2675 to 2675 -- after reload
;;   ======================================================

;;	  0--> b  0: i2675 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2675
;;   new tail = 2675

;;   ======================================================
;;   -- basic block 117 from 2678 to 2681 -- after reload
;;   ======================================================

;;	  0--> b  0: i2678 {[bp-0x4e80]=[bp-0x4e80]+0x1;clobber flags;}:athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  0--> b  0: i2679 {[bp-0x4e88]=[bp-0x4e88]+0x16;clobber flags;}:athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  1--> b  0: i4462 ax=[bp-0x4e80]                          :athlon-direct,athlon-load
;;	  4--> b  0: i2680 flags=cmp(ax,0x64)                      :athlon-direct,athlon-ieu
;;	  5--> b  0: i2681 pc={(flags==0)?L4740:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 2678
;;   new tail = 2681

;;   ======================================================
;;   -- basic block 118 from 698 to 702 -- after reload
;;   ======================================================

;;	  0--> b  0: i 701 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i 699 si=`*.LC100'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 698 dx=0x25                                 :athlon-direct,athlon-ieu
;;	  3--> b  0: i 702 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 701
;;   new tail = 702

;;   ======================================================
;;   -- basic block 119 from 4186 to 710 -- after reload
;;   ======================================================

;;	  0--> b  0: i4186 ax=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i4187 cx=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  3--> b  0: i 705 ax=[ax]                                 :athlon-direct,athlon-load
;;	  6--> b  0: i 706 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  9--> b  0: i 708 bx=[ax+cx+0xf0]                         :athlon-direct,athlon-load
;;	 12--> b  0: i 709 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 13--> b  0: i 710 pc={(flags==0)?L4741:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 13
;;   new head = 4186
;;   new tail = 710

;;   ======================================================
;;   -- basic block 120 from 716 to 717 -- after reload
;;   ======================================================

;;	  0--> b  0: i 716 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 717 pc={(flags!=0)?L4742:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 716
;;   new tail = 717

;;   ======================================================
;;   -- basic block 121 from 724 to 725 -- after reload
;;   ======================================================

;;	  0--> b  0: i 724 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 725 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 724
;;   new tail = 725

;;   ======================================================
;;   -- basic block 122 from 727 to 732 -- after reload
;;   ======================================================

;;	  0--> b  0: i 727 ax=[bx]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i  56 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 728 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 731 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i 732 pc={(flags==0)?L740:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 727
;;   new tail = 732

;;   ======================================================
;;   -- basic block 123 from 735 to 736 -- after reload
;;   ======================================================

;;	  0--> b  0: i 735 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 736 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 735
;;   new tail = 736

;;   ======================================================
;;   -- basic block 124 from 739 to 4743 -- after reload
;;   ======================================================

;;	  0--> b  0: i 739 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4743 pc=L740                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 739
;;   new tail = 4743

;;   ======================================================
;;   -- basic block 125 from 1034 to 1035 -- after reload
;;   ======================================================

;;	  0--> b  0: i1034 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1035 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1034
;;   new tail = 1035

;;   ======================================================
;;   -- basic block 126 from 1037 to 1042 -- after reload
;;   ======================================================

;;	  0--> b  0: i1037 ax=[r12]                                :athlon-direct,athlon-load
;;	  0--> b  0: i  62 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i1038 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1041 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i1042 pc={(flags==0)?L1050:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1037
;;   new tail = 1042

;;   ======================================================
;;   -- basic block 127 from 1045 to 1046 -- after reload
;;   ======================================================

;;	  0--> b  0: i1045 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1046 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1045
;;   new tail = 1046

;;   ======================================================
;;   -- basic block 128 from 1049 to 4745 -- after reload
;;   ======================================================

;;	  0--> b  0: i1049 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4745 pc=L1050                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1049
;;   new tail = 4745

;;   ======================================================
;;   -- basic block 129 from 984 to 985 -- after reload
;;   ======================================================

;;	  0--> b  0: i 984 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 985 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 984
;;   new tail = 985

;;   ======================================================
;;   -- basic block 130 from 987 to 992 -- after reload
;;   ======================================================

;;	  0--> b  0: i 987 ax=[r12]                                :athlon-direct,athlon-load
;;	  0--> b  0: i  61 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 988 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 991 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i 992 pc={(flags==0)?L1000:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 987
;;   new tail = 992

;;   ======================================================
;;   -- basic block 131 from 995 to 996 -- after reload
;;   ======================================================

;;	  0--> b  0: i 995 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 996 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 995
;;   new tail = 996

;;   ======================================================
;;   -- basic block 132 from 999 to 4747 -- after reload
;;   ======================================================

;;	  0--> b  0: i 999 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4747 pc=L1000                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 999
;;   new tail = 4747

;;   ======================================================
;;   -- basic block 133 from 933 to 934 -- after reload
;;   ======================================================

;;	  0--> b  0: i 933 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 934 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 933
;;   new tail = 934

;;   ======================================================
;;   -- basic block 134 from 936 to 941 -- after reload
;;   ======================================================

;;	  0--> b  0: i 936 ax=[bx]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i  60 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 937 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 940 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i 941 pc={(flags==0)?L949:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 936
;;   new tail = 941

;;   ======================================================
;;   -- basic block 135 from 944 to 945 -- after reload
;;   ======================================================

;;	  0--> b  0: i 944 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 945 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 944
;;   new tail = 945

;;   ======================================================
;;   -- basic block 136 from 948 to 4749 -- after reload
;;   ======================================================

;;	  0--> b  0: i 948 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4749 pc=L949                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 948
;;   new tail = 4749

;;   ======================================================
;;   -- basic block 137 from 881 to 882 -- after reload
;;   ======================================================

;;	  0--> b  0: i 881 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 882 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 881
;;   new tail = 882

;;   ======================================================
;;   -- basic block 138 from 884 to 889 -- after reload
;;   ======================================================

;;	  0--> b  0: i 884 ax=[bx]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i  59 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 885 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 888 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i 889 pc={(flags==0)?L897:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 884
;;   new tail = 889

;;   ======================================================
;;   -- basic block 139 from 892 to 893 -- after reload
;;   ======================================================

;;	  0--> b  0: i 892 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 893 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 892
;;   new tail = 893

;;   ======================================================
;;   -- basic block 140 from 896 to 4751 -- after reload
;;   ======================================================

;;	  0--> b  0: i 896 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4751 pc=L897                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 896
;;   new tail = 4751

;;   ======================================================
;;   -- basic block 141 from 775 to 776 -- after reload
;;   ======================================================

;;	  0--> b  0: i 775 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 776 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 775
;;   new tail = 776

;;   ======================================================
;;   -- basic block 142 from 778 to 783 -- after reload
;;   ======================================================

;;	  0--> b  0: i 778 ax=[r12]                                :athlon-direct,athlon-load
;;	  0--> b  0: i  57 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 779 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 782 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i 783 pc={(flags==0)?L791:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 778
;;   new tail = 783

;;   ======================================================
;;   -- basic block 143 from 786 to 787 -- after reload
;;   ======================================================

;;	  0--> b  0: i 786 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 787 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 786
;;   new tail = 787

;;   ======================================================
;;   -- basic block 144 from 790 to 4753 -- after reload
;;   ======================================================

;;	  0--> b  0: i 790 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4753 pc=L791                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 790
;;   new tail = 4753

;;   ======================================================
;;   -- basic block 145 from 825 to 826 -- after reload
;;   ======================================================

;;	  0--> b  0: i 825 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 826 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 825
;;   new tail = 826

;;   ======================================================
;;   -- basic block 146 from 828 to 833 -- after reload
;;   ======================================================

;;	  0--> b  0: i 828 ax=[r12]                                :athlon-direct,athlon-load
;;	  0--> b  0: i  58 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 829 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 832 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i 833 pc={(flags==0)?L841:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 828
;;   new tail = 833

;;   ======================================================
;;   -- basic block 147 from 836 to 837 -- after reload
;;   ======================================================

;;	  0--> b  0: i 836 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 837 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 836
;;   new tail = 837

;;   ======================================================
;;   -- basic block 148 from 840 to 4755 -- after reload
;;   ======================================================

;;	  0--> b  0: i 840 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4755 pc=L841                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 840
;;   new tail = 4755

;;   ======================================================
;;   -- basic block 149 from 1125 to 1135 -- after reload
;;   ======================================================

;;	  0--> b  0: i1125 bx=[bp-0x4e08]                          :athlon-direct,athlon-load
;;	  0--> b  0: i1126 {bx=bx-[bp-0x4e10];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  0--> b  0: i1132 si=`*.LC105'                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i1134 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  1--> b  0: i1128 ax=0xcccccccccccccccd                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1131 dx=0x2a                                 :athlon-direct,athlon-ieu
;;	  4--> b  0: i1127 {bx=bx>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i1129 {bx=bx*ax;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	  6--> b  0: i1135 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 1125
;;   new tail = 1135

;;   ======================================================
;;   -- basic block 150 from 1137 to 1140 -- after reload
;;   ======================================================

;;	  0--> b  0: i1139 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1137 si=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1140 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1139
;;   new tail = 1140

;;   ======================================================
;;   -- basic block 151 from 1141 to 1147 -- after reload
;;   ======================================================

;;	  0--> b  0: i1141 r12=ax                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1143 ax=[ax]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i1144 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1145 bx=[r12+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i1146 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i1147 pc={(flags==0)?L4757:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 1141
;;   new tail = 1147

;;   ======================================================
;;   -- basic block 152 from 1153 to 1154 -- after reload
;;   ======================================================

;;	  0--> b  0: i1153 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1154 pc={(flags==0)?L1159:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1153
;;   new tail = 1154

;;   ======================================================
;;   -- basic block 153 from 1156 to 1156 -- after reload
;;   ======================================================

;;	  0--> b  0: i1156 ax=[bx+0x43]                            :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1156
;;   new tail = 1156

;;   ======================================================
;;   -- basic block 154 from 1177 to 1180 -- after reload
;;   ======================================================

;;	  0--> b  0: i1177 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i1179 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1180 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1177
;;   new tail = 1180

;;   ======================================================
;;   -- basic block 155 from 1183 to 1184 -- after reload
;;   ======================================================

;;	  0--> b  0: i1183 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1184 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1183
;;   new tail = 1184

;;   ======================================================
;;   -- basic block 156 from 1186 to 1196 -- after reload
;;   ======================================================

;;	  0--> b  0: i1186 bx=[bp-0x4de8]                          :athlon-direct,athlon-load
;;	  0--> b  0: i1187 {bx=bx-[bp-0x4df0];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  0--> b  0: i1193 si=`*.LC106'                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i1195 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  1--> b  0: i1189 ax=0xcccccccccccccccd                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1192 dx=0x2b                                 :athlon-direct,athlon-ieu
;;	  4--> b  0: i1188 {bx=bx>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i1190 {bx=bx*ax;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	  6--> b  0: i1196 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 1186
;;   new tail = 1196

;;   ======================================================
;;   -- basic block 157 from 1198 to 1201 -- after reload
;;   ======================================================

;;	  0--> b  0: i1200 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1198 si=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1201 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1200
;;   new tail = 1201

;;   ======================================================
;;   -- basic block 158 from 1202 to 1208 -- after reload
;;   ======================================================

;;	  0--> b  0: i1202 r12=ax                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1204 ax=[ax]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i1205 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1206 bx=[r12+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i1207 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i1208 pc={(flags==0)?L4758:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 1202
;;   new tail = 1208

;;   ======================================================
;;   -- basic block 159 from 1214 to 1215 -- after reload
;;   ======================================================

;;	  0--> b  0: i1214 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1215 pc={(flags==0)?L1220:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1214
;;   new tail = 1215

;;   ======================================================
;;   -- basic block 160 from 1217 to 1217 -- after reload
;;   ======================================================

;;	  0--> b  0: i1217 ax=[bx+0x43]                            :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1217
;;   new tail = 1217

;;   ======================================================
;;   -- basic block 161 from 1238 to 1241 -- after reload
;;   ======================================================

;;	  0--> b  0: i1238 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i1240 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1241 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1238
;;   new tail = 1241

;;   ======================================================
;;   -- basic block 162 from 1244 to 1245 -- after reload
;;   ======================================================

;;	  0--> b  0: i1244 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1245 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1244
;;   new tail = 1245

;;   ======================================================
;;   -- basic block 163 from 1247 to 1257 -- after reload
;;   ======================================================

;;	  0--> b  0: i1247 bx=[bp-0x4e08]                          :athlon-direct,athlon-load
;;	  0--> b  0: i1248 {bx=bx-[bp-0x4e10];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  0--> b  0: i1254 si=`*.LC107'                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i1256 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  1--> b  0: i1250 ax=0xcccccccccccccccd                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1253 dx=0x14                                 :athlon-direct,athlon-ieu
;;	  4--> b  0: i1249 {bx=bx>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i1251 {bx=bx*ax;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	  6--> b  0: i1257 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 1247
;;   new tail = 1257

;;   ======================================================
;;   -- basic block 164 from 1259 to 1262 -- after reload
;;   ======================================================

;;	  0--> b  0: i1261 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1259 si=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1262 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1261
;;   new tail = 1262

;;   ======================================================
;;   -- basic block 165 from 1263 to 1269 -- after reload
;;   ======================================================

;;	  0--> b  0: i1263 r12=ax                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1265 ax=[ax]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i1266 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1267 bx=[r12+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i1268 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i1269 pc={(flags==0)?L4759:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 1263
;;   new tail = 1269

;;   ======================================================
;;   -- basic block 166 from 1275 to 1276 -- after reload
;;   ======================================================

;;	  0--> b  0: i1275 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1276 pc={(flags==0)?L1281:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1275
;;   new tail = 1276

;;   ======================================================
;;   -- basic block 167 from 1278 to 1278 -- after reload
;;   ======================================================

;;	  0--> b  0: i1278 ax=[bx+0x43]                            :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1278
;;   new tail = 1278

;;   ======================================================
;;   -- basic block 168 from 1299 to 1302 -- after reload
;;   ======================================================

;;	  0--> b  0: i1299 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i1301 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1302 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1299
;;   new tail = 1302

;;   ======================================================
;;   -- basic block 169 from 1305 to 1306 -- after reload
;;   ======================================================

;;	  0--> b  0: i1305 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1306 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1305
;;   new tail = 1306

;;   ======================================================
;;   -- basic block 170 from 1308 to 1315 -- after reload
;;   ======================================================

;;	  0--> b  0: i1308 ax=[bp-0x4e08]                          :athlon-direct,athlon-load
;;	  0--> b  0: i1309 cx=[bp-0x4e10]                          :athlon-direct,athlon-load
;;	  0--> b  0: i1312 r14=0xcccccccccccccccd                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i4198 dx=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i4405 [bp-0x4e40]=cx                          :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i1310 {dx=dx-cx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  5--> b  0: i1311 {dx=dx>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  6--> b  0: i1313 {dx=dx*r14;clobber flags;}              :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	 10--> b  0: i1314 flags=cmp(dx,0)                         :athlon-direct,athlon-ieu
;;	 11--> b  0: i1315 pc={(flags==0)?L1424:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 11
;;   new head = 1308
;;   new tail = 1315

;;   ======================================================
;;   -- basic block 171 from 4711 to 4760 -- after reload
;;   ======================================================

;;	  0--> b  0: i4711 {bx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i4712 {r12=0;clobber flags;}                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i4760 pc=L1417                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 4711
;;   new tail = 4760

;;   ======================================================
;;   -- basic block 172 from 1382 to 1382 -- after reload
;;   ======================================================

;;	  0--> b  0: i1382 si=sxn([bx+0x43])                       :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1382
;;   new tail = 1382

;;   ======================================================
;;   -- basic block 173 from 1406 to 1407 -- after reload
;;   ======================================================

;;	  0--> b  0: i1406 di=r13                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1407 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1406
;;   new tail = 1407

;;   ======================================================
;;   -- basic block 174 from 1410 to 1411 -- after reload
;;   ======================================================

;;	  0--> b  0: i1410 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1411 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1410
;;   new tail = 1411

;;   ======================================================
;;   -- basic block 175 from 4866 to 1423 -- after reload
;;   ======================================================

;;	  0--> b  0: i1415 ax=[bp-0x4e08]                          :athlon-direct,athlon-load
;;	  0--> b  0: i1416 cx=[bp-0x4e10]                          :athlon-direct,athlon-load
;;	  0--> b  0: i4866 bx=zxn(r12+0x1)                         :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i4542 r12=bx                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i4204 dx=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i4407 [bp-0x4e40]=cx                          :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i1418 {dx=dx-cx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  5--> b  0: i1419 {dx=dx>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  6--> b  0: i1421 {dx=dx*r14;clobber flags;}              :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	 10--> b  0: i1422 flags=cmp(bx,dx)                        :athlon-direct,athlon-ieu
;;	 11--> b  0: i1423 pc={(geu(flags,0))?L1424:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 11
;;   new head = 1415
;;   new tail = 1423

;;   ======================================================
;;   -- basic block 176 from 1320 to 1331 -- after reload
;;   ======================================================

;;	  0--> b  0: i1320 ax=bx<<0x2+bx                           :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1330 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1328 si=`*.LC108'                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i1327 dx=0x16                                 :athlon-direct,athlon-ieu
;;	  2--> b  0: i1321 {ax=ax<<0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  2--> b  0: i1323 {ax=ax+[bp-0x4e40];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  6--> b  0: i1325 xmm2=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  6--> b  0: i1324 r13=[ax+0xc]                            :athlon-direct,athlon-load
;;	  7--> b  0: i1326 r15=[ax+0x8]                            :athlon-direct,athlon-load
;;	  8--> b  0: i4202 [bp-0x4e38]=xmm2                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  9--> b  0: i1331 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 1320
;;   new tail = 1331

;;   ======================================================
;;   -- basic block 177 from 1333 to 1336 -- after reload
;;   ======================================================

;;	  0--> b  0: i1335 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1333 si=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1336 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1335
;;   new tail = 1336

;;   ======================================================
;;   -- basic block 178 from 1337 to 1342 -- after reload
;;   ======================================================

;;	  0--> b  0: i1340 si=`*.LC109'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1339 dx=0x4                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1341 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1337 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1342 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1340
;;   new tail = 1342

;;   ======================================================
;;   -- basic block 179 from 1344 to 1346 -- after reload
;;   ======================================================

;;	  0--> b  0: i1344 si=r15                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1345 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1346 ax=call [`_ZNSolsEi']                   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1344
;;   new tail = 1346

;;   ======================================================
;;   -- basic block 180 from 1347 to 1352 -- after reload
;;   ======================================================

;;	  0--> b  0: i1350 si=`*.LC28'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1349 dx=0x4                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1351 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1347 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1352 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1350
;;   new tail = 1352

;;   ======================================================
;;   -- basic block 181 from 1354 to 1356 -- after reload
;;   ======================================================

;;	  0--> b  0: i1354 xmm0=[bp-0x4e38]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i1355 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1356 ax=call [`_ZNSo9_M_insertIdEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1354
;;   new tail = 1356

;;   ======================================================
;;   -- basic block 182 from 1357 to 1362 -- after reload
;;   ======================================================

;;	  0--> b  0: i1360 si=`*.LC110'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1359 dx=0x8                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1361 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1357 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1362 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1360
;;   new tail = 1362

;;   ======================================================
;;   -- basic block 183 from 1364 to 1366 -- after reload
;;   ======================================================

;;	  0--> b  0: i1364 si=r13                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1365 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1366 ax=call [`_ZNSolsEi']                   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1364
;;   new tail = 1366

;;   ======================================================
;;   -- basic block 184 from 1367 to 1373 -- after reload
;;   ======================================================

;;	  0--> b  0: i1367 r13=ax                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1369 ax=[ax]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i1370 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1371 bx=[r13+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i1372 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i1373 pc={(flags==0)?L4762:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 1367
;;   new tail = 1373

;;   ======================================================
;;   -- basic block 185 from 1379 to 1380 -- after reload
;;   ======================================================

;;	  0--> b  0: i1379 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1380 pc={(flags!=0)?L4763:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1379
;;   new tail = 1380

;;   ======================================================
;;   -- basic block 186 from 1387 to 1388 -- after reload
;;   ======================================================

;;	  0--> b  0: i1387 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1388 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1387
;;   new tail = 1388

;;   ======================================================
;;   -- basic block 187 from 1390 to 1395 -- after reload
;;   ======================================================

;;	  0--> b  0: i1390 ax=[bx]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i  70 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i1391 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1394 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i1395 pc={(flags==0)?L1403:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1390
;;   new tail = 1395

;;   ======================================================
;;   -- basic block 188 from 1398 to 1399 -- after reload
;;   ======================================================

;;	  0--> b  0: i1398 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1399 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1398
;;   new tail = 1399

;;   ======================================================
;;   -- basic block 189 from 1402 to 4764 -- after reload
;;   ======================================================

;;	  0--> b  0: i1402 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4764 pc=L1403                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1402
;;   new tail = 4764

;;   ======================================================
;;   -- basic block 190 from 1426 to 4210 -- after reload
;;   ======================================================

;;	  0--> b  0: i1426 cx=[bp-0x4de8]                          :athlon-direct,athlon-load
;;	  0--> b  0: i  72 [bp-0x4e50]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i1451 r15=0xcccccccccccccccd                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i4207 [bp-0x4eb0]=cx                          :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1427 cx=[bp-0x4df0]                          :athlon-direct,athlon-load
;;	  6--> b  0: i4208 [bp-0x4eb8]=cx                          :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i4209 cx=[bp-0x4e88]                          :athlon-direct,athlon-load
;;	  9--> b  0: i  71 [bp-0x4e48]=cx                          :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i4211 cx=[bp-0x4e40]                          :athlon-direct,athlon-load
;;	 12--> b  0: i1856 {cx=cx+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
;;	 13--> b  0: i4210 [bp-0x4e58]=cx                          :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 13
;;   new head = 1426
;;   new tail = 4210

;;   ======================================================
;;   -- basic block 191 from 4408 to 1430 -- after reload
;;   ======================================================

;;	  0--> b  0: i4408 bx=[bp-0x4e40]                          :athlon-direct,athlon-load
;;	  3--> b  0: i1429 flags=cmp(bx,ax)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i1430 pc={(flags==0)?L2241:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 4408
;;   new tail = 1430

;;   ======================================================
;;   -- basic block 192 from 1432 to 1435 -- after reload
;;   ======================================================

;;	  0--> b  0: i1434 di=[bp-0x4e60]                          :athlon-direct,athlon-load
;;	  0--> b  0: i1432 {[bp-0x4e48]=[bp-0x4e48]+0x1;clobber flags;}:athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  3--> b  0: i1435 xmm0=call [`_ZN8TRandom34RndmEv']       :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1434
;;   new tail = 1435

;;   ======================================================
;;   -- basic block 193 from 4215 to 1458 -- after reload
;;   ======================================================

;;	  0--> b  0: i4215 xmm1=[`*.LC102']                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i4031 r14=0x840                               :athlon-direct,athlon-ieu
;;	  1--> b  0: i4216 ax=0x8a4                                :athlon-direct,athlon-ieu
;;	  1--> b  0: i1447 r13=[bx+0x8]                            :athlon-direct,athlon-load
;;	  1--> b  0: i1448 bx=[bp-0x4e08]                          :athlon-direct,athlon-load
;;	  2--> b  0: i3859 flags=cmp(xmm1,xmm0)                    :athlon-vector,athlon-fpsched,athlon-fadd
;;	  3--> b  0: i1457 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  3--> b  0: i1455 si=`*.LC111'                            :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i1454 dx=0x18                                 :athlon-direct,athlon-ieu
;;	  6--> b  0: i3863 r14={(flags>0)?ax:r14}                  :athlon-direct,athlon-ieu
;;	  6--> b  0: i1449 {bx=bx-[bp-0x4e10];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	 10--> b  0: i1450 {bx=bx>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	 11--> b  0: i1452 {bx=bx*r15;clobber flags;}              :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	 12--> b  0: i1458 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 12
;;   new head = 4215
;;   new tail = 1458

;;   ======================================================
;;   -- basic block 194 from 1460 to 1464 -- after reload
;;   ======================================================

;;	  0--> b  0: i1460 si=zxn([bp-0x4e50])                     :athlon-direct,athlon-load,athlon-ieu
;;	  0--> b  0: i1463 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  4--> b  0: i1464 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1460
;;   new tail = 1464

;;   ======================================================
;;   -- basic block 195 from 1465 to 1470 -- after reload
;;   ======================================================

;;	  0--> b  0: i1468 si=`*.LC112'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1467 dx=0x3                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1469 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1465 r12=ax                                  :athlon-direct,athlon-ieu
;;	  2--> b  0: i1470 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1468
;;   new tail = 1470

;;   ======================================================
;;   -- basic block 196 from 1472 to 1474 -- after reload
;;   ======================================================

;;	  0--> b  0: i1472 si=bx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1473 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1474 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1472
;;   new tail = 1474

;;   ======================================================
;;   -- basic block 197 from 1475 to 1480 -- after reload
;;   ======================================================

;;	  0--> b  0: i1478 si=`*.LC113'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1477 dx=0x5                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1479 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1475 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1480 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1478
;;   new tail = 1480

;;   ======================================================
;;   -- basic block 198 from 1482 to 1484 -- after reload
;;   ======================================================

;;	  0--> b  0: i1482 si=r13                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1483 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1484 ax=call [`_ZNSolsEi']                   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1482
;;   new tail = 1484

;;   ======================================================
;;   -- basic block 199 from 1485 to 1490 -- after reload
;;   ======================================================

;;	  0--> b  0: i1488 si=`*.LC114'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1487 dx=0x7                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1489 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1485 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1490 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1488
;;   new tail = 1490

;;   ======================================================
;;   -- basic block 200 from 1492 to 1494 -- after reload
;;   ======================================================

;;	  0--> b  0: i1492 si=r14                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1493 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1494 ax=call [`_ZNSolsEi']                   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1492
;;   new tail = 1494

;;   ======================================================
;;   -- basic block 201 from 1495 to 1501 -- after reload
;;   ======================================================

;;	  0--> b  0: i1495 r12=ax                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1497 ax=[ax]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i1498 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1499 bx=[r12+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i1500 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i1501 pc={(flags==0)?L4766:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 1495
;;   new tail = 1501

;;   ======================================================
;;   -- basic block 202 from 1507 to 1508 -- after reload
;;   ======================================================

;;	  0--> b  0: i1507 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1508 pc={(flags==0)?L1513:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1507
;;   new tail = 1508

;;   ======================================================
;;   -- basic block 203 from 1510 to 1510 -- after reload
;;   ======================================================

;;	  0--> b  0: i1510 si=sxn([bx+0x43])                       :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1510
;;   new tail = 1510

;;   ======================================================
;;   -- basic block 204 from 1534 to 1535 -- after reload
;;   ======================================================

;;	  0--> b  0: i1534 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1535 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1534
;;   new tail = 1535

;;   ======================================================
;;   -- basic block 205 from 1538 to 1539 -- after reload
;;   ======================================================

;;	  0--> b  0: i1538 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1539 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1538
;;   new tail = 1539

;;   ======================================================
;;   -- basic block 206 from 4219 to 1543 -- after reload
;;   ======================================================

;;	  0--> b  0: i4219 ax=[bp-0x4e40]                          :athlon-direct,athlon-load
;;	  3--> b  0: i1541 di=[ax+0x8]                             :athlon-direct,athlon-load
;;	  6--> b  0: i1542 flags=cmp(di,0x8a4)                     :athlon-direct,athlon-ieu
;;	  7--> b  0: i1543 pc={(flags==0)?L4767:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 4219
;;   new tail = 1543

;;   ======================================================
;;   -- basic block 207 from 1674 to 1684 -- after reload
;;   ======================================================

;;	  0--> b  0: i4235 ax=di                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1674 {[bp-0x4e50]=[bp-0x4e50]+0x1;clobber flags;}:athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  1--> b  0: i1675 {ax=ax>>0x1f;clobber flags;}            :athlon-direct,athlon-ieu
;;	  2--> b  0: i4237 bx=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1676 {bx=bx^di;clobber flags;}               :athlon-direct,athlon-ieu
;;	  4--> b  0: i1677 {bx=bx-ax;clobber flags;}               :athlon-direct,athlon-ieu
;;	  5--> b  0: i1678 flags=cmp(bx,0x8a4)                     :athlon-direct,athlon-ieu
;;	  6--> b  0: i1679 dx=flags!=0                             :athlon-direct,athlon-ieu
;;	  6--> b  0: i1680 flags=cmp(bx,0x840)                     :athlon-direct,athlon-ieu
;;	  7--> b  0: i1681 ax=flags!=0                             :athlon-direct,athlon-ieu
;;	  8--> b  0: i1683 flags=cmp(dx&ax,0)                      :athlon-direct,athlon-ieu
;;	  9--> b  0: i1684 pc={(flags==0)?L1831:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 4235
;;   new tail = 1684

;;   ======================================================
;;   -- basic block 208 from 1687 to 1688 -- after reload
;;   ======================================================

;;	  0--> b  0: i1687 flags=cmp(bx,0xd3)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i1688 pc={(flags!=0)?L4768:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1687
;;   new tail = 1688

;;   ======================================================
;;   -- basic block 209 from 4421 to 1852 -- after reload
;;   ======================================================

;;	  0--> b  0: i4421 ax=[bp-0x4e40]                          :athlon-direct,athlon-load
;;	  0--> b  0: i1846 r9=[bp-0x4e70]                          :athlon-direct,athlon-load
;;	  0--> b  0: i1847 r8=0x3                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1849 dx=[bp-0x4e68]                          :athlon-direct,athlon-load
;;	  1--> b  0: i1848 cx=0x1                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1850 si=r14                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i1833 xmm0=[ax+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  5--> b  0: i1834 [bp-0x4d90]=xmm0                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  6--> b  0: i1835 xmm0=[ax+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  8--> b  0: i1836 [bp-0x4d88]=xmm0                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  9--> b  0: i1837 xmm0=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 11--> b  0: i1838 [bp-0x4d80]=xmm0                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 12--> b  0: i1839 xmm0=[ax+0x40]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 12--> b  0: i4248 ax=[bp-0x4e48]                          :athlon-direct,athlon-load
;;	 14--> b  0: i1840 [bp-0x4d78]=xmm0                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 15--> b  0: i1843 [pre sp+=0xfffffffffffffff8]=ax         :athlon-direct,athlon-agu,athlon-store
;;	 15--> b  0: i1845 [--sp]=[bp-0x4e78]                      :athlon-direct,athlon-agu,athlon-store
;;	 17--> b  0: i1852 ax=call [`_Z9runPythiaiiRKN7Pythia84Vec4EjjRSt6vectorINS_8ParticleESaIS4_EES7_j']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 17
;;   new head = 4421
;;   new tail = 1852

;;   ======================================================
;;   -- basic block 210 from 4707 to 1858 -- after reload
;;   ======================================================

;;	  0--> b  0: i1855 si=[bp-0x4e08]                          :athlon-direct,athlon-load
;;	  0--> b  0: i1857 flags=cmp(si,[bp-0x4e58])               :athlon-direct,athlon-load,athlon-ieu
;;	  1--> b  0: i4707 ax=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  2--> b  0: i4708 dx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  4--> b  0: i1858 pc={(flags==0)?L1877:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1855
;;   new tail = 1858

;;   ======================================================
;;   -- basic block 211 from 4252 to 1882 -- after reload
;;   ======================================================

;;	  0--> b  0: i4252 cx=si                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1876 {cx=cx-[bp-0x4e58];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i4255 ax=cx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i1878 {ax=ax>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  6--> b  0: i1880 {ax=ax*r15;clobber flags;}              :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	 10--> b  0: i1881 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	 11--> b  0: i1882 pc={(flags<=0)?L1877:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 11
;;   new head = 4252
;;   new tail = 1882

;;   ======================================================
;;   -- basic block 212 from 4422 to 1884 -- after reload
;;   ======================================================

;;	  0--> b  0: i4422 ax=[bp-0x4e40]                          :athlon-direct,athlon-load
;;	  3--> b  0: i1884 {cx=cx+ax;clobber flags;}               :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 4422
;;   new tail = 1884

rescanning insn with uid = 1887.
rescanning insn with uid = 1887.
rescanning insn with uid = 1888.
rescanning insn with uid = 1888.
rescanning insn with uid = 1889.
rescanning insn with uid = 1889.
rescanning insn with uid = 1890.
rescanning insn with uid = 1890.
rescanning insn with uid = 1891.
rescanning insn with uid = 1891.
rescanning insn with uid = 1892.
rescanning insn with uid = 1892.
rescanning insn with uid = 1893.
rescanning insn with uid = 1893.
rescanning insn with uid = 1894.
rescanning insn with uid = 1894.
rescanning insn with uid = 1895.
rescanning insn with uid = 1895.
rescanning insn with uid = 1896.
rescanning insn with uid = 1896.
rescanning insn with uid = 1897.
rescanning insn with uid = 1897.
rescanning insn with uid = 1898.
rescanning insn with uid = 1898.
rescanning insn with uid = 1899.
rescanning insn with uid = 1899.
rescanning insn with uid = 1900.
rescanning insn with uid = 1900.
rescanning insn with uid = 1901.
rescanning insn with uid = 1901.
rescanning insn with uid = 1902.
rescanning insn with uid = 1902.
rescanning insn with uid = 1903.
rescanning insn with uid = 1903.
rescanning insn with uid = 1904.
rescanning insn with uid = 1904.
rescanning insn with uid = 1905.
rescanning insn with uid = 1905.
rescanning insn with uid = 1906.
rescanning insn with uid = 1906.
rescanning insn with uid = 1907.
rescanning insn with uid = 1907.
rescanning insn with uid = 1908.
rescanning insn with uid = 1908.
rescanning insn with uid = 1909.
rescanning insn with uid = 1909.
rescanning insn with uid = 1910.
rescanning insn with uid = 1910.
rescanning insn with uid = 1911.
rescanning insn with uid = 1911.
rescanning insn with uid = 1912.
rescanning insn with uid = 1912.
rescanning insn with uid = 1913.
rescanning insn with uid = 1913.
rescanning insn with uid = 1914.
rescanning insn with uid = 1914.
rescanning insn with uid = 1915.
rescanning insn with uid = 1915.
rescanning insn with uid = 1916.
rescanning insn with uid = 1916.
rescanning insn with uid = 1917.
rescanning insn with uid = 1917.
rescanning insn with uid = 1918.
rescanning insn with uid = 1918.
rescanning insn with uid = 1919.
rescanning insn with uid = 1919.
rescanning insn with uid = 1920.
rescanning insn with uid = 1920.
rescanning insn with uid = 1921.
rescanning insn with uid = 1921.
rescanning insn with uid = 1922.
rescanning insn with uid = 1922.
rescanning insn with uid = 1923.
rescanning insn with uid = 1923.
rescanning insn with uid = 1924.
rescanning insn with uid = 1924.
rescanning insn with uid = 1925.
rescanning insn with uid = 1925.
rescanning insn with uid = 1926.
rescanning insn with uid = 1926.
rescanning insn with uid = 1927.
rescanning insn with uid = 1927.
rescanning insn with uid = 1928.
rescanning insn with uid = 1928.
rescanning insn with uid = 1929.
rescanning insn with uid = 1929.
rescanning insn with uid = 1930.
rescanning insn with uid = 1930.
rescanning insn with uid = 1931.
rescanning insn with uid = 1931.
rescanning insn with uid = 1932.
rescanning insn with uid = 1932.
;;   ======================================================
;;   -- basic block 213 from 1887 to 1935 -- after reload
;;   ======================================================

;;	  0--> b  0: i1887 dx=[ax+0xa8]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1903 xmm0=[ax+0xc8]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  1--> b  0: i4706 {ax=ax+0xa0;clobber flags;}             :athlon-direct,athlon-ieu
rescanning insn with uid = 1932.
rescanning insn with uid = 1931.
rescanning insn with uid = 1930.
rescanning insn with uid = 1929.
rescanning insn with uid = 1928.
rescanning insn with uid = 1927.
rescanning insn with uid = 1926.
rescanning insn with uid = 1925.
rescanning insn with uid = 1924.
rescanning insn with uid = 1923.
rescanning insn with uid = 1922.
rescanning insn with uid = 1921.
rescanning insn with uid = 1920.
rescanning insn with uid = 1919.
rescanning insn with uid = 1918.
rescanning insn with uid = 1917.
rescanning insn with uid = 1916.
rescanning insn with uid = 1915.
rescanning insn with uid = 1914.
rescanning insn with uid = 1913.
rescanning insn with uid = 1912.
rescanning insn with uid = 1911.
rescanning insn with uid = 1910.
rescanning insn with uid = 1909.
rescanning insn with uid = 1908.
rescanning insn with uid = 1907.
rescanning insn with uid = 1906.
rescanning insn with uid = 1905.
rescanning insn with uid = 1904.
rescanning insn with uid = 1902.
rescanning insn with uid = 1901.
rescanning insn with uid = 1900.
rescanning insn with uid = 1899.
rescanning insn with uid = 1898.
rescanning insn with uid = 1897.
rescanning insn with uid = 1896.
rescanning insn with uid = 1895.
rescanning insn with uid = 1894.
rescanning insn with uid = 1893.
rescanning insn with uid = 1892.
rescanning insn with uid = 1891.
rescanning insn with uid = 1890.
rescanning insn with uid = 1889.
rescanning insn with uid = 1888.
;;	  2--> b  0: i1904 [ax-0x78]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  3--> b  0: i1888 [ax-0x98]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1889 dx=[ax+0xc]                             :athlon-direct,athlon-load
;;	  4--> b  0: i1905 xmm0=[ax+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  6--> b  0: i1890 [ax-0x94]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i1891 dx=[ax+0x10]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1906 [ax-0x70]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  7--> b  0: i1907 xmm0=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  9--> b  0: i1892 [ax-0x90]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i1893 dx=[ax+0x14]                            :athlon-direct,athlon-load
;;	  9--> b  0: i1908 [ax-0x68]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 10--> b  0: i1909 xmm0=[ax+0x40]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 12--> b  0: i1894 [ax-0x8c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i1895 dx=[ax+0x18]                            :athlon-direct,athlon-load
;;	 12--> b  0: i1910 [ax-0x60]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 13--> b  0: i1911 xmm0=[ax+0x48]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 15--> b  0: i1896 [ax-0x88]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 15--> b  0: i1897 dx=[ax+0x1c]                            :athlon-direct,athlon-load
;;	 15--> b  0: i1912 [ax-0x58]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 16--> b  0: i1913 xmm0=[ax+0x50]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 18--> b  0: i1898 [ax-0x84]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i1899 dx=[ax+0x20]                            :athlon-direct,athlon-load
;;	 18--> b  0: i1914 [ax-0x50]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 19--> b  0: i1915 xmm0=[ax+0x58]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 21--> b  0: i1900 [ax-0x80]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 21--> b  0: i1901 dx=[ax+0x24]                            :athlon-direct,athlon-load
;;	 21--> b  0: i1916 [ax-0x48]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 24--> b  0: i1902 [ax-0x7c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 24--> b  0: i1917 dx=[ax+0x60]                            :athlon-direct,athlon-load,athlon-ieu
;;	 28--> b  0: i1918 [ax-0x40]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 28--> b  0: i1919 xmm0=[ax+0x68]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 29--> b  0: i1929 dx=[ax+0x90]                            :athlon-direct,athlon-load
;;	 30--> b  0: i1920 [ax-0x38]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 31--> b  0: i1921 xmm0=[ax+0x70]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 32--> b  0: i1930 [ax-0x10]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 33--> b  0: i1922 [ax-0x30]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 33--> b  0: i1931 dx=[ax+0x98]                            :athlon-direct,athlon-load
;;	 34--> b  0: i1923 xmm0=[ax+0x78]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 36--> b  0: i1924 [ax-0x28]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 36--> b  0: i1932 [ax-0x8]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	 37--> b  0: i1925 xmm0=[ax+0x80]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 39--> b  0: i1926 [ax-0x20]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 40--> b  0: i1927 xmm0=[ax+0x88]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 42--> b  0: i1928 [ax-0x18]=xmm0                          :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 42--> b  0: i1934 flags=cmp(ax,cx)                        :athlon-direct,athlon-ieu
;;	 43--> b  0: i1935 pc={(flags!=0)?L1936:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 43
;;   new head = 1887
;;   new tail = 1935

;;   ======================================================
;;   -- basic block 214 from 1860 to 1871 -- after reload
;;   ======================================================

;;	  0--> b  0: i1860 {si=si-0xa0;clobber flags;}             :athlon-direct,athlon-ieu
;;	  0--> b  0: i1870 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1867 dx=0x2f                                 :athlon-direct,athlon-ieu
;;	  1--> b  0: i1861 [bp-0x4e08]=si                          :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1862 {si=si-[bp-0x4e10];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  5--> b  0: i1863 {si=si>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  6--> b  0: i4251 bx=si                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i1868 si=`*.LC120'                            :athlon-direct,athlon-agu,nothing
;;	  7--> b  0: i1865 {bx=bx*r15;clobber flags;}              :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	  8--> b  0: i1871 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 1860
;;   new tail = 1871

;;   ======================================================
;;   -- basic block 215 from 1942 to 1945 -- after reload
;;   ======================================================

;;	  0--> b  0: i1944 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1942 si=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1945 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1944
;;   new tail = 1945

;;   ======================================================
;;   -- basic block 216 from 1946 to 1952 -- after reload
;;   ======================================================

;;	  0--> b  0: i1946 r12=ax                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1948 ax=[ax]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i1949 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1950 bx=[r12+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i1951 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i1952 pc={(flags==0)?L4769:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 1946
;;   new tail = 1952

;;   ======================================================
;;   -- basic block 217 from 1958 to 1959 -- after reload
;;   ======================================================

;;	  0--> b  0: i1958 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1959 pc={(flags==0)?L1964:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1958
;;   new tail = 1959

;;   ======================================================
;;   -- basic block 218 from 1961 to 1961 -- after reload
;;   ======================================================

;;	  0--> b  0: i1961 si=sxn([bx+0x43])                       :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1961
;;   new tail = 1961

;;   ======================================================
;;   -- basic block 219 from 1985 to 1986 -- after reload
;;   ======================================================

;;	  0--> b  0: i1985 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1986 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1985
;;   new tail = 1986

;;   ======================================================
;;   -- basic block 220 from 1989 to 1990 -- after reload
;;   ======================================================

;;	  0--> b  0: i1989 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1990 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1989
;;   new tail = 1990

;;   ======================================================
;;   -- basic block 221 from 1992 to 2002 -- after reload
;;   ======================================================

;;	  0--> b  0: i1992 bx=[bp-0x4de8]                          :athlon-direct,athlon-load
;;	  0--> b  0: i1993 {bx=bx-[bp-0x4df0];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  0--> b  0: i1999 si=`*.LC121'                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i2001 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  1--> b  0: i1998 dx=0x30                                 :athlon-direct,athlon-ieu
;;	  4--> b  0: i1994 {bx=bx>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i1996 {bx=bx*r15;clobber flags;}              :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	  6--> b  0: i2002 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 1992
;;   new tail = 2002

;;   ======================================================
;;   -- basic block 222 from 2004 to 2007 -- after reload
;;   ======================================================

;;	  0--> b  0: i2006 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i2004 si=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i2007 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2006
;;   new tail = 2007

;;   ======================================================
;;   -- basic block 223 from 2008 to 2014 -- after reload
;;   ======================================================

;;	  0--> b  0: i2008 r12=ax                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2010 ax=[ax]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i2011 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i2012 bx=[r12+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i2013 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i2014 pc={(flags==0)?L4770:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 2008
;;   new tail = 2014

;;   ======================================================
;;   -- basic block 224 from 2020 to 2021 -- after reload
;;   ======================================================

;;	  0--> b  0: i2020 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i2021 pc={(flags==0)?L2026:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 2020
;;   new tail = 2021

;;   ======================================================
;;   -- basic block 225 from 2023 to 2023 -- after reload
;;   ======================================================

;;	  0--> b  0: i2023 si=sxn([bx+0x43])                       :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2023
;;   new tail = 2023

;;   ======================================================
;;   -- basic block 226 from 2047 to 2048 -- after reload
;;   ======================================================

;;	  0--> b  0: i2047 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i2048 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2047
;;   new tail = 2048

;;   ======================================================
;;   -- basic block 227 from 2051 to 2052 -- after reload
;;   ======================================================

;;	  0--> b  0: i2051 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2052 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2051
;;   new tail = 2052

;;   ======================================================
;;   -- basic block 228 from 2054 to 2064 -- after reload
;;   ======================================================

;;	  0--> b  0: i2054 bx=[bp-0x4e08]                          :athlon-direct,athlon-load
;;	  0--> b  0: i2055 {bx=bx-[bp-0x4e10];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  0--> b  0: i2061 si=`*.LC107'                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i2063 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  1--> b  0: i2060 dx=0x14                                 :athlon-direct,athlon-ieu
;;	  4--> b  0: i2056 {bx=bx>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i2058 {bx=bx*r15;clobber flags;}              :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	  6--> b  0: i2064 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2054
;;   new tail = 2064

;;   ======================================================
;;   -- basic block 229 from 2066 to 2069 -- after reload
;;   ======================================================

;;	  0--> b  0: i2068 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i2066 si=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i2069 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2068
;;   new tail = 2069

;;   ======================================================
;;   -- basic block 230 from 2070 to 2076 -- after reload
;;   ======================================================

;;	  0--> b  0: i2070 r12=ax                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2072 ax=[ax]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i2073 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i2074 bx=[r12+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i2075 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i2076 pc={(flags==0)?L4771:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 2070
;;   new tail = 2076

;;   ======================================================
;;   -- basic block 231 from 2082 to 2083 -- after reload
;;   ======================================================

;;	  0--> b  0: i2082 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i2083 pc={(flags==0)?L2088:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 2082
;;   new tail = 2083

;;   ======================================================
;;   -- basic block 232 from 2085 to 2085 -- after reload
;;   ======================================================

;;	  0--> b  0: i2085 si=sxn([bx+0x43])                       :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2085
;;   new tail = 2085

;;   ======================================================
;;   -- basic block 233 from 2109 to 2110 -- after reload
;;   ======================================================

;;	  0--> b  0: i2109 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i2110 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2109
;;   new tail = 2110

;;   ======================================================
;;   -- basic block 234 from 2113 to 2114 -- after reload
;;   ======================================================

;;	  0--> b  0: i2113 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2114 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2113
;;   new tail = 2114

;;   ======================================================
;;   -- basic block 235 from 2116 to 2123 -- after reload
;;   ======================================================

;;	  0--> b  0: i2116 ax=[bp-0x4e08]                          :athlon-direct,athlon-load
;;	  0--> b  0: i2117 cx=[bp-0x4e10]                          :athlon-direct,athlon-load
;;	  3--> b  0: i4258 dx=ax                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i2118 {dx=dx-cx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  5--> b  0: i2119 {dx=dx>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  6--> b  0: i2121 {dx=dx*r15;clobber flags;}              :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	 10--> b  0: i2122 flags=cmp(dx,0)                         :athlon-direct,athlon-ieu
;;	 11--> b  0: i2123 pc={(flags==0)?L2125:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 11
;;   new head = 2116
;;   new tail = 2123

;;   ======================================================
;;   -- basic block 236 from 4704 to 4772 -- after reload
;;   ======================================================

;;	  0--> b  0: i4704 {bx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i4705 {r12=0;clobber flags;}                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i4772 pc=L2230                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 4704
;;   new tail = 4772

;;   ======================================================
;;   -- basic block 237 from 2195 to 2195 -- after reload
;;   ======================================================

;;	  0--> b  0: i2195 si=sxn([bx+0x43])                       :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2195
;;   new tail = 2195

;;   ======================================================
;;   -- basic block 238 from 2219 to 2220 -- after reload
;;   ======================================================

;;	  0--> b  0: i2219 di=r13                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i2220 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2219
;;   new tail = 2220

;;   ======================================================
;;   -- basic block 239 from 2223 to 2224 -- after reload
;;   ======================================================

;;	  0--> b  0: i2223 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2224 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2223
;;   new tail = 2224

;;   ======================================================
;;   -- basic block 240 from 4865 to 2236 -- after reload
;;   ======================================================

;;	  0--> b  0: i2228 ax=[bp-0x4e08]                          :athlon-direct,athlon-load
;;	  0--> b  0: i2229 cx=[bp-0x4e10]                          :athlon-direct,athlon-load
;;	  0--> b  0: i4865 bx=zxn(r12+0x1)                         :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i4545 r12=bx                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i4261 dx=ax                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i2231 {dx=dx-cx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  5--> b  0: i2232 {dx=dx>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  6--> b  0: i2234 {dx=dx*r15;clobber flags;}              :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	 10--> b  0: i2235 flags=cmp(bx,dx)                        :athlon-direct,athlon-ieu
;;	 11--> b  0: i2236 pc={(geu(flags,0))?L2125:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 11
;;   new head = 2228
;;   new tail = 2236

;;   ======================================================
;;   -- basic block 241 from 2133 to 2144 -- after reload
;;   ======================================================

;;	  0--> b  0: i2133 ax=bx<<0x2+bx                           :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2143 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i2141 si=`*.LC108'                            :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i2140 dx=0x16                                 :athlon-direct,athlon-ieu
;;	  2--> b  0: i2134 {ax=ax<<0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  3--> b  0: i2136 {ax=ax+cx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  4--> b  0: i2138 xmm3=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  4--> b  0: i2137 r13=[ax+0xc]                            :athlon-direct,athlon-load
;;	  5--> b  0: i2139 r14=[ax+0x8]                            :athlon-direct,athlon-load
;;	  6--> b  0: i4260 [bp-0x4e38]=xmm3                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  7--> b  0: i2144 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2133
;;   new tail = 2144

;;   ======================================================
;;   -- basic block 242 from 2146 to 2149 -- after reload
;;   ======================================================

;;	  0--> b  0: i2148 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i2146 si=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i2149 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2148
;;   new tail = 2149

;;   ======================================================
;;   -- basic block 243 from 2150 to 2155 -- after reload
;;   ======================================================

;;	  0--> b  0: i2153 si=`*.LC109'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2152 dx=0x4                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2154 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2150 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2155 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2153
;;   new tail = 2155

;;   ======================================================
;;   -- basic block 244 from 2157 to 2159 -- after reload
;;   ======================================================

;;	  0--> b  0: i2157 si=r14                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2158 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2159 ax=call [`_ZNSolsEi']                   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2157
;;   new tail = 2159

;;   ======================================================
;;   -- basic block 245 from 2160 to 2165 -- after reload
;;   ======================================================

;;	  0--> b  0: i2163 si=`*.LC28'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2162 dx=0x4                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2164 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2160 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2165 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2163
;;   new tail = 2165

;;   ======================================================
;;   -- basic block 246 from 2167 to 2169 -- after reload
;;   ======================================================

;;	  0--> b  0: i2167 xmm0=[bp-0x4e38]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i2168 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2169 ax=call [`_ZNSo9_M_insertIdEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2167
;;   new tail = 2169

;;   ======================================================
;;   -- basic block 247 from 2170 to 2175 -- after reload
;;   ======================================================

;;	  0--> b  0: i2173 si=`*.LC110'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2172 dx=0x8                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2174 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2170 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2175 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2173
;;   new tail = 2175

;;   ======================================================
;;   -- basic block 248 from 2177 to 2179 -- after reload
;;   ======================================================

;;	  0--> b  0: i2177 si=r13                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2178 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2179 ax=call [`_ZNSolsEi']                   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2177
;;   new tail = 2179

;;   ======================================================
;;   -- basic block 249 from 2180 to 2186 -- after reload
;;   ======================================================

;;	  0--> b  0: i2180 r13=ax                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2182 ax=[ax]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i2183 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i2184 bx=[r13+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i2185 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i2186 pc={(flags==0)?L4774:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 2180
;;   new tail = 2186

;;   ======================================================
;;   -- basic block 250 from 2192 to 2193 -- after reload
;;   ======================================================

;;	  0--> b  0: i2192 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i2193 pc={(flags!=0)?L4775:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 2192
;;   new tail = 2193

;;   ======================================================
;;   -- basic block 251 from 2200 to 2201 -- after reload
;;   ======================================================

;;	  0--> b  0: i2200 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2201 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2200
;;   new tail = 2201

;;   ======================================================
;;   -- basic block 252 from 2203 to 2208 -- after reload
;;   ======================================================

;;	  0--> b  0: i2203 ax=[bx]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i  87 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i2204 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i2207 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i2208 pc={(flags==0)?L2216:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2203
;;   new tail = 2208

;;   ======================================================
;;   -- basic block 253 from 2211 to 2212 -- after reload
;;   ======================================================

;;	  0--> b  0: i2211 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2212 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2211
;;   new tail = 2212

;;   ======================================================
;;   -- basic block 254 from 2215 to 4776 -- after reload
;;   ======================================================

;;	  0--> b  0: i2215 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4776 pc=L2216                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2215
;;   new tail = 4776

;;   ======================================================
;;   -- basic block 255 from 1515 to 1516 -- after reload
;;   ======================================================

;;	  0--> b  0: i1515 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1516 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1515
;;   new tail = 1516

;;   ======================================================
;;   -- basic block 256 from 1518 to 1523 -- after reload
;;   ======================================================

;;	  0--> b  0: i1518 ax=[bx]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i  75 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i1519 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1522 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i1523 pc={(flags==0)?L1531:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1518
;;   new tail = 1523

;;   ======================================================
;;   -- basic block 257 from 1526 to 1527 -- after reload
;;   ======================================================

;;	  0--> b  0: i1526 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1527 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1526
;;   new tail = 1527

;;   ======================================================
;;   -- basic block 258 from 1530 to 4778 -- after reload
;;   ======================================================

;;	  0--> b  0: i1530 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4778 pc=L1531                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1530
;;   new tail = 4778

;;   ======================================================
;;   -- basic block 259 from 2028 to 2029 -- after reload
;;   ======================================================

;;	  0--> b  0: i2028 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2029 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2028
;;   new tail = 2029

;;   ======================================================
;;   -- basic block 260 from 2031 to 2036 -- after reload
;;   ======================================================

;;	  0--> b  0: i2031 ax=[bx]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i  83 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i2032 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i2035 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i2036 pc={(flags==0)?L2044:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2031
;;   new tail = 2036

;;   ======================================================
;;   -- basic block 261 from 2039 to 2040 -- after reload
;;   ======================================================

;;	  0--> b  0: i2039 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2040 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2039
;;   new tail = 2040

;;   ======================================================
;;   -- basic block 262 from 2043 to 4780 -- after reload
;;   ======================================================

;;	  0--> b  0: i2043 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4780 pc=L2044                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2043
;;   new tail = 4780

;;   ======================================================
;;   -- basic block 263 from 1966 to 1967 -- after reload
;;   ======================================================

;;	  0--> b  0: i1966 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1967 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1966
;;   new tail = 1967

;;   ======================================================
;;   -- basic block 264 from 1969 to 1974 -- after reload
;;   ======================================================

;;	  0--> b  0: i1969 ax=[bx]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i  82 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i1970 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1973 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i1974 pc={(flags==0)?L1982:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1969
;;   new tail = 1974

;;   ======================================================
;;   -- basic block 265 from 1977 to 1978 -- after reload
;;   ======================================================

;;	  0--> b  0: i1977 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1978 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1977
;;   new tail = 1978

;;   ======================================================
;;   -- basic block 266 from 1981 to 4782 -- after reload
;;   ======================================================

;;	  0--> b  0: i1981 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4782 pc=L1982                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1981
;;   new tail = 4782

;;   ======================================================
;;   -- basic block 267 from 2090 to 2091 -- after reload
;;   ======================================================

;;	  0--> b  0: i2090 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2091 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2090
;;   new tail = 2091

;;   ======================================================
;;   -- basic block 268 from 2093 to 2098 -- after reload
;;   ======================================================

;;	  0--> b  0: i2093 ax=[bx]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i  84 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i2094 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i2097 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i2098 pc={(flags==0)?L2106:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2093
;;   new tail = 2098

;;   ======================================================
;;   -- basic block 269 from 2101 to 2102 -- after reload
;;   ======================================================

;;	  0--> b  0: i2101 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2102 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2101
;;   new tail = 2102

;;   ======================================================
;;   -- basic block 270 from 2105 to 4784 -- after reload
;;   ======================================================

;;	  0--> b  0: i2105 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4784 pc=L2106                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2105
;;   new tail = 4784

;;   ======================================================
;;   -- basic block 271 from 1545 to 1547 -- after reload
;;   ======================================================

;;	  0--> b  0: i1545 r12=zxn([bp-0x4e18])                    :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1546 flags=cmp(r12,0x63)                     :athlon-direct,athlon-ieu
;;	  5--> b  0: i1547 pc={(gtu(flags,0))?L1597:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1545
;;   new tail = 1547

;;   ======================================================
;;   -- basic block 272 from 1549 to 1560 -- after reload
;;   ======================================================

;;	  0--> b  0: i1549 xmm1=[ax+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  1--> b  0: i1550 xmm0=[ax+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  2--> b  0: i1552 xmm1=xmm1*xmm1                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  3--> b  0: i1553 xmm0=xmm0*xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  4--> b  0: i1551 xmm2=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  6--> b  0: i1555 xmm2=xmm2*xmm2                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  7--> b  0: i1554 xmm0=xmm0+xmm1                          :athlon-direct,athlon-fpsched,athlon-fadd
;;	 11--> b  0: i1556 xmm0=xmm0+xmm2                          :athlon-direct,athlon-fpsched,athlon-fadd
;;	 11--> b  0: i4518 xmm2=0.0                                :athlon-double,athlon-fpsched,athlon-fmul
;;	 15--> b  0: i1559 flags=cmp(xmm2,xmm0)                    :athlon-vector,athlon-fpsched,athlon-fadd
;;	 15--> b  0: i1557 xmm1=sqrt(xmm0)                         :nothing
;;	 19--> b  0: i1560 pc={(flags>0)?L4786:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 19
;;   new head = 1549
;;   new tail = 1560

;;   ======================================================
;;   -- basic block 273 from 76 to 76 -- after reload
;;   ======================================================

;;	  0--> b  0: i  76 bx=zxn(r12)                             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 76
;;   new tail = 76

;;   ======================================================
;;   -- basic block 274 from 1568 to 4787 -- after reload
;;   ======================================================

;;	  0--> b  0: i1568 [r12*0x8+bp-0x1d00]=xmm1                :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  0--> b  0: i4417 r12=[bp-0x4e40]                         :athlon-direct,athlon-load
;;	  3--> b  0: i1570 xmm1=[r12+0x28]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  5--> b  0: i4225 [bp-0x4e38]=xmm1                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  6--> b  0: i1571 xmm1=[r12+0x38]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  7--> b  0: i1572 xmm0=[bp-0x4e38]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  9--> b  0: i1573 xmm0=call [`atan2']                     :athlon-vector,athlon-ieu
;;	 10--> b  0: i1576 [bx*0x8+bp-0x19e0]=xmm0                 :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 10--> b  0: i1577 bx=zxn([bp-0x4e18])                     :athlon-direct,athlon-load,athlon-ieu
;;	 12--> b  0: i1579 xmm1=[r12+0x30]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 14--> b  0: i4228 [bp-0x4e38]=xmm1                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 15--> b  0: i1580 xmm1=[r12+0x28]                         :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 16--> b  0: i1581 xmm0=[bp-0x4e38]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 18--> b  0: i1582 xmm0=call [`atan2']                     :athlon-vector,athlon-ieu
;;	 19--> b  0: i1586 dx=zxn([bp-0x4e18])                     :athlon-direct,athlon-load,athlon-ieu
;;	 19--> b  0: i1585 [bx*0x8+bp-0x16c0]=xmm0                 :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 23--> b  0: i1588 [dx*0x4+bp-0x4730]=0                    :athlon-direct,athlon-agu,athlon-store
;;	 23--> b  0: i1589 cx=[r12+0xc]                            :athlon-direct,athlon-load
;;	 23--> b  0: i4543 ax=dx                                   :athlon-direct,athlon-ieu
;;	 24--> b  0: i1592 {ax=ax+0x1;clobber flags;}              :athlon-direct,athlon-ieu
;;	 25--> b  0: i1593 [bp-0x4e18]=ax                          :athlon-direct,athlon-agu,athlon-store
;;	 26--> b  0: i1591 [dx*0x4+bp-0x45a0]=cx                   :athlon-direct,athlon-agu,athlon-store
;;	 26--> b  0: i1594 di=[r12+0x8]                            :athlon-direct,athlon-load
;;	 26--> b  0: i4787 pc=L1672                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 26
;;   new head = 1568
;;   new tail = 4787

;;   ======================================================
;;   -- basic block 275 from 1599 to 1603 -- after reload
;;   ======================================================

;;	  0--> b  0: i1602 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1600 si=`*.LC115'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1599 dx=0x1e                                 :athlon-direct,athlon-ieu
;;	  3--> b  0: i1603 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1602
;;   new tail = 1603

;;   ======================================================
;;   -- basic block 276 from 1605 to 1608 -- after reload
;;   ======================================================

;;	  0--> b  0: i1607 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1605 si=0x64                                 :athlon-direct,athlon-ieu
;;	  3--> b  0: i1608 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1607
;;   new tail = 1608

;;   ======================================================
;;   -- basic block 277 from 1609 to 1614 -- after reload
;;   ======================================================

;;	  0--> b  0: i1612 si=`*.LC116'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1611 dx=0x13                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i1613 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1609 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1614 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1612
;;   new tail = 1614

;;   ======================================================
;;   -- basic block 278 from 1616 to 1619 -- after reload
;;   ======================================================

;;	  0--> b  0: i1616 si=zxn(r12)                             :athlon-direct,athlon-ieu
;;	  0--> b  0: i1618 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1619 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1616
;;   new tail = 1619

;;   ======================================================
;;   -- basic block 279 from 1620 to 1625 -- after reload
;;   ======================================================

;;	  0--> b  0: i1623 si=`*.LC117'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1622 dx=0x17                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i1624 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1620 r12=ax                                  :athlon-direct,athlon-ieu
;;	  2--> b  0: i1625 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1623
;;   new tail = 1625

;;   ======================================================
;;   -- basic block 280 from 1627 to 1631 -- after reload
;;   ======================================================

;;	  0--> b  0: i1627 ax=[r12]                                :athlon-direct,athlon-load
;;	  3--> b  0: i1628 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1629 bx=[r12+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i1630 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i1631 pc={(flags==0)?L4789:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 1627
;;   new tail = 1631

;;   ======================================================
;;   -- basic block 281 from 1637 to 1638 -- after reload
;;   ======================================================

;;	  0--> b  0: i1637 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1638 pc={(flags==0)?L1643:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1637
;;   new tail = 1638

;;   ======================================================
;;   -- basic block 282 from 1640 to 1640 -- after reload
;;   ======================================================

;;	  0--> b  0: i1640 si=sxn([bx+0x43])                       :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1640
;;   new tail = 1640

;;   ======================================================
;;   -- basic block 283 from 1664 to 1665 -- after reload
;;   ======================================================

;;	  0--> b  0: i1664 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1665 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1664
;;   new tail = 1665

;;   ======================================================
;;   -- basic block 284 from 1668 to 1669 -- after reload
;;   ======================================================

;;	  0--> b  0: i1668 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1669 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1668
;;   new tail = 1669

;;   ======================================================
;;   -- basic block 285 from 4232 to 4790 -- after reload
;;   ======================================================

;;	  0--> b  0: i4232 ax=[bp-0x4e40]                          :athlon-direct,athlon-load
;;	  3--> b  0: i1671 di=[ax+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i4790 pc=L1672                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 4232
;;   new tail = 4790

;;   ======================================================
;;   -- basic block 286 from 4411 to 4792 -- after reload
;;   ======================================================

;;	  0--> b  0: i4411 [bp-0x4e38]=xmm1                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  1--> b  0: i1563 xmm0=call [`sqrt']                      :athlon-vector,athlon-ieu
;;	  2--> b  0: i1564 bx=zxn([bp-0x4e18])                     :athlon-direct,athlon-load,athlon-ieu
;;	  3--> b  0: i4412 xmm1=[bp-0x4e38]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  3--> b  0: i4792 pc=L1565                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 4411
;;   new tail = 4792

;;   ======================================================
;;   -- basic block 287 from 1645 to 1646 -- after reload
;;   ======================================================

;;	  0--> b  0: i1645 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1646 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1645
;;   new tail = 1646

;;   ======================================================
;;   -- basic block 288 from 1648 to 1653 -- after reload
;;   ======================================================

;;	  0--> b  0: i1648 ax=[bx]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i  77 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i1649 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1652 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i1653 pc={(flags==0)?L1661:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1648
;;   new tail = 1653

;;   ======================================================
;;   -- basic block 289 from 1656 to 1657 -- after reload
;;   ======================================================

;;	  0--> b  0: i1656 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1657 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1656
;;   new tail = 1657

;;   ======================================================
;;   -- basic block 290 from 1660 to 4794 -- after reload
;;   ======================================================

;;	  0--> b  0: i1660 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4794 pc=L1661                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1660
;;   new tail = 4794

;;   ======================================================
;;   -- basic block 291 from 1283 to 1284 -- after reload
;;   ======================================================

;;	  0--> b  0: i1283 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1284 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1283
;;   new tail = 1284

;;   ======================================================
;;   -- basic block 292 from 1286 to 1291 -- after reload
;;   ======================================================

;;	  0--> b  0: i1286 ax=[bx]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i1287 dx=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1290 flags=cmp(dx,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  3--> b  0: i  67 ax=0xa                                  :athlon-direct,athlon-ieu
;;	  7--> b  0: i1291 pc={(flags==0)?L1297:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1286
;;   new tail = 1291

;;   ======================================================
;;   -- basic block 293 from 1293 to 1295 -- after reload
;;   ======================================================

;;	  0--> b  0: i1293 si=0xa                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1294 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1295 ax=call [dx]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1293
;;   new tail = 1295

;;   ======================================================
;;   -- basic block 294 from 4797 to 4797 -- after reload
;;   ======================================================

;;	  0--> b  0: i4797 pc=L1297                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 4797
;;   new tail = 4797

;;   ======================================================
;;   -- basic block 295 from 1222 to 1223 -- after reload
;;   ======================================================

;;	  0--> b  0: i1222 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1223 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1222
;;   new tail = 1223

;;   ======================================================
;;   -- basic block 296 from 1225 to 1230 -- after reload
;;   ======================================================

;;	  0--> b  0: i1225 ax=[bx]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i1226 dx=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1229 flags=cmp(dx,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  3--> b  0: i  66 ax=0xa                                  :athlon-direct,athlon-ieu
;;	  7--> b  0: i1230 pc={(flags==0)?L1236:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1225
;;   new tail = 1230

;;   ======================================================
;;   -- basic block 297 from 1232 to 1234 -- after reload
;;   ======================================================

;;	  0--> b  0: i1232 si=0xa                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1233 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1234 ax=call [dx]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1232
;;   new tail = 1234

;;   ======================================================
;;   -- basic block 298 from 4800 to 4800 -- after reload
;;   ======================================================

;;	  0--> b  0: i4800 pc=L1236                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 4800
;;   new tail = 4800

;;   ======================================================
;;   -- basic block 299 from 1161 to 1162 -- after reload
;;   ======================================================

;;	  0--> b  0: i1161 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1162 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1161
;;   new tail = 1162

;;   ======================================================
;;   -- basic block 300 from 1164 to 1169 -- after reload
;;   ======================================================

;;	  0--> b  0: i1164 ax=[bx]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i1165 dx=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1168 flags=cmp(dx,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  3--> b  0: i  65 ax=0xa                                  :athlon-direct,athlon-ieu
;;	  7--> b  0: i1169 pc={(flags==0)?L1175:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1164
;;   new tail = 1169

;;   ======================================================
;;   -- basic block 301 from 1171 to 1173 -- after reload
;;   ======================================================

;;	  0--> b  0: i1171 si=0xa                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1172 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1173 ax=call [dx]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1171
;;   new tail = 1173

;;   ======================================================
;;   -- basic block 302 from 4803 to 4803 -- after reload
;;   ======================================================

;;	  0--> b  0: i4803 pc=L1175                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 4803
;;   new tail = 4803

;;   ======================================================
;;   -- basic block 303 from 2188 to 2188 -- after reload
;;   ======================================================

;;	  0--> b  0: i2188 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2188
;;   new tail = 2188

;;   ======================================================
;;   -- basic block 304 from 2243 to 2251 -- after reload
;;   ======================================================

;;	  0--> b  0: i2243 bx=[bp-0x4de8]                          :athlon-direct,athlon-load
;;	  0--> b  0: i2244 {bx=bx-[bp-0x4df0];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  0--> b  0: i2246 ax=0xcccccccccccccccd                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i2245 {bx=bx>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i2247 {bx=bx*ax;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	  9--> b  0: i2250 flags=cmp(bx,0x64)                      :athlon-direct,athlon-ieu
;;	  9--> b  0: i2249 r13=bx                                  :athlon-direct,athlon-ieu
;;	 10--> b  0: i2251 pc={(gtu(flags,0))?L4805:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 2243
;;   new tail = 2251

;;   ======================================================
;;   -- basic block 305 from 2293 to 2299 -- after reload
;;   ======================================================

;;	  0--> b  0: i2298 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	  0--> b  0: i2293 [bp-0x4e28]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i2294 [bp-0x4e24]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i2295 [bp-0x4e20]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i2296 [bp-0x4e1c]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i2297 [bp-0x4e14]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i2299 pc={(flags==0)?L2620:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2298
;;   new tail = 2299

;;   ======================================================
;;   -- basic block 306 from 4264 to 4806 -- after reload
;;   ======================================================

;;	  0--> b  0: i4264 r14=[bp-0x4eb0]                         :athlon-direct,athlon-load
;;	  0--> b  0: i2309 {r14=r14-[bp-0x4eb8];clobber flags;}    :athlon-direct,athlon-load,athlon-ieu
;;	  0--> b  0: i4703 {r15=0;clobber flags;}                  :athlon-direct,athlon-ieu
;;	  4--> b  0: i2310 {r14=r14>>0x5;clobber flags;}           :athlon-direct,athlon-ieu
;;	  5--> b  0: i2313 {r14=r14*0xffffffffcccccccd;clobber flags;}:athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  5--> b  0: i4806 pc=L2623                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 4264
;;   new tail = 4806

;;   ======================================================
;;   -- basic block 307 from 2387 to 2388 -- after reload
;;   ======================================================

;;	  0--> b  0: i2387 flags=cmp(dx,0xdd)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i2388 pc={(flags==0)?L4808:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2387
;;   new tail = 2388

;;   ======================================================
;;   -- basic block 308 from 2450 to 2451 -- after reload
;;   ======================================================

;;	  0--> b  0: i2450 flags=cmp(dx,0xdf)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i2451 pc={(flags==0)?L4809:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2450
;;   new tail = 2451

;;   ======================================================
;;   -- basic block 309 from 2507 to 2508 -- after reload
;;   ======================================================

;;	  0--> b  0: i2507 flags=cmp(dx,0x14b)                     :athlon-direct,athlon-ieu
;;	  1--> b  0: i2508 pc={(flags==0)?L4810:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2507
;;   new tail = 2508

;;   ======================================================
;;   -- basic block 310 from 2564 to 2565 -- after reload
;;   ======================================================

;;	  0--> b  0: i2564 flags=cmp(dx,0x16)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i2565 pc={(flags==0)?L4811:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2564
;;   new tail = 2565

;;   ======================================================
;;   -- basic block 311 from 2619 to 2622 -- after reload
;;   ======================================================

;;	  0--> b  0: i2619 {r15=r15+0x1;clobber flags;}            :athlon-direct,athlon-ieu
;;	  1--> b  0: i2621 flags=cmp(r13,r15)                      :athlon-direct,athlon-ieu
;;	  2--> b  0: i2622 pc={(leu(flags,0))?L2620:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2619
;;   new tail = 2622

;;   ======================================================
;;   -- basic block 312 from 2317 to 2325 -- after reload
;;   ======================================================

;;	  0--> b  0: i2317 bx=r15<<0x2+r15                         :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2321 cx=[bp-0x4df0]                          :athlon-direct,athlon-load
;;	  2--> b  0: i2318 {bx=bx<<0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  3--> b  0: i4517 ax=cx+bx                                :athlon-direct,athlon-agu,nothing
;;	  5--> b  0: i2323 dx=[ax+0x8]                             :athlon-direct,athlon-load
;;	  8--> b  0: i2324 flags=cmp(dx,0x6f)                      :athlon-direct,athlon-ieu
;;	  9--> b  0: i2325 pc={(flags!=0)?L2385:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 2317
;;   new tail = 2325

;;   ======================================================
;;   -- basic block 313 from 2327 to 2339 -- after reload
;;   ======================================================

;;	  0--> b  0: i2328 xmm2=[ax+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i2327 dx=[bp-0x4e28]                          :athlon-direct,athlon-load
;;	  1--> b  0: i2329 xmm0=[ax+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  2--> b  0: i2331 xmm2=xmm2*xmm2                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  3--> b  0: i2332 xmm0=xmm0*xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  3--> b  0: i3809 r12=zxn(dx)                             :athlon-direct,athlon-ieu
;;	  4--> b  0: i2330 xmm1=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  6--> b  0: i2334 xmm1=xmm1*xmm1                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  7--> b  0: i2333 xmm0=xmm0+xmm2                          :athlon-direct,athlon-fpsched,athlon-fadd
;;	  7--> b  0: i4516 xmm2=0.0                                :athlon-double,athlon-fpsched,athlon-fmul
;;	 11--> b  0: i2335 xmm0=xmm0+xmm1                          :athlon-direct,athlon-fpsched,athlon-fadd
;;	 15--> b  0: i2338 flags=cmp(xmm2,xmm0)                    :athlon-vector,athlon-fpsched,athlon-fadd
;;	 15--> b  0: i2336 xmm1=sqrt(xmm0)                         :nothing
;;	 19--> b  0: i2339 pc={(unle(flags,0))?L2343:pc}           :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 19
;;   new head = 2328
;;   new tail = 2339

;;   ======================================================
;;   -- basic block 314 from 4425 to 4426 -- after reload
;;   ======================================================

;;	  0--> b  0: i4425 [bp-0x4e38]=xmm1                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  1--> b  0: i2342 xmm0=call [`sqrt']                      :athlon-vector,athlon-ieu
;;	  2--> b  0: i3806 cx=[bp-0x4df0]                          :athlon-direct,athlon-load
;;	  3--> b  0: i3807 dx=[bp-0x4e28]                          :athlon-direct,athlon-load
;;	  3--> b  0: i4426 xmm1=[bp-0x4e38]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	Ready list (final):  
;;   total time = 3
;;   new head = 4425
;;   new tail = 4426

;;   ======================================================
;;   -- basic block 315 from 4427 to 2370 -- after reload
;;   ======================================================

;;	  0--> b  0: i2346 [r12*0x8+bp-0x4280]=xmm1                :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  0--> b  0: i2349 {cx=cx+bx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  0--> b  0: i4427 [bp-0x4e38]=dx                          :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i2352 xmm1=[cx+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  3--> b  0: i2351 xmm0=[cx+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  5--> b  0: i2354 xmm0=call [`atan2']                     :athlon-vector,athlon-ieu
;;	  6--> b  0: i4428 dx=zxn([bp-0x4e38])                     :athlon-direct,athlon-load,athlon-ieu
;;	  6--> b  0: i2360 {bx=bx+[bp-0x4df0];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i2358 r12=zxn([bp-0x4e28])                    :athlon-direct,athlon-load,athlon-ieu
;;	 10--> b  0: i2357 [dx*0x8+bp-0x3f60]=xmm0                 :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 12--> b  0: i2362 xmm0=[bx+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 13--> b  0: i2363 xmm1=[bx+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 15--> b  0: i2365 xmm0=call [`atan2']                     :athlon-vector,athlon-ieu
;;	 16--> b  0: i2369 flags=cmp(r14,r15)                      :athlon-direct,athlon-ieu
;;	 16--> b  0: i2368 [r12*0x8+bp-0x3c40]=xmm0                :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 16--> b  0: i2372 ax=zxn([bp-0x4e28])                     :athlon-direct,athlon-load,athlon-ieu
;;	 17--> b  0: i2370 pc={(leu(flags,0))?L2376:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 17
;;   new head = 2346
;;   new tail = 2370

;;   ======================================================
;;   -- basic block 316 from 2373 to 2373 -- after reload
;;   ======================================================

;;	  0--> b  0: i2373 [ax*0x4+bp-0x4d70]=0x1                  :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2373
;;   new tail = 2373

;;   ======================================================
;;   -- basic block 317 from 2382 to 4726 -- after reload
;;   ======================================================

;;	  0--> b  0: i4724 {r15=r15+0x1;clobber flags;}            :athlon-direct,athlon-ieu
;;	  0--> b  0: i2382 {[bp-0x4e28]=[bp-0x4e28]+0x1;clobber flags;}:athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  1--> b  0: i4725 flags=cmp(r13,r15)                      :athlon-direct,athlon-ieu
;;	  2--> b  0: i4726 pc={(gtu(flags,0))?L2623:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 4724
;;   new tail = 4726

;;   ======================================================
;;   -- basic block 318 from 4424 to 2304 -- after reload
;;   ======================================================

;;	  0--> b  0: i4424 di=[bp-0x4e90]                          :athlon-direct,athlon-load
;;	  3--> b  0: i2301 ax=[di]                                 :athlon-direct,athlon-load
;;	  6--> b  0: i2304 ax=call [[ax+0x330]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 4424
;;   new tail = 2304

;;   ======================================================
;;   -- basic block 319 from 4433 to 2632 -- after reload
;;   ======================================================

;;	  0--> b  0: i4433 di=[bp-0x4e98]                          :athlon-direct,athlon-load
;;	  3--> b  0: i2629 ax=[di]                                 :athlon-direct,athlon-load
;;	  6--> b  0: i2632 ax=call [[ax+0x330]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 4433
;;   new tail = 2632

;;   ======================================================
;;   -- basic block 320 from 4278 to 2637 -- after reload
;;   ======================================================

;;	  0--> b  0: i2636 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i4278 r12=[bp-0x4e48]                         :athlon-direct,athlon-load
;;	  1--> b  0: i2634 {r12=r12-[bp-0x4e88];clobber flags;}    :athlon-direct,athlon-load,athlon-ieu
;;	  3--> b  0: i2637 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2636
;;   new tail = 2637

;;   ======================================================
;;   -- basic block 321 from 2640 to 2641 -- after reload
;;   ======================================================

;;	  0--> b  0: i2640 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2641 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2640
;;   new tail = 2641

;;   ======================================================
;;   -- basic block 322 from 2642 to 2647 -- after reload
;;   ======================================================

;;	  0--> b  0: i2645 si=`*.LC123'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2644 dx=0x17                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i2646 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2642 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2647 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2645
;;   new tail = 2647

;;   ======================================================
;;   -- basic block 323 from 2649 to 2652 -- after reload
;;   ======================================================

;;	  0--> b  0: i2649 si=zxn(r12)                             :athlon-direct,athlon-ieu
;;	  0--> b  0: i2651 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2652 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2649
;;   new tail = 2652

;;   ======================================================
;;   -- basic block 324 from 2655 to 2656 -- after reload
;;   ======================================================

;;	  0--> b  0: i2655 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2656 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2655
;;   new tail = 2656

;;   ======================================================
;;   -- basic block 325 from 4813 to 4813 -- after reload
;;   ======================================================

;;	  0--> b  0: i4813 pc=L4585                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 4813
;;   new tail = 4813

;;   ======================================================
;;   -- basic block 326 from 2253 to 2257 -- after reload
;;   ======================================================

;;	  0--> b  0: i2256 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i2254 si=`*.LC115'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2253 dx=0x1e                                 :athlon-direct,athlon-ieu
;;	  3--> b  0: i2257 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2256
;;   new tail = 2257

;;   ======================================================
;;   -- basic block 327 from 2259 to 2262 -- after reload
;;   ======================================================

;;	  0--> b  0: i2261 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i2259 si=0x64                                 :athlon-direct,athlon-ieu
;;	  3--> b  0: i2262 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2261
;;   new tail = 2262

;;   ======================================================
;;   -- basic block 328 from 2263 to 2268 -- after reload
;;   ======================================================

;;	  0--> b  0: i2266 si=`*.LC122'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2265 dx=0x12                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i2267 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2263 r12=ax                                  :athlon-direct,athlon-ieu
;;	  2--> b  0: i2268 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2266
;;   new tail = 2268

;;   ======================================================
;;   -- basic block 329 from 2270 to 2273 -- after reload
;;   ======================================================

;;	  0--> b  0: i2270 si=zxn(bx)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i2272 di=r12                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i2273 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2270
;;   new tail = 2273

;;   ======================================================
;;   -- basic block 330 from 2274 to 2279 -- after reload
;;   ======================================================

;;	  0--> b  0: i2277 si=`*.LC117'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2276 dx=0x17                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i2278 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2274 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2279 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2277
;;   new tail = 2279

;;   ======================================================
;;   -- basic block 331 from 2281 to 2282 -- after reload
;;   ======================================================

;;	  0--> b  0: i2281 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2282 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2281
;;   new tail = 2282

;;   ======================================================
;;   -- basic block 332 from 2284 to 4815 -- after reload
;;   ======================================================

;;	  0--> b  0: i2284 [bp-0x4e28]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i2285 [bp-0x4e24]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i  88 r13=0x64                                :athlon-direct,athlon-ieu
;;	  1--> b  0: i2286 [bp-0x4e20]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i2287 [bp-0x4e1c]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i2288 [bp-0x4e14]=0                           :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i4815 pc=L2307                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2284
;;   new tail = 4815

;;   ======================================================
;;   -- basic block 333 from 2390 to 2402 -- after reload
;;   ======================================================

;;	  0--> b  0: i2391 xmm2=[ax+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i2390 dx=zxn([bp-0x4e24])                     :athlon-direct,athlon-load,athlon-ieu
;;	  1--> b  0: i2392 xmm0=[ax+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  2--> b  0: i2394 xmm2=xmm2*xmm2                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  3--> b  0: i2395 xmm0=xmm0*xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  4--> b  0: i2393 xmm1=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  6--> b  0: i2397 xmm1=xmm1*xmm1                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  7--> b  0: i2396 xmm0=xmm0+xmm2                          :athlon-direct,athlon-fpsched,athlon-fadd
;;	  7--> b  0: i4515 xmm2=0.0                                :athlon-double,athlon-fpsched,athlon-fmul
;;	 11--> b  0: i2398 xmm0=xmm0+xmm1                          :athlon-direct,athlon-fpsched,athlon-fadd
;;	 15--> b  0: i2401 flags=cmp(xmm2,xmm0)                    :athlon-vector,athlon-fpsched,athlon-fadd
;;	 15--> b  0: i2399 xmm1=sqrt(xmm0)                         :nothing
;;	 19--> b  0: i2402 pc={(flags>0)?L4817:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 19
;;   new head = 2391
;;   new tail = 2402

;;   ======================================================
;;   -- basic block 334 from 91 to 91 -- after reload
;;   ======================================================

;;	  0--> b  0: i  91 r12=zxn(dx)                             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 91
;;   new tail = 91

;;   ======================================================
;;   -- basic block 335 from 2412 to 2433 -- after reload
;;   ======================================================

;;	  0--> b  0: i2412 [dx*0x8+bp-0x3920]=xmm1                 :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  2--> b  0: i2415 xmm1=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  3--> b  0: i2414 xmm0=[ax+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  5--> b  0: i2417 xmm0=call [`atan2']                     :athlon-vector,athlon-ieu
;;	  6--> b  0: i2423 {bx=bx+[bp-0x4df0];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  6--> b  0: i2420 [r12*0x8+bp-0x3600]=xmm0                :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  6--> b  0: i2421 r12=zxn([bp-0x4e24])                    :athlon-direct,athlon-load,athlon-ieu
;;	 10--> b  0: i2425 xmm0=[bx+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 11--> b  0: i2426 xmm1=[bx+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 13--> b  0: i2428 xmm0=call [`atan2']                     :athlon-vector,athlon-ieu
;;	 14--> b  0: i2432 flags=cmp(r14,r15)                      :athlon-direct,athlon-ieu
;;	 14--> b  0: i2431 [r12*0x8+bp-0x32e0]=xmm0                :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 14--> b  0: i2435 ax=zxn([bp-0x4e24])                     :athlon-direct,athlon-load,athlon-ieu
;;	 15--> b  0: i2433 pc={(leu(flags,0))?L2439:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 15
;;   new head = 2412
;;   new tail = 2433

;;   ======================================================
;;   -- basic block 336 from 2436 to 2436 -- after reload
;;   ======================================================

;;	  0--> b  0: i2436 [ax*0x4+bp-0x4be0]=0x1                  :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2436
;;   new tail = 2436

;;   ======================================================
;;   -- basic block 337 from 2445 to 4818 -- after reload
;;   ======================================================

;;	  0--> b  0: i2445 {[bp-0x4e24]=[bp-0x4e24]+0x1;clobber flags;}:athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  0--> b  0: i4818 pc=L2617                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2445
;;   new tail = 4818

;;   ======================================================
;;   -- basic block 338 from 4431 to 4820 -- after reload
;;   ======================================================

;;	  0--> b  0: i4431 [bp-0x4e40]=xmm1                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  0--> b  0: i4429 [bp-0x4e38]=dx                          :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i2405 xmm0=call [`sqrt']                      :athlon-vector,athlon-ieu
;;	  2--> b  0: i4269 ax=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2406 r12=zxn([bp-0x4e24])                    :athlon-direct,athlon-load,athlon-ieu
;;	  3--> b  0: i2408 {ax=ax+[bp-0x4df0];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	  3--> b  0: i4430 dx=zxn([bp-0x4e38])                     :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i4432 xmm1=[bp-0x4e40]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  4--> b  0: i4820 pc=L2409                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 4431
;;   new tail = 4820

;;   ======================================================
;;   -- basic block 339 from 2453 to 2490 -- after reload
;;   ======================================================

;;	  0--> b  0: i2454 xmm2=[ax+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i2453 r12=zxn([bp-0x4e20])                    :athlon-direct,athlon-load,athlon-ieu
;;	  1--> b  0: i2455 xmm1=[ax+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  2--> b  0: i2457 xmm2=xmm2*xmm2                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  3--> b  0: i2458 xmm1=xmm1*xmm1                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  4--> b  0: i2456 xmm0=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  6--> b  0: i2460 xmm0=xmm0*xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  7--> b  0: i2459 xmm1=xmm1+xmm2                          :athlon-direct,athlon-fpsched,athlon-fadd
;;	 11--> b  0: i2461 xmm0=xmm0+xmm1                          :athlon-direct,athlon-fpsched,athlon-fadd
;;	 15--> b  0: i2463 xmm0=call [`sqrt']                      :athlon-vector,athlon-ieu
;;	 16--> b  0: i4271 ax=bx                                   :athlon-direct,athlon-ieu
;;	 16--> b  0: i2469 {ax=ax+[bp-0x4df0];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	 16--> b  0: i2466 [r12*0x8+bp-0x2fc0]=xmm0                :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 17--> b  0: i2467 r12=zxn([bp-0x4e20])                    :athlon-direct,athlon-load,athlon-ieu
;;	 20--> b  0: i2472 xmm1=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 21--> b  0: i2471 xmm0=[ax+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 23--> b  0: i2474 xmm0=call [`atan2']                     :athlon-vector,athlon-ieu
;;	 24--> b  0: i2480 {bx=bx+[bp-0x4df0];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	 24--> b  0: i2477 [r12*0x8+bp-0x2ca0]=xmm0                :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 24--> b  0: i2478 r12=zxn([bp-0x4e20])                    :athlon-direct,athlon-load,athlon-ieu
;;	 28--> b  0: i2482 xmm0=[bx+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 29--> b  0: i2483 xmm1=[bx+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 31--> b  0: i2485 xmm0=call [`atan2']                     :athlon-vector,athlon-ieu
;;	 32--> b  0: i2489 flags=cmp(r14,r15)                      :athlon-direct,athlon-ieu
;;	 32--> b  0: i2488 [r12*0x8+bp-0x2980]=xmm0                :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 32--> b  0: i2492 ax=zxn([bp-0x4e20])                     :athlon-direct,athlon-load,athlon-ieu
;;	 33--> b  0: i2490 pc={(leu(flags,0))?L2496:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 33
;;   new head = 2454
;;   new tail = 2490

;;   ======================================================
;;   -- basic block 340 from 2493 to 2493 -- after reload
;;   ======================================================

;;	  0--> b  0: i2493 [ax*0x4+bp-0x4a50]=0x1                  :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2493
;;   new tail = 2493

;;   ======================================================
;;   -- basic block 341 from 2502 to 4822 -- after reload
;;   ======================================================

;;	  0--> b  0: i2502 {[bp-0x4e20]=[bp-0x4e20]+0x1;clobber flags;}:athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  0--> b  0: i4822 pc=L2617                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2502
;;   new tail = 4822

;;   ======================================================
;;   -- basic block 342 from 2510 to 2547 -- after reload
;;   ======================================================

;;	  0--> b  0: i2511 xmm2=[ax+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i2510 r12=zxn([bp-0x4e1c])                    :athlon-direct,athlon-load,athlon-ieu
;;	  1--> b  0: i2512 xmm1=[ax+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  2--> b  0: i2514 xmm2=xmm2*xmm2                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  3--> b  0: i2515 xmm1=xmm1*xmm1                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  4--> b  0: i2513 xmm0=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  6--> b  0: i2517 xmm0=xmm0*xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  7--> b  0: i2516 xmm1=xmm1+xmm2                          :athlon-direct,athlon-fpsched,athlon-fadd
;;	 11--> b  0: i2518 xmm0=xmm0+xmm1                          :athlon-direct,athlon-fpsched,athlon-fadd
;;	 15--> b  0: i2520 xmm0=call [`sqrt']                      :athlon-vector,athlon-ieu
;;	 16--> b  0: i4273 ax=bx                                   :athlon-direct,athlon-ieu
;;	 16--> b  0: i2526 {ax=ax+[bp-0x4df0];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	 16--> b  0: i2523 [r12*0x8+bp-0x2660]=xmm0                :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 17--> b  0: i2524 r12=zxn([bp-0x4e1c])                    :athlon-direct,athlon-load,athlon-ieu
;;	 20--> b  0: i2529 xmm1=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 21--> b  0: i2528 xmm0=[ax+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 23--> b  0: i2531 xmm0=call [`atan2']                     :athlon-vector,athlon-ieu
;;	 24--> b  0: i2537 {bx=bx+[bp-0x4df0];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	 24--> b  0: i2534 [r12*0x8+bp-0x2340]=xmm0                :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 24--> b  0: i2535 r12=zxn([bp-0x4e1c])                    :athlon-direct,athlon-load,athlon-ieu
;;	 28--> b  0: i2539 xmm0=[bx+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 29--> b  0: i2540 xmm1=[bx+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 31--> b  0: i2542 xmm0=call [`atan2']                     :athlon-vector,athlon-ieu
;;	 32--> b  0: i2546 flags=cmp(r14,r15)                      :athlon-direct,athlon-ieu
;;	 32--> b  0: i2545 [r12*0x8+bp-0x2020]=xmm0                :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 32--> b  0: i2549 ax=zxn([bp-0x4e1c])                     :athlon-direct,athlon-load,athlon-ieu
;;	 33--> b  0: i2547 pc={(leu(flags,0))?L2553:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 33
;;   new head = 2511
;;   new tail = 2547

;;   ======================================================
;;   -- basic block 343 from 2550 to 2550 -- after reload
;;   ======================================================

;;	  0--> b  0: i2550 [ax*0x4+bp-0x48c0]=0x1                  :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2550
;;   new tail = 2550

;;   ======================================================
;;   -- basic block 344 from 2559 to 4824 -- after reload
;;   ======================================================

;;	  0--> b  0: i2559 {[bp-0x4e1c]=[bp-0x4e1c]+0x1;clobber flags;}:athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  0--> b  0: i4824 pc=L2617                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2559
;;   new tail = 4824

;;   ======================================================
;;   -- basic block 345 from 2442 to 4826 -- after reload
;;   ======================================================

;;	  0--> b  0: i2442 [ax*0x4+bp-0x4be0]=0                    :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i4826 pc=L2443                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2442
;;   new tail = 4826

;;   ======================================================
;;   -- basic block 346 from 1690 to 1694 -- after reload
;;   ======================================================

;;	  0--> b  0: i1693 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1691 si=`*.LC118'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1690 dx=0x15                                 :athlon-direct,athlon-ieu
;;	  3--> b  0: i1694 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1693
;;   new tail = 1694

;;   ======================================================
;;   -- basic block 347 from 1696 to 1700 -- after reload
;;   ======================================================

;;	  0--> b  0: i1699 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1696 si=zxn(bx)                              :athlon-direct,athlon-ieu
;;	  3--> b  0: i1700 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1699
;;   new tail = 1700

;;   ======================================================
;;   -- basic block 348 from 1703 to 1704 -- after reload
;;   ======================================================

;;	  0--> b  0: i1703 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1704 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1703
;;   new tail = 1704

;;   ======================================================
;;   -- basic block 349 from 1706 to 1713 -- after reload
;;   ======================================================

;;	  0--> b  0: i1706 dx=[bp-0x4e10]                          :athlon-direct,athlon-load
;;	  0--> b  0: i4239 ax=[bp-0x4e08]                          :athlon-direct,athlon-load
;;	  0--> b  0: i1710 r15=0xcccccccccccccccd                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i4709 {bx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i4710 {r12=0;clobber flags;}                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i1708 {ax=ax-dx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  4--> b  0: i1709 {ax=ax>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i1711 {ax=ax*r15;clobber flags;}              :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	  9--> b  0: i1712 flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i1713 pc={(flags!=0)?L3865:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 1706
;;   new tail = 1713

;;   ======================================================
;;   -- basic block 350 from 4829 to 4829 -- after reload
;;   ======================================================

;;	  0--> b  0: i4829 pc=L1827                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 4829
;;   new tail = 4829

;;   ======================================================
;;   -- basic block 351 from 1785 to 1785 -- after reload
;;   ======================================================

;;	  0--> b  0: i1785 si=sxn([bx+0x43])                       :athlon-direct,athlon-load,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1785
;;   new tail = 1785

;;   ======================================================
;;   -- basic block 352 from 1809 to 1810 -- after reload
;;   ======================================================

;;	  0--> b  0: i1809 di=r13                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1810 ax=call [`_ZNSo3putEc']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1809
;;   new tail = 1810

;;   ======================================================
;;   -- basic block 353 from 1813 to 1814 -- after reload
;;   ======================================================

;;	  0--> b  0: i1813 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1814 ax=call [`_ZNSo5flushEv']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1813
;;   new tail = 1814

;;   ======================================================
;;   -- basic block 354 from 4864 to 1826 -- after reload
;;   ======================================================

;;	  0--> b  0: i1818 dx=[bp-0x4e10]                          :athlon-direct,athlon-load
;;	  0--> b  0: i4242 ax=[bp-0x4e08]                          :athlon-direct,athlon-load
;;	  0--> b  0: i4864 bx=zxn(r12+0x1)                         :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i4544 r12=bx                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i1821 {ax=ax-dx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  4--> b  0: i1822 {ax=ax>>0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i1824 {ax=ax*r15;clobber flags;}              :athlon-direct0,athlon-ieu0,athlon-mult,nothing,athlon-ieu0
;;	  9--> b  0: i1825 flags=cmp(bx,ax)                        :athlon-direct,athlon-ieu
;;	 10--> b  0: i1826 pc={(geu(flags,0))?L1827:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 1818
;;   new tail = 1826

;;   ======================================================
;;   -- basic block 355 from 1723 to 1734 -- after reload
;;   ======================================================

;;	  0--> b  0: i1723 ax=bx<<0x2+bx                           :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1733 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1731 si=`*.LC119'                            :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i1724 {ax=ax<<0x5;clobber flags;}             :athlon-direct,athlon-ieu
;;	  3--> b  0: i1726 {ax=ax+dx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  3--> b  0: i1730 dx=0x13                                 :athlon-direct,athlon-ieu
;;	  4--> b  0: i1728 xmm4=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  4--> b  0: i1727 r13=[ax+0xc]                            :athlon-direct,athlon-load
;;	  5--> b  0: i1729 r14=[ax+0x8]                            :athlon-direct,athlon-load
;;	  6--> b  0: i4241 [bp-0x4e38]=xmm4                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	  7--> b  0: i1734 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1723
;;   new tail = 1734

;;   ======================================================
;;   -- basic block 356 from 1736 to 1739 -- after reload
;;   ======================================================

;;	  0--> b  0: i1738 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  0--> b  0: i1736 si=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1739 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1738
;;   new tail = 1739

;;   ======================================================
;;   -- basic block 357 from 1740 to 1745 -- after reload
;;   ======================================================

;;	  0--> b  0: i1743 si=`*.LC109'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1742 dx=0x4                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1744 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1740 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1745 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1743
;;   new tail = 1745

;;   ======================================================
;;   -- basic block 358 from 1747 to 1749 -- after reload
;;   ======================================================

;;	  0--> b  0: i1747 si=r14                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1748 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1749 ax=call [`_ZNSolsEi']                   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1747
;;   new tail = 1749

;;   ======================================================
;;   -- basic block 359 from 1750 to 1755 -- after reload
;;   ======================================================

;;	  0--> b  0: i1753 si=`*.LC28'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1752 dx=0x4                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1754 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1750 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1755 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1753
;;   new tail = 1755

;;   ======================================================
;;   -- basic block 360 from 1757 to 1759 -- after reload
;;   ======================================================

;;	  0--> b  0: i1757 xmm0=[bp-0x4e38]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i1758 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1759 ax=call [`_ZNSo9_M_insertIdEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1757
;;   new tail = 1759

;;   ======================================================
;;   -- basic block 361 from 1760 to 1765 -- after reload
;;   ======================================================

;;	  0--> b  0: i1763 si=`*.LC110'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1762 dx=0x8                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1764 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1760 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1765 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 1763
;;   new tail = 1765

;;   ======================================================
;;   -- basic block 362 from 1767 to 1769 -- after reload
;;   ======================================================

;;	  0--> b  0: i1767 si=r13                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1768 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1769 ax=call [`_ZNSolsEi']                   :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1767
;;   new tail = 1769

;;   ======================================================
;;   -- basic block 363 from 1770 to 1776 -- after reload
;;   ======================================================

;;	  0--> b  0: i1770 r13=ax                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1772 ax=[ax]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i1773 ax=[ax-0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1774 bx=[r13+ax+0xf0]                        :athlon-direct,athlon-load
;;	  9--> b  0: i1775 flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i1776 pc={(flags==0)?L4831:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 1770
;;   new tail = 1776

;;   ======================================================
;;   -- basic block 364 from 1782 to 1783 -- after reload
;;   ======================================================

;;	  0--> b  0: i1782 flags=cmp([bx+0x38],0)                  :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i1783 pc={(flags!=0)?L4832:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1782
;;   new tail = 1783

;;   ======================================================
;;   -- basic block 365 from 1790 to 1791 -- after reload
;;   ======================================================

;;	  0--> b  0: i1790 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1791 call [`_ZNKSt5ctypeIcE13_M_widen_initEv']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1790
;;   new tail = 1791

;;   ======================================================
;;   -- basic block 366 from 1793 to 1798 -- after reload
;;   ======================================================

;;	  0--> b  0: i1793 ax=[bx]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i  80 si=0xa                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i1794 ax=[ax+0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1797 flags=cmp(ax,[const(unspec[`_ZNKSt5ctypeIcE8do_widenEc'] 2)]):athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i1798 pc={(flags==0)?L1806:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1793
;;   new tail = 1798

;;   ======================================================
;;   -- basic block 367 from 1801 to 1802 -- after reload
;;   ======================================================

;;	  0--> b  0: i1801 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1802 ax=call [ax]                            :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1801
;;   new tail = 1802

;;   ======================================================
;;   -- basic block 368 from 1805 to 4833 -- after reload
;;   ======================================================

;;	  0--> b  0: i1805 si=sxn(ax)                              :athlon-direct,athlon-ieu
;;	  0--> b  0: i4833 pc=L1806                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1805
;;   new tail = 4833

;;   ======================================================
;;   -- basic block 369 from 2379 to 4835 -- after reload
;;   ======================================================

;;	  0--> b  0: i2379 [ax*0x4+bp-0x4d70]=0                    :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i4835 pc=L2380                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2379
;;   new tail = 4835

;;   ======================================================
;;   -- basic block 370 from 2567 to 2604 -- after reload
;;   ======================================================

;;	  0--> b  0: i2568 xmm2=[ax+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i2567 r12=zxn([bp-0x4e14])                    :athlon-direct,athlon-load,athlon-ieu
;;	  1--> b  0: i2569 xmm1=[ax+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  2--> b  0: i2571 xmm2=xmm2*xmm2                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  3--> b  0: i2572 xmm1=xmm1*xmm1                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  4--> b  0: i2570 xmm0=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  6--> b  0: i2574 xmm0=xmm0*xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul
;;	  7--> b  0: i2573 xmm1=xmm1+xmm2                          :athlon-direct,athlon-fpsched,athlon-fadd
;;	 11--> b  0: i2575 xmm0=xmm0+xmm1                          :athlon-direct,athlon-fpsched,athlon-fadd
;;	 15--> b  0: i2577 xmm0=call [`sqrt']                      :athlon-vector,athlon-ieu
;;	 16--> b  0: i4275 ax=bx                                   :athlon-direct,athlon-ieu
;;	 16--> b  0: i2583 {ax=ax+[bp-0x4df0];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	 16--> b  0: i2580 [r12*0x8+bp-0x13a0]=xmm0                :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 17--> b  0: i2581 r12=zxn([bp-0x4e14])                    :athlon-direct,athlon-load,athlon-ieu
;;	 20--> b  0: i2586 xmm1=[ax+0x38]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 21--> b  0: i2585 xmm0=[ax+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 23--> b  0: i2588 xmm0=call [`atan2']                     :athlon-vector,athlon-ieu
;;	 24--> b  0: i2594 {bx=bx+[bp-0x4df0];clobber flags;}      :athlon-direct,athlon-load,athlon-ieu
;;	 24--> b  0: i2591 [r12*0x8+bp-0x1080]=xmm0                :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 24--> b  0: i2592 r12=zxn([bp-0x4e14])                    :athlon-direct,athlon-load,athlon-ieu
;;	 28--> b  0: i2596 xmm0=[bx+0x30]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 29--> b  0: i2597 xmm1=[bx+0x28]                          :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	 31--> b  0: i2599 xmm0=call [`atan2']                     :athlon-vector,athlon-ieu
;;	 32--> b  0: i2603 flags=cmp(r14,r15)                      :athlon-direct,athlon-ieu
;;	 32--> b  0: i2602 [r12*0x8+bp-0xd60]=xmm0                 :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 32--> b  0: i2606 ax=zxn([bp-0x4e14])                     :athlon-direct,athlon-load,athlon-ieu
;;	 33--> b  0: i2604 pc={(leu(flags,0))?L2610:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 33
;;   new head = 2568
;;   new tail = 2604

;;   ======================================================
;;   -- basic block 371 from 2607 to 2607 -- after reload
;;   ======================================================

;;	  0--> b  0: i2607 [ax*0x4+bp-0x4410]=0x1                  :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2607
;;   new tail = 2607

;;   ======================================================
;;   -- basic block 372 from 2616 to 4837 -- after reload
;;   ======================================================

;;	  0--> b  0: i2616 {[bp-0x4e14]=[bp-0x4e14]+0x1;clobber flags;}:athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  0--> b  0: i4837 pc=L2617                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2616
;;   new tail = 4837

;;   ======================================================
;;   -- basic block 373 from 2499 to 4839 -- after reload
;;   ======================================================

;;	  0--> b  0: i2499 [ax*0x4+bp-0x4a50]=0                    :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i4839 pc=L2500                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2499
;;   new tail = 4839

;;   ======================================================
;;   -- basic block 374 from 2556 to 4841 -- after reload
;;   ======================================================

;;	  0--> b  0: i2556 [ax*0x4+bp-0x48c0]=0                    :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i4841 pc=L2557                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2556
;;   new tail = 4841

;;   ======================================================
;;   -- basic block 375 from 2613 to 4843 -- after reload
;;   ======================================================

;;	  0--> b  0: i2613 [ax*0x4+bp-0x4410]=0                    :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i4843 pc=L2614                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2613
;;   new tail = 4843

;;   ======================================================
;;   -- basic block 376 from 1778 to 1778 -- after reload
;;   ======================================================

;;	  0--> b  0: i1778 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1778
;;   new tail = 1778

;;   ======================================================
;;   -- basic block 377 from 1715 to 1716 -- after reload
;;   ======================================================

;;	  0--> b  0: i1715 di=0x1                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1716 call [`exit']                           :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1715
;;   new tail = 1716

;;   ======================================================
;;   -- basic block 378 from 4528 to 4845 -- after reload
;;   ======================================================

;;	  0--> b  0: i4528 cx=[ax+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i4529 bx=[ax+0x18]                            :athlon-direct,athlon-load
;;	  3--> b  0: i4530 [bp-0xa30]=cx                           :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i4531 [bp-0xa28]=bx                           :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i4845 pc=L193                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 4528
;;   new tail = 4845

;;   ======================================================
;;   -- basic block 379 from 3600 to 3279 -- after reload
;;   ======================================================

;;	  0--> b  0: i3277 di=[bp-0x4df0]                          :athlon-direct,athlon-load
;;	  0--> b  0: i3600 bx=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i3278 flags=cmp(di,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i3279 pc={(flags==0)?L3287:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 3277
;;   new tail = 3279

;;   ======================================================
;;   -- basic block 380 from 3282 to 3282 -- after reload
;;   ======================================================

;;	  0--> b  0: i3282 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 3282
;;   new tail = 3282

;;   ======================================================
;;   -- basic block 381 from 3289 to 3291 -- after reload
;;   ======================================================

;;	  0--> b  0: i3289 di=[bp-0x4e10]                          :athlon-direct,athlon-load
;;	  3--> b  0: i3290 flags=cmp(di,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i3291 pc={(flags==0)?L3299:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 3289
;;   new tail = 3291

;;   ======================================================
;;   -- basic block 382 from 3294 to 3294 -- after reload
;;   ======================================================

;;	  0--> b  0: i3294 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 3294
;;   new tail = 3294

;;   ======================================================
;;   -- basic block 383 from 3302 to 3303 -- after reload
;;   ======================================================

;;	  0--> b  0: i3302 di=[bp-0x4e60]                          :athlon-direct,athlon-load
;;	  3--> b  0: i3303 call [`_ZN8TRandom3D1Ev']               :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 3302
;;   new tail = 3303

;;   ======================================================
;;   -- basic block 384 from 3308 to 3312 -- after reload
;;   ======================================================

;;	  0--> b  0: i4328 ax=[bp-0x4ea8]                          :athlon-direct,athlon-load
;;	  0--> b  0: i3308 di=[bp-0x4dd0]                          :athlon-direct,athlon-load
;;	  3--> b  0: i3310 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i3311 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  5--> b  0: i3312 pc={(flags==0)?L3316:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 4328
;;   new tail = 3312

;;   ======================================================
;;   -- basic block 385 from 3315 to 3315 -- after reload
;;   ======================================================

;;	  0--> b  0: i3315 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 3315
;;   new tail = 3315

;;   ======================================================
;;   -- basic block 386 from 3319 to 3320 -- after reload
;;   ======================================================

;;	  0--> b  0: i3319 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3320 call [`_Unwind_Resume']                 :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 3319
;;   new tail = 3320

;;   ======================================================
;;   -- basic block 387 from 3590 to 4847 -- after reload
;;   ======================================================

;;	  0--> b  0: i3269 di=[bp-0x4e98]                          :athlon-direct,athlon-load
;;	  0--> b  0: i3590 bx=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i3270 call [`_ZN7TObjectdlEPv']               :athlon-vector,athlon-ieu
;;	  4--> b  0: i4847 pc=L3306                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 3269
;;   new tail = 4847

;;   ======================================================
;;   -- basic block 388 from 3604 to 4849 -- after reload
;;   ======================================================

;;	  0--> b  0: i3604 bx=ax                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i4849 pc=L3299                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 3604
;;   new tail = 4849

;;   ======================================================
;;   -- basic block 389 from 712 to 712 -- after reload
;;   ======================================================

;;	  0--> b  0: i 712 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 712
;;   new tail = 712

;;   ======================================================
;;   -- basic block 390 from 763 to 763 -- after reload
;;   ======================================================

;;	  0--> b  0: i 763 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 763
;;   new tail = 763

;;   ======================================================
;;   -- basic block 391 from 813 to 813 -- after reload
;;   ======================================================

;;	  0--> b  0: i 813 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 813
;;   new tail = 813

;;   ======================================================
;;   -- basic block 392 from 869 to 869 -- after reload
;;   ======================================================

;;	  0--> b  0: i 869 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 869
;;   new tail = 869

;;   ======================================================
;;   -- basic block 393 from 921 to 921 -- after reload
;;   ======================================================

;;	  0--> b  0: i 921 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 921
;;   new tail = 921

;;   ======================================================
;;   -- basic block 394 from 972 to 972 -- after reload
;;   ======================================================

;;	  0--> b  0: i 972 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 972
;;   new tail = 972

;;   ======================================================
;;   -- basic block 395 from 3570 to 4851 -- after reload
;;   ======================================================

;;	  0--> b  0: i3570 bx=ax                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i4851 pc=L3306                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 3570
;;   new tail = 4851

;;   ======================================================
;;   -- basic block 396 from 3610 to 147 -- after reload
;;   ======================================================

;;	  0--> b  0: i3610 bx=ax                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i4103 ax=[bp-0x4e68]                          :athlon-direct,athlon-load
;;	  0--> b  0: i 143 di=[bp-0x4d90]                          :athlon-direct,athlon-load
;;	  3--> b  0: i 145 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i 146 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  5--> b  0: i 147 pc={(flags==0)?L3306:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 3610
;;   new tail = 147

;;   ======================================================
;;   -- basic block 397 from 3252 to 4853 -- after reload
;;   ======================================================

;;	  0--> b  0: i3252 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	  1--> b  0: i4853 pc=L3306                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 3252
;;   new tail = 4853

;;   ======================================================
;;   -- basic block 398 from 121 to 122 -- after reload
;;   ======================================================

;;	  0--> b  0: i 121 di=`*.LC33'                             :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i 122 call [`_ZSt20__throw_length_errorPKc']  :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 121
;;   new tail = 122

;;   ======================================================
;;   -- basic block 399 from 164 to 165 -- after reload
;;   ======================================================

;;	  0--> b  0: i 164 di=`*.LC33'                             :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i 165 call [`_ZSt20__throw_length_errorPKc']  :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 164
;;   new tail = 165

;;   ======================================================
;;   -- basic block 400 from 1149 to 1149 -- after reload
;;   ======================================================

;;	  0--> b  0: i1149 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1149
;;   new tail = 1149

;;   ======================================================
;;   -- basic block 401 from 1210 to 1210 -- after reload
;;   ======================================================

;;	  0--> b  0: i1210 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1210
;;   new tail = 1210

;;   ======================================================
;;   -- basic block 402 from 1271 to 1271 -- after reload
;;   ======================================================

;;	  0--> b  0: i1271 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1271
;;   new tail = 1271

;;   ======================================================
;;   -- basic block 403 from 1375 to 1375 -- after reload
;;   ======================================================

;;	  0--> b  0: i1375 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1375
;;   new tail = 1375

;;   ======================================================
;;   -- basic block 404 from 1022 to 1022 -- after reload
;;   ======================================================

;;	  0--> b  0: i1022 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1022
;;   new tail = 1022

;;   ======================================================
;;   -- basic block 405 from 3594 to 4855 -- after reload
;;   ======================================================

;;	  0--> b  0: i3594 bx=ax                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i4855 pc=L3287                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 3594
;;   new tail = 4855

;;   ======================================================
;;   -- basic block 406 from 2078 to 2078 -- after reload
;;   ======================================================

;;	  0--> b  0: i2078 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2078
;;   new tail = 2078

;;   ======================================================
;;   -- basic block 407 from 1633 to 1633 -- after reload
;;   ======================================================

;;	  0--> b  0: i1633 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1633
;;   new tail = 1633

;;   ======================================================
;;   -- basic block 408 from 4286 to 2864 -- after reload
;;   ======================================================

;;	  0--> b  0: i4286 ax=[const(unspec[`nG'] 2)]              :athlon-direct,athlon-load
;;	  0--> b  0: i4497 xmm1=const_vector                       :athlon-double,athlon-fpsched,athlon-fmul
;;	  1--> b  0: i2722 xmm0=[`*.LC124']                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  1--> b  0: i4290 cx=[const(unspec[`nEtaPrime'] 2)]       :athlon-direct,athlon-load
;;	  2--> b  0: i4294 di=[const(unspec[`nOmega'] 2)]          :athlon-direct,athlon-load
;;	  2--> b  0: i4298 dx=[const(unspec[`nEta'] 2)]            :athlon-direct,athlon-load
;;	  2--> b  0: i2861 si=`*.LC125'                            :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i2709 ax=zxn([ax])                            :athlon-direct,athlon-load,athlon-ieu
;;	  3--> b  0: i4302 bx=[const(unspec[`nPi0'] 2)]            :athlon-direct,athlon-load
;;	  4--> b  0: i2726 cx=zxn([cx])                            :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i4306 r10=[const(unspec[`nPiM'] 2)]           :athlon-direct,athlon-load
;;	  5--> b  0: i2743 di=zxn([di])                            :athlon-direct,athlon-load,athlon-ieu
;;	  5--> b  0: i2760 dx=zxn([dx])                            :athlon-direct,athlon-load,athlon-ieu
;;	  6--> b  0: i2777 bx=zxn([bx])                            :athlon-direct,athlon-load,athlon-ieu
;;	  6--> b  0: i4309 r11=[const(unspec[`nPiP'] 2)]           :athlon-direct,athlon-load
;;	  7--> b  0: i4498 xmm1=vec_merge(vec_duplicate(flt(ax)),xmm1,0x1):athlon-double,athlon-fploadk8,athlon-fstore
;;	  7--> b  0: i2794 r15=zxn([r10])                          :athlon-direct,athlon-load,athlon-ieu
;;	  8--> b  0: i4312 r10=[const(unspec[`nN'] 2)]             :athlon-direct,athlon-load
;;	  8--> b  0: i4495 [bp-0x4e38]=ax                          :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i2811 r14=zxn([r11])                          :athlon-direct,athlon-load,athlon-ieu
;;	  9--> b  0: i4315 r11=[const(unspec[`nP'] 2)]             :athlon-direct,athlon-load
;;	 10--> b  0: i4489 [bp-0x4e48]=di                          :athlon-direct,athlon-agu,athlon-store
;;	 10--> b  0: i4486 [bp-0x4e50]=dx                          :athlon-direct,athlon-agu,athlon-store
;;	 11--> b  0: i2828 r13=zxn([r10])                          :athlon-direct,athlon-load,athlon-ieu
;;	 11--> b  0: i4492 [bp-0x4e40]=cx                          :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i2845 r12=zxn([r11])                          :athlon-direct,athlon-load,athlon-ieu
;;	 12--> b  0: i4483 [bp-0x4e58]=bx                          :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i2723 xmm1=xmm1/xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul*17
;;	 38--> b  0: i4289 [bp-0x4e68]=xmm1                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 38--> b  0: i4499 xmm1=const_vector                       :athlon-double,athlon-fpsched,athlon-fmul
;;	 41--> b  0: i4500 xmm1=vec_merge(vec_duplicate(flt(cx)),xmm1,0x1):athlon-double,athlon-fploadk8,athlon-fstore
;;	 52--> b  0: i4292 xmm2=xmm1                               :athlon-double,athlon-fpsched,(athlon-faddmul+athlon-faddmul)|(athlon-faddmul,athlon-faddmul)
;;	 53--> b  0: i4501 xmm1=const_vector                       :athlon-double,athlon-fpsched,athlon-fmul
;;	 54--> b  0: i2740 xmm2=xmm2/xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul*17
;;	 56--> b  0: i4502 xmm1=vec_merge(vec_duplicate(flt(di)),xmm1,0x1):athlon-double,athlon-fploadk8,athlon-fstore
;;	 67--> b  0: i4296 xmm5=xmm1                               :athlon-double,athlon-fpsched,(athlon-faddmul+athlon-faddmul)|(athlon-faddmul,athlon-faddmul)
;;	 71--> b  0: i4503 xmm1=const_vector                       :athlon-double,athlon-fpsched,athlon-fmul
;;	 72--> b  0: i2757 xmm5=xmm5/xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul*17
;;	 74--> b  0: i4504 xmm1=vec_merge(vec_duplicate(flt(dx)),xmm1,0x1):athlon-double,athlon-fploadk8,athlon-fstore
;;	 74--> b  0: i2860 dx=0x1d                                 :athlon-direct,athlon-ieu
;;	 75--> b  0: i4293 [bp-0x4e70]=xmm2                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	 85--> b  0: i4300 xmm6=xmm1                               :athlon-double,athlon-fpsched,(athlon-faddmul+athlon-faddmul)|(athlon-faddmul,athlon-faddmul)
;;	 89--> b  0: i4505 xmm1=const_vector                       :athlon-double,athlon-fpsched,athlon-fmul
;;	 90--> b  0: i2774 xmm6=xmm6/xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul*17
;;	 92--> b  0: i4506 xmm1=vec_merge(vec_duplicate(flt(bx)),xmm1,0x1):athlon-double,athlon-fploadk8,athlon-fstore
;;	 93--> b  0: i4297 [bp-0x4e78]=xmm5                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	103--> b  0: i4304 xmm7=xmm1                               :athlon-double,athlon-fpsched,(athlon-faddmul+athlon-faddmul)|(athlon-faddmul,athlon-faddmul)
;;	107--> b  0: i4507 xmm1=const_vector                       :athlon-double,athlon-fpsched,athlon-fmul
;;	108--> b  0: i2791 xmm7=xmm7/xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul*17
;;	110--> b  0: i4508 xmm1=vec_merge(vec_duplicate(flt(r15)),xmm1,0x1):athlon-double,athlon-fploadk8,athlon-fstore
;;	111--> b  0: i4301 [bp-0x4e80]=xmm6                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	125--> b  0: i2808 xmm1=xmm1/xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul*17
;;	128--> b  0: i4305 [bp-0x4e88]=xmm7                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	145--> b  0: i4308 [bp-0x4eb0]=xmm1                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	145--> b  0: i4509 xmm1=const_vector                       :athlon-double,athlon-fpsched,athlon-fmul
;;	148--> b  0: i4510 xmm1=vec_merge(vec_duplicate(flt(r14)),xmm1,0x1):athlon-double,athlon-fploadk8,athlon-fstore
;;	159--> b  0: i4310 xmm4=xmm1                               :athlon-double,athlon-fpsched,(athlon-faddmul+athlon-faddmul)|(athlon-faddmul,athlon-faddmul)
;;	160--> b  0: i4511 xmm1=const_vector                       :athlon-double,athlon-fpsched,athlon-fmul
;;	161--> b  0: i2825 xmm4=xmm4/xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul*17
;;	163--> b  0: i4512 xmm1=vec_merge(vec_duplicate(flt(r13)),xmm1,0x1):athlon-double,athlon-fploadk8,athlon-fstore
;;	174--> b  0: i4313 xmm3=xmm1                               :athlon-double,athlon-fpsched,(athlon-faddmul+athlon-faddmul)|(athlon-faddmul,athlon-faddmul)
;;	178--> b  0: i4513 xmm1=const_vector                       :athlon-double,athlon-fpsched,athlon-fmul
;;	179--> b  0: i2842 xmm3=xmm3/xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul*17
;;	181--> b  0: i4514 xmm1=vec_merge(vec_duplicate(flt(r12)),xmm1,0x1):athlon-double,athlon-fploadk8,athlon-fstore
;;	182--> b  0: i4311 [bp-0x4eb8]=xmm4                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	192--> b  0: i4316 xmm8=xmm1                               :athlon-double,athlon-fpsched,(athlon-faddmul+athlon-faddmul)|(athlon-faddmul,athlon-faddmul)
;;	196--> b  0: i2859 xmm8=xmm8/xmm0                          :athlon-direct,athlon-fpsched,athlon-fmul*17
;;	199--> b  0: i4314 [bp-0x4ec0]=xmm3                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	216--> b  0: i4317 [bp-0x4ec8]=xmm8                        :athlon-direct,(athlon-fpsched+athlon-agu),(athlon-fstore+athlon-store)
;;	216--> b  0: i2863 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	219--> b  0: i2864 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 219
;;   new head = 4286
;;   new tail = 2864

;;   ======================================================
;;   -- basic block 409 from 2867 to 2868 -- after reload
;;   ======================================================

;;	  0--> b  0: i2867 di=[const(unspec[`_ZSt4cout'] 2)]       :athlon-direct,athlon-load
;;	  3--> b  0: i2868 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2867
;;   new tail = 2868

;;   ======================================================
;;   -- basic block 410 from 2869 to 2874 -- after reload
;;   ======================================================

;;	  0--> b  0: i2872 si=`*.LC126'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2871 dx=0xc                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2873 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2869 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2874 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2872
;;   new tail = 2874

;;   ======================================================
;;   -- basic block 411 from 2877 to 2879 -- after reload
;;   ======================================================

;;	  0--> b  0: i2877 si=r12                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2878 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2879 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2877
;;   new tail = 2879

;;   ======================================================
;;   -- basic block 412 from 2880 to 2885 -- after reload
;;   ======================================================

;;	  0--> b  0: i2883 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2882 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2884 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2880 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2885 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2883
;;   new tail = 2885

;;   ======================================================
;;   -- basic block 413 from 2887 to 2889 -- after reload
;;   ======================================================

;;	  0--> b  0: i2887 si=0x64                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i2888 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2889 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2887
;;   new tail = 2889

;;   ======================================================
;;   -- basic block 414 from 2890 to 2895 -- after reload
;;   ======================================================

;;	  0--> b  0: i2893 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2892 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2894 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2890 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2895 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2893
;;   new tail = 2895

;;   ======================================================
;;   -- basic block 415 from 2897 to 2899 -- after reload
;;   ======================================================

;;	  0--> b  0: i2897 xmm0=[bp-0x4ec8]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i2898 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2899 ax=call [`_ZNSo9_M_insertIdEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2897
;;   new tail = 2899

;;   ======================================================
;;   -- basic block 416 from 2902 to 2903 -- after reload
;;   ======================================================

;;	  0--> b  0: i2902 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2903 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2902
;;   new tail = 2903

;;   ======================================================
;;   -- basic block 417 from 2904 to 2909 -- after reload
;;   ======================================================

;;	  0--> b  0: i2907 si=`*.LC128'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2906 dx=0xd                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2908 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2904 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2909 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2907
;;   new tail = 2909

;;   ======================================================
;;   -- basic block 418 from 2912 to 2914 -- after reload
;;   ======================================================

;;	  0--> b  0: i2912 si=r13                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2913 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2914 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2912
;;   new tail = 2914

;;   ======================================================
;;   -- basic block 419 from 2915 to 2920 -- after reload
;;   ======================================================

;;	  0--> b  0: i2918 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2917 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2919 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2915 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2920 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2918
;;   new tail = 2920

;;   ======================================================
;;   -- basic block 420 from 2922 to 2924 -- after reload
;;   ======================================================

;;	  0--> b  0: i2922 si=0x64                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i2923 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2924 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2922
;;   new tail = 2924

;;   ======================================================
;;   -- basic block 421 from 2925 to 2930 -- after reload
;;   ======================================================

;;	  0--> b  0: i2928 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2927 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2929 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2925 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2930 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2928
;;   new tail = 2930

;;   ======================================================
;;   -- basic block 422 from 2932 to 2934 -- after reload
;;   ======================================================

;;	  0--> b  0: i2932 xmm0=[bp-0x4ec0]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i2933 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2934 ax=call [`_ZNSo9_M_insertIdEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2932
;;   new tail = 2934

;;   ======================================================
;;   -- basic block 423 from 2937 to 2938 -- after reload
;;   ======================================================

;;	  0--> b  0: i2937 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2938 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2937
;;   new tail = 2938

;;   ======================================================
;;   -- basic block 424 from 2939 to 2944 -- after reload
;;   ======================================================

;;	  0--> b  0: i2942 si=`*.LC129'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2941 dx=0x8                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2943 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2939 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2944 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2942
;;   new tail = 2944

;;   ======================================================
;;   -- basic block 425 from 2947 to 2949 -- after reload
;;   ======================================================

;;	  0--> b  0: i2947 si=r14                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2948 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2949 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2947
;;   new tail = 2949

;;   ======================================================
;;   -- basic block 426 from 2950 to 2955 -- after reload
;;   ======================================================

;;	  0--> b  0: i2953 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2952 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2954 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2950 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2955 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2953
;;   new tail = 2955

;;   ======================================================
;;   -- basic block 427 from 2957 to 2959 -- after reload
;;   ======================================================

;;	  0--> b  0: i2957 si=0x64                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i2958 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2959 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2957
;;   new tail = 2959

;;   ======================================================
;;   -- basic block 428 from 2960 to 2965 -- after reload
;;   ======================================================

;;	  0--> b  0: i2963 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2962 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2964 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2960 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2965 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2963
;;   new tail = 2965

;;   ======================================================
;;   -- basic block 429 from 2967 to 2969 -- after reload
;;   ======================================================

;;	  0--> b  0: i2967 xmm0=[bp-0x4eb8]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i2968 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2969 ax=call [`_ZNSo9_M_insertIdEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2967
;;   new tail = 2969

;;   ======================================================
;;   -- basic block 430 from 2972 to 2973 -- after reload
;;   ======================================================

;;	  0--> b  0: i2972 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2973 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2972
;;   new tail = 2973

;;   ======================================================
;;   -- basic block 431 from 2974 to 2979 -- after reload
;;   ======================================================

;;	  0--> b  0: i2977 si=`*.LC130'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2976 dx=0x8                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2978 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2974 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2979 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2977
;;   new tail = 2979

;;   ======================================================
;;   -- basic block 432 from 2982 to 2984 -- after reload
;;   ======================================================

;;	  0--> b  0: i2982 si=r15                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2983 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2984 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2982
;;   new tail = 2984

;;   ======================================================
;;   -- basic block 433 from 2985 to 2990 -- after reload
;;   ======================================================

;;	  0--> b  0: i2988 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2987 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2989 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2985 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i2990 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2988
;;   new tail = 2990

;;   ======================================================
;;   -- basic block 434 from 2992 to 2994 -- after reload
;;   ======================================================

;;	  0--> b  0: i2992 si=0x64                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i2993 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2994 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 2992
;;   new tail = 2994

;;   ======================================================
;;   -- basic block 435 from 2995 to 3000 -- after reload
;;   ======================================================

;;	  0--> b  0: i2998 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i2997 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i2999 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i2995 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3000 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2998
;;   new tail = 3000

;;   ======================================================
;;   -- basic block 436 from 3002 to 3004 -- after reload
;;   ======================================================

;;	  0--> b  0: i3002 xmm0=[bp-0x4eb0]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i3003 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3004 ax=call [`_ZNSo9_M_insertIdEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3002
;;   new tail = 3004

;;   ======================================================
;;   -- basic block 437 from 3007 to 3008 -- after reload
;;   ======================================================

;;	  0--> b  0: i3007 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3008 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 3007
;;   new tail = 3008

;;   ======================================================
;;   -- basic block 438 from 3009 to 3014 -- after reload
;;   ======================================================

;;	  0--> b  0: i3012 si=`*.LC131'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3011 dx=0x8                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3013 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3009 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3014 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3012
;;   new tail = 3014

;;   ======================================================
;;   -- basic block 439 from 3017 to 3019 -- after reload
;;   ======================================================

;;	  0--> b  0: i3017 si=[bp-0x4e58]                          :athlon-direct,athlon-load
;;	  0--> b  0: i3018 di=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i3019 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 3017
;;   new tail = 3019

;;   ======================================================
;;   -- basic block 440 from 3020 to 3025 -- after reload
;;   ======================================================

;;	  0--> b  0: i3023 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3022 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3024 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3020 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3025 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3023
;;   new tail = 3025

;;   ======================================================
;;   -- basic block 441 from 3027 to 3029 -- after reload
;;   ======================================================

;;	  0--> b  0: i3027 si=0x64                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i3028 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3029 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 3027
;;   new tail = 3029

;;   ======================================================
;;   -- basic block 442 from 3030 to 3035 -- after reload
;;   ======================================================

;;	  0--> b  0: i3033 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3032 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3034 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3030 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3035 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3033
;;   new tail = 3035

;;   ======================================================
;;   -- basic block 443 from 3037 to 3039 -- after reload
;;   ======================================================

;;	  0--> b  0: i3037 xmm0=[bp-0x4e88]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i3038 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3039 ax=call [`_ZNSo9_M_insertIdEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3037
;;   new tail = 3039

;;   ======================================================
;;   -- basic block 444 from 3042 to 3043 -- after reload
;;   ======================================================

;;	  0--> b  0: i3042 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3043 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 3042
;;   new tail = 3043

;;   ======================================================
;;   -- basic block 445 from 3044 to 3049 -- after reload
;;   ======================================================

;;	  0--> b  0: i3047 si=`*.LC132'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3046 dx=0x8                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3048 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3044 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3049 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3047
;;   new tail = 3049

;;   ======================================================
;;   -- basic block 446 from 3052 to 3054 -- after reload
;;   ======================================================

;;	  0--> b  0: i3052 si=[bp-0x4e50]                          :athlon-direct,athlon-load
;;	  0--> b  0: i3053 di=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i3054 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 3052
;;   new tail = 3054

;;   ======================================================
;;   -- basic block 447 from 3055 to 3060 -- after reload
;;   ======================================================

;;	  0--> b  0: i3058 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3057 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3059 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3055 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3060 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3058
;;   new tail = 3060

;;   ======================================================
;;   -- basic block 448 from 3062 to 3064 -- after reload
;;   ======================================================

;;	  0--> b  0: i3062 si=0x64                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i3063 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3064 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 3062
;;   new tail = 3064

;;   ======================================================
;;   -- basic block 449 from 3065 to 3070 -- after reload
;;   ======================================================

;;	  0--> b  0: i3068 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3067 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3069 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3065 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3070 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3068
;;   new tail = 3070

;;   ======================================================
;;   -- basic block 450 from 3072 to 3074 -- after reload
;;   ======================================================

;;	  0--> b  0: i3072 xmm0=[bp-0x4e80]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i3073 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3074 ax=call [`_ZNSo9_M_insertIdEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3072
;;   new tail = 3074

;;   ======================================================
;;   -- basic block 451 from 3077 to 3078 -- after reload
;;   ======================================================

;;	  0--> b  0: i3077 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3078 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 3077
;;   new tail = 3078

;;   ======================================================
;;   -- basic block 452 from 3079 to 3084 -- after reload
;;   ======================================================

;;	  0--> b  0: i3082 si=`*.LC133'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3081 dx=0xa                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3083 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3079 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3084 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3082
;;   new tail = 3084

;;   ======================================================
;;   -- basic block 453 from 3087 to 3089 -- after reload
;;   ======================================================

;;	  0--> b  0: i3087 si=[bp-0x4e48]                          :athlon-direct,athlon-load
;;	  0--> b  0: i3088 di=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i3089 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 3087
;;   new tail = 3089

;;   ======================================================
;;   -- basic block 454 from 3090 to 3095 -- after reload
;;   ======================================================

;;	  0--> b  0: i3093 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3092 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3094 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3090 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3095 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3093
;;   new tail = 3095

;;   ======================================================
;;   -- basic block 455 from 3097 to 3099 -- after reload
;;   ======================================================

;;	  0--> b  0: i3097 si=0x64                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i3098 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3099 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 3097
;;   new tail = 3099

;;   ======================================================
;;   -- basic block 456 from 3100 to 3105 -- after reload
;;   ======================================================

;;	  0--> b  0: i3103 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3102 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3104 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3100 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3105 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3103
;;   new tail = 3105

;;   ======================================================
;;   -- basic block 457 from 3107 to 3109 -- after reload
;;   ======================================================

;;	  0--> b  0: i3107 xmm0=[bp-0x4e78]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i3108 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3109 ax=call [`_ZNSo9_M_insertIdEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3107
;;   new tail = 3109

;;   ======================================================
;;   -- basic block 458 from 3112 to 3113 -- after reload
;;   ======================================================

;;	  0--> b  0: i3112 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3113 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 3112
;;   new tail = 3113

;;   ======================================================
;;   -- basic block 459 from 3114 to 3119 -- after reload
;;   ======================================================

;;	  0--> b  0: i3117 si=`*.LC134'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3116 dx=0x9                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3118 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3114 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3119 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3117
;;   new tail = 3119

;;   ======================================================
;;   -- basic block 460 from 3122 to 3124 -- after reload
;;   ======================================================

;;	  0--> b  0: i3122 si=[bp-0x4e40]                          :athlon-direct,athlon-load
;;	  0--> b  0: i3123 di=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i3124 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 3122
;;   new tail = 3124

;;   ======================================================
;;   -- basic block 461 from 3125 to 3130 -- after reload
;;   ======================================================

;;	  0--> b  0: i3128 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3127 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3129 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3125 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3130 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3128
;;   new tail = 3130

;;   ======================================================
;;   -- basic block 462 from 3132 to 3134 -- after reload
;;   ======================================================

;;	  0--> b  0: i3132 si=0x64                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i3133 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3134 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 3132
;;   new tail = 3134

;;   ======================================================
;;   -- basic block 463 from 3135 to 3140 -- after reload
;;   ======================================================

;;	  0--> b  0: i3138 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3137 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3139 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3135 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3140 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3138
;;   new tail = 3140

;;   ======================================================
;;   -- basic block 464 from 3142 to 3144 -- after reload
;;   ======================================================

;;	  0--> b  0: i3142 xmm0=[bp-0x4e70]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i3143 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3144 ax=call [`_ZNSo9_M_insertIdEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3142
;;   new tail = 3144

;;   ======================================================
;;   -- basic block 465 from 3147 to 3148 -- after reload
;;   ======================================================

;;	  0--> b  0: i3147 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3148 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 3147
;;   new tail = 3148

;;   ======================================================
;;   -- basic block 466 from 3149 to 3154 -- after reload
;;   ======================================================

;;	  0--> b  0: i3152 si=`*.LC135'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3151 dx=0xa                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3153 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3149 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3154 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3152
;;   new tail = 3154

;;   ======================================================
;;   -- basic block 467 from 3157 to 3159 -- after reload
;;   ======================================================

;;	  0--> b  0: i3157 si=[bp-0x4e38]                          :athlon-direct,athlon-load
;;	  0--> b  0: i3158 di=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i3159 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 3157
;;   new tail = 3159

;;   ======================================================
;;   -- basic block 468 from 3160 to 3165 -- after reload
;;   ======================================================

;;	  0--> b  0: i3163 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3162 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3164 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3160 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3165 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3163
;;   new tail = 3165

;;   ======================================================
;;   -- basic block 469 from 3167 to 3169 -- after reload
;;   ======================================================

;;	  0--> b  0: i3167 si=0x64                                 :athlon-direct,athlon-ieu
;;	  0--> b  0: i3168 di=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3169 ax=call [`_ZNSo9_M_insertImEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 3167
;;   new tail = 3169

;;   ======================================================
;;   -- basic block 470 from 3170 to 3175 -- after reload
;;   ======================================================

;;	  0--> b  0: i3173 si=`*.LC127'                            :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3172 dx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i3174 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3170 bx=ax                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3175 ax=call [`_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3173
;;   new tail = 3175

;;   ======================================================
;;   -- basic block 471 from 3177 to 3179 -- after reload
;;   ======================================================

;;	  0--> b  0: i3177 xmm0=[bp-0x4e68]                        :athlon-double,athlon-fploadk8,(athlon-fstore+athlon-fmul)
;;	  0--> b  0: i3178 di=bx                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i3179 ax=call [`_ZNSo9_M_insertIdEERSoT_']    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 3177
;;   new tail = 3179

;;   ======================================================
;;   -- basic block 472 from 3182 to 3183 -- after reload
;;   ======================================================

;;	  0--> b  0: i3182 di=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i3183 ax=call [`_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_']:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 3182
;;   new tail = 3183

;;   ======================================================
;;   -- basic block 473 from 4439 to 3189 -- after reload
;;   ======================================================

;;	  0--> b  0: i4439 bx=[bp-0x4ea0]                          :athlon-direct,athlon-load
;;	  0--> b  0: i4702 {si=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i3185 ax=[bx]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i3188 di=bx                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i3189 ax=call [[ax+0x238]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 4439
;;   new tail = 3189

;;   ======================================================
;;   -- basic block 474 from 4437 to 3197 -- after reload
;;   ======================================================

;;	  0--> b  0: i4437 di=[bp-0x4e90]                          :athlon-direct,athlon-load
;;	  0--> b  0: i4699 {cx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i4700 {dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i4701 {si=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i3191 ax=[di]                                 :athlon-direct,athlon-load
;;	  6--> b  0: i3197 ax=call [[ax+0x180]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 4437
;;   new tail = 3197

;;   ======================================================
;;   -- basic block 475 from 4436 to 3205 -- after reload
;;   ======================================================

;;	  0--> b  0: i4436 di=[bp-0x4e98]                          :athlon-direct,athlon-load
;;	  0--> b  0: i4696 {cx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i4697 {dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i4698 {si=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i3199 ax=[di]                                 :athlon-direct,athlon-load
;;	  6--> b  0: i3205 ax=call [[ax+0x180]]                    :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 4436
;;   new tail = 3205

;;   ======================================================
;;   -- basic block 476 from 3207 to 3211 -- after reload
;;   ======================================================

;;	  0--> b  0: i3207 ax=[bx]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i3209 si=`*.LC36'                             :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i3210 di=bx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i3211 call [[ax+0x230]]                       :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 3207
;;   new tail = 3211

;;   ======================================================
;;   -- basic block 477 from 3214 to 3220 -- after reload
;;   ======================================================

;;	  0--> b  0: i3214 di=[bp-0x4e60]                          :athlon-direct,athlon-load
;;	  3--> b  0: i3215 call [`_ZN8TRandom3D1Ev']               :athlon-vector,athlon-ieu
;;	  4--> b  0: i4322 ax=[bp-0x4ea8]                          :athlon-direct,athlon-load
;;	  4--> b  0: i3216 di=[bp-0x4dd0]                          :athlon-direct,athlon-load
;;	  7--> b  0: i3218 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  8--> b  0: i3219 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  9--> b  0: i3220 pc={(flags==0)?L3615:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 3214
;;   new tail = 3220

;;   ======================================================
;;   -- basic block 478 from 3223 to 3223 -- after reload
;;   ======================================================

;;	  0--> b  0: i3223 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 3223
;;   new tail = 3223

;;   ======================================================
;;   -- basic block 479 from 4695 to 4565 -- after reload
;;   ======================================================

;;	  0--> b  0: i4558 {sp=bp-0x28;clobber flags;clobber [scratch];}:athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i4695 {ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i3324 use ax                                  :nothing
;;	  2--> b  0: i4559 bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  3--> b  0: i4560 r12=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  4--> b  0: i4561 r13=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  5--> b  0: i4562 r14=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  6--> b  0: i4563 r15=[sp++]                              :athlon-vector,athlon-load,athlon-ieu
;;	  7--> b  0: i4564 bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  8--> b  0: i4565 simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 4867
;;   new tail = 4565

;;   ======================================================
;;   -- basic block 480 from 1503 to 1503 -- after reload
;;   ======================================================

;;	  0--> b  0: i1503 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1503
;;   new tail = 1503

;;   ======================================================
;;   -- basic block 481 from 1954 to 1954 -- after reload
;;   ======================================================

;;	  0--> b  0: i1954 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1954
;;   new tail = 1954

;;   ======================================================
;;   -- basic block 482 from 2016 to 2016 -- after reload
;;   ======================================================

;;	  0--> b  0: i2016 call [`_ZSt16__throw_bad_castv']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 2016
;;   new tail = 2016

;;   ======================================================
;;   -- basic block 483 from 3582 to 3235 -- after reload
;;   ======================================================

;;	  0--> b  0: i3582 bx=ax                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i4324 ax=[bp-0x4e60]                          :athlon-direct,athlon-load
;;	  0--> b  0: i3231 di=[bp-0xa40]                           :athlon-direct,athlon-load
;;	  3--> b  0: i3233 {ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i3234 flags=cmp(di,ax)                        :athlon-direct,athlon-ieu
;;	  5--> b  0: i3235 pc={(flags==0)?L3243:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 3582
;;   new tail = 3235

;;   ======================================================
;;   -- basic block 484 from 3238 to 3238 -- after reload
;;   ======================================================

;;	  0--> b  0: i3238 call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 3238
;;   new tail = 3238

;;   ======================================================
;;   -- basic block 485 from 3245 to 3249 -- after reload
;;   ======================================================

;;	  0--> b  0: i4326 dx=[bp-0x4e68]                          :athlon-direct,athlon-load
;;	  0--> b  0: i3245 di=[bp-0x4d90]                          :athlon-direct,athlon-load
;;	  3--> b  0: i3247 {dx=dx+0x10;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i3248 flags=cmp(di,dx)                        :athlon-direct,athlon-ieu
;;	  5--> b  0: i3249 pc={(flags!=0)?L4572:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 4326
;;   new tail = 3249

;;   ======================================================
;;   -- basic block 486 from 4858 to 4858 -- after reload
;;   ======================================================

;;	  0--> b  0: i4858 pc=L3306                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 4858
;;   new tail = 4858

;;   ======================================================
;;   -- basic block 487 from 3586 to 4860 -- after reload
;;   ======================================================

;;	  0--> b  0: i3261 di=[bp-0x4e90]                          :athlon-direct,athlon-load
;;	  0--> b  0: i3586 bx=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i3262 call [`_ZN7TObjectdlEPv']               :athlon-vector,athlon-ieu
;;	  4--> b  0: i4860 pc=L3306                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 3261
;;   new tail = 4860

;;   ======================================================
;;   -- basic block 488 from 3576 to 4862 -- after reload
;;   ======================================================

;;	  0--> b  0: i3576 bx=ax                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i4862 pc=L3243                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 3576
;;   new tail = 4862



starting the processing of deferred insns
ending the processing of deferred insns


int main()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;;  ref usage 	r0={543d,534u} r1={488d,177u,6e} r2={395d,82u} r3={134d,245u,27e} r4={535d,202u} r5={606d,303u} r6={3d,825u} r7={23d,833u} r8={319d} r9={319d} r10={319d} r11={319d} r12={319d} r13={319d} r14={319d} r15={319d} r16={9u} r17={557d,111u,2e} r18={319d} r19={319d} r20={1d,10u,92e} r21={382d,99u} r22={381d,68u} r23={341d,28u} r24={323d,3u} r25={323d,3u} r26={325d,6u} r27={325d,7u} r28={324d,5u} r29={319d} r30={319d} r31={319d} r32={319d} r33={319d} r34={319d} r35={319d} r36={319d} r37={356d,36u} r38={322d,2u} r39={321d,2u} r40={321d,2u} r41={48d,89u,13e} r42={18d,28u,3e} r43={18d,26u} r44={16d,82u} r45={321d,2u} r46={319d} r47={319d} r48={319d} r49={319d} r50={319d} r51={319d} r52={319d} r53={319d} r54={319d} r55={319d} r56={319d} r57={319d} r58={319d} r59={319d} r60={319d} r61={319d} r62={319d} r63={319d} r64={319d} r65={319d} r66={319d} r67={319d} r68={319d} r69={319d} r70={319d} r71={319d} r72={319d} r73={319d} r74={319d} r75={319d} r76={319d} r77={319d} r78={319d} r79={319d} r80={319d} 
;;    total ref usage 28619{24657d,3819u,143e} in 2177{1858 regular + 319 call} insns.
(note 46 0 92 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(note 92 46 47 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 47 92 4546 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 4546 47 100 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) mymainCascade.cc:117 61 {*pushdi2_rex64}
     (nil))
(insn 100 4546 4547 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7fb2b65a26c0 *.LC32>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:590 85 {*movdi_internal}
     (nil))
(insn/f:TI 4547 100 4548 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) mymainCascade.cc:117 85 {*movdi_internal}
     (nil))
(insn/f 4548 4547 4549 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 44 r15)) mymainCascade.cc:117 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))
(insn/f 4549 4548 4537 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) mymainCascade.cc:117 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn:TI 4537 4549 4550 2 (set (reg/f:DI 0 ax [1587])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -19920 [0xffffffffffffb230]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn/f 4550 4537 4551 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) mymainCascade.cc:117 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 4551 4550 4552 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) mymainCascade.cc:117 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f:TI 4552 4551 4098 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) mymainCascade.cc:117 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn:TI 4098 4552 4553 2 (set (reg/f:DI 5 di [1587])
        (reg/f:DI 0 ax [1587])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (nil))
(insn/f:TI 4553 4098 4554 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -20136 [0xffffffffffffb158])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mymainCascade.cc:117 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 4554 4553 4333 2 NOTE_INSN_PROLOGUE_END)
(insn 4333 4554 95 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20136 [0xffffffffffffb158])) [789 %sfp+-20088 S8 A64])
        (reg/f:DI 0 ax [1587])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (nil))
(insn 95 4333 96 2 (parallel [
            (set (reg/f:DI 0 ax [920])
                (plus:DI (reg/f:DI 0 ax [1587])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -19872 [0xffffffffffffb260])) [5 MEM[(struct _Alloc_hider *)&label]._M_p+0 S8 A128])
            (nil))))
(insn:TI 96 95 97 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19920 [0xffffffffffffb230])) [5 MEM[(struct _Alloc_hider *)&label]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [920])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [920])
        (nil)))
(insn 97 96 98 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19912 [0xffffffffffffb238])) [6 MEM[(size_type *)&label + 8B]+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (nil))
(insn:TI 98 97 102 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19904 [0xffffffffffffb240])) [0 MEM[(char_type &)&label + 16]+0 S1 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:243 89 {*movqi_internal}
     (nil))
(call_insn:TI 102 98 103 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc") [flags 0x41]  <function_decl 0x7fb2bed56e00 assign>) [0 assign S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:590 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc") [flags 0x41]  <function_decl 0x7fb2bed56e00 assign>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       3 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              395 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 103 102 109 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 109 103 4535 3 NOTE_INSN_DELETED)
(insn:TI 4535 109 107 3 (set (reg/f:DI 0 ax [1595])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -19856 [0xffffffffffffb270]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn 107 4535 108 3 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19848 [0xffffffffffffb278])) [6 MEM[(size_type *)&D.337450 + 8B]+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (nil))
(insn 108 107 4100 3 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19840 [0xffffffffffffb280])) [0 MEM[(char_type &)&D.337450 + 16]+0 S1 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:243 89 {*movqi_internal}
     (nil))
(insn:TI 4100 108 4331 3 (set (reg/f:DI 5 di [1595])
        (reg/f:DI 0 ax [1595])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (nil))
(insn 4331 4100 105 3 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20072 [0xffffffffffffb198])) [789 %sfp+-20024 S8 A64])
        (reg/f:DI 0 ax [1595])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (nil))
(insn 105 4331 106 3 (parallel [
            (set (reg/f:DI 0 ax [923])
                (plus:DI (reg/f:DI 0 ax [1595])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -19808 [0xffffffffffffb2a0])) [5 MEM[(struct _Alloc_hider *)&D.337450]._M_p+0 S8 A128])
            (nil))))
(insn:TI 106 105 4102 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19856 [0xffffffffffffb270])) [5 MEM[(struct _Alloc_hider *)&D.337450]._M_p+0 S8 A128])
        (reg/f:DI 0 ax [923])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [923])
        (nil)))
(insn 4102 106 4536 3 (set (reg:DI 0 ax [1688])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19912 [0xffffffffffffb238])) [6 MEM[(long unsigned int *)&label + 8B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:1155 85 {*movdi_internal}
     (nil))
(insn:TI 4536 4102 114 3 (set (reg:DI 4 si [924])
        (plus:DI (reg:DI 0 ax [1688])
            (const_int 17 [0x11]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:1155 215 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [1688])
        (nil)))
(call_insn:TI 114 4536 115 3 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm") [flags 0x41]  <function_decl 0x7fb2bed4f620 reserve>) [0 reserve S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.tcc:1155 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 14 [0xe])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm") [flags 0x41]  <function_decl 0x7fb2bed4f620 reserve>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              396 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(note 115 114 116 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 116 115 117 4 (set (reg:DI 0 ax [928])
        (const_int 9223372036854775807 [0x7fffffffffffffff])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:271 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 9223372036854775807 [0x7fffffffffffffff])
        (nil)))
(insn 117 116 118 4 (parallel [
            (set (reg:DI 0 ax [927])
                (minus:DI (reg:DI 0 ax [928])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19848 [0xffffffffffffb278])) [6 MEM[(long unsigned int *)&D.337450 + 8B]+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:271 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:DI (const_int 9223372036854775807 [0x7fffffffffffffff])
                (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19800 [0xffffffffffffb2a8])) [6 MEM[(long unsigned int *)&D.337450 + 8B]+0 S8 A64]))
            (nil))))
(insn:TI 118 117 119 4 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [927])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:271 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [927])
        (nil)))
(jump_insn:TI 119 118 125 4 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4728)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:271 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4728)
;;  succ:       398 [0.0%]  (CAN_FALLTHRU)
;;              5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL)
;;  pred:       4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 125 119 4334 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4334 125 128 5 (set (reg/f:DI 3 bx [1595])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20072 [0xffffffffffffb198])) [789 %sfp+-20024 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1101 85 {*movdi_internal}
     (nil))
(insn 128 4334 127 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fb2b65a2900 *.LC34>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1101 85 {*movdi_internal}
     (nil))
(insn 127 128 129 5 (set (reg:DI 1 dx)
        (const_int 17 [0x11])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1101 85 {*movdi_internal}
     (nil))
(insn:TI 129 127 130 5 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [1595])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1101 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -19808 [0xffffffffffffb2a0]))
        (nil)))
(call_insn:TI 130 129 131 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm") [flags 0x41]  <function_decl 0x7fb2bed67e00 _M_append>) [0 _M_append S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1101 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 14 [0xe])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm") [flags 0x41]  <function_decl 0x7fb2bed67e00 _M_append>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              396 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 131 130 135 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 135 131 136 6 (set (reg:DI 1 dx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19912 [0xffffffffffffb238])) [6 MEM[(long unsigned int *)&label + 8B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1069 85 {*movdi_internal}
     (nil))
(insn 136 135 137 6 (set (reg:DI 4 si)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19920 [0xffffffffffffb230])) [5 MEM[(char * *)&label]+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1069 85 {*movdi_internal}
     (nil))
(insn 137 136 138 6 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [1595])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1069 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [1595])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -19808 [0xffffffffffffb2a0]))
            (nil))))
(call_insn:TI 138 137 158 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm") [flags 0x41]  <function_decl 0x7fb2bed67e00 _M_append>) [0 _M_append S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1069 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 14 [0xe])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm") [flags 0x41]  <function_decl 0x7fb2bed67e00 _M_append>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       396 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(note 158 138 159 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn:TI 159 158 160 7 (set (reg:DI 0 ax [940])
        (const_int 9223372036854775807 [0x7fffffffffffffff])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:271 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 9223372036854775807 [0x7fffffffffffffff])
        (nil)))
(insn 160 159 161 7 (parallel [
            (set (reg:DI 0 ax [939])
                (minus:DI (reg:DI 0 ax [940])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19848 [0xffffffffffffb278])) [6 MEM[(long unsigned int *)&D.337450 + 8B]+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:271 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:DI (const_int 9223372036854775807 [0x7fffffffffffffff])
                (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19800 [0xffffffffffffb2a8])) [6 MEM[(long unsigned int *)&D.337450 + 8B]+0 S8 A64]))
            (nil))))
(insn:TI 161 160 162 7 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [939])
            (const_int 4 [0x4]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:271 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [939])
        (nil)))
(jump_insn:TI 162 161 168 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4729)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:271 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4729)
;;  succ:       399 [0.0%]  (CAN_FALLTHRU)
;;              8 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL)
;;  pred:       7 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 168 162 172 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn:TI 172 168 171 8 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20072 [0xffffffffffffb198])) [789 %sfp+-20024 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1115 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -19808 [0xffffffffffffb2a0]))
        (nil)))
(insn 171 172 170 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7fb2b65a2990 *.LC35>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1115 85 {*movdi_internal}
     (nil))
(insn 170 171 173 8 (set (reg:DI 1 dx)
        (const_int 5 [0x5])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1115 85 {*movdi_internal}
     (nil))
(call_insn:TI 173 170 3418 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm") [flags 0x41]  <function_decl 0x7fb2bed67e00 _M_append>) [0 _M_append S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:1115 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm") [flags 0x41]  <function_decl 0x7fb2bed67e00 _M_append>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       488 (ABNORMAL,ABNORMAL_CALL,EH)
;;              9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	
(note 3418 173 4532 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4532 3418 4533 9 (set (reg/f:DI 2 cx [1618])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -2624 [0xfffffffffffff5c0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (nil))
(insn:TI 4533 4532 4335 9 (set (reg/f:DI 1 dx [943])
        (plus:DI (reg/f:DI 2 cx [1618])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 215 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [1618])
        (nil)))
(insn 4335 4533 178 9 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20064 [0xffffffffffffb1a0])) [789 %sfp+-20016 S8 A64])
        (reg/f:DI 2 cx [1618])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (nil))
(insn:TI 178 4335 179 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -2624 [0xfffffffffffff5c0])) [5 MEM[(struct _Alloc_hider *)&D.337451]._M_p+0 S8 A128])
        (reg/f:DI 1 dx [943])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:110 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [943])
        (nil)))
(insn 179 178 4534 9 (set (reg/f:DI 2 cx [orig:613 _967 ] [613])
        (mem/f:DI (reg/f:DI 0 ax [orig:620 _975 ] [620]) [5 MEM[(char * *)_975]+0 S8 A64])) 85 {*movdi_internal}
     (nil))
(insn 4534 179 181 9 (set (reg/f:DI 1 dx [orig:614 _968 ] [614])
        (plus:DI (reg/f:DI 0 ax [orig:620 _975 ] [620])
            (const_int 16 [0x10]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:152 215 {*leadi}
     (nil))
(insn:TI 181 4534 182 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:613 _967 ] [613])
            (reg/f:DI 1 dx [orig:614 _968 ] [614]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:479 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 182 181 189 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4730)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:479 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 4730)
;;  succ:       378 [10.1%]  (CAN_FALLTHRU)
;;              10 [89.9%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL)
;;  pred:       9 [89.9%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx]
;; live  kill	
(note 189 182 190 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn:TI 190 189 191 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -2624 [0xfffffffffffff5c0])) [5 MEM[(char * *)&D.337451]+0 S8 A128])
        (reg/f:DI 2 cx [orig:613 _967 ] [613])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:128 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:613 _967 ] [613])
        (nil)))
(insn 191 190 192 10 (set (reg:DI 2 cx [orig:616 _970 ] [616])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:620 _975 ] [620])
                (const_int 16 [0x10])) [0 _975->D.24452._M_allocated_capacity+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:487 85 {*movdi_internal}
     (nil))
(insn:TI 192 191 193 10 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -2608 [0xfffffffffffff5d0])) [6 MEM[(size_type *)&D.337451 + 16B]+0 S8 A128])
        (reg:DI 2 cx [orig:616 _970 ] [616])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:160 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:616 _970 ] [616])
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              378 [100.0%]  (CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	 17 [flags]
(code_label 193 192 194 11 350 "" [1 uses])
(note 194 193 195 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn:TI 195 194 204 11 (set (reg:DI 2 cx [orig:617 _971 ] [617])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:620 _975 ] [620])
                (const_int 8 [0x8])) [6 MEM[(long unsigned int *)_975 + 8B]+0 S8 A64])) 85 {*movdi_internal}
     (nil))
(insn 204 195 4722 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fb2b65a2ab0 *.LC37>)) mymainCascade.cc:131 85 {*movdi_internal}
     (nil))
(insn 4722 204 196 11 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:131 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 196 4722 197 11 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -2616 [0xfffffffffffff5c8])) [6 MEM[(size_type *)&D.337451 + 8B]+0 S8 A64])
        (reg:DI 2 cx [orig:617 _971 ] [617])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:617 _971 ] [617])
        (nil)))
(insn 197 196 203 11 (set (mem/f:DI (reg/f:DI 0 ax [orig:620 _975 ] [620]) [5 MEM[(char * *)_975]+0 S8 A64])
        (reg/f:DI 1 dx [orig:614 _968 ] [614])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:128 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:614 _968 ] [614])
        (nil)))
(insn 203 197 199 11 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fb2b65a2a20 *.LC36>)) mymainCascade.cc:131 85 {*movdi_internal}
     (nil))
(insn:TI 199 203 205 11 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:620 _975 ] [620])
                (const_int 16 [0x10])) [0 MEM[(char_type &)_975 + 16]+0 S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/char_traits.h:243 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:620 _975 ] [620])
        (nil)))
(insn 205 199 202 11 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -2624 [0xfffffffffffff5c0])) [5 MEM[(char * *)&D.337451]+0 S8 A128])) mymainCascade.cc:131 85 {*movdi_internal}
     (nil))
(insn 202 205 198 11 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) mymainCascade.cc:131 86 {*movsi_internal}
     (nil))
(insn:TI 198 202 206 11 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:620 _975 ] [620])
                (const_int 8 [0x8])) [6 MEM[(size_type *)_975 + 8B]+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:132 85 {*movdi_internal}
     (nil))
(call_insn:TI 206 198 3419 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN5TFile4OpenEPKcS1_S1_ii") [flags 0x41]  <function_decl 0x7fb2b5254d20 Open>) [0 Open S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:131 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 3 [0x3])
                            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5TFile4OpenEPKcS1_S1_ii") [flags 0x41]  <function_decl 0x7fb2b5254d20 Open>)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       483 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(note 3419 206 207 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn:TI 207 3419 4107 12 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20128 [0xffffffffffffb160])) [789 %sfp+-20080 S8 A64])
        (reg:DI 0 ax)) mymainCascade.cc:131 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 4107 207 209 12 (set (reg/f:DI 0 ax [1618])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20064 [0xffffffffffffb1a0])) [789 %sfp+-20016 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 85 {*movdi_internal}
     (nil))
(insn:TI 209 4107 211 12 (set (reg/f:DI 5 di [orig:278 _332 ] [278])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -2624 [0xfffffffffffff5c0])) [5 MEM[(char * *)&D.337451]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 211 209 212 12 (parallel [
            (set (reg/f:DI 0 ax [946])
                (plus:DI (reg/f:DI 0 ax [1618])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 212 211 213 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:278 _332 ] [278])
            (reg/f:DI 0 ax [946]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [946])
        (nil)))
(jump_insn:TI 213 212 214 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 217)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 217)
;;  succ:       13 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              14 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 6, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL)
;;  pred:       12 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 214 213 216 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 216 214 217 13 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       14 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [30.2%]  (CAN_FALLTHRU)
;;              13 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 217 216 218 14 351 "" [1 uses])
(note 218 217 4108 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4108 218 219 14 (set (reg/f:DI 0 ax [1595])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20072 [0xffffffffffffb198])) [789 %sfp+-20024 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 85 {*movdi_internal}
     (nil))
(insn 219 4108 221 14 (set (reg/f:DI 5 di [orig:281 _337 ] [281])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19856 [0xffffffffffffb270])) [5 MEM[(char * *)&D.337450]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 221 219 222 14 (parallel [
            (set (reg/f:DI 0 ax [948])
                (plus:DI (reg/f:DI 0 ax [1595])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 222 221 223 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:281 _337 ] [281])
            (reg/f:DI 0 ax [948]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [948])
        (nil)))
(jump_insn:TI 223 222 224 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 227)
;;  succ:       15 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              16 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 6, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL)
;;  pred:       14 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 224 223 226 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 226 224 227 15 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       16 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [30.2%]  (CAN_FALLTHRU)
;;              15 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 227 226 228 16 352 "" [1 uses])
(note 228 227 231 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(note 231 228 4339 16 NOTE_INSN_DELETED)
(insn:TI 4339 231 4721 16 (set (reg/f:DI 5 di [orig:143 _48 ] [143])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20128 [0xffffffffffffb160])) [789 %sfp+-20080 S8 A64])) mymainCascade.cc:132 85 {*movdi_internal}
     (nil))
(insn 4721 4339 230 16 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:132 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 230 4721 234 16 (set (reg/f:DI 0 ax [orig:949 _48->D.311695.D.295006.D.294623.D.276419._vptr.TObject ] [949])
        (mem/f:DI (reg/f:DI 5 di [orig:143 _48 ] [143]) [150 _48->D.311695.D.295006.D.294623.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:132 85 {*movdi_internal}
     (nil))
(call_insn:TI 234 230 235 16 (set (reg:QI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:949 _48->D.311695.D.295006.D.294623.D.276419._vptr.TObject ] [949])
                        (const_int 568 [0x238])) [735 MEM[(int (*__vtbl_ptr_type) () *)_52 + 568B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_53;(struct TDirectoryFile)_51->71) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:132 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_CALL_DECL (nil)
                    (expr_list:REG_EH_REGION (const_int 1 [0x1])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              17 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL)
;;  pred:       16 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
(note 235 234 236 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 236 235 3420 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN10TDirectory16CurrentDirectoryEv") [flags 0x41]  <function_decl 0x7fb2b5901b60 CurrentDirectory>) [0 CurrentDirectory S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:279 684 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN10TDirectory16CurrentDirectoryEv") [flags 0x41]  <function_decl 0x7fb2b5901b60 CurrentDirectory>)
            (nil)))
    (nil))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              18 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL)
;;  pred:       17 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 5 [di]
;; live  kill	
(note 3420 236 240 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn:TI 240 3420 239 18 (set (reg:DI 5 di)
        (const_int 696 [0x2b8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TObject.h:152 85 {*movdi_internal}
     (nil))
(insn 239 240 241 18 (set (reg/f:DI 3 bx [orig:148 _57 ] [148])
        (mem/f:DI (reg/f:DI 0 ax [orig:147 _56 ] [147]) [557 *_56+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:279 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:147 _56 ] [147])
        (nil)))
(call_insn:TI 241 239 3421 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN8TStorage11ObjectAllocEm") [flags 0x41]  <function_decl 0x7fb2b6befb60 ObjectAlloc>) [0 ObjectAlloc S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TObject.h:152 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 1 [0x1])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN8TStorage11ObjectAllocEm") [flags 0x41]  <function_decl 0x7fb2b6befb60 ObjectAlloc>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              19 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL)
;;  pred:       18 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 3421 241 246 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn:TI 246 3421 247 19 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7fb2b65a2b40 *.LC38>)) mymainCascade.cc:134 85 {*movdi_internal}
     (nil))
(insn 247 246 244 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7fb2b65a2bd0 *.LC39>)) mymainCascade.cc:134 85 {*movdi_internal}
     (nil))
(insn 244 247 245 19 (set (reg:DI 37 r8)
        (reg/f:DI 3 bx [orig:148 _57 ] [148])) mymainCascade.cc:134 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:148 _57 ] [148])
        (nil)))
(insn:TI 245 244 248 19 (set (reg:SI 2 cx)
        (const_int 99 [0x63])) mymainCascade.cc:134 86 {*movsi_internal}
     (nil))
(insn 248 245 4338 19 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:271 _320 ] [271])) mymainCascade.cc:134 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:271 _320 ] [271])
        (nil)))
(insn 4338 248 249 19 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20112 [0xffffffffffffb170])) [789 %sfp+-20064 S8 A64])
        (reg/f:DI 0 ax [orig:271 _320 ] [271])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TObject.h:152 85 {*movdi_internal}
     (nil))
(call_insn:TI 249 4338 250 19 (call (mem:QI (symbol_ref:DI ("_ZN5TTreeC1EPKcS1_iP10TDirectory") [flags 0x41]  <function_decl 0x7fb2b40c5e00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) mymainCascade.cc:134 673 {*call}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 4 [0x4])
                            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5TTreeC1EPKcS1_iP10TDirectory") [flags 0x41]  <function_decl 0x7fb2b40c5e00 __comp_ctor >)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       487 (ABNORMAL,ABNORMAL_CALL,EH)
;;              20 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL)
;;  pred:       19 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
(note 250 249 251 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 251 250 3422 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN10TDirectory16CurrentDirectoryEv") [flags 0x41]  <function_decl 0x7fb2b5901b60 CurrentDirectory>) [0 CurrentDirectory S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:279 684 {*call_value}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN10TDirectory16CurrentDirectoryEv") [flags 0x41]  <function_decl 0x7fb2b5901b60 CurrentDirectory>)
            (nil)))
    (nil))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL)
;;  pred:       20 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 5 [di]
;; live  kill	
(note 3422 251 255 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn:TI 255 3422 254 21 (set (reg:DI 5 di)
        (const_int 696 [0x2b8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TObject.h:152 85 {*movdi_internal}
     (nil))
(insn 254 255 256 21 (set (reg/f:DI 3 bx [orig:150 _61 ] [150])
        (mem/f:DI (reg/f:DI 0 ax [orig:149 _60 ] [149]) [557 *_60+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TTree.h:279 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:149 _60 ] [149])
        (nil)))
(call_insn:TI 256 254 3423 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN8TStorage11ObjectAllocEm") [flags 0x41]  <function_decl 0x7fb2b6befb60 ObjectAlloc>) [0 ObjectAlloc S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TObject.h:152 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 1 [0x1])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN8TStorage11ObjectAllocEm") [flags 0x41]  <function_decl 0x7fb2b6befb60 ObjectAlloc>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL)
;;  pred:       21 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 3423 256 261 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn:TI 261 3423 262 22 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7fb2b65a2c60 *.LC40>)) mymainCascade.cc:135 85 {*movdi_internal}
     (nil))
(insn 262 261 259 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x7fb2b65a2cf0 *.LC41>)) mymainCascade.cc:135 85 {*movdi_internal}
     (nil))
(insn 259 262 260 22 (set (reg:DI 37 r8)
        (reg/f:DI 3 bx [orig:150 _61 ] [150])) mymainCascade.cc:135 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:150 _61 ] [150])
        (nil)))
(insn:TI 260 259 263 22 (set (reg:SI 2 cx)
        (const_int 99 [0x63])) mymainCascade.cc:135 86 {*movsi_internal}
     (nil))
(insn 263 260 4337 22 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:269 _317 ] [269])) mymainCascade.cc:135 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:269 _317 ] [269])
        (nil)))
(insn 4337 263 264 22 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20120 [0xffffffffffffb168])) [789 %sfp+-20072 S8 A64])
        (reg/f:DI 0 ax [orig:269 _317 ] [269])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/ROOT/v6-14-00-ship-1/include/TObject.h:152 85 {*movdi_internal}
     (nil))
(call_insn:TI 264 4337 265 22 (call (mem:QI (symbol_ref:DI ("_ZN5TTreeC1EPKcS1_iP10TDirectory") [flags 0x41]  <function_decl 0x7fb2b40c5e00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) mymainCascade.cc:135 673 {*call}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 5 [0x5])
                            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN5TTreeC1EPKcS1_iP10TDirectory") [flags 0x41]  <function_decl 0x7fb2b40c5e00 __comp_ctor >)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       387 (ABNORMAL,ABNORMAL_CALL,EH)
;;              23 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
(note 265 264 3779 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(note 3779 265 3781 23 NOTE_INSN_DELETED)
(note 3781 3779 4336 23 NOTE_INSN_DELETED)
(note 4336 3781 3782 23 NOTE_INSN_DELETED)
(insn:TI 3782 4336 3778 23 (set (reg/f:DI 2 cx [1581])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -15424 [0xffffffffffffc3c0]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -15376 [0xffffffffffffc3f0]))
        (nil)))
(insn 3778 3782 3780 23 (set (reg/f:DI 42 r13 [1605])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -17024 [0xffffffffffffbd80]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -16976 [0xffffffffffffbdb0]))
        (nil)))
(insn 3780 3778 3783 23 (set (reg/f:DI 41 r12 [1593])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -16224 [0xffffffffffffc0a0]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -16176 [0xffffffffffffc0d0]))
        (nil)))
(insn:TI 3783 3780 266 23 (set (reg/f:DI 3 bx [1602])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -19824 [0xffffffffffffb290]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -19776 [0xffffffffffffb2c0]))
        (nil)))
(insn 266 3783 4720 23 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20008 [0xffffffffffffb1d8])) [22 nPi0s+0 S4 A64])
        (const_int 0 [0])) mymainCascade.cc:139 86 {*movsi_internal}
     (nil))
(insn 4720 266 4035 23 (parallel [
            (set (reg:DI 0 ax [orig:897 ivtmp.585 ] [897])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:139 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4035 4720 280 23 (set (reg/f:DI 1 dx [1581])
        (reg/f:DI 2 cx [1581])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [1581])
        (nil)))
;;  succ:       24 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

;; basic block 24, loop depth 0, count 0, freq 788, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              23 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 26 [xmm5] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags] 26 [xmm5] 27 [xmm6]
;; live  kill	 17 [flags]
(code_label 280 4035 267 24 353 "" [1 uses])
(note 267 280 4113 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4113 267 4114 24 (set (reg:DF 27 xmm6 [1698])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC43") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:147 126 {*movdf_internal}
     (nil))
(insn 4114 4113 278 24 (set (reg/f:DI 2 cx [1581])
        (reg/f:DI 1 dx [1581])) mymainCascade.cc:148 85 {*movdi_internal}
     (nil))
(insn 278 4114 4112 24 (set (mem:SI (plus:DI (reg/f:DI 3 bx [1602])
                (reg:DI 0 ax [orig:897 ivtmp.585 ] [897])) [22 MEM[symbol: isPrimaryPi0, index: ivtmp.585_1586, offset: 0B]+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) mymainCascade.cc:149 86 {*movsi_internal}
     (nil))
(insn:TI 4112 278 273 24 (set (reg:DF 26 xmm5 [1697])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC42") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:146 126 {*movdf_internal}
     (nil))
(insn:TI 273 4112 270 24 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:897 ivtmp.585 ] [897])
                    (const_int 2 [0x2]))
                (reg/f:DI 41 r12 [1593])) [78 MEM[symbol: thetaPi0, index: ivtmp.585_1586, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 27 xmm6 [1698])) mymainCascade.cc:147 126 {*movdf_internal}
     (nil))
(insn:TI 270 273 276 24 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:897 ivtmp.585 ] [897])
                    (const_int 2 [0x2]))
                (reg/f:DI 42 r13 [1605])) [78 MEM[symbol: pPi0, index: ivtmp.585_1586, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 26 xmm5 [1697])) mymainCascade.cc:146 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 26 xmm5 [1697])
        (nil)))
(insn:TI 276 270 279 24 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:897 ivtmp.585 ] [897])
                    (const_int 2 [0x2]))
                (reg/f:DI 2 cx [1581])) [78 MEM[symbol: phiPi0, index: ivtmp.585_1586, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 27 xmm6 [1700])) mymainCascade.cc:148 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 27 xmm6 [1700])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [1581])
            (nil))))
(insn 279 276 281 24 (parallel [
            (set (reg:DI 0 ax [orig:897 ivtmp.585 ] [897])
                (plus:DI (reg:DI 0 ax [orig:897 ivtmp.585 ] [897])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 281 279 282 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:897 ivtmp.585 ] [897])
            (const_int 400 [0x190]))) mymainCascade.cc:145 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 282 281 283 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 280)
            (pc))) mymainCascade.cc:145 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 280)
;;  succ:       25 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              24 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

;; basic block 25, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 43 [r14] 44 [r15]
;; live  kill	
(note 283 282 4349 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(note 4349 283 4348 25 NOTE_INSN_DELETED)
(insn:TI 4348 4349 4039 25 (set (reg/f:DI 44 r15 [orig:271 _320 ] [271])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20112 [0xffffffffffffb170])) [789 %sfp+-20064 S8 A64])) mymainCascade.cc:152 85 {*movdi_internal}
     (nil))
(insn 4039 4348 288 25 (set (reg/f:DI 43 r14 [1581])
        (reg/f:DI 1 dx [1581])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [1581])
        (nil)))
(insn 288 4039 4527 25 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x7fb2b65a2ea0 *.LC44>)) mymainCascade.cc:152 85 {*movdi_internal}
     (nil))
(insn:TI 4527 288 285 25 (set (reg/f:DI 1 dx [958])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -20008 [0xffffffffffffb1d8]))) mymainCascade.cc:152 215 {*leadi}
     (nil))
(insn 285 4527 286 25 (set (reg:SI 37 r8)
        (const_int 99 [0x63])) mymainCascade.cc:152 86 {*movsi_internal}
     (nil))
(insn 286 285 289 25 (set (reg:SI 2 cx)
        (const_int 32000 [0x7d00])) mymainCascade.cc:152 86 {*movsi_internal}
     (nil))
(insn:TI 289 286 290 25 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:152 85 {*movdi_internal}
     (nil))
(call_insn:TI 290 289 291 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii") [flags 0x1]  <function_decl 0x7fb2b41ce1c0 Branch>) [0 Branch S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:152 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii") [flags 0x1]  <function_decl 0x7fb2b41ce1c0 Branch>)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              26 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 26, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 291 290 294 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(note 294 291 293 26 NOTE_INSN_DELETED)
(insn:TI 293 294 295 26 (set (reg/f:DI 0 ax [orig:960 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [960])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:153 85 {*movdi_internal}
     (nil))
(insn 295 293 296 26 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:153 86 {*movsi_internal}
     (nil))
(insn 296 295 297 26 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x7fb2b65a2f30 *.LC45>)) mymainCascade.cc:153 85 {*movdi_internal}
     (nil))
(insn:TI 297 296 298 26 (set (reg:DI 1 dx)
        (reg/f:DI 42 r13 [1605])) mymainCascade.cc:153 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [1605])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16976 [0xffffffffffffbdb0]))
            (nil))))
(insn 298 297 299 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC46") [flags 0x2]  <var_decl 0x7fb2b65a4000 *.LC46>)) mymainCascade.cc:153 85 {*movdi_internal}
     (nil))
(insn 299 298 300 26 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:153 85 {*movdi_internal}
     (nil))
(call_insn:TI 300 299 301 26 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:960 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [960])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_70 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_71;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:153 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              27 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 27, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 301 300 304 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(note 304 301 303 27 NOTE_INSN_DELETED)
(insn:TI 303 304 305 27 (set (reg/f:DI 0 ax [orig:963 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [963])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:154 85 {*movdi_internal}
     (nil))
(insn 305 303 306 27 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:154 86 {*movsi_internal}
     (nil))
(insn 306 305 307 27 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC47") [flags 0x2]  <var_decl 0x7fb2b65a4090 *.LC47>)) mymainCascade.cc:154 85 {*movdi_internal}
     (nil))
(insn:TI 307 306 308 27 (set (reg:DI 1 dx)
        (reg/f:DI 41 r12 [1593])) mymainCascade.cc:154 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [1593])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16176 [0xffffffffffffc0d0]))
            (nil))))
(insn 308 307 309 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC48") [flags 0x2]  <var_decl 0x7fb2b65a4120 *.LC48>)) mymainCascade.cc:154 85 {*movdi_internal}
     (nil))
(insn 309 308 310 27 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:154 85 {*movdi_internal}
     (nil))
(call_insn:TI 310 309 311 27 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:963 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [963])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_73 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_74;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:154 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              28 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 28, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 311 310 314 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(note 314 311 313 28 NOTE_INSN_DELETED)
(insn:TI 313 314 315 28 (set (reg/f:DI 0 ax [orig:966 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [966])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:155 85 {*movdi_internal}
     (nil))
(insn 315 313 316 28 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:155 86 {*movsi_internal}
     (nil))
(insn 316 315 317 28 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC49") [flags 0x2]  <var_decl 0x7fb2b65a41b0 *.LC49>)) mymainCascade.cc:155 85 {*movdi_internal}
     (nil))
(insn:TI 317 316 318 28 (set (reg:DI 1 dx)
        (reg/f:DI 43 r14 [1581])) mymainCascade.cc:155 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [1581])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -15376 [0xffffffffffffc3f0]))
            (nil))))
(insn 318 317 319 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC50") [flags 0x2]  <var_decl 0x7fb2b65a4360 *.LC50>)) mymainCascade.cc:155 85 {*movdi_internal}
     (nil))
(insn 319 318 320 28 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:155 85 {*movdi_internal}
     (nil))
(call_insn:TI 320 319 321 28 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:966 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [966])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_76 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_77;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:155 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              29 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 29, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 321 320 324 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(note 324 321 323 29 NOTE_INSN_DELETED)
(insn:TI 323 324 325 29 (set (reg/f:DI 0 ax [orig:969 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [969])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:156 85 {*movdi_internal}
     (nil))
(insn 325 323 326 29 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:156 86 {*movsi_internal}
     (nil))
(insn 326 325 327 29 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC51") [flags 0x2]  <var_decl 0x7fb2b65a43f0 *.LC51>)) mymainCascade.cc:156 85 {*movdi_internal}
     (nil))
(insn:TI 327 326 328 29 (set (reg:DI 1 dx)
        (reg/f:DI 3 bx [1602])) mymainCascade.cc:156 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [1602])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -19776 [0xffffffffffffb2c0]))
            (nil))))
(insn 328 327 329 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7fb2b65a4480 *.LC52>)) mymainCascade.cc:156 85 {*movdi_internal}
     (nil))
(insn 329 328 330 29 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:156 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [orig:271 _320 ] [271])
        (nil)))
(call_insn:TI 330 329 331 29 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:969 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [969])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_79 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_80;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:156 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              30 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       29 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
(note 331 330 4340 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(note 4340 331 3786 30 NOTE_INSN_DELETED)
(insn:TI 3786 4340 3784 30 (set (reg/f:DI 2 cx [1624])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -13024 [0xffffffffffffcd20]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -12976 [0xffffffffffffcd50]))
        (nil)))
(insn 3784 3786 3785 30 (set (reg/f:DI 42 r13 [1577])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -14624 [0xffffffffffffc6e0]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -14576 [0xffffffffffffc710]))
        (nil)))
(insn 3785 3784 3787 30 (set (reg/f:DI 41 r12 [1626])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -13824 [0xffffffffffffca00]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -13776 [0xffffffffffffca30]))
        (nil)))
(insn:TI 3787 3785 332 30 (set (reg/f:DI 3 bx [1619])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -19424 [0xffffffffffffb420]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -19376 [0xffffffffffffb450]))
        (nil)))
(insn 332 3787 4719 30 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20004 [0xffffffffffffb1dc])) [22 nEtas+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:158 86 {*movsi_internal}
     (nil))
(insn 4719 332 4046 30 (parallel [
            (set (reg:DI 0 ax [orig:898 ivtmp.573 ] [898])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:158 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4046 4719 346 30 (set (reg/f:DI 1 dx [1624])
        (reg/f:DI 2 cx [1624])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [1624])
        (nil)))
;;  succ:       31 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

;; basic block 31, loop depth 0, count 0, freq 788, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              30 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 22 [xmm1] 23 [xmm2]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags] 22 [xmm1] 23 [xmm2]
;; live  kill	 17 [flags]
(code_label 346 4046 333 31 354 "" [1 uses])
(note 333 346 4124 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4124 333 4125 31 (set (reg:DF 22 xmm1 [1709])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC43") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:166 126 {*movdf_internal}
     (nil))
(insn 4125 4124 344 31 (set (reg/f:DI 2 cx [1624])
        (reg/f:DI 1 dx [1624])) mymainCascade.cc:167 85 {*movdi_internal}
     (nil))
(insn 344 4125 4123 31 (set (mem:SI (plus:DI (reg/f:DI 3 bx [1619])
                (reg:DI 0 ax [orig:898 ivtmp.573 ] [898])) [22 MEM[symbol: isPrimaryEta, index: ivtmp.573_1590, offset: 0B]+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) mymainCascade.cc:168 86 {*movsi_internal}
     (nil))
(insn:TI 4123 344 339 31 (set (reg:DF 23 xmm2 [1708])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC42") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:165 126 {*movdf_internal}
     (nil))
(insn:TI 339 4123 336 31 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:898 ivtmp.573 ] [898])
                    (const_int 2 [0x2]))
                (reg/f:DI 41 r12 [1626])) [78 MEM[symbol: thetaEta, index: ivtmp.573_1590, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 22 xmm1 [1709])) mymainCascade.cc:166 126 {*movdf_internal}
     (nil))
(insn:TI 336 339 342 31 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:898 ivtmp.573 ] [898])
                    (const_int 2 [0x2]))
                (reg/f:DI 42 r13 [1577])) [78 MEM[symbol: pEta, index: ivtmp.573_1590, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 23 xmm2 [1708])) mymainCascade.cc:165 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [1708])
        (nil)))
(insn:TI 342 336 345 31 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:898 ivtmp.573 ] [898])
                    (const_int 2 [0x2]))
                (reg/f:DI 2 cx [1624])) [78 MEM[symbol: phiEta, index: ivtmp.573_1590, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 22 xmm1 [1711])) mymainCascade.cc:167 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1711])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [1624])
            (nil))))
(insn 345 342 347 31 (parallel [
            (set (reg:DI 0 ax [orig:898 ivtmp.573 ] [898])
                (plus:DI (reg:DI 0 ax [orig:898 ivtmp.573 ] [898])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 347 345 348 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:898 ivtmp.573 ] [898])
            (const_int 400 [0x190]))) mymainCascade.cc:164 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 348 347 349 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 346)
            (pc))) mymainCascade.cc:164 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 346)
;;  succ:       32 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              31 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

;; basic block 32, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 43 [r14] 44 [r15]
;; live  kill	
(note 349 348 4359 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(note 4359 349 4358 32 NOTE_INSN_DELETED)
(insn:TI 4358 4359 4050 32 (set (reg/f:DI 44 r15 [orig:271 _320 ] [271])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20112 [0xffffffffffffb170])) [789 %sfp+-20064 S8 A64])) mymainCascade.cc:171 85 {*movdi_internal}
     (nil))
(insn 4050 4358 354 32 (set (reg/f:DI 43 r14 [1624])
        (reg/f:DI 1 dx [1624])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [1624])
        (nil)))
(insn 354 4050 4526 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC53") [flags 0x2]  <var_decl 0x7fb2b65a4510 *.LC53>)) mymainCascade.cc:171 85 {*movdi_internal}
     (nil))
(insn:TI 4526 354 351 32 (set (reg/f:DI 1 dx [978])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -20004 [0xffffffffffffb1dc]))) mymainCascade.cc:171 215 {*leadi}
     (nil))
(insn 351 4526 352 32 (set (reg:SI 37 r8)
        (const_int 99 [0x63])) mymainCascade.cc:171 86 {*movsi_internal}
     (nil))
(insn 352 351 355 32 (set (reg:SI 2 cx)
        (const_int 32000 [0x7d00])) mymainCascade.cc:171 86 {*movsi_internal}
     (nil))
(insn:TI 355 352 356 32 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:171 85 {*movdi_internal}
     (nil))
(call_insn:TI 356 355 357 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii") [flags 0x1]  <function_decl 0x7fb2b41ce1c0 Branch>) [0 Branch S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:171 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii") [flags 0x1]  <function_decl 0x7fb2b41ce1c0 Branch>)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              33 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 33, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 357 356 360 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(note 360 357 359 33 NOTE_INSN_DELETED)
(insn:TI 359 360 361 33 (set (reg/f:DI 0 ax [orig:980 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [980])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:172 85 {*movdi_internal}
     (nil))
(insn 361 359 362 33 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:172 86 {*movsi_internal}
     (nil))
(insn 362 361 363 33 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7fb2b65a46c0 *.LC54>)) mymainCascade.cc:172 85 {*movdi_internal}
     (nil))
(insn:TI 363 362 364 33 (set (reg:DI 1 dx)
        (reg/f:DI 42 r13 [1577])) mymainCascade.cc:172 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [1577])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -14576 [0xffffffffffffc710]))
            (nil))))
(insn 364 363 365 33 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC55") [flags 0x2]  <var_decl 0x7fb2b65a4750 *.LC55>)) mymainCascade.cc:172 85 {*movdi_internal}
     (nil))
(insn 365 364 366 33 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:172 85 {*movdi_internal}
     (nil))
(call_insn:TI 366 365 367 33 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:980 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [980])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_89 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_90;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:172 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              34 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 34, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 367 366 370 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(note 370 367 369 34 NOTE_INSN_DELETED)
(insn:TI 369 370 371 34 (set (reg/f:DI 0 ax [orig:983 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [983])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:173 85 {*movdi_internal}
     (nil))
(insn 371 369 372 34 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:173 86 {*movsi_internal}
     (nil))
(insn 372 371 373 34 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC56") [flags 0x2]  <var_decl 0x7fb2b65a47e0 *.LC56>)) mymainCascade.cc:173 85 {*movdi_internal}
     (nil))
(insn:TI 373 372 374 34 (set (reg:DI 1 dx)
        (reg/f:DI 41 r12 [1626])) mymainCascade.cc:173 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [1626])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -13776 [0xffffffffffffca30]))
            (nil))))
(insn 374 373 375 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC57") [flags 0x2]  <var_decl 0x7fb2b65a4870 *.LC57>)) mymainCascade.cc:173 85 {*movdi_internal}
     (nil))
(insn 375 374 376 34 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:173 85 {*movdi_internal}
     (nil))
(call_insn:TI 376 375 377 34 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:983 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [983])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_92 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_93;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:173 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              35 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 35, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 377 376 380 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(note 380 377 379 35 NOTE_INSN_DELETED)
(insn:TI 379 380 381 35 (set (reg/f:DI 0 ax [orig:986 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [986])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:174 85 {*movdi_internal}
     (nil))
(insn 381 379 382 35 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:174 86 {*movsi_internal}
     (nil))
(insn 382 381 383 35 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC58") [flags 0x2]  <var_decl 0x7fb2b65a4a20 *.LC58>)) mymainCascade.cc:174 85 {*movdi_internal}
     (nil))
(insn:TI 383 382 384 35 (set (reg:DI 1 dx)
        (reg/f:DI 43 r14 [1624])) mymainCascade.cc:174 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [1624])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -12976 [0xffffffffffffcd50]))
            (nil))))
(insn 384 383 385 35 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC59") [flags 0x2]  <var_decl 0x7fb2b65a4ab0 *.LC59>)) mymainCascade.cc:174 85 {*movdi_internal}
     (nil))
(insn 385 384 386 35 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:174 85 {*movdi_internal}
     (nil))
(call_insn:TI 386 385 387 35 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:986 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [986])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_95 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_96;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:174 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              36 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 36, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 387 386 390 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(note 390 387 389 36 NOTE_INSN_DELETED)
(insn:TI 389 390 391 36 (set (reg/f:DI 0 ax [orig:989 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [989])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:175 85 {*movdi_internal}
     (nil))
(insn 391 389 392 36 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:175 86 {*movsi_internal}
     (nil))
(insn 392 391 393 36 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC60") [flags 0x2]  <var_decl 0x7fb2b65a4c60 *.LC60>)) mymainCascade.cc:175 85 {*movdi_internal}
     (nil))
(insn:TI 393 392 394 36 (set (reg:DI 1 dx)
        (reg/f:DI 3 bx [1619])) mymainCascade.cc:175 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [1619])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -19376 [0xffffffffffffb450]))
            (nil))))
(insn 394 393 395 36 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC61") [flags 0x2]  <var_decl 0x7fb2b65a4cf0 *.LC61>)) mymainCascade.cc:175 85 {*movdi_internal}
     (nil))
(insn 395 394 396 36 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:175 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [orig:271 _320 ] [271])
        (nil)))
(call_insn:TI 396 395 397 36 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:989 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [989])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_98 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_99;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:175 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              37 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       36 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
(note 397 396 4350 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(note 4350 397 3790 37 NOTE_INSN_DELETED)
(insn:TI 3790 4350 3788 37 (set (reg/f:DI 2 cx [1606])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -10624 [0xffffffffffffd680]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -10576 [0xffffffffffffd6b0]))
        (nil)))
(insn 3788 3790 3789 37 (set (reg/f:DI 42 r13 [1614])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -12224 [0xffffffffffffd040]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -12176 [0xffffffffffffd070]))
        (nil)))
(insn 3789 3788 3791 37 (set (reg/f:DI 41 r12 [1610])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -11424 [0xffffffffffffd360]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -11376 [0xffffffffffffd390]))
        (nil)))
(insn:TI 3791 3789 398 37 (set (reg/f:DI 3 bx [1585])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -19024 [0xffffffffffffb5b0]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -18976 [0xffffffffffffb5e0]))
        (nil)))
(insn 398 3791 4718 37 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20000 [0xffffffffffffb1e0])) [22 nOmegas+0 S4 A128])
        (const_int 0 [0])) mymainCascade.cc:177 86 {*movsi_internal}
     (nil))
(insn 4718 398 4054 37 (parallel [
            (set (reg:DI 0 ax [orig:899 ivtmp.561 ] [899])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:177 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4054 4718 412 37 (set (reg/f:DI 1 dx [1606])
        (reg/f:DI 2 cx [1606])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [1606])
        (nil)))
;;  succ:       38 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

;; basic block 38, loop depth 0, count 0, freq 788, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       38 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              37 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 27 [xmm6] 28 [xmm7]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags] 27 [xmm6] 28 [xmm7]
;; live  kill	 17 [flags]
(code_label 412 4054 399 38 355 "" [1 uses])
(note 399 412 4135 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4135 399 4136 38 (set (reg:DF 28 xmm7 [1720])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC43") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:185 126 {*movdf_internal}
     (nil))
(insn 4136 4135 410 38 (set (reg/f:DI 2 cx [1606])
        (reg/f:DI 1 dx [1606])) mymainCascade.cc:186 85 {*movdi_internal}
     (nil))
(insn 410 4136 4134 38 (set (mem:SI (plus:DI (reg/f:DI 3 bx [1585])
                (reg:DI 0 ax [orig:899 ivtmp.561 ] [899])) [22 MEM[symbol: isPrimaryOmega, index: ivtmp.561_1594, offset: 0B]+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) mymainCascade.cc:187 86 {*movsi_internal}
     (nil))
(insn:TI 4134 410 405 38 (set (reg:DF 27 xmm6 [1719])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC42") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:184 126 {*movdf_internal}
     (nil))
(insn:TI 405 4134 402 38 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:899 ivtmp.561 ] [899])
                    (const_int 2 [0x2]))
                (reg/f:DI 41 r12 [1610])) [78 MEM[symbol: thetaOmega, index: ivtmp.561_1594, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 28 xmm7 [1720])) mymainCascade.cc:185 126 {*movdf_internal}
     (nil))
(insn:TI 402 405 408 38 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:899 ivtmp.561 ] [899])
                    (const_int 2 [0x2]))
                (reg/f:DI 42 r13 [1614])) [78 MEM[symbol: pOmega, index: ivtmp.561_1594, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 27 xmm6 [1719])) mymainCascade.cc:184 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 27 xmm6 [1719])
        (nil)))
(insn:TI 408 402 411 38 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:899 ivtmp.561 ] [899])
                    (const_int 2 [0x2]))
                (reg/f:DI 2 cx [1606])) [78 MEM[symbol: phiOmega, index: ivtmp.561_1594, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 28 xmm7 [1722])) mymainCascade.cc:186 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 28 xmm7 [1722])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [1606])
            (nil))))
(insn 411 408 413 38 (parallel [
            (set (reg:DI 0 ax [orig:899 ivtmp.561 ] [899])
                (plus:DI (reg:DI 0 ax [orig:899 ivtmp.561 ] [899])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 413 411 414 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:899 ivtmp.561 ] [899])
            (const_int 400 [0x190]))) mymainCascade.cc:183 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 414 413 415 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 412)
            (pc))) mymainCascade.cc:183 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 412)
;;  succ:       39 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              38 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

;; basic block 39, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 38, next block 40, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       38 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 43 [r14] 44 [r15]
;; live  kill	
(note 415 414 4369 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(note 4369 415 4368 39 NOTE_INSN_DELETED)
(insn:TI 4368 4369 4058 39 (set (reg/f:DI 44 r15 [orig:271 _320 ] [271])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20112 [0xffffffffffffb170])) [789 %sfp+-20064 S8 A64])) mymainCascade.cc:190 85 {*movdi_internal}
     (nil))
(insn 4058 4368 420 39 (set (reg/f:DI 43 r14 [1606])
        (reg/f:DI 1 dx [1606])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [1606])
        (nil)))
(insn 420 4058 4525 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC62") [flags 0x2]  <var_decl 0x7fb2b65a4ea0 *.LC62>)) mymainCascade.cc:190 85 {*movdi_internal}
     (nil))
(insn:TI 4525 420 417 39 (set (reg/f:DI 1 dx [998])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -20000 [0xffffffffffffb1e0]))) mymainCascade.cc:190 215 {*leadi}
     (nil))
(insn 417 4525 418 39 (set (reg:SI 37 r8)
        (const_int 99 [0x63])) mymainCascade.cc:190 86 {*movsi_internal}
     (nil))
(insn 418 417 421 39 (set (reg:SI 2 cx)
        (const_int 32000 [0x7d00])) mymainCascade.cc:190 86 {*movsi_internal}
     (nil))
(insn:TI 421 418 422 39 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:190 85 {*movdi_internal}
     (nil))
(call_insn:TI 422 421 423 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii") [flags 0x1]  <function_decl 0x7fb2b41ce1c0 Branch>) [0 Branch S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:190 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii") [flags 0x1]  <function_decl 0x7fb2b41ce1c0 Branch>)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              40 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 40, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 39, next block 41, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 423 422 426 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(note 426 423 425 40 NOTE_INSN_DELETED)
(insn:TI 425 426 427 40 (set (reg/f:DI 0 ax [orig:1000 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1000])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:191 85 {*movdi_internal}
     (nil))
(insn 427 425 428 40 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:191 86 {*movsi_internal}
     (nil))
(insn 428 427 429 40 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC63") [flags 0x2]  <var_decl 0x7fb2b65a4f30 *.LC63>)) mymainCascade.cc:191 85 {*movdi_internal}
     (nil))
(insn:TI 429 428 430 40 (set (reg:DI 1 dx)
        (reg/f:DI 42 r13 [1614])) mymainCascade.cc:191 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [1614])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -12176 [0xffffffffffffd070]))
            (nil))))
(insn 430 429 431 40 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC64") [flags 0x2]  <var_decl 0x7fb2b65a6120 *.LC64>)) mymainCascade.cc:191 85 {*movdi_internal}
     (nil))
(insn 431 430 432 40 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:191 85 {*movdi_internal}
     (nil))
(call_insn:TI 432 431 433 40 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1000 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1000])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_108 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_109;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:191 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 41, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 40, next block 42, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       40 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 433 432 436 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(note 436 433 435 41 NOTE_INSN_DELETED)
(insn:TI 435 436 437 41 (set (reg/f:DI 0 ax [orig:1003 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1003])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:192 85 {*movdi_internal}
     (nil))
(insn 437 435 438 41 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:192 86 {*movsi_internal}
     (nil))
(insn 438 437 439 41 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC65") [flags 0x2]  <var_decl 0x7fb2b65a61b0 *.LC65>)) mymainCascade.cc:192 85 {*movdi_internal}
     (nil))
(insn:TI 439 438 440 41 (set (reg:DI 1 dx)
        (reg/f:DI 41 r12 [1610])) mymainCascade.cc:192 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [1610])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -11376 [0xffffffffffffd390]))
            (nil))))
(insn 440 439 441 41 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC66") [flags 0x2]  <var_decl 0x7fb2b65a6360 *.LC66>)) mymainCascade.cc:192 85 {*movdi_internal}
     (nil))
(insn 441 440 442 41 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:192 85 {*movdi_internal}
     (nil))
(call_insn:TI 442 441 443 41 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1003 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1003])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_111 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_112;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:192 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              42 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 42, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 41, next block 43, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 443 442 446 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(note 446 443 445 42 NOTE_INSN_DELETED)
(insn:TI 445 446 447 42 (set (reg/f:DI 0 ax [orig:1006 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1006])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:193 85 {*movdi_internal}
     (nil))
(insn 447 445 448 42 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:193 86 {*movsi_internal}
     (nil))
(insn 448 447 449 42 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC67") [flags 0x2]  <var_decl 0x7fb2b65a63f0 *.LC67>)) mymainCascade.cc:193 85 {*movdi_internal}
     (nil))
(insn:TI 449 448 450 42 (set (reg:DI 1 dx)
        (reg/f:DI 43 r14 [1606])) mymainCascade.cc:193 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [1606])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -10576 [0xffffffffffffd6b0]))
            (nil))))
(insn 450 449 451 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC68") [flags 0x2]  <var_decl 0x7fb2b65a65a0 *.LC68>)) mymainCascade.cc:193 85 {*movdi_internal}
     (nil))
(insn 451 450 452 42 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:193 85 {*movdi_internal}
     (nil))
(call_insn:TI 452 451 453 42 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1006 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1006])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_114 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_115;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:193 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              43 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 43, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 42, next block 44, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       42 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 453 452 456 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(note 456 453 455 43 NOTE_INSN_DELETED)
(insn:TI 455 456 457 43 (set (reg/f:DI 0 ax [orig:1009 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1009])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:194 85 {*movdi_internal}
     (nil))
(insn 457 455 458 43 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:194 86 {*movsi_internal}
     (nil))
(insn 458 457 459 43 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC69") [flags 0x2]  <var_decl 0x7fb2b65a6630 *.LC69>)) mymainCascade.cc:194 85 {*movdi_internal}
     (nil))
(insn:TI 459 458 460 43 (set (reg:DI 1 dx)
        (reg/f:DI 3 bx [1585])) mymainCascade.cc:194 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [1585])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -18976 [0xffffffffffffb5e0]))
            (nil))))
(insn 460 459 461 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC70") [flags 0x2]  <var_decl 0x7fb2b65a6900 *.LC70>)) mymainCascade.cc:194 85 {*movdi_internal}
     (nil))
(insn 461 460 462 43 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:194 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [orig:271 _320 ] [271])
        (nil)))
(call_insn:TI 462 461 463 43 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1009 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1009])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_117 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_118;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:194 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              44 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
(note 463 462 4360 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(note 4360 463 3794 44 NOTE_INSN_DELETED)
(insn:TI 3794 4360 3792 44 (set (reg/f:DI 2 cx [1611])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -8224 [0xffffffffffffdfe0]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -8176 [0xffffffffffffe010]))
        (nil)))
(insn 3792 3794 3793 44 (set (reg/f:DI 42 r13 [1603])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -9824 [0xffffffffffffd9a0]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -9776 [0xffffffffffffd9d0]))
        (nil)))
(insn 3793 3792 3795 44 (set (reg/f:DI 41 r12 [1615])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -9024 [0xffffffffffffdcc0]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -8976 [0xffffffffffffdcf0]))
        (nil)))
(insn:TI 3795 3793 464 44 (set (reg/f:DI 3 bx [1613])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -18624 [0xffffffffffffb740]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -18576 [0xffffffffffffb770]))
        (nil)))
(insn 464 3795 4717 44 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19996 [0xffffffffffffb1e4])) [22 nEtaPrimes+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:196 86 {*movsi_internal}
     (nil))
(insn 4717 464 4063 44 (parallel [
            (set (reg:DI 0 ax [orig:141 ivtmp.549 ] [141])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:196 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4063 4717 478 44 (set (reg/f:DI 1 dx [1611])
        (reg/f:DI 2 cx [1611])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [1611])
        (nil)))
;;  succ:       45 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

;; basic block 45, loop depth 0, count 0, freq 788, maybe hot
;;  prev block 44, next block 46, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       45 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              44 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 22 [xmm1] 26 [xmm5]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags] 22 [xmm1] 26 [xmm5]
;; live  kill	 17 [flags]
(code_label 478 4063 465 45 356 "" [1 uses])
(note 465 478 4146 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4146 465 4147 45 (set (reg:DF 26 xmm5 [1731])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC43") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:204 126 {*movdf_internal}
     (nil))
(insn 4147 4146 476 45 (set (reg/f:DI 2 cx [1611])
        (reg/f:DI 1 dx [1611])) mymainCascade.cc:205 85 {*movdi_internal}
     (nil))
(insn 476 4147 4145 45 (set (mem:SI (plus:DI (reg/f:DI 3 bx [1613])
                (reg:DI 0 ax [orig:141 ivtmp.549 ] [141])) [22 MEM[symbol: isPrimaryEtaPrime, index: ivtmp.549_1034, offset: 0B]+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) mymainCascade.cc:206 86 {*movsi_internal}
     (nil))
(insn:TI 4145 476 471 45 (set (reg:DF 22 xmm1 [1730])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC42") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:203 126 {*movdf_internal}
     (nil))
(insn:TI 471 4145 468 45 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:141 ivtmp.549 ] [141])
                    (const_int 2 [0x2]))
                (reg/f:DI 41 r12 [1615])) [78 MEM[symbol: thetaEtaPrime, index: ivtmp.549_1034, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 26 xmm5 [1731])) mymainCascade.cc:204 126 {*movdf_internal}
     (nil))
(insn:TI 468 471 474 45 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:141 ivtmp.549 ] [141])
                    (const_int 2 [0x2]))
                (reg/f:DI 42 r13 [1603])) [78 MEM[symbol: pEtaPrime, index: ivtmp.549_1034, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 22 xmm1 [1730])) mymainCascade.cc:203 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1730])
        (nil)))
(insn:TI 474 468 477 45 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:141 ivtmp.549 ] [141])
                    (const_int 2 [0x2]))
                (reg/f:DI 2 cx [1611])) [78 MEM[symbol: phiEtaPrime, index: ivtmp.549_1034, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 26 xmm5 [1733])) mymainCascade.cc:205 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 26 xmm5 [1733])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [1611])
            (nil))))
(insn 477 474 479 45 (parallel [
            (set (reg:DI 0 ax [orig:141 ivtmp.549 ] [141])
                (plus:DI (reg:DI 0 ax [orig:141 ivtmp.549 ] [141])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 479 477 480 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:141 ivtmp.549 ] [141])
            (const_int 400 [0x190]))) mymainCascade.cc:202 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 480 479 481 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 478)
            (pc))) mymainCascade.cc:202 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 478)
;;  succ:       46 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              45 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

;; basic block 46, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 45, next block 47, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       45 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 43 [r14] 44 [r15]
;; live  kill	
(note 481 480 4379 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(note 4379 481 4378 46 NOTE_INSN_DELETED)
(insn:TI 4378 4379 4067 46 (set (reg/f:DI 44 r15 [orig:271 _320 ] [271])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20112 [0xffffffffffffb170])) [789 %sfp+-20064 S8 A64])) mymainCascade.cc:209 85 {*movdi_internal}
     (nil))
(insn 4067 4378 486 46 (set (reg/f:DI 43 r14 [1611])
        (reg/f:DI 1 dx [1611])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [1611])
        (nil)))
(insn 486 4067 4524 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC71") [flags 0x2]  <var_decl 0x7fb2b65a6990 *.LC71>)) mymainCascade.cc:209 85 {*movdi_internal}
     (nil))
(insn:TI 4524 486 483 46 (set (reg/f:DI 1 dx [1018])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -19996 [0xffffffffffffb1e4]))) mymainCascade.cc:209 215 {*leadi}
     (nil))
(insn 483 4524 484 46 (set (reg:SI 37 r8)
        (const_int 99 [0x63])) mymainCascade.cc:209 86 {*movsi_internal}
     (nil))
(insn 484 483 487 46 (set (reg:SI 2 cx)
        (const_int 32000 [0x7d00])) mymainCascade.cc:209 86 {*movsi_internal}
     (nil))
(insn:TI 487 484 488 46 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:209 85 {*movdi_internal}
     (nil))
(call_insn:TI 488 487 489 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii") [flags 0x1]  <function_decl 0x7fb2b41ce1c0 Branch>) [0 Branch S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:209 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii") [flags 0x1]  <function_decl 0x7fb2b41ce1c0 Branch>)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              47 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 47, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       46 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 489 488 492 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(note 492 489 491 47 NOTE_INSN_DELETED)
(insn:TI 491 492 493 47 (set (reg/f:DI 0 ax [orig:1020 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1020])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:210 85 {*movdi_internal}
     (nil))
(insn 493 491 494 47 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:210 86 {*movsi_internal}
     (nil))
(insn 494 493 495 47 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC72") [flags 0x2]  <var_decl 0x7fb2b65a6a20 *.LC72>)) mymainCascade.cc:210 85 {*movdi_internal}
     (nil))
(insn:TI 495 494 496 47 (set (reg:DI 1 dx)
        (reg/f:DI 42 r13 [1603])) mymainCascade.cc:210 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [1603])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -9776 [0xffffffffffffd9d0]))
            (nil))))
(insn 496 495 497 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC73") [flags 0x2]  <var_decl 0x7fb2b65a6ab0 *.LC73>)) mymainCascade.cc:210 85 {*movdi_internal}
     (nil))
(insn 497 496 498 47 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:210 85 {*movdi_internal}
     (nil))
(call_insn:TI 498 497 499 47 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1020 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1020])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_127 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_128;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:210 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              48 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 48, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 47, next block 49, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       47 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 499 498 502 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(note 502 499 501 48 NOTE_INSN_DELETED)
(insn:TI 501 502 503 48 (set (reg/f:DI 0 ax [orig:1023 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1023])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:211 85 {*movdi_internal}
     (nil))
(insn 503 501 504 48 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:211 86 {*movsi_internal}
     (nil))
(insn 504 503 505 48 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC74") [flags 0x2]  <var_decl 0x7fb2b65a6b40 *.LC74>)) mymainCascade.cc:211 85 {*movdi_internal}
     (nil))
(insn:TI 505 504 506 48 (set (reg:DI 1 dx)
        (reg/f:DI 41 r12 [1615])) mymainCascade.cc:211 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [1615])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -8976 [0xffffffffffffdcf0]))
            (nil))))
(insn 506 505 507 48 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC75") [flags 0x2]  <var_decl 0x7fb2b65a6bd0 *.LC75>)) mymainCascade.cc:211 85 {*movdi_internal}
     (nil))
(insn 507 506 508 48 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:211 85 {*movdi_internal}
     (nil))
(call_insn:TI 508 507 509 48 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1023 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1023])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_130 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_131;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:211 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              49 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 49, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 48, next block 50, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       48 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 509 508 512 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(note 512 509 511 49 NOTE_INSN_DELETED)
(insn:TI 511 512 513 49 (set (reg/f:DI 0 ax [orig:1026 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1026])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:212 85 {*movdi_internal}
     (nil))
(insn 513 511 514 49 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:212 86 {*movsi_internal}
     (nil))
(insn 514 513 515 49 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC76") [flags 0x2]  <var_decl 0x7fb2b65a6d80 *.LC76>)) mymainCascade.cc:212 85 {*movdi_internal}
     (nil))
(insn:TI 515 514 516 49 (set (reg:DI 1 dx)
        (reg/f:DI 43 r14 [1611])) mymainCascade.cc:212 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [1611])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -8176 [0xffffffffffffe010]))
            (nil))))
(insn 516 515 517 49 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC77") [flags 0x2]  <var_decl 0x7fb2b65a6e10 *.LC77>)) mymainCascade.cc:212 85 {*movdi_internal}
     (nil))
(insn 517 516 518 49 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:212 85 {*movdi_internal}
     (nil))
(call_insn:TI 518 517 519 49 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1026 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1026])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_133 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_134;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:212 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              50 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 50, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 49, next block 51, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 519 518 522 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(note 522 519 521 50 NOTE_INSN_DELETED)
(insn:TI 521 522 523 50 (set (reg/f:DI 0 ax [orig:1029 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1029])
        (mem/f:DI (reg/f:DI 44 r15 [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:213 85 {*movdi_internal}
     (nil))
(insn 523 521 524 50 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:213 86 {*movsi_internal}
     (nil))
(insn 524 523 525 50 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC78") [flags 0x2]  <var_decl 0x7fb2b65a6ea0 *.LC78>)) mymainCascade.cc:213 85 {*movdi_internal}
     (nil))
(insn:TI 525 524 526 50 (set (reg:DI 1 dx)
        (reg/f:DI 3 bx [1613])) mymainCascade.cc:213 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [1613])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -18576 [0xffffffffffffb770]))
            (nil))))
(insn 526 525 527 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC79") [flags 0x2]  <var_decl 0x7fb2b65aa000 *.LC79>)) mymainCascade.cc:213 85 {*movdi_internal}
     (nil))
(insn 527 526 528 50 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:271 _320 ] [271])) mymainCascade.cc:213 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [orig:271 _320 ] [271])
        (nil)))
(call_insn:TI 528 527 529 50 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1029 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1029])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_136 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_137;(struct TTree)_320->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:213 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              51 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 51, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       50 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
(note 529 528 4370 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(note 4370 529 3799 51 NOTE_INSN_DELETED)
(insn:TI 3799 4370 3796 51 (set (reg/f:DI 2 cx [1578])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -18224 [0xffffffffffffb8d0]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -18176 [0xffffffffffffb900]))
        (nil)))
(insn 3796 3799 3797 51 (set (reg/f:DI 43 r14 [1607])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -7424 [0xffffffffffffe300]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -7376 [0xffffffffffffe330]))
        (nil)))
(insn 3797 3796 3798 51 (set (reg/f:DI 42 r13 [1604])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -6624 [0xffffffffffffe620]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -6576 [0xffffffffffffe650]))
        (nil)))
(insn:TI 3798 3797 3800 51 (set (reg/f:DI 41 r12 [1586])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -5824 [0xffffffffffffe940]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -5776 [0xffffffffffffe970]))
        (nil)))
(insn 3800 3798 530 51 (set (reg/f:DI 3 bx [1609])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -17824 [0xffffffffffffba60]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -17776 [0xffffffffffffba90]))
        (nil)))
(insn 530 3800 4716 51 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19992 [0xffffffffffffb1e8])) [22 nProtons+0 S4 A64])
        (const_int 0 [0])) mymainCascade.cc:215 86 {*movsi_internal}
     (nil))
(insn:TI 4716 530 4071 51 (parallel [
            (set (reg:DI 0 ax [orig:665 ivtmp.537 ] [665])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:215 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 4071 4716 546 51 (set (reg/f:DI 1 dx [1578])
        (reg/f:DI 2 cx [1578])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [1578])
        (nil)))
;;  succ:       52 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 52, loop depth 0, count 0, freq 788, maybe hot
;;  prev block 51, next block 53, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       52 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              51 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags] 23 [xmm2] 28 [xmm7]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 17 [flags] 23 [xmm2] 28 [xmm7]
;; live  kill	 17 [flags]
(code_label 546 4071 531 52 357 "" [1 uses])
(note 531 546 4157 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4157 531 542 52 (set (reg:DF 23 xmm2 [1742])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC43") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:224 126 {*movdf_internal}
     (nil))
(insn 542 4157 4156 52 (set (mem:SI (plus:DI (reg/f:DI 1 dx [1578])
                (reg:DI 0 ax [orig:665 ivtmp.537 ] [665])) [22 MEM[symbol: isPrimaryProton, index: ivtmp.537_1635, offset: 0B]+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) mymainCascade.cc:226 86 {*movsi_internal}
     (nil))
(insn:TI 4156 542 544 52 (set (reg:DF 28 xmm7 [1741])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC42") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:223 126 {*movdf_internal}
     (nil))
(insn 544 4156 537 52 (set (mem:SI (plus:DI (reg/f:DI 3 bx [1609])
                (reg:DI 0 ax [orig:665 ivtmp.537 ] [665])) [22 MEM[symbol: statusProton, index: ivtmp.537_1635, offset: 0B]+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) mymainCascade.cc:227 86 {*movsi_internal}
     (nil))
(insn:TI 537 544 534 52 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:665 ivtmp.537 ] [665])
                    (const_int 2 [0x2]))
                (reg/f:DI 42 r13 [1604])) [78 MEM[symbol: thetaProton, index: ivtmp.537_1635, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 23 xmm2 [1742])) mymainCascade.cc:224 126 {*movdf_internal}
     (nil))
(insn:TI 534 537 540 52 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:665 ivtmp.537 ] [665])
                    (const_int 2 [0x2]))
                (reg/f:DI 43 r14 [1607])) [78 MEM[symbol: pProton, index: ivtmp.537_1635, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 28 xmm7 [1741])) mymainCascade.cc:223 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 28 xmm7 [1741])
        (nil)))
(insn:TI 540 534 545 52 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:665 ivtmp.537 ] [665])
                    (const_int 2 [0x2]))
                (reg/f:DI 41 r12 [1586])) [78 MEM[symbol: phiProton, index: ivtmp.537_1635, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 23 xmm2 [1743])) mymainCascade.cc:225 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [1743])
        (nil)))
(insn 545 540 547 52 (parallel [
            (set (reg:DI 0 ax [orig:665 ivtmp.537 ] [665])
                (plus:DI (reg:DI 0 ax [orig:665 ivtmp.537 ] [665])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 547 545 548 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:665 ivtmp.537 ] [665])
            (const_int 400 [0x190]))) mymainCascade.cc:222 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 548 547 549 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 546)
            (pc))) mymainCascade.cc:222 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 546)
;;  succ:       53 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              52 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 53, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       52 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 44 [r15]
;; live  kill	
(note 549 548 4473 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(note 4473 549 4391 53 NOTE_INSN_DELETED)
(note 4391 4473 4390 53 NOTE_INSN_DELETED)
(insn:TI 4390 4391 4076 53 (set (reg/f:DI 44 r15 [orig:269 _317 ] [269])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20120 [0xffffffffffffb168])) [789 %sfp+-20072 S8 A64])) mymainCascade.cc:230 85 {*movdi_internal}
     (nil))
(insn 4076 4390 554 53 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])
        (reg/f:DI 1 dx [1578])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [1578])
        (nil)))
(insn 554 4076 4523 53 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC80") [flags 0x2]  <var_decl 0x7fb2b65aa090 *.LC80>)) mymainCascade.cc:230 85 {*movdi_internal}
     (nil))
(insn:TI 4523 554 551 53 (set (reg/f:DI 1 dx [1039])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -19992 [0xffffffffffffb1e8]))) mymainCascade.cc:230 215 {*leadi}
     (nil))
(insn 551 4523 552 53 (set (reg:SI 37 r8)
        (const_int 99 [0x63])) mymainCascade.cc:230 86 {*movsi_internal}
     (nil))
(insn 552 551 555 53 (set (reg:SI 2 cx)
        (const_int 32000 [0x7d00])) mymainCascade.cc:230 86 {*movsi_internal}
     (nil))
(insn:TI 555 552 556 53 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:269 _317 ] [269])) mymainCascade.cc:230 85 {*movdi_internal}
     (nil))
(call_insn:TI 556 555 557 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii") [flags 0x1]  <function_decl 0x7fb2b41ce1c0 Branch>) [0 Branch S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:230 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii") [flags 0x1]  <function_decl 0x7fb2b41ce1c0 Branch>)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              54 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 54, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       53 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 557 556 560 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(note 560 557 559 54 NOTE_INSN_DELETED)
(insn:TI 559 560 561 54 (set (reg/f:DI 0 ax [orig:1041 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1041])
        (mem/f:DI (reg/f:DI 44 r15 [orig:269 _317 ] [269]) [150 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:231 85 {*movdi_internal}
     (nil))
(insn 561 559 562 54 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:231 86 {*movsi_internal}
     (nil))
(insn 562 561 563 54 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC81") [flags 0x2]  <var_decl 0x7fb2b65aa1b0 *.LC81>)) mymainCascade.cc:231 85 {*movdi_internal}
     (nil))
(insn:TI 563 562 564 54 (set (reg:DI 1 dx)
        (reg/f:DI 43 r14 [1607])) mymainCascade.cc:231 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [1607])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -7376 [0xffffffffffffe330]))
            (nil))))
(insn 564 563 565 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC82") [flags 0x2]  <var_decl 0x7fb2b65aa240 *.LC82>)) mymainCascade.cc:231 85 {*movdi_internal}
     (nil))
(insn 565 564 566 54 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:269 _317 ] [269])) mymainCascade.cc:231 85 {*movdi_internal}
     (nil))
(call_insn:TI 566 565 567 54 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1041 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1041])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_147 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_148;(struct TTree)_317->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:231 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              55 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 55, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       54 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 567 566 570 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(note 570 567 569 55 NOTE_INSN_DELETED)
(insn:TI 569 570 571 55 (set (reg/f:DI 0 ax [orig:1044 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1044])
        (mem/f:DI (reg/f:DI 44 r15 [orig:269 _317 ] [269]) [150 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:232 85 {*movdi_internal}
     (nil))
(insn 571 569 572 55 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:232 86 {*movsi_internal}
     (nil))
(insn 572 571 573 55 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC83") [flags 0x2]  <var_decl 0x7fb2b65aa510 *.LC83>)) mymainCascade.cc:232 85 {*movdi_internal}
     (nil))
(insn:TI 573 572 574 55 (set (reg:DI 1 dx)
        (reg/f:DI 42 r13 [1604])) mymainCascade.cc:232 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [1604])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -6576 [0xffffffffffffe650]))
            (nil))))
(insn 574 573 575 55 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC84") [flags 0x2]  <var_decl 0x7fb2b65aa5a0 *.LC84>)) mymainCascade.cc:232 85 {*movdi_internal}
     (nil))
(insn 575 574 576 55 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:269 _317 ] [269])) mymainCascade.cc:232 85 {*movdi_internal}
     (nil))
(call_insn:TI 576 575 577 55 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1044 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1044])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_150 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_151;(struct TTree)_317->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:232 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              56 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 56, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 55, next block 57, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       55 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 577 576 580 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(note 580 577 579 56 NOTE_INSN_DELETED)
(insn:TI 579 580 581 56 (set (reg/f:DI 0 ax [orig:1047 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1047])
        (mem/f:DI (reg/f:DI 44 r15 [orig:269 _317 ] [269]) [150 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:233 85 {*movdi_internal}
     (nil))
(insn 581 579 582 56 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:233 86 {*movsi_internal}
     (nil))
(insn 582 581 583 56 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC85") [flags 0x2]  <var_decl 0x7fb2b65aa630 *.LC85>)) mymainCascade.cc:233 85 {*movdi_internal}
     (nil))
(insn:TI 583 582 584 56 (set (reg:DI 1 dx)
        (reg/f:DI 41 r12 [1586])) mymainCascade.cc:233 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [1586])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -5776 [0xffffffffffffe970]))
            (nil))))
(insn 584 583 585 56 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC86") [flags 0x2]  <var_decl 0x7fb2b65aa870 *.LC86>)) mymainCascade.cc:233 85 {*movdi_internal}
     (nil))
(insn 585 584 586 56 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:269 _317 ] [269])) mymainCascade.cc:233 85 {*movdi_internal}
     (nil))
(call_insn:TI 586 585 587 56 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1047 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1047])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_153 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_154;(struct TTree)_317->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:233 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              57 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 57, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 56, next block 58, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       56 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 587 586 590 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(note 590 587 589 57 NOTE_INSN_DELETED)
(insn:TI 589 590 591 57 (set (reg/f:DI 0 ax [orig:1050 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1050])
        (mem/f:DI (reg/f:DI 44 r15 [orig:269 _317 ] [269]) [150 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:234 85 {*movdi_internal}
     (nil))
(insn 591 589 592 57 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:234 86 {*movsi_internal}
     (nil))
(insn 592 591 593 57 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC87") [flags 0x2]  <var_decl 0x7fb2b65aa900 *.LC87>)) mymainCascade.cc:234 85 {*movdi_internal}
     (nil))
(insn:TI 593 592 594 57 (set (reg:DI 1 dx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])) mymainCascade.cc:234 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -18176 [0xffffffffffffb900]))
        (nil)))
(insn 594 593 595 57 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC88") [flags 0x2]  <var_decl 0x7fb2b65aa990 *.LC88>)) mymainCascade.cc:234 85 {*movdi_internal}
     (nil))
(insn 595 594 596 57 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:269 _317 ] [269])) mymainCascade.cc:234 85 {*movdi_internal}
     (nil))
(call_insn:TI 596 595 597 57 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1050 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1050])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_156 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_157;(struct TTree)_317->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:234 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              58 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 58, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 57, next block 59, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       57 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 597 596 600 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(note 600 597 599 58 NOTE_INSN_DELETED)
(insn:TI 599 600 601 58 (set (reg/f:DI 0 ax [orig:1053 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1053])
        (mem/f:DI (reg/f:DI 44 r15 [orig:269 _317 ] [269]) [150 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:235 85 {*movdi_internal}
     (nil))
(insn 601 599 602 58 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:235 86 {*movsi_internal}
     (nil))
(insn 602 601 603 58 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC89") [flags 0x2]  <var_decl 0x7fb2b65aaa20 *.LC89>)) mymainCascade.cc:235 85 {*movdi_internal}
     (nil))
(insn:TI 603 602 604 58 (set (reg:DI 1 dx)
        (reg/f:DI 3 bx [1609])) mymainCascade.cc:235 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [1609])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -17776 [0xffffffffffffba90]))
            (nil))))
(insn 604 603 605 58 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC90") [flags 0x2]  <var_decl 0x7fb2b65aaab0 *.LC90>)) mymainCascade.cc:235 85 {*movdi_internal}
     (nil))
(insn 605 604 606 58 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:269 _317 ] [269])) mymainCascade.cc:235 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [orig:269 _317 ] [269])
        (nil)))
(call_insn:TI 606 605 607 58 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1053 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1053])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_159 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_160;(struct TTree)_317->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:235 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              59 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 59, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 58, next block 60, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       58 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
(note 607 606 4380 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(note 4380 607 3803 59 NOTE_INSN_DELETED)
(insn:TI 3803 4380 3801 59 (set (reg/f:DI 2 cx [1625])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -3424 [0xfffffffffffff2a0]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -3376 [0xfffffffffffff2d0]))
        (nil)))
(insn 3801 3803 3802 59 (set (reg/f:DI 42 r13 [1579])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -5024 [0xffffffffffffec60]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -4976 [0xffffffffffffec90]))
        (nil)))
(insn 3802 3801 3804 59 (set (reg/f:DI 41 r12 [1629])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -4224 [0xffffffffffffef80]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -4176 [0xffffffffffffefb0]))
        (nil)))
(insn:TI 3804 3802 608 59 (set (reg/f:DI 3 bx [1628])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -17424 [0xffffffffffffbbf0]))) 215 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -17376 [0xffffffffffffbc20]))
        (nil)))
(insn 608 3804 4715 59 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19988 [0xffffffffffffb1ec])) [22 nGammas+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:237 86 {*movsi_internal}
     (nil))
(insn 4715 608 4083 59 (parallel [
            (set (reg:DI 0 ax [orig:908 ivtmp.524 ] [908])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:237 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4083 4715 622 59 (set (reg/f:DI 1 dx [1625])
        (reg/f:DI 2 cx [1625])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [1625])
        (nil)))
;;  succ:       60 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

;; basic block 60, loop depth 0, count 0, freq 788, maybe hot
;;  prev block 59, next block 61, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              59 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags] 26 [xmm5] 27 [xmm6]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags] 26 [xmm5] 27 [xmm6]
;; live  kill	 17 [flags]
(code_label 622 4083 609 60 358 "" [1 uses])
(note 609 622 4169 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4169 609 4170 60 (set (reg:DF 27 xmm6 [1754])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC43") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:245 126 {*movdf_internal}
     (nil))
(insn 4170 4169 620 60 (set (reg/f:DI 2 cx [1625])
        (reg/f:DI 1 dx [1625])) mymainCascade.cc:246 85 {*movdi_internal}
     (nil))
(insn 620 4170 4168 60 (set (mem:SI (plus:DI (reg/f:DI 3 bx [1628])
                (reg:DI 0 ax [orig:908 ivtmp.524 ] [908])) [22 MEM[symbol: isPrimaryGamma, index: ivtmp.524_1642, offset: 0B]+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) mymainCascade.cc:247 86 {*movsi_internal}
     (nil))
(insn:TI 4168 620 615 60 (set (reg:DF 26 xmm5 [1753])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC42") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:244 126 {*movdf_internal}
     (nil))
(insn:TI 615 4168 612 60 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:908 ivtmp.524 ] [908])
                    (const_int 2 [0x2]))
                (reg/f:DI 41 r12 [1629])) [78 MEM[symbol: thetaGamma, index: ivtmp.524_1642, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 27 xmm6 [1754])) mymainCascade.cc:245 126 {*movdf_internal}
     (nil))
(insn:TI 612 615 618 60 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:908 ivtmp.524 ] [908])
                    (const_int 2 [0x2]))
                (reg/f:DI 42 r13 [1579])) [78 MEM[symbol: pGamma, index: ivtmp.524_1642, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 26 xmm5 [1753])) mymainCascade.cc:244 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 26 xmm5 [1753])
        (nil)))
(insn:TI 618 612 621 60 (set (mem:DF (plus:DI (mult:DI (reg:DI 0 ax [orig:908 ivtmp.524 ] [908])
                    (const_int 2 [0x2]))
                (reg/f:DI 2 cx [1625])) [78 MEM[symbol: phiGamma, index: ivtmp.524_1642, step: 2, offset: 0B]+0 S8 A64])
        (reg:DF 27 xmm6 [1756])) mymainCascade.cc:246 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 27 xmm6 [1756])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [1625])
            (nil))))
(insn 621 618 623 60 (parallel [
            (set (reg:DI 0 ax [orig:908 ivtmp.524 ] [908])
                (plus:DI (reg:DI 0 ax [orig:908 ivtmp.524 ] [908])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 623 621 624 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:908 ivtmp.524 ] [908])
            (const_int 400 [0x190]))) mymainCascade.cc:243 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 624 623 625 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 622)
            (pc))) mymainCascade.cc:243 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9899 (nil)))
 -> 622)
;;  succ:       61 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              60 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]

;; basic block 61, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 60, next block 62, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 43 [r14] 44 [r15]
;; live  kill	
(note 625 624 4400 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(note 4400 625 4399 61 NOTE_INSN_DELETED)
(insn:TI 4399 4400 4087 61 (set (reg/f:DI 44 r15 [orig:269 _317 ] [269])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20120 [0xffffffffffffb168])) [789 %sfp+-20072 S8 A64])) mymainCascade.cc:250 85 {*movdi_internal}
     (nil))
(insn 4087 4399 630 61 (set (reg/f:DI 43 r14 [1625])
        (reg/f:DI 1 dx [1625])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [1625])
        (nil)))
(insn 630 4087 4522 61 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC91") [flags 0x2]  <var_decl 0x7fb2b65aab40 *.LC91>)) mymainCascade.cc:250 85 {*movdi_internal}
     (nil))
(insn:TI 4522 630 627 61 (set (reg/f:DI 1 dx [1062])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -19988 [0xffffffffffffb1ec]))) mymainCascade.cc:250 215 {*leadi}
     (nil))
(insn 627 4522 628 61 (set (reg:SI 37 r8)
        (const_int 99 [0x63])) mymainCascade.cc:250 86 {*movsi_internal}
     (nil))
(insn 628 627 631 61 (set (reg:SI 2 cx)
        (const_int 32000 [0x7d00])) mymainCascade.cc:250 86 {*movsi_internal}
     (nil))
(insn:TI 631 628 632 61 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:269 _317 ] [269])) mymainCascade.cc:250 85 {*movdi_internal}
     (nil))
(call_insn:TI 632 631 633 61 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii") [flags 0x1]  <function_decl 0x7fb2b41ce1c0 Branch>) [0 Branch S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:250 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZN5TTree6BranchIjEEP7TBranchPKcPT_ii") [flags 0x1]  <function_decl 0x7fb2b41ce1c0 Branch>)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              62 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 62, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 61, next block 63, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       61 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 633 632 636 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(note 636 633 635 62 NOTE_INSN_DELETED)
(insn:TI 635 636 637 62 (set (reg/f:DI 0 ax [orig:1064 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1064])
        (mem/f:DI (reg/f:DI 44 r15 [orig:269 _317 ] [269]) [150 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:251 85 {*movdi_internal}
     (nil))
(insn 637 635 638 62 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:251 86 {*movsi_internal}
     (nil))
(insn 638 637 639 62 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC92") [flags 0x2]  <var_decl 0x7fb2b65aabd0 *.LC92>)) mymainCascade.cc:251 85 {*movdi_internal}
     (nil))
(insn:TI 639 638 640 62 (set (reg:DI 1 dx)
        (reg/f:DI 42 r13 [1579])) mymainCascade.cc:251 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [1579])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -4976 [0xffffffffffffec90]))
            (nil))))
(insn 640 639 641 62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC93") [flags 0x2]  <var_decl 0x7fb2b65aac60 *.LC93>)) mymainCascade.cc:251 85 {*movdi_internal}
     (nil))
(insn 641 640 642 62 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:269 _317 ] [269])) mymainCascade.cc:251 85 {*movdi_internal}
     (nil))
(call_insn:TI 642 641 643 62 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1064 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1064])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_169 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_170;(struct TTree)_317->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:251 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              63 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 63, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 62, next block 64, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 643 642 646 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(note 646 643 645 63 NOTE_INSN_DELETED)
(insn:TI 645 646 647 63 (set (reg/f:DI 0 ax [orig:1067 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1067])
        (mem/f:DI (reg/f:DI 44 r15 [orig:269 _317 ] [269]) [150 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:252 85 {*movdi_internal}
     (nil))
(insn 647 645 648 63 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:252 86 {*movsi_internal}
     (nil))
(insn 648 647 649 63 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC94") [flags 0x2]  <var_decl 0x7fb2b65aaf30 *.LC94>)) mymainCascade.cc:252 85 {*movdi_internal}
     (nil))
(insn:TI 649 648 650 63 (set (reg:DI 1 dx)
        (reg/f:DI 41 r12 [1629])) mymainCascade.cc:252 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [1629])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -4176 [0xffffffffffffefb0]))
            (nil))))
(insn 650 649 651 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC95") [flags 0x2]  <var_decl 0x7fb2b65b0000 *.LC95>)) mymainCascade.cc:252 85 {*movdi_internal}
     (nil))
(insn 651 650 652 63 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:269 _317 ] [269])) mymainCascade.cc:252 85 {*movdi_internal}
     (nil))
(call_insn:TI 652 651 653 63 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1067 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1067])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_172 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_173;(struct TTree)_317->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:252 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              64 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 64, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 63, next block 65, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       63 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 653 652 656 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(note 656 653 655 64 NOTE_INSN_DELETED)
(insn:TI 655 656 657 64 (set (reg/f:DI 0 ax [orig:1070 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1070])
        (mem/f:DI (reg/f:DI 44 r15 [orig:269 _317 ] [269]) [150 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:253 85 {*movdi_internal}
     (nil))
(insn 657 655 658 64 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:253 86 {*movsi_internal}
     (nil))
(insn 658 657 659 64 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC96") [flags 0x2]  <var_decl 0x7fb2b65b01b0 *.LC96>)) mymainCascade.cc:253 85 {*movdi_internal}
     (nil))
(insn:TI 659 658 660 64 (set (reg:DI 1 dx)
        (reg/f:DI 43 r14 [1625])) mymainCascade.cc:253 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [1625])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -3376 [0xfffffffffffff2d0]))
            (nil))))
(insn 660 659 661 64 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC97") [flags 0x2]  <var_decl 0x7fb2b65b0240 *.LC97>)) mymainCascade.cc:253 85 {*movdi_internal}
     (nil))
(insn 661 660 662 64 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:269 _317 ] [269])) mymainCascade.cc:253 85 {*movdi_internal}
     (nil))
(call_insn:TI 662 661 663 64 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1070 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1070])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_175 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_176;(struct TTree)_317->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:253 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              65 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 65, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 64, next block 66, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       64 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 663 662 666 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(note 666 663 665 65 NOTE_INSN_DELETED)
(insn:TI 665 666 667 65 (set (reg/f:DI 0 ax [orig:1073 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1073])
        (mem/f:DI (reg/f:DI 44 r15 [orig:269 _317 ] [269]) [150 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:254 85 {*movdi_internal}
     (nil))
(insn 667 665 668 65 (set (reg:SI 37 r8)
        (const_int 32000 [0x7d00])) mymainCascade.cc:254 86 {*movsi_internal}
     (nil))
(insn 668 667 669 65 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC98") [flags 0x2]  <var_decl 0x7fb2b65b02d0 *.LC98>)) mymainCascade.cc:254 85 {*movdi_internal}
     (nil))
(insn:TI 669 668 670 65 (set (reg:DI 1 dx)
        (reg/f:DI 3 bx [1628])) mymainCascade.cc:254 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [1628])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -17376 [0xffffffffffffbc20]))
            (nil))))
(insn 670 669 671 65 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC99") [flags 0x2]  <var_decl 0x7fb2b65b0360 *.LC99>)) mymainCascade.cc:254 85 {*movdi_internal}
     (nil))
(insn 671 670 672 65 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [orig:269 _317 ] [269])) mymainCascade.cc:254 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [orig:269 _317 ] [269])
        (nil)))
(call_insn:TI 672 671 673 65 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1073 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1073])
                        (const_int 680 [0x2a8])) [735 MEM[(int (*__vtbl_ptr_type) () *)_178 + 680B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_179;(struct TTree)_317->85) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:254 684 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              66 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 66, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 65, next block 67, flags: (REACHABLE, RTL)
;;  pred:       65 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 673 672 674 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(note 674 673 676 66 NOTE_INSN_DELETED)
(note 676 674 678 66 NOTE_INSN_DELETED)
(note 678 676 680 66 NOTE_INSN_DELETED)
(note 680 678 682 66 NOTE_INSN_DELETED)
(note 682 680 684 66 NOTE_INSN_DELETED)
(note 684 682 686 66 NOTE_INSN_DELETED)
(note 686 684 688 66 NOTE_INSN_DELETED)
(note 688 686 690 66 NOTE_INSN_DELETED)
(note 690 688 4177 66 NOTE_INSN_DELETED)
(insn:TI 4177 690 694 66 (set (reg:DI 0 ax [1762])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nP")  <var_decl 0x7fb2b41472d0 nP>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:256 85 {*movdi_internal}
     (nil))
(insn 694 4177 693 66 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20064 [0xffffffffffffb1a0])) [789 %sfp+-20016 S8 A64])) mymainCascade.cc:266 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -2576 [0xfffffffffffff5f0]))
        (nil)))
(insn 693 694 675 66 (set (reg:SI 4 si)
        (const_int 4357 [0x1105])) mymainCascade.cc:266 86 {*movsi_internal}
     (nil))
(insn:TI 675 693 4178 66 (set (mem/c:SI (reg:DI 0 ax [1762]) [22 nP+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:256 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [1762])
        (nil)))
(insn 4178 675 677 66 (set (reg:DI 0 ax [1763])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nN")  <var_decl 0x7fb2b4147360 nN>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:257 85 {*movdi_internal}
     (nil))
(insn:TI 677 4178 4179 66 (set (mem/c:SI (reg:DI 0 ax [1763]) [22 nN+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:257 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [1763])
        (nil)))
(insn 4179 677 679 66 (set (reg:DI 0 ax [1764])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nG")  <var_decl 0x7fb2b41473f0 nG>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:258 85 {*movdi_internal}
     (nil))
(insn:TI 679 4179 4180 66 (set (mem/c:SI (reg:DI 0 ax [1764]) [22 nG+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:258 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [1764])
        (nil)))
(insn 4180 679 681 66 (set (reg:DI 0 ax [1765])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPiP")  <var_decl 0x7fb2b4147480 nPiP>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:259 85 {*movdi_internal}
     (nil))
(insn:TI 681 4180 4181 66 (set (mem/c:SI (reg:DI 0 ax [1765]) [22 nPiP+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:259 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [1765])
        (nil)))
(insn 4181 681 683 66 (set (reg:DI 0 ax [1766])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPiM")  <var_decl 0x7fb2b4147510 nPiM>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:260 85 {*movdi_internal}
     (nil))
(insn:TI 683 4181 4182 66 (set (mem/c:SI (reg:DI 0 ax [1766]) [22 nPiM+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:260 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [1766])
        (nil)))
(insn 4182 683 685 66 (set (reg:DI 0 ax [1767])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPi0")  <var_decl 0x7fb2b41475a0 nPi0>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:261 85 {*movdi_internal}
     (nil))
(insn:TI 685 4182 4183 66 (set (mem/c:SI (reg:DI 0 ax [1767]) [22 nPi0+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:261 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [1767])
        (nil)))
(insn 4183 685 687 66 (set (reg:DI 0 ax [1768])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nEta")  <var_decl 0x7fb2b4147630 nEta>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:262 85 {*movdi_internal}
     (nil))
(insn:TI 687 4183 4184 66 (set (mem/c:SI (reg:DI 0 ax [1768]) [22 nEta+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:262 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [1768])
        (nil)))
(insn 4184 687 689 66 (set (reg:DI 0 ax [1769])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nOmega")  <var_decl 0x7fb2b41476c0 nOmega>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:263 85 {*movdi_internal}
     (nil))
(insn:TI 689 4184 4185 66 (set (mem/c:SI (reg:DI 0 ax [1769]) [22 nOmega+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:263 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [1769])
        (nil)))
(insn 4185 689 691 66 (set (reg:DI 0 ax [1770])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nEtaPrime")  <var_decl 0x7fb2b4147750 nEtaPrime>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:264 85 {*movdi_internal}
     (nil))
(insn:TI 691 4185 695 66 (set (mem/c:SI (reg:DI 0 ax [1770]) [22 nEtaPrime+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:264 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [1770])
        (nil)))
(call_insn:TI 695 691 696 66 (call (mem:QI (symbol_ref:DI ("_ZN8TRandom3C1Ej") [flags 0x41]  <function_decl 0x7fb2b4b352a0 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) mymainCascade.cc:266 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN8TRandom3C1Ej") [flags 0x41]  <function_decl 0x7fb2b4b352a0 __comp_ctor >)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       395 (ABNORMAL,ABNORMAL_CALL,EH)
;;              67 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 67, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 66, next block 68, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       66 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 696 695 3805 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(note 3805 696 1081 67 NOTE_INSN_DELETED)
(note 1081 3805 1090 67 NOTE_INSN_DELETED)
(note 1090 1081 1094 67 NOTE_INSN_DELETED)
(note 1094 1090 1096 67 NOTE_INSN_DELETED)
(note 1096 1094 54 67 NOTE_INSN_DELETED)
(insn:TI 54 1096 55 67 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20104 [0xffffffffffffb178])) [789 %sfp+-20056 S4 A64])
        (const_int 1 [0x1])) mymainCascade.cc:266 86 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 55 54 4731 67 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20096 [0xffffffffffffb180])) [789 %sfp+-20048 S4 A64])
        (const_int 0 [0])) mymainCascade.cc:266 86 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 4731 55 4732 67 (set (pc)
        (label_ref 2682)) 667 {jump}
     (nil)
 -> 2682)
;;  succ:       118 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4732 4731 4742)
;; basic block 68, loop depth 0, count 0, freq 25, maybe hot
;;  prev block 67, next block 69, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       120 [61.0%]  (CAN_FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
(code_label 4742 4732 718 68 589 "" [1 uses])
(note 718 4742 719 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn:TI 719 718 740 68 (set (reg:SI 4 si [orig:911 _1651 ] [911])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:627 _985 ] [627])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_985]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:627 _985 ] [627])
        (nil)))
;;  succ:       69 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 68, next block 70, flags: (REACHABLE, RTL)
;;  pred:       68 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              122 [80.0%]  (CAN_FALLTHRU)
;;              124 [100.0%]  (CAN_FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 740 719 741 69 361 "" [2 uses])
(note 741 740 744 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn:TI 744 741 745 69 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(call_insn:TI 745 744 3425 69 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              70 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 70, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 69, next block 71, flags: (REACHABLE, RTL)
;;  pred:       69 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3425 745 748 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn:TI 748 3425 749 70 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:625 _982 ] [625])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:625 _982 ] [625])
        (nil)))
(call_insn:TI 749 748 3426 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              71 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 71, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 70, next block 72, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       70 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3426 749 753 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn:TI 753 3426 752 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC100") [flags 0x2]  <var_decl 0x7fb2b65b0510 *.LC100>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 752 753 754 71 (set (reg:DI 1 dx)
        (const_int 37 [0x25])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 754 752 750 71 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:626 _983 ] [626])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:626 _983 ] [626])
        (nil)))
(insn:TI 750 754 755 71 (set (reg/f:DI 3 bx [orig:626 _983 ] [626])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (nil))
(call_insn:TI 755 750 756 71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       72 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 71, next block 73, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       71 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags] 41 [r12]
;; live  kill	
(note 756 755 757 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn:TI 757 756 758 72 (set (reg/f:DI 0 ax [orig:1094 _983->_vptr.basic_ostream ] [1094])
        (mem/f:DI (reg/f:DI 3 bx [orig:626 _983 ] [626]) [150 _983->_vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:626 _983 ] [626]) [150 _983->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 758 757 759 72 (set (reg:DI 0 ax [orig:1095 MEM[(long int *)_1003 + -24B] ] [1095])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1094 _983->_vptr.basic_ostream ] [1094])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1003 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 759 758 760 72 (set (reg/f:DI 41 r12 [orig:642 _1012 ] [642])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 3 bx [orig:626 _983 ] [626])
                    (reg:DI 0 ax [orig:1095 MEM[(long int *)_1003 + -24B] ] [1095]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1006]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1095 MEM[(long int *)_1003 + -24B] ] [1095])
        (nil)))
(insn:TI 760 759 761 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 41 r12 [orig:642 _1012 ] [642])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 761 760 766 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4733)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4733)
;;  succ:       390 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              73 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 73, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 72, next block 74, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       72 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 766 761 767 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn:TI 767 766 768 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 41 r12 [orig:642 _1012 ] [642])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1012]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 768 767 769 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 773)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 773)
;;  succ:       74 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              141 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 74, loop depth 0, count 0, freq 25, maybe hot
;;  prev block 73, next block 75, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       73 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 4 [si]
;; live  kill	
(note 769 768 770 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn:TI 770 769 791 74 (set (reg:SI 4 si [orig:771 _1277 ] [771])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 41 r12 [orig:642 _1012 ] [642])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1012]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:642 _1012 ] [642])
        (nil)))
;;  succ:       75 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

;; basic block 75, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 74, next block 76, flags: (REACHABLE, RTL)
;;  pred:       74 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              142 [80.0%]  (CAN_FALLTHRU)
;;              144 [100.0%]  (CAN_FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 791 770 792 75 364 "" [2 uses])
(note 792 791 794 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn:TI 794 792 795 75 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:626 _983 ] [626])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:626 _983 ] [626])
        (nil)))
(call_insn:TI 795 794 3428 75 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              76 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 75, next block 77, flags: (REACHABLE, RTL)
;;  pred:       75 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3428 795 798 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn:TI 798 3428 799 76 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:640 _1009 ] [640])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:640 _1009 ] [640])
        (nil)))
(call_insn:TI 799 798 3429 76 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              77 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 76, next block 78, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       76 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3429 799 803 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn:TI 803 3429 802 77 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC100") [flags 0x2]  <var_decl 0x7fb2b65b0510 *.LC100>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 802 803 804 77 (set (reg:DI 1 dx)
        (const_int 37 [0x25])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 804 802 800 77 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:641 _1010 ] [641])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:641 _1010 ] [641])
        (nil)))
(insn:TI 800 804 805 77 (set (reg/f:DI 3 bx [orig:641 _1010 ] [641])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (nil))
(call_insn:TI 805 800 806 77 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       78 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 78, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 77, next block 79, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       77 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags] 41 [r12]
;; live  kill	
(note 806 805 807 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn:TI 807 806 808 78 (set (reg/f:DI 0 ax [orig:1099 _1010->_vptr.basic_ostream ] [1099])
        (mem/f:DI (reg/f:DI 3 bx [orig:641 _1010 ] [641]) [150 _1010->_vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:641 _1010 ] [641]) [150 _1010->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 808 807 809 78 (set (reg:DI 0 ax [orig:1100 MEM[(long int *)_1030 + -24B] ] [1100])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1099 _1010->_vptr.basic_ostream ] [1099])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1030 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 809 808 810 78 (set (reg/f:DI 41 r12 [orig:656 _1039 ] [656])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 3 bx [orig:641 _1010 ] [641])
                    (reg:DI 0 ax [orig:1100 MEM[(long int *)_1030 + -24B] ] [1100]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1033]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1100 MEM[(long int *)_1030 + -24B] ] [1100])
        (nil)))
(insn:TI 810 809 811 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 41 r12 [orig:656 _1039 ] [656])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 811 810 816 78 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4734)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4734)
;;  succ:       391 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              79 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 79, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 78, next block 80, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       78 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 816 811 817 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn:TI 817 816 818 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 41 r12 [orig:656 _1039 ] [656])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1039]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 818 817 819 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 823)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 823)
;;  succ:       80 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              145 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 80, loop depth 0, count 0, freq 25, maybe hot
;;  prev block 79, next block 81, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       79 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 4 [si]
;; live  kill	
(note 819 818 820 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn:TI 820 819 841 80 (set (reg:SI 4 si [orig:788 _1311 ] [788])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 41 r12 [orig:656 _1039 ] [656])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1039]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:656 _1039 ] [656])
        (nil)))
;;  succ:       81 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

;; basic block 81, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 80, next block 82, flags: (REACHABLE, RTL)
;;  pred:       80 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              146 [80.0%]  (CAN_FALLTHRU)
;;              148 [100.0%]  (CAN_FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 841 820 842 81 367 "" [2 uses])
(note 842 841 844 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn:TI 844 842 845 81 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:641 _1010 ] [641])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:641 _1010 ] [641])
        (nil)))
(call_insn:TI 845 844 3431 81 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              82 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 82, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 81, next block 83, flags: (REACHABLE, RTL)
;;  pred:       81 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3431 845 848 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn:TI 848 3431 849 82 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:655 _1036 ] [655])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:655 _1036 ] [655])
        (nil)))
(call_insn:TI 849 848 850 82 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       83 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 83, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 82, next block 84, flags: (REACHABLE, RTL)
;;  pred:       82 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 850 849 854 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn:TI 854 850 852 83 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 852 854 851 83 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC101") [flags 0x2]  <var_decl 0x7fb2b65b05a0 *.LC101>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 851 852 855 83 (set (reg:DI 1 dx)
        (const_int 27 [0x1b])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(call_insn:TI 855 851 856 83 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       84 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 84, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 83, next block 85, flags: (REACHABLE, RTL)
;;  pred:       83 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 856 855 857 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn:TI 857 856 859 84 (set (reg:SI 4 si)
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20096 [0xffffffffffffb180])) [789 %sfp+-20048 S4 A64])) mymainCascade.cc:276 86 {*movsi_internal}
     (nil))
(insn 859 857 860 84 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:276 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(call_insn:TI 860 859 3432 84 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:276 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              85 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 85, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 84, next block 86, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       84 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
(note 3432 860 861 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn:TI 861 3432 863 85 (set (reg/f:DI 41 r12 [orig:201 _192 ] [201])
        (reg:DI 0 ax)) mymainCascade.cc:276 85 {*movdi_internal}
     (nil))
(insn 863 861 864 85 (set (reg/f:DI 0 ax [orig:1106 _192->_vptr.basic_ostream ] [1106])
        (mem/f:DI (reg/f:DI 0 ax [orig:201 _192 ] [201]) [150 _192->_vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:201 _192 ] [201]) [150 _192->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 864 863 865 85 (set (reg:DI 0 ax [orig:1107 MEM[(long int *)_1057 + -24B] ] [1107])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1106 _192->_vptr.basic_ostream ] [1106])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1057 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 865 864 866 85 (set (reg/f:DI 3 bx [orig:671 _1066 ] [671])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 41 r12 [orig:201 _192 ] [201])
                    (reg:DI 0 ax [orig:1107 MEM[(long int *)_1057 + -24B] ] [1107]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1060]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1107 MEM[(long int *)_1057 + -24B] ] [1107])
        (nil)))
(insn:TI 866 865 867 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:671 _1066 ] [671])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 867 866 872 85 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4735)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4735)
;;  succ:       392 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              86 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 86, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 85, next block 87, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       85 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 872 867 873 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn:TI 873 872 874 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:671 _1066 ] [671])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1066]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 874 873 875 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 879)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 879)
;;  succ:       87 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              137 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 87, loop depth 0, count 0, freq 25, maybe hot
;;  prev block 86, next block 88, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       86 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 4 [si]
;; live  kill	
(note 875 874 876 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn:TI 876 875 897 87 (set (reg:SI 4 si [orig:792 _1319 ] [792])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:671 _1066 ] [671])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1066]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:671 _1066 ] [671])
        (nil)))
;;  succ:       88 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 88, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 87, next block 89, flags: (REACHABLE, RTL)
;;  pred:       87 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              138 [80.0%]  (CAN_FALLTHRU)
;;              140 [100.0%]  (CAN_FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 897 876 898 88 370 "" [2 uses])
(note 898 897 900 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn:TI 900 898 901 88 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:201 _192 ] [201])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:201 _192 ] [201])
        (nil)))
(call_insn:TI 901 900 3434 88 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              89 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 89, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 88, next block 90, flags: (REACHABLE, RTL)
;;  pred:       88 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3434 901 904 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn:TI 904 3434 905 89 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:670 _1063 ] [670])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:670 _1063 ] [670])
        (nil)))
(call_insn:TI 905 904 906 89 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       90 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 90, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 89, next block 91, flags: (REACHABLE, RTL)
;;  pred:       89 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 906 905 910 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn:TI 910 906 908 90 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 908 910 907 90 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC100") [flags 0x2]  <var_decl 0x7fb2b65b0510 *.LC100>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 907 908 911 90 (set (reg:DI 1 dx)
        (const_int 37 [0x25])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(call_insn:TI 911 907 912 90 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       91 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 91, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 90, next block 92, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       90 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	
(note 912 911 4188 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4188 912 4189 91 (set (reg:DI 0 ax [1773])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (nil))
(insn 4189 4188 914 91 (set (reg:DI 2 cx [1774])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 914 4189 915 91 (set (reg/f:DI 0 ax [orig:1113 cout._vptr.basic_ostream ] [1113])
        (mem/f/c:DI (reg:DI 0 ax [1773]) [150 cout._vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (nil))
(insn:TI 915 914 917 91 (set (reg:DI 0 ax [orig:1114 MEM[(long int *)_1084 + -24B] ] [1114])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1113 cout._vptr.basic_ostream ] [1113])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1084 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 917 915 918 91 (set (reg/f:DI 3 bx [orig:684 _1093 ] [684])
        (mem/f:DI (plus:DI (plus:DI (reg:DI 0 ax [orig:1114 MEM[(long int *)_1084 + -24B] ] [1114])
                    (reg:DI 2 cx [1774]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1087]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [1774])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:1114 MEM[(long int *)_1084 + -24B] ] [1114])
            (nil))))
(insn:TI 918 917 919 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:684 _1093 ] [684])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 919 918 924 91 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4736)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4736)
;;  succ:       393 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              92 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 92, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 91, next block 93, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       91 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 924 919 925 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn:TI 925 924 926 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:684 _1093 ] [684])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1093]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 926 925 927 92 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 931)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 931)
;;  succ:       93 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              133 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 93, loop depth 0, count 0, freq 25, maybe hot
;;  prev block 92, next block 94, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       92 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
(note 927 926 928 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn:TI 928 927 949 93 (set (reg:SI 4 si [orig:912 _1658 ] [912])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:684 _1093 ] [684])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1093]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:684 _1093 ] [684])
        (nil)))
;;  succ:       94 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame]

;; basic block 94, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 93, next block 95, flags: (REACHABLE, RTL)
;;  pred:       93 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              134 [80.0%]  (CAN_FALLTHRU)
;;              136 [100.0%]  (CAN_FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 949 928 950 94 373 "" [2 uses])
(note 950 949 953 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn:TI 953 950 954 94 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(call_insn:TI 954 953 3436 94 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              95 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 95, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 94, next block 96, flags: (REACHABLE, RTL)
;;  pred:       94 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3436 954 957 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn:TI 957 3436 958 95 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:682 _1090 ] [682])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:682 _1090 ] [682])
        (nil)))
(call_insn:TI 958 957 3437 95 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              96 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 96, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 95, next block 97, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       95 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3437 958 962 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn:TI 962 3437 961 96 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC100") [flags 0x2]  <var_decl 0x7fb2b65b0510 *.LC100>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 961 962 963 96 (set (reg:DI 1 dx)
        (const_int 37 [0x25])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 963 961 959 96 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:683 _1091 ] [683])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:683 _1091 ] [683])
        (nil)))
(insn:TI 959 963 964 96 (set (reg/f:DI 3 bx [orig:683 _1091 ] [683])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (nil))
(call_insn:TI 964 959 965 96 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       97 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 97, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 96, next block 98, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       96 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags] 41 [r12]
;; live  kill	
(note 965 964 966 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn:TI 966 965 967 97 (set (reg/f:DI 0 ax [orig:1120 _1091->_vptr.basic_ostream ] [1120])
        (mem/f:DI (reg/f:DI 3 bx [orig:683 _1091 ] [683]) [150 _1091->_vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:683 _1091 ] [683]) [150 _1091->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 967 966 968 97 (set (reg:DI 0 ax [orig:1121 MEM[(long int *)_1111 + -24B] ] [1121])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1120 _1091->_vptr.basic_ostream ] [1120])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1111 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 968 967 969 97 (set (reg/f:DI 41 r12 [orig:697 _1120 ] [697])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 3 bx [orig:683 _1091 ] [683])
                    (reg:DI 0 ax [orig:1121 MEM[(long int *)_1111 + -24B] ] [1121]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1114]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1121 MEM[(long int *)_1111 + -24B] ] [1121])
        (nil)))
(insn:TI 969 968 970 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 41 r12 [orig:697 _1120 ] [697])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 970 969 975 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4737)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4737)
;;  succ:       394 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              98 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 98, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 97, next block 99, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       97 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 975 970 976 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn:TI 976 975 977 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 41 r12 [orig:697 _1120 ] [697])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1120]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 977 976 978 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 982)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 982)
;;  succ:       99 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              129 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 99, loop depth 0, count 0, freq 25, maybe hot
;;  prev block 98, next block 100, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       98 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 4 [si]
;; live  kill	
(note 978 977 979 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn:TI 979 978 1000 99 (set (reg:SI 4 si [orig:784 prephitmp_1304 ] [784])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 41 r12 [orig:697 _1120 ] [697])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1120]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:697 _1120 ] [697])
        (nil)))
;;  succ:       100 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

;; basic block 100, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 99, next block 101, flags: (REACHABLE, RTL)
;;  pred:       99 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              130 [80.0%]  (CAN_FALLTHRU)
;;              132 [100.0%]  (CAN_FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 1000 979 1001 100 376 "" [2 uses])
(note 1001 1000 1003 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1003 1001 1004 100 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:683 _1091 ] [683])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:683 _1091 ] [683])
        (nil)))
(call_insn:TI 1004 1003 3439 100 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              101 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 101, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 100, next block 102, flags: (REACHABLE, RTL)
;;  pred:       100 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3439 1004 1007 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1007 3439 1008 101 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:695 _1117 ] [695])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:695 _1117 ] [695])
        (nil)))
(call_insn:TI 1008 1007 3440 101 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              102 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 102, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 101, next block 103, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       101 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3440 1008 1012 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1012 3440 1011 102 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC100") [flags 0x2]  <var_decl 0x7fb2b65b0510 *.LC100>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1011 1012 1013 102 (set (reg:DI 1 dx)
        (const_int 37 [0x25])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1013 1011 1009 102 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:696 _1118 ] [696])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:696 _1118 ] [696])
        (nil)))
(insn:TI 1009 1013 1014 102 (set (reg/f:DI 3 bx [orig:696 _1118 ] [696])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (nil))
(call_insn:TI 1014 1009 1015 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       103 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 103, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 102, next block 104, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       102 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags] 41 [r12]
;; live  kill	
(note 1015 1014 1016 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1016 1015 1017 103 (set (reg/f:DI 0 ax [orig:1125 _1118->_vptr.basic_ostream ] [1125])
        (mem/f:DI (reg/f:DI 3 bx [orig:696 _1118 ] [696]) [150 _1118->_vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:696 _1118 ] [696]) [150 _1118->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 1017 1016 1018 103 (set (reg:DI 0 ax [orig:1126 MEM[(long int *)_1138 + -24B] ] [1126])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1125 _1118->_vptr.basic_ostream ] [1125])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1138 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 1018 1017 1019 103 (set (reg/f:DI 41 r12 [orig:709 _1147 ] [709])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 3 bx [orig:696 _1118 ] [696])
                    (reg:DI 0 ax [orig:1126 MEM[(long int *)_1138 + -24B] ] [1126]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1141]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1126 MEM[(long int *)_1138 + -24B] ] [1126])
        (nil)))
(insn:TI 1019 1018 1020 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 41 r12 [orig:709 _1147 ] [709])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 1020 1019 1025 103 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4738)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4738)
;;  succ:       404 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              104 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 104, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 103, next block 105, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       103 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1025 1020 1026 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1026 1025 1027 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 41 r12 [orig:709 _1147 ] [709])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1147]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 1027 1026 1028 104 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1032)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 1032)
;;  succ:       105 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              125 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 105, loop depth 0, count 0, freq 25, maybe hot
;;  prev block 104, next block 106, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       104 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 4 [si]
;; live  kill	
(note 1028 1027 1029 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1029 1028 1050 105 (set (reg:SI 4 si [orig:801 prephitmp_1335 ] [801])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 41 r12 [orig:709 _1147 ] [709])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1147]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:709 _1147 ] [709])
        (nil)))
;;  succ:       106 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

;; basic block 106, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 105, next block 107, flags: (REACHABLE, RTL)
;;  pred:       105 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              126 [80.0%]  (CAN_FALLTHRU)
;;              128 [100.0%]  (CAN_FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 1050 1029 1051 106 379 "" [2 uses])
(note 1051 1050 1053 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1053 1051 1054 106 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:696 _1118 ] [696])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:696 _1118 ] [696])
        (nil)))
(call_insn:TI 1054 1053 3442 106 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              107 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 107, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 106, next block 108, flags: (REACHABLE, RTL)
;;  pred:       106 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3442 1054 1057 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1057 3442 1058 107 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:708 _1144 ] [708])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:708 _1144 ] [708])
        (nil)))
(call_insn:TI 1058 1057 1059 107 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       108 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 108, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 107, next block 109, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       107 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 1059 1058 4521 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4521 1059 1064 108 (set (reg/f:DI 0 ax [1580])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -19984 [0xffffffffffffb1f0]))) mymainCascade.cc:283 215 {*leadi}
     (nil))
(insn 1064 4521 1060 108 (set (reg:DI 4 si)
        (const_int 100 [0x64])) mymainCascade.cc:283 85 {*movdi_internal}
     (nil))
(insn 1060 1064 1061 108 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19984 [0xffffffffffffb1f0])) [164 MEM[(struct _Vector_impl *)&lStash]._M_start+0 S8 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:87 85 {*movdi_internal}
     (nil))
(insn:TI 1061 1060 1062 108 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19976 [0xffffffffffffb1f8])) [164 MEM[(struct _Vector_impl *)&lStash]._M_finish+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:87 85 {*movdi_internal}
     (nil))
(insn 1062 1061 1065 108 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19968 [0xffffffffffffb200])) [164 MEM[(struct _Vector_impl *)&lStash]._M_end_of_storage+0 S8 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:87 85 {*movdi_internal}
     (nil))
(insn:TI 1065 1062 4190 108 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [1580])) mymainCascade.cc:283 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [1580])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -19936 [0xffffffffffffb220]))
            (nil))))
(insn 4190 1065 4404 108 (set (reg/f:DI 3 bx [1580])
        (reg/f:DI 0 ax [1580])) mymainCascade.cc:283 85 {*movdi_internal}
     (nil))
(insn 4404 4190 1066 108 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20080 [0xffffffffffffb190])) [789 %sfp+-20032 S8 A64])
        (reg/f:DI 0 ax [1580])) mymainCascade.cc:283 85 {*movdi_internal}
     (nil))
(call_insn:TI 1066 4404 1067 108 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE7reserveEm") [flags 0x1]  <function_decl 0x7fb2baee2620 reserve>) [0 reserve S1 A8])
        (const_int 0 [0])) mymainCascade.cc:283 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 7 [0x7])
                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE7reserveEm") [flags 0x1]  <function_decl 0x7fb2baee2620 reserve>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       405 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              109 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 109, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 108, next block 110, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 44 [r15]
;; live  kill	
(note 1067 1066 4520 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4520 1067 1072 109 (set (reg/f:DI 0 ax [1583])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -19952 [0xffffffffffffb210]))) mymainCascade.cc:285 215 {*leadi}
     (nil))
(insn 1072 4520 1068 109 (set (reg:DI 4 si)
        (const_int 100 [0x64])) mymainCascade.cc:285 85 {*movdi_internal}
     (nil))
(insn 1068 1072 1069 109 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19952 [0xffffffffffffb210])) [164 MEM[(struct _Vector_impl *)&lMesons]._M_start+0 S8 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:87 85 {*movdi_internal}
     (nil))
(insn:TI 1069 1068 1070 109 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19944 [0xffffffffffffb218])) [164 MEM[(struct _Vector_impl *)&lMesons]._M_finish+0 S8 A64])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:87 85 {*movdi_internal}
     (nil))
(insn 1070 1069 1073 109 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19936 [0xffffffffffffb220])) [164 MEM[(struct _Vector_impl *)&lMesons]._M_end_of_storage+0 S8 A128])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:87 85 {*movdi_internal}
     (nil))
(insn:TI 1073 1070 4191 109 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [1583])) mymainCascade.cc:285 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [1583])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -19904 [0xffffffffffffb240]))
            (nil))))
(insn 4191 1073 4402 109 (set (reg/f:DI 44 r15 [1583])
        (reg/f:DI 0 ax [1583])) mymainCascade.cc:285 85 {*movdi_internal}
     (nil))
(insn 4402 4191 1074 109 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20088 [0xffffffffffffb188])) [789 %sfp+-20040 S8 A64])
        (reg/f:DI 0 ax [1583])) mymainCascade.cc:285 85 {*movdi_internal}
     (nil))
(call_insn:TI 1074 4402 1075 109 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE7reserveEm") [flags 0x1]  <function_decl 0x7fb2baee2620 reserve>) [0 reserve S1 A8])
        (const_int 0 [0])) mymainCascade.cc:285 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("_ZNSt6vectorIN7Pythia88ParticleESaIS1_EE7reserveEm") [flags 0x1]  <function_decl 0x7fb2baee2620 reserve>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              110 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 110, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 109, next block 111, flags: (REACHABLE, RTL)
;;  pred:       109 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 5 [di] 21 [xmm0]
;; live  kill	
(note 1075 1074 1077 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1077 1075 1078 110 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20064 [0xffffffffffffb1a0])) [789 %sfp+-20016 S8 A64])) mymainCascade.cc:286 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -2576 [0xfffffffffffff5f0]))
        (nil)))
(call_insn:TI 1078 1077 3443 110 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("_ZN8TRandom34RndmEv") [flags 0x41]  <function_decl 0x7fb2b4b2f2a0 Rndm>) [0 Rndm S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:286 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN8TRandom34RndmEv") [flags 0x41]  <function_decl 0x7fb2b4b2f2a0 Rndm>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              111 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 44 [r15]

;; basic block 111, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 110, next block 112, flags: (REACHABLE, RTL)
;;  pred:       110 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9]
;; live  kill	
(note 3443 1078 4192 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4192 3443 4032 111 (set (reg:DF 22 xmm1 [1777])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC102") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:287 126 {*movdf_internal}
     (nil))
(insn 4032 4192 4033 111 (set (reg:SI 0 ax [1633])
        (const_int 2112 [0x840])) mymainCascade.cc:287 86 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 2112 [0x840])
        (nil)))
(insn:TI 4033 4032 4195 111 (set (reg:SI 4 si [1632])
        (const_int 2212 [0x8a4])) mymainCascade.cc:287 86 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 2212 [0x8a4])
        (nil)))
(insn 4195 4033 3854 111 (set (reg:DF 23 xmm2 [1780])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC103") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:291 126 {*movdf_internal}
     (nil))
(insn:TI 3854 4195 4193 111 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 22 xmm1 [1777])
            (reg:DF 21 xmm0 [orig:202 _196 ] [202]))) mymainCascade.cc:287 52 {*cmpiudf_mixed}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1777])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:202 _196 ] [202])
            (nil))))
(insn:TI 4193 3854 4519 111 (set (reg:DF 22 xmm1 [1778])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC103") [flags 0x2]) [78  S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:118 126 {*movdf_internal}
     (nil))
(insn 4519 4193 1112 111 (set (reg/f:DI 1 dx [1142])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -19888 [0xffffffffffffb250]))) mymainCascade.cc:299 215 {*leadi}
     (nil))
(insn:TI 1112 4519 1113 111 (set (reg:DI 38 r9)
        (reg/f:DI 3 bx [1580])) mymainCascade.cc:299 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [1580])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -19936 [0xffffffffffffb220]))
            (nil))))
(insn 1113 1112 1114 111 (set (reg:SI 37 r8)
        (const_int 2 [0x2])) mymainCascade.cc:299 86 {*movsi_internal}
     (nil))
(insn 1114 1113 1095 111 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) mymainCascade.cc:299 86 {*movsi_internal}
     (nil))
(insn:TI 1095 1114 1117 111 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -19872 [0xffffffffffffb260])) [78 p4A.zz+0 S8 A128])
        (reg:DF 22 xmm1 [1778])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:118 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1778])
        (nil)))
(insn 1117 1095 1091 111 (set (reg:SI 5 di)
        (const_int 2212 [0x8a4])) mymainCascade.cc:299 86 {*movsi_internal}
     (nil))
(insn 1091 1117 3858 111 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -19888 [0xffffffffffffb250])) [78 p4A.xx+0 S8 A128])
        (const_double:DF 0.0 [0x0.0p+0])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:118 126 {*movdf_internal}
     (nil))
(insn:TI 3858 1091 4196 111 (set (reg:SI 4 si [orig:134 iftmp.65_15 ] [134])
        (if_then_else:SI (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (reg:SI 4 si [1632])
            (reg:SI 0 ax [1633]))) mymainCascade.cc:287 972 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_DEAD (reg:SI 0 ax [1633])
            (expr_list:REG_EQUAL (if_then_else:SI (gt (reg:CCFPU 17 flags)
                        (const_int 0 [0]))
                    (const_int 2212 [0x8a4])
                    (const_int 2112 [0x840]))
                (nil)))))
(insn 4196 3858 1093 111 (set (reg:SI 0 ax [orig:906 ivtmp.511 ] [906])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20104 [0xffffffffffffb178])) [789 %sfp+-20056 S4 A64])) mymainCascade.cc:299 86 {*movsi_internal}
     (nil))
(insn 1093 4196 4194 111 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -19880 [0xffffffffffffb258])) [78 p4A.yy+0 S8 A64])
        (const_double:DF 0.0 [0x0.0p+0])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:118 126 {*movdf_internal}
     (nil))
(insn:TI 4194 1093 1098 111 (set (reg:DF 22 xmm1 [1779])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC104") [flags 0x2]) [78  S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:118 126 {*movdf_internal}
     (nil))
(insn:TI 1098 4194 1100 111 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19992 [0xffffffffffffb1e8])) [22 nProtons+0 S4 A64])
        (const_int 1 [0x1])) mymainCascade.cc:290 86 {*movsi_internal}
     (nil))
(insn 1100 1098 1102 111 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -7424 [0xffffffffffffe300])) [78 pProton+0 S8 A128])
        (reg:DF 23 xmm2 [1780])) mymainCascade.cc:291 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [1780])
        (nil)))
(insn 1102 1100 1109 111 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -6624 [0xffffffffffffe620])) [78 thetaProton+0 S8 A128])
        (const_double:DF 0.0 [0x0.0p+0])) mymainCascade.cc:292 126 {*movdf_internal}
     (nil))
(insn:TI 1109 1102 1111 111 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [22  S4 A32])
        (reg:SI 0 ax [orig:906 ivtmp.511 ] [906])) mymainCascade.cc:299 65 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:906 ivtmp.511 ] [906])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 1111 1109 1097 111 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [221  S8 A64])
        (reg/f:DI 44 r15 [1583])) mymainCascade.cc:299 61 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [1583])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 1097 1111 1104 111 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -19864 [0xffffffffffffb268])) [78 p4A.tt+0 S8 A64])
        (reg:DF 22 xmm1 [1779])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:118 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1779])
        (nil)))
(insn:TI 1104 1097 1105 111 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -5824 [0xffffffffffffe940])) [78 phiProton+0 S8 A128])
        (const_double:DF 0.0 [0x0.0p+0])) mymainCascade.cc:293 126 {*movdf_internal}
     (nil))
(insn:TI 1105 1104 1106 111 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -18224 [0xffffffffffffb8d0])) [22 isPrimaryProton+0 S4 A128])
        (const_int 1 [0x1])) mymainCascade.cc:294 86 {*movsi_internal}
     (nil))
(insn:TI 1106 1105 1118 111 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -17824 [0xffffffffffffba60])) [22 statusProton+0 S4 A128])
        (const_int 12 [0xc])) mymainCascade.cc:295 86 {*movsi_internal}
     (nil))
(call_insn:TI 1118 1106 3446 111 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z9runPythiaiiRKN7Pythia84Vec4EjjRSt6vectorINS_8ParticleESaIS4_EES7_j") [flags 0x1]  <function_decl 0x7fb2b413d1c0 runPythia>) [0 runPythia S1 A8])
            (const_int 16 [0x10]))) mymainCascade.cc:299 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:SI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z9runPythiaiiRKN7Pythia84Vec4EjjRSt6vectorINS_8ParticleESaIS4_EES7_j") [flags 0x1]  <function_decl 0x7fb2b413d1c0 runPythia>)
                                    (nil)))))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              112 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 112, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 111, next block 113, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       111 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	
(note 3446 1118 1122 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1122 3446 4713 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:203 _207 ] [203])
            (const_int 0 [0]))) mymainCascade.cc:299 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:203 _207 ] [203])
        (nil)))
(insn:TI 4713 1122 4714 112 (set (reg:DI 2 cx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:299 71 {*popdi1}
     (expr_list:REG_UNUSED (reg:DI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn:TI 4714 4713 1123 112 (set (reg:DI 4 si)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:299 71 {*popdi1}
     (expr_list:REG_UNUSED (reg:DI 4 si)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn:TI 1123 4714 4585 112 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4739)
            (pc))) mymainCascade.cc:299 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 4739)
;;  succ:       113 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              149 [29.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 113, loop depth 0, count 0, freq 33, maybe hot
;;  prev block 112, next block 114, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       112 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              325 [100.0%]  (CAN_FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(code_label 4585 1123 2657 113 573 "" [1 uses])
(note 2657 4585 2658 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2658 2657 2659 113 (set (reg/f:DI 5 di [orig:551 _680 ] [551])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19952 [0xffffffffffffb210])) [164 lMesons.D.138156._M_impl._M_start+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:426 85 {*movdi_internal}
     (nil))
(insn:TI 2659 2658 2660 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:551 _680 ] [551])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 2660 2659 2661 113 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2664)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:177 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 2664)
;;  succ:       114 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              115 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 114, loop depth 0, count 0, freq 23, maybe hot
;;  prev block 113, next block 115, flags: (REACHABLE, RTL)
;;  pred:       113 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 2661 2660 2663 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 2663 2661 2664 114 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       115 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 115, loop depth 0, count 0, freq 33, maybe hot
;;  prev block 114, next block 116, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       113 [30.2%]  (CAN_FALLTHRU)
;;              114 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(code_label 2664 2663 2665 115 458 "" [1 uses])
(note 2665 2664 2666 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2666 2665 2667 115 (set (reg/f:DI 5 di [orig:550 _679 ] [550])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19984 [0xffffffffffffb1f0])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:426 85 {*movdi_internal}
     (nil))
(insn:TI 2667 2666 2668 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:550 _679 ] [550])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 2668 2667 2673 115 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2676)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:177 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 2676)
;;  succ:       116 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              117 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 116, loop depth 0, count 0, freq 23, maybe hot
;;  prev block 115, next block 117, flags: (REACHABLE, RTL)
;;  pred:       115 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 2673 2668 2675 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 2675 2673 2676 116 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       117 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 117, loop depth 0, count 0, freq 33, maybe hot
;;  prev block 116, next block 118, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       115 [30.2%]  (CAN_FALLTHRU)
;;              116 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(code_label 2676 2675 2677 117 460 "" [1 uses])
(note 2677 2676 4281 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(note 4281 2677 4461 117 NOTE_INSN_DELETED)
(note 4461 4281 4477 117 NOTE_INSN_DELETED)
(note 4477 4461 4283 117 NOTE_INSN_DELETED)
(note 4283 4477 4459 117 NOTE_INSN_DELETED)
(note 4459 4283 4460 117 NOTE_INSN_DELETED)
(note 4460 4459 4284 117 NOTE_INSN_DELETED)
(note 4284 4460 2678 117 NOTE_INSN_DELETED)
(insn:TI 2678 4284 2679 117 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20096 [0xffffffffffffb180])) [789 %sfp+-20048 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20096 [0xffffffffffffb180])) [789 %sfp+-20048 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:271 218 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 2679 2678 4462 117 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20104 [0xffffffffffffb178])) [789 %sfp+-20056 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20104 [0xffffffffffffb178])) [789 %sfp+-20056 S4 A64])
                    (const_int 22 [0x16])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4462 2679 2680 117 (set (reg/v:SI 0 ax [orig:299 iEvent ] [299])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20096 [0xffffffffffffb180])) [789 %sfp+-20048 S4 A64])) mymainCascade.cc:271 86 {*movsi_internal}
     (nil))
(insn:TI 2680 4462 2681 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 0 ax [orig:299 iEvent ] [299])
            (const_int 100 [0x64]))) mymainCascade.cc:271 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:299 iEvent ] [299])
        (nil)))
(jump_insn:TI 2681 2680 2682 117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4740)
            (pc))) mymainCascade.cc:271 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 124 (nil)))
 -> 4740)
;;  succ:       408 [1.2%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              118 [98.8%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 118, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 117, next block 119, flags: (REACHABLE, RTL)
;;  pred:       117 [98.8%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              67 [100.0%]  (CAN_FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 2682 2681 697 118 462 "" [1 uses])
(note 697 2682 701 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn:TI 701 697 699 118 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 699 701 698 118 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC100") [flags 0x2]  <var_decl 0x7fb2b65b0510 *.LC100>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 698 699 702 118 (set (reg:DI 1 dx)
        (const_int 37 [0x25])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(call_insn:TI 702 698 703 118 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       119 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 119, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 118, next block 120, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       118 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	
(note 703 702 4186 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4186 703 4187 119 (set (reg:DI 0 ax [1771])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (nil))
(insn 4187 4186 705 119 (set (reg:DI 2 cx [1772])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 705 4187 706 119 (set (reg/f:DI 0 ax [orig:1087 cout._vptr.basic_ostream ] [1087])
        (mem/f/c:DI (reg:DI 0 ax [1771]) [150 cout._vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (nil))
(insn:TI 706 705 708 119 (set (reg:DI 0 ax [orig:1088 MEM[(long int *)_976 + -24B] ] [1088])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1087 cout._vptr.basic_ostream ] [1087])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_976 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 708 706 709 119 (set (reg/f:DI 3 bx [orig:627 _985 ] [627])
        (mem/f:DI (plus:DI (plus:DI (reg:DI 0 ax [orig:1088 MEM[(long int *)_976 + -24B] ] [1088])
                    (reg:DI 2 cx [1772]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_979]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [1772])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:1088 MEM[(long int *)_976 + -24B] ] [1088])
            (nil))))
(insn:TI 709 708 710 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:627 _985 ] [627])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 710 709 715 119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4741)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4741)
;;  succ:       389 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              120 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 120, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 119, next block 121, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       119 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 715 710 716 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn:TI 716 715 717 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:627 _985 ] [627])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_985]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 717 716 723 120 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4742)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6102 (nil)))
 -> 4742)
;;  succ:       68 [61.0%]  (CAN_FALLTHRU)
;;              121 [39.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 121, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 120, next block 122, flags: (REACHABLE, RTL)
;;  pred:       120 [39.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
(note 723 717 724 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn:TI 724 723 725 121 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:627 _985 ] [627])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 725 724 726 121 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       122 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 122, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 121, next block 123, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       121 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 726 725 729 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(note 729 726 727 122 NOTE_INSN_DELETED)
(insn:TI 727 729 56 122 (set (reg/f:DI 0 ax [orig:1090 MEM[(const struct ctype *)_985].D.47997._vptr.facet ] [1090])
        (mem/f:DI (reg/f:DI 3 bx [orig:627 _985 ] [627]) [150 MEM[(const struct ctype *)_985].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:627 _985 ] [627]) [150 MEM[(const struct ctype *)_985].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 56 727 728 122 (set (reg:SI 4 si [orig:911 _1651 ] [911])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 728 56 731 122 (set (reg/f:DI 0 ax [orig:632 _994 ] [632])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1090 MEM[(const struct ctype *)_985].D.47997._vptr.facet ] [1090])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_993 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 731 728 732 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:632 _994 ] [632])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 732 731 733 122 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 740)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8001 (nil)))
 -> 740)
;;  succ:       69 [80.0%]  (CAN_FALLTHRU)
;;              123 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

;; basic block 123, loop depth 0, count 0, freq 3
;;  prev block 122, next block 124, flags: (REACHABLE, RTL)
;;  pred:       122 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 733 732 735 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn:TI 735 733 736 123 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:627 _985 ] [627])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:627 _985 ] [627])
        (nil)))
(call_insn:TI 736 735 3424 123 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:632 _994 ] [632]) [0 *OBJ_TYPE_REF(_994;(const struct ctype)_985->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              124 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 124, loop depth 0, count 0, freq 3
;;  prev block 123, next block 125, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       123 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
(note 3424 736 739 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn:TI 739 3424 4743 124 (set (reg:SI 4 si [orig:911 _1651 ] [911])
        (sign_extend:SI (reg:QI 0 ax [orig:635 _1000 ] [635]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:635 _1000 ] [635])
        (nil)))
(jump_insn 4743 739 4744 124 (set (pc)
        (label_ref 740)) 667 {jump}
     (nil)
 -> 740)
;;  succ:       69 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame]

(barrier 4744 4743 1032)
;; basic block 125, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 124, next block 126, flags: (REACHABLE, RTL)
;;  pred:       104 [39.0%]  (CAN_FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1032 4744 1033 125 378 "" [1 uses])
(note 1033 1032 1034 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1034 1033 1035 125 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:709 _1147 ] [709])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 1035 1034 1036 125 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       126 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 126, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 125, next block 127, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       125 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 1036 1035 1039 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(note 1039 1036 1037 126 NOTE_INSN_DELETED)
(insn:TI 1037 1039 62 126 (set (reg/f:DI 0 ax [orig:1127 MEM[(const struct ctype *)_1147].D.47997._vptr.facet ] [1127])
        (mem/f:DI (reg/f:DI 41 r12 [orig:709 _1147 ] [709]) [150 MEM[(const struct ctype *)_1147].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:709 _1147 ] [709]) [150 MEM[(const struct ctype *)_1147].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 62 1037 1038 126 (set (reg:SI 4 si [orig:801 prephitmp_1335 ] [801])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 1038 62 1041 126 (set (reg/f:DI 0 ax [orig:714 _1156 ] [714])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1127 MEM[(const struct ctype *)_1147].D.47997._vptr.facet ] [1127])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1155 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 1041 1038 1042 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:714 _1156 ] [714])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 1042 1041 1043 126 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1050)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8001 (nil)))
 -> 1050)
;;  succ:       106 [80.0%]  (CAN_FALLTHRU)
;;              127 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 127, loop depth 0, count 0, freq 3
;;  prev block 126, next block 128, flags: (REACHABLE, RTL)
;;  pred:       126 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1043 1042 1045 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1045 1043 1046 127 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:709 _1147 ] [709])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:709 _1147 ] [709])
        (nil)))
(call_insn:TI 1046 1045 3441 127 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:714 _1156 ] [714]) [0 *OBJ_TYPE_REF(_1156;(const struct ctype)_1147->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              128 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 128, loop depth 0, count 0, freq 3
;;  prev block 127, next block 129, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       127 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
(note 3441 1046 1049 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1049 3441 4745 128 (set (reg:SI 4 si [orig:801 prephitmp_1335 ] [801])
        (sign_extend:SI (reg:QI 0 ax [orig:717 _1162 ] [717]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:717 _1162 ] [717])
        (nil)))
(jump_insn 4745 1049 4746 128 (set (pc)
        (label_ref 1050)) 667 {jump}
     (nil)
 -> 1050)
;;  succ:       106 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

(barrier 4746 4745 982)
;; basic block 129, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 128, next block 130, flags: (REACHABLE, RTL)
;;  pred:       98 [39.0%]  (CAN_FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 982 4746 983 129 375 "" [1 uses])
(note 983 982 984 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn:TI 984 983 985 129 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:697 _1120 ] [697])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 985 984 986 129 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       130 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 130, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 129, next block 131, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       129 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 986 985 989 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(note 989 986 987 130 NOTE_INSN_DELETED)
(insn:TI 987 989 61 130 (set (reg/f:DI 0 ax [orig:1122 MEM[(const struct ctype *)_1120].D.47997._vptr.facet ] [1122])
        (mem/f:DI (reg/f:DI 41 r12 [orig:697 _1120 ] [697]) [150 MEM[(const struct ctype *)_1120].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:697 _1120 ] [697]) [150 MEM[(const struct ctype *)_1120].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 61 987 988 130 (set (reg:SI 4 si [orig:784 prephitmp_1304 ] [784])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 988 61 991 130 (set (reg/f:DI 0 ax [orig:701 _1129 ] [701])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1122 MEM[(const struct ctype *)_1120].D.47997._vptr.facet ] [1122])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1128 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 991 988 992 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:701 _1129 ] [701])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 992 991 993 130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1000)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8001 (nil)))
 -> 1000)
;;  succ:       100 [80.0%]  (CAN_FALLTHRU)
;;              131 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 131, loop depth 0, count 0, freq 3
;;  prev block 130, next block 132, flags: (REACHABLE, RTL)
;;  pred:       130 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 993 992 995 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn:TI 995 993 996 131 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:697 _1120 ] [697])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:697 _1120 ] [697])
        (nil)))
(call_insn:TI 996 995 3438 131 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:701 _1129 ] [701]) [0 *OBJ_TYPE_REF(_1129;(const struct ctype)_1120->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              132 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 132, loop depth 0, count 0, freq 3
;;  prev block 131, next block 133, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       131 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
(note 3438 996 999 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn:TI 999 3438 4747 132 (set (reg:SI 4 si [orig:784 prephitmp_1304 ] [784])
        (sign_extend:SI (reg:QI 0 ax [orig:703 _1135 ] [703]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:703 _1135 ] [703])
        (nil)))
(jump_insn 4747 999 4748 132 (set (pc)
        (label_ref 1000)) 667 {jump}
     (nil)
 -> 1000)
;;  succ:       100 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

(barrier 4748 4747 931)
;; basic block 133, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 132, next block 134, flags: (REACHABLE, RTL)
;;  pred:       92 [39.0%]  (CAN_FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 931 4748 932 133 372 "" [1 uses])
(note 932 931 933 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn:TI 933 932 934 133 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:684 _1093 ] [684])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 934 933 935 133 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       134 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 134, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 133, next block 135, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       133 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 935 934 938 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(note 938 935 936 134 NOTE_INSN_DELETED)
(insn:TI 936 938 60 134 (set (reg/f:DI 0 ax [orig:1116 MEM[(const struct ctype *)_1093].D.47997._vptr.facet ] [1116])
        (mem/f:DI (reg/f:DI 3 bx [orig:684 _1093 ] [684]) [150 MEM[(const struct ctype *)_1093].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:684 _1093 ] [684]) [150 MEM[(const struct ctype *)_1093].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 60 936 937 134 (set (reg:SI 4 si [orig:912 _1658 ] [912])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 937 60 940 134 (set (reg/f:DI 0 ax [orig:688 _1102 ] [688])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1116 MEM[(const struct ctype *)_1093].D.47997._vptr.facet ] [1116])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1101 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 940 937 941 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:688 _1102 ] [688])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 941 940 942 134 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 949)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8001 (nil)))
 -> 949)
;;  succ:       94 [80.0%]  (CAN_FALLTHRU)
;;              135 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

;; basic block 135, loop depth 0, count 0, freq 3
;;  prev block 134, next block 136, flags: (REACHABLE, RTL)
;;  pred:       134 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 942 941 944 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn:TI 944 942 945 135 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:684 _1093 ] [684])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:684 _1093 ] [684])
        (nil)))
(call_insn:TI 945 944 3435 135 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:688 _1102 ] [688]) [0 *OBJ_TYPE_REF(_1102;(const struct ctype)_1093->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              136 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 136, loop depth 0, count 0, freq 3
;;  prev block 135, next block 137, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       135 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
(note 3435 945 948 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn:TI 948 3435 4749 136 (set (reg:SI 4 si [orig:912 _1658 ] [912])
        (sign_extend:SI (reg:QI 0 ax [orig:690 _1108 ] [690]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:690 _1108 ] [690])
        (nil)))
(jump_insn 4749 948 4750 136 (set (pc)
        (label_ref 949)) 667 {jump}
     (nil)
 -> 949)
;;  succ:       94 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame]

(barrier 4750 4749 879)
;; basic block 137, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 136, next block 138, flags: (REACHABLE, RTL)
;;  pred:       86 [39.0%]  (CAN_FALLTHRU)
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 879 4750 880 137 369 "" [1 uses])
(note 880 879 881 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn:TI 881 880 882 137 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:671 _1066 ] [671])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 882 881 883 137 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       138 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 138, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 137, next block 139, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       137 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 883 882 886 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(note 886 883 884 138 NOTE_INSN_DELETED)
(insn:TI 884 886 59 138 (set (reg/f:DI 0 ax [orig:1108 MEM[(const struct ctype *)_1066].D.47997._vptr.facet ] [1108])
        (mem/f:DI (reg/f:DI 3 bx [orig:671 _1066 ] [671]) [150 MEM[(const struct ctype *)_1066].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:671 _1066 ] [671]) [150 MEM[(const struct ctype *)_1066].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 59 884 885 138 (set (reg:SI 4 si [orig:792 _1319 ] [792])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 885 59 888 138 (set (reg/f:DI 0 ax [orig:675 _1075 ] [675])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1108 MEM[(const struct ctype *)_1066].D.47997._vptr.facet ] [1108])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1074 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 888 885 889 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:675 _1075 ] [675])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 889 888 890 138 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 897)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8001 (nil)))
 -> 897)
;;  succ:       88 [80.0%]  (CAN_FALLTHRU)
;;              139 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 139, loop depth 0, count 0, freq 3
;;  prev block 138, next block 140, flags: (REACHABLE, RTL)
;;  pred:       138 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 890 889 892 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn:TI 892 890 893 139 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:671 _1066 ] [671])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:671 _1066 ] [671])
        (nil)))
(call_insn:TI 893 892 3433 139 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:675 _1075 ] [675]) [0 *OBJ_TYPE_REF(_1075;(const struct ctype)_1066->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              140 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 140, loop depth 0, count 0, freq 3
;;  prev block 139, next block 141, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       139 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 4 [si]
;; live  kill	
(note 3433 893 896 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn:TI 896 3433 4751 140 (set (reg:SI 4 si [orig:792 _1319 ] [792])
        (sign_extend:SI (reg:QI 0 ax [orig:677 _1081 ] [677]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:677 _1081 ] [677])
        (nil)))
(jump_insn 4751 896 4752 140 (set (pc)
        (label_ref 897)) 667 {jump}
     (nil)
 -> 897)
;;  succ:       88 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 4752 4751 773)
;; basic block 141, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 140, next block 142, flags: (REACHABLE, RTL)
;;  pred:       73 [39.0%]  (CAN_FALLTHRU)
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 773 4752 774 141 363 "" [1 uses])
(note 774 773 775 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn:TI 775 774 776 141 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:642 _1012 ] [642])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 776 775 777 141 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       142 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 142, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 141, next block 143, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       141 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 777 776 780 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(note 780 777 778 142 NOTE_INSN_DELETED)
(insn:TI 778 780 57 142 (set (reg/f:DI 0 ax [orig:1096 MEM[(const struct ctype *)_1012].D.47997._vptr.facet ] [1096])
        (mem/f:DI (reg/f:DI 41 r12 [orig:642 _1012 ] [642]) [150 MEM[(const struct ctype *)_1012].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:642 _1012 ] [642]) [150 MEM[(const struct ctype *)_1012].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 57 778 779 142 (set (reg:SI 4 si [orig:771 _1277 ] [771])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 779 57 782 142 (set (reg/f:DI 0 ax [orig:647 _1021 ] [647])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1096 MEM[(const struct ctype *)_1012].D.47997._vptr.facet ] [1096])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1020 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 782 779 783 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:647 _1021 ] [647])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 783 782 784 142 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 791)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8001 (nil)))
 -> 791)
;;  succ:       75 [80.0%]  (CAN_FALLTHRU)
;;              143 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 143, loop depth 0, count 0, freq 3
;;  prev block 142, next block 144, flags: (REACHABLE, RTL)
;;  pred:       142 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 784 783 786 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn:TI 786 784 787 143 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:642 _1012 ] [642])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:642 _1012 ] [642])
        (nil)))
(call_insn:TI 787 786 3427 143 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:647 _1021 ] [647]) [0 *OBJ_TYPE_REF(_1021;(const struct ctype)_1012->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              144 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 144, loop depth 0, count 0, freq 3
;;  prev block 143, next block 145, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       143 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
(note 3427 787 790 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn:TI 790 3427 4753 144 (set (reg:SI 4 si [orig:771 _1277 ] [771])
        (sign_extend:SI (reg:QI 0 ax [orig:650 _1027 ] [650]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:650 _1027 ] [650])
        (nil)))
(jump_insn 4753 790 4754 144 (set (pc)
        (label_ref 791)) 667 {jump}
     (nil)
 -> 791)
;;  succ:       75 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

(barrier 4754 4753 823)
;; basic block 145, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 144, next block 146, flags: (REACHABLE, RTL)
;;  pred:       79 [39.0%]  (CAN_FALLTHRU)
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 823 4754 824 145 366 "" [1 uses])
(note 824 823 825 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn:TI 825 824 826 145 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:656 _1039 ] [656])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 826 825 827 145 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       146 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 146, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 145, next block 147, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       145 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 827 826 830 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(note 830 827 828 146 NOTE_INSN_DELETED)
(insn:TI 828 830 58 146 (set (reg/f:DI 0 ax [orig:1101 MEM[(const struct ctype *)_1039].D.47997._vptr.facet ] [1101])
        (mem/f:DI (reg/f:DI 41 r12 [orig:656 _1039 ] [656]) [150 MEM[(const struct ctype *)_1039].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:656 _1039 ] [656]) [150 MEM[(const struct ctype *)_1039].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 58 828 829 146 (set (reg:SI 4 si [orig:788 _1311 ] [788])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 829 58 832 146 (set (reg/f:DI 0 ax [orig:662 _1048 ] [662])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1101 MEM[(const struct ctype *)_1039].D.47997._vptr.facet ] [1101])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1047 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 832 829 833 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:662 _1048 ] [662])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 833 832 834 146 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 841)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8001 (nil)))
 -> 841)
;;  succ:       81 [80.0%]  (CAN_FALLTHRU)
;;              147 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 147, loop depth 0, count 0, freq 3
;;  prev block 146, next block 148, flags: (REACHABLE, RTL)
;;  pred:       146 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 834 833 836 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn:TI 836 834 837 147 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:656 _1039 ] [656])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:656 _1039 ] [656])
        (nil)))
(call_insn:TI 837 836 3430 147 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:662 _1048 ] [662]) [0 *OBJ_TYPE_REF(_1048;(const struct ctype)_1039->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              148 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 148, loop depth 0, count 0, freq 3
;;  prev block 147, next block 149, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       147 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	
(note 3430 837 840 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn:TI 840 3430 4755 148 (set (reg:SI 4 si [orig:788 _1311 ] [788])
        (sign_extend:SI (reg:QI 0 ax [orig:664 _1054 ] [664]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:664 _1054 ] [664])
        (nil)))
(jump_insn 4755 840 4756 148 (set (pc)
        (label_ref 841)) 667 {jump}
     (nil)
 -> 841)
;;  succ:       81 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

(barrier 4756 4755 4739)
;; basic block 149, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 148, next block 150, flags: (REACHABLE, RTL)
;;  pred:       112 [29.0%]  (CAN_FALLTHRU)
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 4739 4756 1124 149 586 "" [1 uses])
(note 1124 4739 1125 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1125 1124 1126 149 (set (reg/f:DI 3 bx [orig:1145 lStash.D.138156._M_impl._M_finish ] [1145])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19976 [0xffffffffffffb1f8])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -19928 [0xffffffffffffb228])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])
        (nil)))
(insn 1126 1125 1132 149 (parallel [
            (set (reg:DI 3 bx [1144])
                (minus:DI (reg/f:DI 3 bx [orig:1145 lStash.D.138156._M_impl._M_finish ] [1145])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19984 [0xffffffffffffb1f0])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19928 [0xffffffffffffb228])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])
                (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19936 [0xffffffffffffb220])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128]))
            (nil))))
(insn 1132 1126 1134 149 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC105") [flags 0x2]  <var_decl 0x7fb2b65b0630 *.LC105>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 1134 1132 1128 149 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1128 1134 1131 149 (set (reg:DI 0 ax [1148])
        (const_int -3689348814741910323 [0xcccccccccccccccd])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int -3689348814741910323 [0xcccccccccccccccd])
        (nil)))
(insn 1131 1128 1127 149 (set (reg:DI 1 dx)
        (const_int 42 [0x2a])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 1127 1131 1129 149 (parallel [
            (set (reg:DI 3 bx [1146])
                (ashiftrt:DI (reg:DI 3 bx [1144])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1129 1127 1135 149 (parallel [
            (set (reg:DI 3 bx [1147])
                (mult:DI (reg:DI 3 bx [1146])
                    (reg:DI 0 ax [1148])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [1148])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 3 bx [1146])
                    (const_int -3689348814741910323 [0xcccccccccccccccd]))
                (nil)))))
(call_insn:TI 1135 1129 1136 149 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       150 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 150, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 149, next block 151, flags: (REACHABLE, RTL)
;;  pred:       149 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1136 1135 1139 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1139 1136 1137 150 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1137 1139 1140 150 (set (reg:DI 4 si)
        (reg:DI 3 bx [1147])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [1147])
        (nil)))
(call_insn:TI 1140 1137 3447 150 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              151 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 151, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 150, next block 152, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       150 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
(note 3447 1140 1141 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1141 3447 1143 151 (set (reg/f:DI 41 r12 [orig:232 _250 ] [232])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (nil))
(insn 1143 1141 1144 151 (set (reg/f:DI 0 ax [orig:1151 MEM[(struct basic_ostream *)_250]._vptr.basic_ostream ] [1151])
        (mem/f:DI (reg/f:DI 0 ax [orig:232 _250 ] [232]) [150 MEM[(struct basic_ostream *)_250]._vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:232 _250 ] [232]) [150 MEM[(struct basic_ostream *)_250]._vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 1144 1143 1145 151 (set (reg:DI 0 ax [orig:1152 MEM[(long int *)_1165 + -24B] ] [1152])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1151 MEM[(struct basic_ostream *)_250]._vptr.basic_ostream ] [1151])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1165 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 1145 1144 1146 151 (set (reg/f:DI 3 bx [orig:724 _1174 ] [724])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 41 r12 [orig:232 _250 ] [232])
                    (reg:DI 0 ax [orig:1152 MEM[(long int *)_1165 + -24B] ] [1152]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1168]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1152 MEM[(long int *)_1165 + -24B] ] [1152])
        (nil)))
(insn:TI 1146 1145 1147 151 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:724 _1174 ] [724])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 1147 1146 1152 151 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4757)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4757)
;;  succ:       400 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              152 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 152, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 151, next block 153, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       151 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1152 1147 1153 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1153 1152 1154 152 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:724 _1174 ] [724])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1174]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 1154 1153 1155 152 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1159)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 1159)
;;  succ:       153 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              299 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 153, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 152, next block 154, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       152 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax]
;; live  kill	
(note 1155 1154 1156 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1156 1155 1175 153 (set (reg:QI 0 ax [orig:726 _1178 ] [726])
        (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:724 _1174 ] [724])
                (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1174]._M_widen+10 S1 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:875 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:724 _1174 ] [724])
        (nil)))
;;  succ:       154 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 154, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 153, next block 155, flags: (REACHABLE, RTL)
;;  pred:       153 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              300 [80.0%]  (CAN_FALLTHRU)
;;              302 [100.0%]  (CAN_FALLTHRU)
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 1175 1156 1176 154 385 "" [2 uses])
(note 1176 1175 1177 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1177 1176 1179 154 (set (reg:SI 4 si [orig:1156 _1178 ] [1156])
        (sign_extend:SI (reg:QI 0 ax [orig:726 _1178 ] [726]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:726 _1178 ] [726])
        (nil)))
(insn 1179 1177 1180 154 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:232 _250 ] [232])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:232 _250 ] [232])
        (nil)))
(call_insn:TI 1180 1179 3449 154 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              155 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 155, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 154, next block 156, flags: (REACHABLE, RTL)
;;  pred:       154 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3449 1180 1183 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1183 3449 1184 155 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:723 _1171 ] [723])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:723 _1171 ] [723])
        (nil)))
(call_insn:TI 1184 1183 1185 155 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       156 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 156, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 155, next block 157, flags: (REACHABLE, RTL)
;;  pred:       155 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 1185 1184 1186 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1186 1185 1187 156 (set (reg/f:DI 3 bx [orig:1158 lMesons.D.138156._M_impl._M_finish ] [1158])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19944 [0xffffffffffffb218])) [164 lMesons.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -19896 [0xffffffffffffb248])) [164 lMesons.D.138156._M_impl._M_finish+0 S8 A64])
        (nil)))
(insn 1187 1186 1193 156 (parallel [
            (set (reg:DI 3 bx [1157])
                (minus:DI (reg/f:DI 3 bx [orig:1158 lMesons.D.138156._M_impl._M_finish ] [1158])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19952 [0xffffffffffffb210])) [164 lMesons.D.138156._M_impl._M_start+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19896 [0xffffffffffffb248])) [164 lMesons.D.138156._M_impl._M_finish+0 S8 A64])
                (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19904 [0xffffffffffffb240])) [164 lMesons.D.138156._M_impl._M_start+0 S8 A128]))
            (nil))))
(insn 1193 1187 1195 156 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC106") [flags 0x2]  <var_decl 0x7fb2b65b06c0 *.LC106>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 1195 1193 1189 156 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1189 1195 1192 156 (set (reg:DI 0 ax [1161])
        (const_int -3689348814741910323 [0xcccccccccccccccd])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int -3689348814741910323 [0xcccccccccccccccd])
        (nil)))
(insn 1192 1189 1188 156 (set (reg:DI 1 dx)
        (const_int 43 [0x2b])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 1188 1192 1190 156 (parallel [
            (set (reg:DI 3 bx [1159])
                (ashiftrt:DI (reg:DI 3 bx [1157])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1190 1188 1196 156 (parallel [
            (set (reg:DI 3 bx [1160])
                (mult:DI (reg:DI 3 bx [1159])
                    (reg:DI 0 ax [1161])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [1161])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 3 bx [1159])
                    (const_int -3689348814741910323 [0xcccccccccccccccd]))
                (nil)))))
(call_insn:TI 1196 1190 1197 156 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       157 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 157, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 156, next block 158, flags: (REACHABLE, RTL)
;;  pred:       156 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1197 1196 1200 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1200 1197 1198 157 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1198 1200 1201 157 (set (reg:DI 4 si)
        (reg:DI 3 bx [1160])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [1160])
        (nil)))
(call_insn:TI 1201 1198 3450 157 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              158 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 158, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 157, next block 159, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       157 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
(note 3450 1201 1202 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1202 3450 1204 158 (set (reg/f:DI 41 r12 [orig:217 _223 ] [217])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (nil))
(insn 1204 1202 1205 158 (set (reg/f:DI 0 ax [orig:1164 MEM[(struct basic_ostream *)_223]._vptr.basic_ostream ] [1164])
        (mem/f:DI (reg/f:DI 0 ax [orig:217 _223 ] [217]) [150 MEM[(struct basic_ostream *)_223]._vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:217 _223 ] [217]) [150 MEM[(struct basic_ostream *)_223]._vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 1205 1204 1206 158 (set (reg:DI 0 ax [orig:1165 MEM[(long int *)_1192 + -24B] ] [1165])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1164 MEM[(struct basic_ostream *)_223]._vptr.basic_ostream ] [1164])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1192 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 1206 1205 1207 158 (set (reg/f:DI 3 bx [orig:736 _1201 ] [736])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 41 r12 [orig:217 _223 ] [217])
                    (reg:DI 0 ax [orig:1165 MEM[(long int *)_1192 + -24B] ] [1165]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1195]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1165 MEM[(long int *)_1192 + -24B] ] [1165])
        (nil)))
(insn:TI 1207 1206 1208 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:736 _1201 ] [736])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 1208 1207 1213 158 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4758)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4758)
;;  succ:       401 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              159 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 159, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 158, next block 160, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       158 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1213 1208 1214 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1214 1213 1215 159 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:736 _1201 ] [736])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1201]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 1215 1214 1216 159 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1220)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 1220)
;;  succ:       160 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              295 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 160, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 159, next block 161, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       159 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax]
;; live  kill	
(note 1216 1215 1217 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1217 1216 1236 160 (set (reg:QI 0 ax [orig:738 _1205 ] [738])
        (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:736 _1201 ] [736])
                (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1201]._M_widen+10 S1 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:875 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:736 _1201 ] [736])
        (nil)))
;;  succ:       161 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 161, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 160, next block 162, flags: (REACHABLE, RTL)
;;  pred:       160 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              296 [80.0%]  (CAN_FALLTHRU)
;;              298 [100.0%]  (CAN_FALLTHRU)
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 1236 1217 1237 161 388 "" [2 uses])
(note 1237 1236 1238 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1238 1237 1240 161 (set (reg:SI 4 si [orig:1169 _1205 ] [1169])
        (sign_extend:SI (reg:QI 0 ax [orig:738 _1205 ] [738]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:738 _1205 ] [738])
        (nil)))
(insn 1240 1238 1241 161 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:217 _223 ] [217])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:217 _223 ] [217])
        (nil)))
(call_insn:TI 1241 1240 3452 161 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              162 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 162, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 161, next block 163, flags: (REACHABLE, RTL)
;;  pred:       161 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3452 1241 1244 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1244 3452 1245 162 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:735 _1198 ] [735])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:735 _1198 ] [735])
        (nil)))
(call_insn:TI 1245 1244 1246 162 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       163 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 163, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 162, next block 164, flags: (REACHABLE, RTL)
;;  pred:       162 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 1246 1245 1247 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1247 1246 1248 163 (set (reg/f:DI 3 bx [orig:1171 lStash.D.138156._M_impl._M_finish ] [1171])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19976 [0xffffffffffffb1f8])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -19928 [0xffffffffffffb228])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])
        (nil)))
(insn 1248 1247 1254 163 (parallel [
            (set (reg:DI 3 bx [1170])
                (minus:DI (reg/f:DI 3 bx [orig:1171 lStash.D.138156._M_impl._M_finish ] [1171])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19984 [0xffffffffffffb1f0])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19928 [0xffffffffffffb228])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])
                (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19936 [0xffffffffffffb220])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128]))
            (nil))))
(insn 1254 1248 1256 163 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC107") [flags 0x2]  <var_decl 0x7fb2b65b0750 *.LC107>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 1256 1254 1250 163 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1250 1256 1253 163 (set (reg:DI 0 ax [1174])
        (const_int -3689348814741910323 [0xcccccccccccccccd])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int -3689348814741910323 [0xcccccccccccccccd])
        (nil)))
(insn 1253 1250 1249 163 (set (reg:DI 1 dx)
        (const_int 20 [0x14])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 1249 1253 1251 163 (parallel [
            (set (reg:DI 3 bx [1172])
                (ashiftrt:DI (reg:DI 3 bx [1170])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1251 1249 1257 163 (parallel [
            (set (reg:DI 3 bx [1173])
                (mult:DI (reg:DI 3 bx [1172])
                    (reg:DI 0 ax [1174])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [1174])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 3 bx [1172])
                    (const_int -3689348814741910323 [0xcccccccccccccccd]))
                (nil)))))
(call_insn:TI 1257 1251 1258 163 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       164 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 164, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 163, next block 165, flags: (REACHABLE, RTL)
;;  pred:       163 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1258 1257 1261 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1261 1258 1259 164 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1259 1261 1262 164 (set (reg:DI 4 si)
        (reg:DI 3 bx [1173])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [1173])
        (nil)))
(call_insn:TI 1262 1259 3453 164 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              165 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 165, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 164, next block 166, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       164 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
(note 3453 1262 1263 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1263 3453 1265 165 (set (reg/f:DI 41 r12 [orig:204 _208 ] [204])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (nil))
(insn 1265 1263 1266 165 (set (reg/f:DI 0 ax [orig:1177 MEM[(struct basic_ostream *)_208]._vptr.basic_ostream ] [1177])
        (mem/f:DI (reg/f:DI 0 ax [orig:204 _208 ] [204]) [150 MEM[(struct basic_ostream *)_208]._vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:204 _208 ] [204]) [150 MEM[(struct basic_ostream *)_208]._vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 1266 1265 1267 165 (set (reg:DI 0 ax [orig:1178 MEM[(long int *)_1219 + -24B] ] [1178])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1177 MEM[(struct basic_ostream *)_208]._vptr.basic_ostream ] [1177])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1219 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 1267 1266 1268 165 (set (reg/f:DI 3 bx [orig:748 _1228 ] [748])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 41 r12 [orig:204 _208 ] [204])
                    (reg:DI 0 ax [orig:1178 MEM[(long int *)_1219 + -24B] ] [1178]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1222]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1178 MEM[(long int *)_1219 + -24B] ] [1178])
        (nil)))
(insn:TI 1268 1267 1269 165 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:748 _1228 ] [748])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 1269 1268 1274 165 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4759)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4759)
;;  succ:       402 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              166 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 166, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 165, next block 167, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       165 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1274 1269 1275 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1275 1274 1276 166 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:748 _1228 ] [748])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1228]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 1276 1275 1277 166 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1281)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 1281)
;;  succ:       167 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              291 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 167, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 166, next block 168, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       166 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax]
;; live  kill	
(note 1277 1276 1278 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1278 1277 1297 167 (set (reg:QI 0 ax [orig:750 _1232 ] [750])
        (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:748 _1228 ] [748])
                (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1228]._M_widen+10 S1 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:875 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:748 _1228 ] [748])
        (nil)))
;;  succ:       168 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 168, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 167, next block 169, flags: (REACHABLE, RTL)
;;  pred:       167 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              292 [80.0%]  (CAN_FALLTHRU)
;;              294 [100.0%]  (CAN_FALLTHRU)
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 1297 1278 1298 168 391 "" [2 uses])
(note 1298 1297 1299 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1299 1298 1301 168 (set (reg:SI 4 si [orig:1182 _1232 ] [1182])
        (sign_extend:SI (reg:QI 0 ax [orig:750 _1232 ] [750]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:750 _1232 ] [750])
        (nil)))
(insn 1301 1299 1302 168 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:204 _208 ] [204])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:204 _208 ] [204])
        (nil)))
(call_insn:TI 1302 1301 3455 168 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              169 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 169, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 168, next block 170, flags: (REACHABLE, RTL)
;;  pred:       168 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3455 1302 1305 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1305 3455 1306 169 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:747 _1225 ] [747])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:747 _1225 ] [747])
        (nil)))
(call_insn:TI 1306 1305 1307 169 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       170 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 170, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 169, next block 171, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       169 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 170 artificial_defs: { }
;; bb 170 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 43 [r14]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 43 [r14]
;; live  kill	 17 [flags]
(note 1307 1306 1308 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1308 1307 1309 170 (set (reg/f:DI 0 ax [orig:441 _567 ] [441])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19976 [0xffffffffffffb1f8])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 1309 1308 1312 170 (set (reg/f:DI 2 cx [orig:356 _480 ] [356])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19984 [0xffffffffffffb1f0])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 1312 1309 4198 170 (set (reg:DI 43 r14 [1187])
        (const_int -3689348814741910323 [0xcccccccccccccccd])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int -3689348814741910323 [0xcccccccccccccccd])
        (nil)))
(insn:TI 4198 1312 4405 170 (set (reg:DI 1 dx [1183])
        (reg/f:DI 0 ax [orig:441 _567 ] [441])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 4405 4198 1310 170 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])
        (reg/f:DI 2 cx [orig:356 _480 ] [356])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn:TI 1310 4405 1311 170 (parallel [
            (set (reg:DI 1 dx [1183])
                (minus:DI (reg:DI 1 dx [1183])
                    (reg/f:DI 2 cx [orig:356 _480 ] [356])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:356 _480 ] [356])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 1311 1310 1313 170 (parallel [
            (set (reg:DI 1 dx [1185])
                (ashiftrt:DI (reg:DI 1 dx [1183])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1313 1311 1314 170 (parallel [
            (set (reg:DI 1 dx [1186])
                (mult:DI (reg:DI 1 dx [1185])
                    (reg:DI 43 r14 [1187])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [1185])
                (const_int -3689348814741910323 [0xcccccccccccccccd]))
            (nil))))
(insn:TI 1314 1313 1315 170 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 1 dx [1186])
            (const_int 0 [0]))) mymainCascade.cc:308 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [1186])
        (nil)))
(jump_insn:TI 1315 1314 1316 170 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1424)
            (pc))) mymainCascade.cc:308 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 200 (nil)))
 -> 1424)
;;  succ:       171 [98.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              190 [2.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14]

;; basic block 171, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 170, next block 172, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       170 [98.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 43 [r14]
;; live  gen 	 3 [bx] 41 [r12]
;; live  kill	 17 [flags]
(note 1316 1315 4711 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4711 1316 4712 171 (parallel [
            (set (reg:DI 3 bx [orig:207 _211 ] [207])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:308 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 4712 4711 4760 171 (parallel [
            (set (reg:DI 41 r12 [orig:215 iP ] [215])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:308 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 4760 4712 4761 171 (set (pc)
        (label_ref 1417)) 667 {jump}
     (nil)
 -> 1417)
;;  succ:       176 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

(barrier 4761 4760 4763)
;; basic block 172, loop depth 0, count 0, freq 342, maybe hot
;;  prev block 171, next block 173, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       185 [61.0%]  (CAN_FALLTHRU)
;; bb 172 artificial_defs: { }
;; bb 172 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 4 [si]
;; live  kill	
(code_label 4763 4761 1381 172 594 "" [1 uses])
(note 1381 4763 1382 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1382 1381 1403 172 (set (reg:SI 4 si [orig:804 _1339 ] [804])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:760 _1255 ] [760])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1255]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:760 _1255 ] [760])
        (nil)))
;;  succ:       173 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 173, loop depth 0, count 0, freq 560, maybe hot
;;  prev block 172, next block 174, flags: (REACHABLE, RTL)
;;  pred:       172 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              187 [80.0%]  (CAN_FALLTHRU)
;;              189 [100.0%]  (CAN_FALLTHRU)
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 1403 1382 1404 173 395 "" [2 uses])
(note 1404 1403 1406 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1406 1404 1407 173 (set (reg:DI 5 di)
        (reg/f:DI 42 r13 [orig:214 _220 ] [214])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [orig:214 _220 ] [214])
        (nil)))
(call_insn:TI 1407 1406 3461 173 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              174 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 174, loop depth 0, count 0, freq 560, maybe hot
;;  prev block 173, next block 175, flags: (REACHABLE, RTL)
;;  pred:       173 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 174 artificial_defs: { }
;; bb 174 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3461 1407 1410 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1410 3461 1411 174 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:758 _1252 ] [758])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:758 _1252 ] [758])
        (nil)))
(call_insn:TI 1411 1410 1412 174 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       175 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 175, loop depth 0, count 0, freq 560, maybe hot
;;  prev block 174, next block 176, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       174 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 175 artificial_defs: { }
;; bb 175 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(note 1412 1411 1415 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1415 1412 1416 175 (set (reg/f:DI 0 ax [orig:441 _567 ] [441])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19976 [0xffffffffffffb1f8])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 1416 1415 4866 175 (set (reg/f:DI 2 cx [orig:356 _480 ] [356])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19984 [0xffffffffffffb1f0])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 4866 1416 4542 175 (set (reg:DI 3 bx)
        (zero_extend:DI (plus:SI (reg/v:SI 41 r12 [orig:215 iP ] [215])
                (const_int 1 [0x1])))) mymainCascade.cc:308 215 {*leadi}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:215 iP ] [215])
        (nil)))
(insn:TI 4542 4866 4204 175 (set (reg:DI 41 r12)
        (reg:DI 3 bx)) mymainCascade.cc:308 85 {*movdi_internal}
     (nil))
(insn:TI 4204 4542 4407 175 (set (reg:DI 1 dx [1199])
        (reg/f:DI 0 ax [orig:441 _567 ] [441])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 4407 4204 1418 175 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])
        (reg/f:DI 2 cx [orig:356 _480 ] [356])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn:TI 1418 4407 1419 175 (parallel [
            (set (reg:DI 1 dx [1199])
                (minus:DI (reg:DI 1 dx [1199])
                    (reg/f:DI 2 cx [orig:356 _480 ] [356])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:356 _480 ] [356])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 1419 1418 1421 175 (parallel [
            (set (reg:DI 1 dx [1201])
                (ashiftrt:DI (reg:DI 1 dx [1199])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1421 1419 1422 175 (parallel [
            (set (reg:DI 1 dx [1202])
                (mult:DI (reg:DI 1 dx [1201])
                    (reg:DI 43 r14 [1642])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [1201])
                (const_int -3689348814741910323 [0xcccccccccccccccd]))
            (nil))))
(insn:TI 1422 1421 1423 175 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 3 bx [orig:207 _211 ] [207])
            (reg:DI 1 dx [1202]))) mymainCascade.cc:308 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [1202])
        (nil)))
(jump_insn:TI 1423 1422 1417 175 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1424)
            (pc))) mymainCascade.cc:308 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 200 (nil)))
 -> 1424)
;;  succ:       176 [98.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              190 [2.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 176, loop depth 0, count 0, freq 560, maybe hot
;;  prev block 175, next block 177, flags: (REACHABLE, RTL)
;;  pred:       175 [98.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              171 [100.0%]  (CAN_FALLTHRU)
;; bb 176 artificial_defs: { }
;; bb 176 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 23 [xmm2] 42 [r13] 44 [r15]
;; live  kill	 17 [flags]
(code_label 1417 1423 1317 176 396 "" [1 uses])
(note 1317 1417 1319 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(note 1319 1317 4201 176 NOTE_INSN_DELETED)
(note 4201 1319 4472 176 NOTE_INSN_DELETED)
(note 4472 4201 4474 176 NOTE_INSN_DELETED)
(note 4474 4472 4406 176 NOTE_INSN_DELETED)
(note 4406 4474 1320 176 NOTE_INSN_DELETED)
(insn:TI 1320 4406 1330 176 (set (reg:DI 0 ax [1190])
        (plus:DI (ashift:DI (reg:DI 3 bx [orig:207 _211 ] [207])
                (const_int 2 [0x2]))
            (reg:DI 3 bx [orig:207 _211 ] [207]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 215 {*leadi}
     (nil))
(insn 1330 1320 1328 176 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1328 1330 1327 176 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC108") [flags 0x2]  <var_decl 0x7fb2b65b07e0 *.LC108>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 1327 1328 1321 176 (set (reg:DI 1 dx)
        (const_int 22 [0x16])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 1321 1327 1323 176 (parallel [
            (set (reg:DI 0 ax [1191])
                (ashift:DI (reg:DI 0 ax [1190])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 530 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1323 1321 1325 176 (parallel [
            (set (reg/f:DI 0 ax [orig:363 _487 ] [363])
                (plus:DI (reg:DI 0 ax [1191])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1325 1323 1324 176 (set (reg:DF 23 xmm2 [orig:361 _485 ] [361])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:363 _487 ] [363])
                (const_int 56 [0x38])) [78 MEM[(double *)_487 + 56B]+0 S8 A64])) 126 {*movdf_internal}
     (nil))
(insn 1324 1325 1326 176 (set (reg:SI 42 r13 [orig:341 _463 ] [341])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:363 _487 ] [363])
                (const_int 12 [0xc])) [22 MEM[(int *)_487 + 12B]+0 S4 A32])) 86 {*movsi_internal}
     (nil))
(insn:TI 1326 1324 4202 176 (set (reg:SI 44 r15 [orig:335 _456 ] [335])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:363 _487 ] [363])
                (const_int 8 [0x8])) [22 MEM[(int *)_487 + 8B]+0 S4 A32])) 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:363 _487 ] [363])
        (nil)))
(insn:TI 4202 1326 1331 176 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])
        (reg:DF 23 xmm2 [orig:361 _485 ] [361])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [orig:361 _485 ] [361])
        (nil)))
(call_insn:TI 1331 4202 1332 176 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       177 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 177, loop depth 0, count 0, freq 560, maybe hot
;;  prev block 176, next block 178, flags: (REACHABLE, RTL)
;;  pred:       176 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 177 artificial_defs: { }
;; bb 177 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1332 1331 1335 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1335 1332 1333 177 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1333 1335 1336 177 (set (reg:DI 4 si)
        (reg:DI 3 bx [orig:207 _211 ] [207])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [orig:207 _211 ] [207])
        (nil)))
(call_insn:TI 1336 1333 3456 177 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              178 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 178, loop depth 0, count 0, freq 560, maybe hot
;;  prev block 177, next block 179, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       177 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 178 artificial_defs: { }
;; bb 178 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3456 1336 1340 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1340 3456 1339 178 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC109") [flags 0x2]  <var_decl 0x7fb2b65b0990 *.LC109>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1339 1340 1341 178 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1341 1339 1337 178 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:364 _488 ] [364])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:364 _488 ] [364])
        (nil)))
(insn:TI 1337 1341 1342 178 (set (reg/f:DI 3 bx [orig:364 _488 ] [364])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 1342 1337 1343 178 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       179 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 179, loop depth 0, count 0, freq 560, maybe hot
;;  prev block 178, next block 180, flags: (REACHABLE, RTL)
;;  pred:       178 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 179 artificial_defs: { }
;; bb 179 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1343 1342 1344 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1344 1343 1345 179 (set (reg:SI 4 si)
        (reg:SI 44 r15 [orig:335 _456 ] [335])) mymainCascade.cc:309 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:335 _456 ] [335])
        (nil)))
(insn 1345 1344 1346 179 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:364 _488 ] [364])) mymainCascade.cc:309 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:364 _488 ] [364])
        (nil)))
(call_insn:TI 1346 1345 3457 179 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:309 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              180 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 180, loop depth 0, count 0, freq 560, maybe hot
;;  prev block 179, next block 181, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       179 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 180 artificial_defs: { }
;; bb 180 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3457 1346 1350 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1350 3457 1349 180 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fb2b6b5c2d0 *.LC28>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1349 1350 1351 180 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1351 1349 1347 180 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:213 _218 ] [213])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:213 _218 ] [213])
        (nil)))
(insn:TI 1347 1351 1352 180 (set (reg/f:DI 3 bx [orig:213 _218 ] [213])
        (reg:DI 0 ax)) mymainCascade.cc:309 85 {*movdi_internal}
     (nil))
(call_insn:TI 1352 1347 1353 180 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       181 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 181, loop depth 0, count 0, freq 560, maybe hot
;;  prev block 180, next block 182, flags: (REACHABLE, RTL)
;;  pred:       180 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 181 artificial_defs: { }
;; bb 181 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
(note 1353 1352 1354 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1354 1353 1355 181 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 126 {*movdf_internal}
     (nil))
(insn 1355 1354 1356 181 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:213 _218 ] [213])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:213 _218 ] [213])
        (nil)))
(call_insn:TI 1356 1355 3458 181 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              182 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 182, loop depth 0, count 0, freq 560, maybe hot
;;  prev block 181, next block 183, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       181 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 182 artificial_defs: { }
;; bb 182 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3458 1356 1360 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1360 3458 1359 182 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC110") [flags 0x2]  <var_decl 0x7fb2b65b0a20 *.LC110>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1359 1360 1361 182 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1361 1359 1357 182 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:365 _489 ] [365])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:365 _489 ] [365])
        (nil)))
(insn:TI 1357 1361 1362 182 (set (reg/f:DI 3 bx [orig:365 _489 ] [365])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (nil))
(call_insn:TI 1362 1357 1363 182 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       183 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 183, loop depth 0, count 0, freq 560, maybe hot
;;  prev block 182, next block 184, flags: (REACHABLE, RTL)
;;  pred:       182 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 183 artificial_defs: { }
;; bb 183 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1363 1362 1364 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1364 1363 1365 183 (set (reg:SI 4 si)
        (reg:SI 42 r13 [orig:341 _463 ] [341])) mymainCascade.cc:309 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 r13 [orig:341 _463 ] [341])
        (nil)))
(insn 1365 1364 1366 183 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:365 _489 ] [365])) mymainCascade.cc:309 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:365 _489 ] [365])
        (nil)))
(call_insn:TI 1366 1365 3459 183 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:309 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              184 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 184, loop depth 0, count 0, freq 560, maybe hot
;;  prev block 183, next block 185, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       183 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 184 artificial_defs: { }
;; bb 184 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  kill	
(note 3459 1366 1367 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1367 3459 1369 184 (set (reg/f:DI 42 r13 [orig:214 _220 ] [214])
        (reg:DI 0 ax)) mymainCascade.cc:309 85 {*movdi_internal}
     (nil))
(insn 1369 1367 1370 184 (set (reg/f:DI 0 ax [orig:1194 _220->_vptr.basic_ostream ] [1194])
        (mem/f:DI (reg/f:DI 0 ax [orig:214 _220 ] [214]) [150 _220->_vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 42 r13 [orig:214 _220 ] [214]) [150 _220->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 1370 1369 1371 184 (set (reg:DI 0 ax [orig:1195 MEM[(long int *)_1246 + -24B] ] [1195])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1194 _220->_vptr.basic_ostream ] [1194])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1246 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 1371 1370 1372 184 (set (reg/f:DI 3 bx [orig:760 _1255 ] [760])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 42 r13 [orig:214 _220 ] [214])
                    (reg:DI 0 ax [orig:1195 MEM[(long int *)_1246 + -24B] ] [1195]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1249]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1195 MEM[(long int *)_1246 + -24B] ] [1195])
        (nil)))
(insn:TI 1372 1371 1373 184 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:760 _1255 ] [760])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 1373 1372 1378 184 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4762)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4762)
;;  succ:       403 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              185 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 185, loop depth 0, count 0, freq 560, maybe hot
;;  prev block 184, next block 186, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       184 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 185 artificial_defs: { }
;; bb 185 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1378 1373 1379 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1379 1378 1380 185 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:760 _1255 ] [760])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1255]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 1380 1379 1386 185 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4763)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6102 (nil)))
 -> 4763)
;;  succ:       172 [61.0%]  (CAN_FALLTHRU)
;;              186 [39.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 186, loop depth 0, count 0, freq 218, maybe hot
;;  prev block 185, next block 187, flags: (REACHABLE, RTL)
;;  pred:       185 [39.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 186 artificial_defs: { }
;; bb 186 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 5 [di]
;; live  kill	
(note 1386 1380 1387 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1387 1386 1388 186 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:760 _1255 ] [760])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 1388 1387 1389 186 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       187 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 187, loop depth 0, count 0, freq 218, maybe hot
;;  prev block 186, next block 188, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       186 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 187 artificial_defs: { }
;; bb 187 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 1389 1388 1392 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(note 1392 1389 1390 187 NOTE_INSN_DELETED)
(insn:TI 1390 1392 70 187 (set (reg/f:DI 0 ax [orig:1196 MEM[(const struct ctype *)_1255].D.47997._vptr.facet ] [1196])
        (mem/f:DI (reg/f:DI 3 bx [orig:760 _1255 ] [760]) [150 MEM[(const struct ctype *)_1255].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:760 _1255 ] [760]) [150 MEM[(const struct ctype *)_1255].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 70 1390 1391 187 (set (reg:SI 4 si [orig:804 _1339 ] [804])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 1391 70 1394 187 (set (reg/f:DI 0 ax [orig:764 _1264 ] [764])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1196 MEM[(const struct ctype *)_1255].D.47997._vptr.facet ] [1196])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1263 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 1394 1391 1395 187 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:764 _1264 ] [764])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 1395 1394 1396 187 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1403)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 1403)
;;  succ:       173 [80.0%]  (CAN_FALLTHRU)
;;              188 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 188, loop depth 0, count 0, freq 44, maybe hot
;;  prev block 187, next block 189, flags: (REACHABLE, RTL)
;;  pred:       187 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 188 artificial_defs: { }
;; bb 188 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1396 1395 1398 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1398 1396 1399 188 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:760 _1255 ] [760])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:760 _1255 ] [760])
        (nil)))
(call_insn:TI 1399 1398 3460 188 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:764 _1264 ] [764]) [0 *OBJ_TYPE_REF(_1264;(const struct ctype)_1255->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              189 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 189, loop depth 0, count 0, freq 44, maybe hot
;;  prev block 188, next block 190, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       188 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 189 artificial_defs: { }
;; bb 189 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 4 [si]
;; live  kill	
(note 3460 1399 1402 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1402 3460 4764 189 (set (reg:SI 4 si [orig:804 _1339 ] [804])
        (sign_extend:SI (reg:QI 0 ax [orig:766 _1270 ] [766]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:766 _1270 ] [766])
        (nil)))
(jump_insn 4764 1402 4765 189 (set (pc)
        (label_ref 1403)) 667 {jump}
     (nil)
 -> 1403)
;;  succ:       173 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 4765 4764 1424)
;; basic block 190, loop depth 0, count 0, freq 11, maybe hot
;;  prev block 189, next block 191, flags: (REACHABLE, RTL)
;;  pred:       175 [2.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              170 [2.0%]  (CAN_FALLTHRU)
;; bb 190 artificial_defs: { }
;; bb 190 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags] 44 [r15]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 44 [r15]
;; live  kill	 17 [flags]
(code_label 1424 4765 1425 190 392 "" [2 uses])
(note 1425 1424 3861 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(note 3861 1425 1426 190 NOTE_INSN_DELETED)
(insn:TI 1426 3861 72 190 (set (reg/f:DI 2 cx [orig:366 _490 ] [366])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19944 [0xffffffffffffb218])) [164 lMesons.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 72 1426 1451 190 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20048 [0xffffffffffffb1b0])) [789 %sfp+-20000 S4 A64])
        (const_int 0 [0])) mymainCascade.cc:317 86 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 1451 72 4207 190 (set (reg:DI 44 r15 [1639])
        (const_int -3689348814741910323 [0xcccccccccccccccd])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int -3689348814741910323 [0xcccccccccccccccd])
        (nil)))
(insn:TI 4207 1451 1427 190 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20144 [0xffffffffffffb150])) [789 %sfp+-20096 S8 A64])
        (reg/f:DI 2 cx [orig:366 _490 ] [366])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:366 _490 ] [366])
        (nil)))
(insn 1427 4207 4208 190 (set (reg/f:DI 2 cx [orig:368 _492 ] [368])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19952 [0xffffffffffffb210])) [164 lMesons.D.138156._M_impl._M_start+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn:TI 4208 1427 4209 190 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20152 [0xffffffffffffb148])) [789 %sfp+-20104 S8 A64])
        (reg/f:DI 2 cx [orig:368 _492 ] [368])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:368 _492 ] [368])
        (nil)))
(insn 4209 4208 71 190 (set (reg:SI 2 cx [orig:906 ivtmp.511 ] [906])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20104 [0xffffffffffffb178])) [789 %sfp+-20056 S4 A64])) mymainCascade.cc:297 86 {*movsi_internal}
     (nil))
(insn:TI 71 4209 4211 190 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20040 [0xffffffffffffb1b8])) [789 %sfp+-19992 S4 A64])
        (reg:SI 2 cx [orig:906 ivtmp.511 ] [906])) mymainCascade.cc:297 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:906 ivtmp.511 ] [906])
        (nil)))
(insn 4211 71 1856 190 (set (reg/f:DI 2 cx [orig:356 _480 ] [356])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_iterator.h:823 85 {*movdi_internal}
     (nil))
(insn:TI 1856 4211 4210 190 (parallel [
            (set (reg/f:DI 2 cx [orig:1640 _1356 ] [1640])
                (plus:DI (reg/f:DI 2 cx [orig:356 _480 ] [356])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_iterator.h:823 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4210 1856 2125 190 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20056 [0xffffffffffffb1a8])) [789 %sfp+-20008 S8 A64])
        (reg/f:DI 2 cx [orig:1640 _1356 ] [1640])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_iterator.h:823 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:1640 _1356 ] [1640])
        (nil)))
;;  succ:       191 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 191, loop depth 0, count 0, freq 211, maybe hot
;;  prev block 190, next block 192, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       190 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              235 [2.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              240 [2.0%]  (DFS_BACK,CAN_FALLTHRU,LOOP_EXIT)
;; bb 191 artificial_defs: { }
;; bb 191 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	
(code_label 2125 4210 1428 191 430 "" [2 uses])
(note 1428 2125 4408 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4408 1428 1429 191 (set (reg/f:DI 3 bx [orig:356 _480 ] [356])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])) mymainCascade.cc:318 85 {*movdi_internal}
     (nil))
(insn:TI 1429 4408 1430 191 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:356 _480 ] [356])
            (reg/f:DI 0 ax [orig:441 _567 ] [441]))) mymainCascade.cc:318 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:441 _567 ] [441])
        (nil)))
(jump_insn:TI 1430 1429 1431 191 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2241)
            (pc))) mymainCascade.cc:318 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 200 (nil)))
 -> 2241)
;;  succ:       192 [98.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              304 [2.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 192, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 191, next block 193, flags: (REACHABLE, RTL)
;;  pred:       191 [98.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 192 artificial_defs: { }
;; bb 192 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
(note 1431 1430 4213 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(note 4213 1431 4470 192 NOTE_INSN_DELETED)
(note 4470 4213 4471 192 NOTE_INSN_DELETED)
(note 4471 4470 4214 192 NOTE_INSN_DELETED)
(note 4214 4471 1434 192 NOTE_INSN_DELETED)
(insn:TI 1434 4214 1432 192 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20064 [0xffffffffffffb1a0])) [789 %sfp+-20016 S8 A64])) mymainCascade.cc:320 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -2576 [0xfffffffffffff5f0]))
        (nil)))
(insn 1432 1434 1435 192 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20040 [0xffffffffffffb1b8])) [789 %sfp+-19992 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20040 [0xffffffffffffb1b8])) [789 %sfp+-19992 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:319 218 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 1435 1432 3462 192 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("_ZN8TRandom34RndmEv") [flags 0x41]  <function_decl 0x7fb2b4b2f2a0 Rndm>) [0 Rndm S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:320 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN8TRandom34RndmEv") [flags 0x41]  <function_decl 0x7fb2b4b2f2a0 Rndm>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              193 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 44 [r15]

;; basic block 193, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 192, next block 194, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       192 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 193 artificial_defs: { }
;; bb 193 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 17 [flags] 22 [xmm1] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
(note 3462 1435 4215 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4215 3462 4031 193 (set (reg:DF 22 xmm1 [1797])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC102") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:321 126 {*movdf_internal}
     (nil))
(insn 4031 4215 4216 193 (set (reg:SI 43 r14 [1635])
        (const_int 2112 [0x840])) mymainCascade.cc:321 86 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 2112 [0x840])
        (nil)))
(insn:TI 4216 4031 1447 193 (set (reg:SI 0 ax [1798])
        (const_int 2212 [0x8a4])) mymainCascade.cc:321 86 {*movsi_internal}
     (nil))
(insn 1447 4216 1448 193 (set (reg:SI 42 r13 [orig:336 _457 ] [336])
        (mem:SI (plus:DI (reg/f:DI 3 bx [orig:356 _480 ] [356])
                (const_int 8 [0x8])) [22 MEM[(int *)_988 + 8B]+0 S4 A32])) 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:356 _480 ] [356])
        (nil)))
(insn 1448 1447 3859 193 (set (reg/f:DI 3 bx [orig:1207 lStash.D.138156._M_impl._M_finish ] [1207])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19976 [0xffffffffffffb1f8])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -19928 [0xffffffffffffb228])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])
        (nil)))
(insn:TI 3859 1448 1457 193 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 22 xmm1 [1797])
            (reg:DF 21 xmm0 [orig:218 _226 ] [218]))) mymainCascade.cc:321 52 {*cmpiudf_mixed}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1797])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:218 _226 ] [218])
            (nil))))
(insn:TI 1457 3859 1455 193 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1455 1457 1454 193 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC111") [flags 0x2]  <var_decl 0x7fb2b65b0ab0 *.LC111>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1454 1455 3863 193 (set (reg:DI 1 dx)
        (const_int 24 [0x18])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 3863 1454 1449 193 (set (reg:SI 43 r14 [orig:135 iftmp.69_16 ] [135])
        (if_then_else:SI (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (reg:SI 0 ax [1798])
            (reg:SI 43 r14 [1635]))) mymainCascade.cc:321 972 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_DEAD (reg:SI 0 ax [1798])
            (expr_list:REG_EQUAL (if_then_else:SI (gt (reg:CCFPU 17 flags)
                        (const_int 0 [0]))
                    (const_int 2212 [0x8a4])
                    (const_int 2112 [0x840]))
                (nil)))))
(insn 1449 3863 1450 193 (parallel [
            (set (reg:DI 3 bx [1206])
                (minus:DI (reg/f:DI 3 bx [orig:1207 lStash.D.138156._M_impl._M_finish ] [1207])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19984 [0xffffffffffffb1f0])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19928 [0xffffffffffffb228])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])
                (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19936 [0xffffffffffffb220])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128]))
            (nil))))
(insn:TI 1450 1449 1452 193 (parallel [
            (set (reg:DI 3 bx [1208])
                (ashiftrt:DI (reg:DI 3 bx [1206])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1452 1450 1458 193 (parallel [
            (set (reg:DI 3 bx [1209])
                (mult:DI (reg:DI 3 bx [1208])
                    (reg:DI 44 r15 [1639])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 3 bx [1208])
                (const_int -3689348814741910323 [0xcccccccccccccccd]))
            (nil))))
(call_insn:TI 1458 1452 1459 193 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       194 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 194, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 193, next block 195, flags: (REACHABLE, RTL)
;;  pred:       193 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 194 artificial_defs: { }
;; bb 194 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1459 1458 4218 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(note 4218 1459 4469 194 NOTE_INSN_DELETED)
(note 4469 4218 1460 194 NOTE_INSN_DELETED)
(insn:TI 1460 4469 1463 194 (set (reg:DI 4 si [orig:1212 lCounter ] [1212])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20048 [0xffffffffffffb1b0])) [789 %sfp+-20000 S4 A64]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 131 {*zero_extendsidi2}
     (nil))
(insn 1463 1460 1464 194 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(call_insn:TI 1464 1463 3465 194 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              195 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 195, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 194, next block 196, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       194 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 195 artificial_defs: { }
;; bb 195 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 41 [r12]
;; live  kill	
(note 3465 1464 1468 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1468 3465 1467 195 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC112") [flags 0x2]  <var_decl 0x7fb2b65b0d80 *.LC112>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1467 1468 1469 195 (set (reg:DI 1 dx)
        (const_int 3 [0x3])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1469 1467 1465 195 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:380 _505 ] [380])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:380 _505 ] [380])
        (nil)))
(insn:TI 1465 1469 1470 195 (set (reg/f:DI 41 r12 [orig:380 _505 ] [380])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 1470 1465 1471 195 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       196 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 196, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 195, next block 197, flags: (REACHABLE, RTL)
;;  pred:       195 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 196 artificial_defs: { }
;; bb 196 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1471 1470 1472 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1472 1471 1473 196 (set (reg:DI 4 si)
        (reg:DI 3 bx [1209])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [1209])
        (nil)))
(insn 1473 1472 1474 196 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:380 _505 ] [380])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:380 _505 ] [380])
        (nil)))
(call_insn:TI 1474 1473 3466 196 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              197 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 197, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 196, next block 198, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       196 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 197 artificial_defs: { }
;; bb 197 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3466 1474 1478 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1478 3466 1477 197 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC113") [flags 0x2]  <var_decl 0x7fb2b65b0ea0 *.LC113>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1477 1478 1479 197 (set (reg:DI 1 dx)
        (const_int 5 [0x5])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1479 1477 1475 197 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:381 _506 ] [381])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:381 _506 ] [381])
        (nil)))
(insn:TI 1475 1479 1480 197 (set (reg/f:DI 3 bx [orig:381 _506 ] [381])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (nil))
(call_insn:TI 1480 1475 1481 197 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       198 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 198, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 197, next block 199, flags: (REACHABLE, RTL)
;;  pred:       197 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 198 artificial_defs: { }
;; bb 198 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1481 1480 1482 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1482 1481 1483 198 (set (reg:SI 4 si)
        (reg:SI 42 r13 [orig:336 _457 ] [336])) mymainCascade.cc:322 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 r13 [orig:336 _457 ] [336])
        (nil)))
(insn 1483 1482 1484 198 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:381 _506 ] [381])) mymainCascade.cc:322 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:381 _506 ] [381])
        (nil)))
(call_insn:TI 1484 1483 3467 198 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:322 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              199 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 199, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 198, next block 200, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       198 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 199 artificial_defs: { }
;; bb 199 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3467 1484 1488 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1488 3467 1487 199 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC114") [flags 0x2]  <var_decl 0x7fb2b65b0f30 *.LC114>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1487 1488 1489 199 (set (reg:DI 1 dx)
        (const_int 7 [0x7])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1489 1487 1485 199 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:222 _231 ] [222])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:222 _231 ] [222])
        (nil)))
(insn:TI 1485 1489 1490 199 (set (reg/f:DI 3 bx [orig:222 _231 ] [222])
        (reg:DI 0 ax)) mymainCascade.cc:322 85 {*movdi_internal}
     (nil))
(call_insn:TI 1490 1485 1491 199 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       200 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 200, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 199, next block 201, flags: (REACHABLE, RTL)
;;  pred:       199 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 200 artificial_defs: { }
;; bb 200 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1491 1490 1492 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1492 1491 1493 200 (set (reg:SI 4 si)
        (reg:SI 43 r14 [orig:135 iftmp.69_16 ] [135])) mymainCascade.cc:322 86 {*movsi_internal}
     (nil))
(insn 1493 1492 1494 200 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:222 _231 ] [222])) mymainCascade.cc:322 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:222 _231 ] [222])
        (nil)))
(call_insn:TI 1494 1493 3468 200 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:322 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              201 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 201, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 200, next block 202, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       200 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 201 artificial_defs: { }
;; bb 201 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
(note 3468 1494 1495 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1495 3468 1497 201 (set (reg/f:DI 41 r12 [orig:223 _233 ] [223])
        (reg:DI 0 ax)) mymainCascade.cc:322 85 {*movdi_internal}
     (nil))
(insn 1497 1495 1498 201 (set (reg/f:DI 0 ax [orig:1214 _233->_vptr.basic_ostream ] [1214])
        (mem/f:DI (reg/f:DI 0 ax [orig:223 _233 ] [223]) [150 _233->_vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:223 _233 ] [223]) [150 _233->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 1498 1497 1499 201 (set (reg:DI 0 ax [orig:1215 MEM[(long int *)_1273 + -24B] ] [1215])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1214 _233->_vptr.basic_ostream ] [1214])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1273 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 1499 1498 1500 201 (set (reg/f:DI 3 bx [orig:773 _1282 ] [773])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 41 r12 [orig:223 _233 ] [223])
                    (reg:DI 0 ax [orig:1215 MEM[(long int *)_1273 + -24B] ] [1215]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1276]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1215 MEM[(long int *)_1273 + -24B] ] [1215])
        (nil)))
(insn:TI 1500 1499 1501 201 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:773 _1282 ] [773])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 1501 1500 1506 201 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4766)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4766)
;;  succ:       480 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              202 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 202, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 201, next block 203, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       201 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 202 artificial_defs: { }
;; bb 202 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1506 1501 1507 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1507 1506 1508 202 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:773 _1282 ] [773])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1282]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 1508 1507 1509 202 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1513)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 1513)
;;  succ:       203 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              255 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 203, loop depth 0, count 0, freq 126, maybe hot
;;  prev block 202, next block 204, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       202 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 203 artificial_defs: { }
;; bb 203 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 1509 1508 1510 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1510 1509 1531 203 (set (reg:SI 4 si [orig:849 prephitmp_1403 ] [849])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:773 _1282 ] [773])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1282]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:773 _1282 ] [773])
        (nil)))
;;  succ:       204 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 204, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 203, next block 205, flags: (REACHABLE, RTL)
;;  pred:       203 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              256 [80.0%]  (CAN_FALLTHRU)
;;              258 [100.0%]  (CAN_FALLTHRU)
;; bb 204 artificial_defs: { }
;; bb 204 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 1531 1510 1532 204 402 "" [2 uses])
(note 1532 1531 1534 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1534 1532 1535 204 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:223 _233 ] [223])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:223 _233 ] [223])
        (nil)))
(call_insn:TI 1535 1534 3470 204 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              205 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 205, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 204, next block 206, flags: (REACHABLE, RTL)
;;  pred:       204 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 205 artificial_defs: { }
;; bb 205 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3470 1535 1538 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1538 3470 1539 205 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:772 _1279 ] [772])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:772 _1279 ] [772])
        (nil)))
(call_insn:TI 1539 1538 1540 205 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       206 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 206, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 205, next block 207, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       205 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 206 artificial_defs: { }
;; bb 206 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 1540 1539 4219 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4219 1540 1541 206 (set (reg/f:DI 0 ax [orig:356 _480 ] [356])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])) 85 {*movdi_internal}
     (nil))
(insn:TI 1541 4219 1542 206 (set (reg:SI 5 di [orig:337 _458 ] [337])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:356 _480 ] [356])
                (const_int 8 [0x8])) [22 MEM[(int *)_988 + 8B]+0 S4 A32])) 86 {*movsi_internal}
     (nil))
(insn:TI 1542 1541 1543 206 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 5 di [orig:337 _458 ] [337])
            (const_int 2212 [0x8a4]))) mymainCascade.cc:323 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 1543 1542 1672 206 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4767)
            (pc))) mymainCascade.cc:323 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 4767)
;;  succ:       271 [28.0%]  (CAN_FALLTHRU)
;;              207 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 207, loop depth 0, count 0, freq 207, maybe hot
;;  prev block 206, next block 208, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       206 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              274 [100.0%]  (CAN_FALLTHRU)
;;              285 [100.0%]  (CAN_FALLTHRU)
;; bb 207 artificial_defs: { }
;; bb 207 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 1672 1543 1673 207 403 "" [2 uses])
(note 1673 1672 4233 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(note 4233 1673 4467 207 NOTE_INSN_DELETED)
(note 4467 4233 4468 207 NOTE_INSN_DELETED)
(note 4468 4467 4234 207 NOTE_INSN_DELETED)
(note 4234 4468 1682 207 NOTE_INSN_DELETED)
(note 1682 4234 4235 207 NOTE_INSN_DELETED)
(insn:TI 4235 1682 1674 207 (set (reg:SI 0 ax [1242])
        (reg:SI 5 di [orig:337 _458 ] [337])) mymainCascade.cc:337 86 {*movsi_internal}
     (nil))
(insn 1674 4235 1675 207 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20048 [0xffffffffffffb1b0])) [789 %sfp+-20000 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20048 [0xffffffffffffb1b0])) [789 %sfp+-20000 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:336 218 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1675 1674 4237 207 (parallel [
            (set (reg:SI 0 ax [1242])
                (ashiftrt:SI (reg:SI 0 ax [1242])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:337 556 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4237 1675 1676 207 (set (reg/v:SI 3 bx [orig:235 absId ] [235])
        (reg:SI 0 ax [1242])) mymainCascade.cc:337 86 {*movsi_internal}
     (nil))
(insn:TI 1676 4237 1677 207 (parallel [
            (set (reg/v:SI 3 bx [orig:235 absId ] [235])
                (xor:SI (reg/v:SI 3 bx [orig:235 absId ] [235])
                    (reg:SI 5 di [orig:337 _458 ] [337])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:337 409 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1677 1676 1678 207 (parallel [
            (set (reg/v:SI 3 bx [orig:235 absId ] [235])
                (minus:SI (reg/v:SI 3 bx [orig:235 absId ] [235])
                    (reg:SI 0 ax [1242])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:337 261 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [1242])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 1678 1677 1679 207 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 3 bx [orig:235 absId ] [235])
            (const_int 2212 [0x8a4]))) mymainCascade.cc:338 7 {*cmpsi_1}
     (nil))
(insn:TI 1679 1678 1680 207 (set (reg:QI 1 dx [1244])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) mymainCascade.cc:338 631 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 1680 1679 1681 207 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 3 bx [orig:235 absId ] [235])
            (const_int 2112 [0x840]))) mymainCascade.cc:338 7 {*cmpsi_1}
     (nil))
(insn:TI 1681 1680 1683 207 (set (reg:QI 0 ax [1246])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) mymainCascade.cc:338 631 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn:TI 1683 1681 1684 207 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (reg:QI 1 dx [1244])
                (reg:QI 0 ax [1246]))
            (const_int 0 [0]))) mymainCascade.cc:338 366 {*testqi_1_maybe_si}
     (expr_list:REG_DEAD (reg:QI 1 dx [1244])
        (expr_list:REG_DEAD (reg:QI 0 ax [1246])
            (nil))))
(jump_insn:TI 1684 1683 3475 207 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1831)
            (pc))) mymainCascade.cc:338 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4900 (nil)))
 -> 1831)
;;  succ:       209 [49.0%]  (CAN_FALLTHRU)
;;              208 [51.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 208, loop depth 0, count 0, freq 106, maybe hot
;;  prev block 207, next block 209, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       207 [51.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 208 artificial_defs: { }
;; bb 208 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 3475 1684 1685 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
(note 1685 3475 1686 208 NOTE_INSN_DELETED)
(note 1686 1685 1687 208 NOTE_INSN_DELETED)
(insn:TI 1687 1686 1688 208 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 3 bx [orig:235 absId ] [235])
            (const_int 211 [0xd3]))) mymainCascade.cc:338 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 1688 1687 1831 208 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4768)
            (pc))) mymainCascade.cc:338 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 392 (nil)))
 -> 4768)
;;  succ:       346 [3.9%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              209 [96.1%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 209, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 208, next block 210, flags: (REACHABLE, RTL)
;;  pred:       208 [96.1%]  (FALLTHRU,CAN_FALLTHRU)
;;              207 [49.0%]  (CAN_FALLTHRU)
;; bb 209 artificial_defs: { }
;; bb 209 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 7 [sp] 21 [xmm0] 37 [r8] 38 [r9]
;; live  kill	
(code_label 1831 1688 1832 209 409 "" [1 uses])
(note 1832 1831 4421 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4421 1832 1846 209 (set (reg/f:DI 0 ax [orig:356 _480 ] [356])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 85 {*movdi_internal}
     (nil))
(insn 1846 4421 1847 209 (set (reg:DI 38 r9)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20080 [0xffffffffffffb190])) [789 %sfp+-20032 S8 A64])) mymainCascade.cc:346 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -19936 [0xffffffffffffb220]))
        (nil)))
(insn 1847 1846 1849 209 (set (reg:SI 37 r8)
        (const_int 3 [0x3])) mymainCascade.cc:346 86 {*movsi_internal}
     (nil))
(insn:TI 1849 1847 1848 209 (set (reg:DI 1 dx)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20072 [0xffffffffffffb198])) [789 %sfp+-20024 S8 A64])) mymainCascade.cc:346 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -19808 [0xffffffffffffb2a0]))
        (nil)))
(insn 1848 1849 1850 209 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) mymainCascade.cc:346 86 {*movsi_internal}
     (nil))
(insn 1850 1848 1833 209 (set (reg:SI 4 si)
        (reg:SI 43 r14 [orig:135 iftmp.69_16 ] [135])) mymainCascade.cc:346 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 43 r14 [orig:135 iftmp.69_16 ] [135])
        (nil)))
(insn:TI 1833 1850 1834 209 (set (reg:DF 21 xmm0 [orig:1276 MEM[(const struct Vec4 &)_988 + 40].xx ] [1276])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:356 _480 ] [356])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_988 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 1834 1833 1835 209 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -19856 [0xffffffffffffb270])) [78 D.337754.xx+0 S8 A128])
        (reg:DF 21 xmm0 [orig:1276 MEM[(const struct Vec4 &)_988 + 40].xx ] [1276])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1276 MEM[(const struct Vec4 &)_988 + 40].xx ] [1276])
        (nil)))
(insn:TI 1835 1834 1836 209 (set (reg:DF 21 xmm0 [orig:1277 MEM[(const struct Vec4 &)_988 + 40].yy ] [1277])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:356 _480 ] [356])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_988 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 1836 1835 1837 209 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -19848 [0xffffffffffffb278])) [78 D.337754.yy+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1277 MEM[(const struct Vec4 &)_988 + 40].yy ] [1277])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1277 MEM[(const struct Vec4 &)_988 + 40].yy ] [1277])
        (nil)))
(insn:TI 1837 1836 1838 209 (set (reg:DF 21 xmm0 [orig:1278 MEM[(const struct Vec4 &)_988 + 40].zz ] [1278])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:356 _480 ] [356])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)_988 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 1838 1837 1839 209 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -19840 [0xffffffffffffb280])) [78 D.337754.zz+0 S8 A128])
        (reg:DF 21 xmm0 [orig:1278 MEM[(const struct Vec4 &)_988 + 40].zz ] [1278])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1278 MEM[(const struct Vec4 &)_988 + 40].zz ] [1278])
        (nil)))
(insn:TI 1839 1838 4248 209 (set (reg:DF 21 xmm0 [orig:1279 MEM[(const struct Vec4 &)_988 + 40].tt ] [1279])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:356 _480 ] [356])
                (const_int 64 [0x40])) [78 MEM[(const struct Vec4 &)_988 + 40].tt+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:356 _480 ] [356])
        (nil)))
(insn 4248 1839 1840 209 (set (reg/v:SI 0 ax [orig:132 iterationNum ] [132])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20040 [0xffffffffffffb1b8])) [789 %sfp+-19992 S4 A64])) mymainCascade.cc:346 86 {*movsi_internal}
     (nil))
(insn:TI 1840 4248 1843 209 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -19832 [0xffffffffffffb288])) [78 D.337754.tt+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1279 MEM[(const struct Vec4 &)_988 + 40].tt ] [1279])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1279 MEM[(const struct Vec4 &)_988 + 40].tt ] [1279])
        (nil)))
(insn:TI 1843 1840 1845 209 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [22  S4 A32])
        (reg/v:SI 0 ax [orig:132 iterationNum ] [132])) mymainCascade.cc:346 65 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:132 iterationNum ] [132])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 1845 1843 1852 209 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [221  S8 A64])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20088 [0xffffffffffffb188])) [789 %sfp+-20040 S8 A64])) mymainCascade.cc:346 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn:TI 1852 1845 3483 209 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z9runPythiaiiRKN7Pythia84Vec4EjjRSt6vectorINS_8ParticleESaIS4_EES7_j") [flags 0x1]  <function_decl 0x7fb2b413d1c0 runPythia>) [0 runPythia S1 A8])
            (const_int 16 [0x10]))) mymainCascade.cc:346 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:SI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:QI 0 ax)
                                (expr_list:REG_EH_REGION (const_int 8 [0x8])
                                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z9runPythiaiiRKN7Pythia84Vec4EjjRSt6vectorINS_8ParticleESaIS4_EES7_j") [flags 0x1]  <function_decl 0x7fb2b413d1c0 runPythia>)
                                        (nil))))))))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              210 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 210, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 209, next block 211, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       209 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 210 artificial_defs: { }
;; bb 210 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 4 [si] 7 [sp] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	
(note 3483 1852 4249 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(note 4249 3483 4466 210 NOTE_INSN_DELETED)
(note 4466 4249 1855 210 NOTE_INSN_DELETED)
(insn:TI 1855 4466 1857 210 (set (reg/f:DI 4 si [orig:812 _1355 ] [812])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19976 [0xffffffffffffb1f8])) [164 MEM[(struct Particle * const &)&lStash + 8]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_iterator.h:770 85 {*movdi_internal}
     (nil))
(insn 1857 1855 4707 210 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 4 si [orig:812 _1355 ] [812])
            (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20056 [0xffffffffffffb1a8])) [789 %sfp+-20008 S8 A64]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:144 8 {*cmpdi_1}
     (nil))
(insn:TI 4707 1857 4708 210 (set (reg:DI 0 ax)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:346 71 {*popdi1}
     (expr_list:REG_UNUSED (reg:DI 0 ax)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn:TI 4708 4707 1858 210 (set (reg:DI 1 dx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:346 71 {*popdi1}
     (expr_list:REG_UNUSED (reg:DI 1 dx)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn:TI 1858 4708 1875 210 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1877)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:144 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 1877)
;;  succ:       211 [89.9%]  (FALLTHRU,CAN_FALLTHRU)
;;              214 [10.1%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 211, loop depth 0, count 0, freq 183, maybe hot
;;  prev block 210, next block 212, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       210 [89.9%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 211 artificial_defs: { }
;; bb 211 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
(note 1875 1858 4254 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(note 4254 1875 4465 211 NOTE_INSN_DELETED)
(note 4465 4254 4252 211 NOTE_INSN_DELETED)
(insn:TI 4252 4465 1876 211 (set (reg:DI 2 cx [orig:816 _1359 ] [816])
        (reg/f:DI 4 si [orig:812 _1355 ] [812])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_algobase.h:341 85 {*movdi_internal}
     (nil))
(insn 1876 4252 4255 211 (parallel [
            (set (reg:DI 2 cx [orig:816 _1359 ] [816])
                (minus:DI (reg:DI 2 cx [orig:816 _1359 ] [816])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20056 [0xffffffffffffb1a8])) [789 %sfp+-20008 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_algobase.h:341 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4255 1876 1878 211 (set (reg:DI 0 ax [1289])
        (reg:DI 2 cx [orig:816 _1359 ] [816])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_algobase.h:341 85 {*movdi_internal}
     (nil))
(insn:TI 1878 4255 1880 211 (parallel [
            (set (reg:DI 0 ax [1289])
                (ashiftrt:DI (reg:DI 0 ax [1289])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_algobase.h:341 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1880 1878 1881 211 (parallel [
            (set (reg:DI 0 ax [orig:1290 __n ] [1290])
                (mult:DI (reg:DI 0 ax [1289])
                    (reg:DI 44 r15 [1639])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_algobase.h:341 317 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1881 1880 1882 211 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 0 ax [orig:1290 __n ] [1290])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_algobase.h:341 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1290 __n ] [1290])
        (nil)))
(jump_insn:TI 1882 1881 1883 211 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1877)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_algobase.h:341 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 1877)
;;  succ:       214 [9.0%]  (CAN_FALLTHRU)
;;              212 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 212, loop depth 0, count 0, freq 167, maybe hot
;;  prev block 211, next block 213, flags: (REACHABLE, RTL)
;;  pred:       211 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 212 artificial_defs: { }
;; bb 212 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx]
;; live  kill	 17 [flags]
(note 1883 1882 4422 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4422 1883 1884 212 (set (reg/f:DI 0 ax [orig:356 _480 ] [356])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])) 85 {*movdi_internal}
     (nil))
(insn:TI 1884 4422 1936 212 (parallel [
            (set (reg/f:DI 2 cx [orig:907 _1634 ] [907])
                (plus:DI (reg:DI 2 cx [orig:816 _1359 ] [816])
                    (reg/f:DI 0 ax [orig:356 _480 ] [356])))
            (clobber (reg:CC 17 flags))
        ]) 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       213 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 213, loop depth 0, count 0, freq 1855, maybe hot
;;  prev block 212, next block 214, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       212 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              213 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 213 artificial_defs: { }
;; bb 213 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  in  	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
;; live  kill	 17 [flags]
(code_label 1936 1884 1885 213 419 "" [1 uses])
(note 1885 1936 1886 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(note 1886 1885 1887 213 NOTE_INSN_DELETED)
(insn:TI 1887 1886 1903 213 (set (reg:SI 1 dx [orig:1292 MEM[base: __result_1042, offset: 168B] ] [1292])
        (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 168 [0xa8])) [22 MEM[base: __result_1042, offset: 168B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:71 86 {*movsi_internal}
     (nil))
(insn 1903 1887 4706 213 (set (reg:DF 21 xmm0 [orig:1300 MEM[base: __result_1042, offset: 200B] ] [1300])
        (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 200 [0xc8])) [78 MEM[base: __result_1042, offset: 200B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:120 126 {*movdf_internal}
     (nil))
(insn:TI 4706 1903 1904 213 (parallel [
            (set (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1904 4706 1888 213 (set (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -120 [0xffffffffffffff88])) [78 MEM[base: __result_1042, offset: 40B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1300 MEM[base: __result_1042, offset: 200B] ] [1300])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:120 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1300 MEM[base: __result_1042, offset: 200B] ] [1300])
        (nil)))
(insn:TI 1888 1904 1889 213 (set (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -152 [0xffffffffffffff68])) [22 MEM[base: __result_1042, offset: 8B]+0 S4 A32])
        (reg:SI 1 dx [orig:1292 MEM[base: __result_1042, offset: 168B] ] [1292])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:71 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:1292 MEM[base: __result_1042, offset: 168B] ] [1292])
        (nil)))
(insn 1889 1888 1905 213 (set (reg:SI 1 dx [orig:1293 MEM[base: __result_1042, offset: 172B] ] [1293])
        (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 12 [0xc])) [22 MEM[base: __result_1042, offset: 172B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:71 86 {*movsi_internal}
     (nil))
(insn:TI 1905 1889 1890 213 (set (reg:DF 21 xmm0 [orig:1301 MEM[base: __result_1042, offset: 208B] ] [1301])
        (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 48 [0x30])) [78 MEM[base: __result_1042, offset: 208B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:120 126 {*movdf_internal}
     (nil))
(insn:TI 1890 1905 1891 213 (set (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -148 [0xffffffffffffff6c])) [22 MEM[base: __result_1042, offset: 12B]+0 S4 A32])
        (reg:SI 1 dx [orig:1293 MEM[base: __result_1042, offset: 172B] ] [1293])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:71 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:1293 MEM[base: __result_1042, offset: 172B] ] [1293])
        (nil)))
(insn 1891 1890 1906 213 (set (reg:SI 1 dx [orig:1294 MEM[base: __result_1042, offset: 176B] ] [1294])
        (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 16 [0x10])) [22 MEM[base: __result_1042, offset: 176B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:72 86 {*movsi_internal}
     (nil))
(insn 1906 1891 1907 213 (set (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -112 [0xffffffffffffff90])) [78 MEM[base: __result_1042, offset: 48B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1301 MEM[base: __result_1042, offset: 208B] ] [1301])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:120 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1301 MEM[base: __result_1042, offset: 208B] ] [1301])
        (nil)))
(insn:TI 1907 1906 1892 213 (set (reg:DF 21 xmm0 [orig:1302 MEM[base: __result_1042, offset: 216B] ] [1302])
        (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 56 [0x38])) [78 MEM[base: __result_1042, offset: 216B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:121 126 {*movdf_internal}
     (nil))
(insn:TI 1892 1907 1893 213 (set (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -144 [0xffffffffffffff70])) [22 MEM[base: __result_1042, offset: 16B]+0 S4 A32])
        (reg:SI 1 dx [orig:1294 MEM[base: __result_1042, offset: 176B] ] [1294])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:72 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:1294 MEM[base: __result_1042, offset: 176B] ] [1294])
        (nil)))
(insn 1893 1892 1908 213 (set (reg:SI 1 dx [orig:1295 MEM[base: __result_1042, offset: 180B] ] [1295])
        (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 20 [0x14])) [22 MEM[base: __result_1042, offset: 180B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:72 86 {*movsi_internal}
     (nil))
(insn 1908 1893 1909 213 (set (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -104 [0xffffffffffffff98])) [78 MEM[base: __result_1042, offset: 56B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1302 MEM[base: __result_1042, offset: 216B] ] [1302])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:121 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1302 MEM[base: __result_1042, offset: 216B] ] [1302])
        (nil)))
(insn:TI 1909 1908 1894 213 (set (reg:DF 21 xmm0 [orig:1303 MEM[base: __result_1042, offset: 224B] ] [1303])
        (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 64 [0x40])) [78 MEM[base: __result_1042, offset: 224B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:121 126 {*movdf_internal}
     (nil))
(insn:TI 1894 1909 1895 213 (set (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -140 [0xffffffffffffff74])) [22 MEM[base: __result_1042, offset: 20B]+0 S4 A32])
        (reg:SI 1 dx [orig:1295 MEM[base: __result_1042, offset: 180B] ] [1295])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:72 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:1295 MEM[base: __result_1042, offset: 180B] ] [1295])
        (nil)))
(insn 1895 1894 1910 213 (set (reg:SI 1 dx [orig:1296 MEM[base: __result_1042, offset: 184B] ] [1296])
        (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 24 [0x18])) [22 MEM[base: __result_1042, offset: 184B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:73 86 {*movsi_internal}
     (nil))
(insn 1910 1895 1911 213 (set (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -96 [0xffffffffffffffa0])) [78 MEM[base: __result_1042, offset: 64B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1303 MEM[base: __result_1042, offset: 224B] ] [1303])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:121 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1303 MEM[base: __result_1042, offset: 224B] ] [1303])
        (nil)))
(insn:TI 1911 1910 1896 213 (set (reg:DF 21 xmm0 [orig:1304 MEM[base: __result_1042, offset: 232B] ] [1304])
        (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 72 [0x48])) [78 MEM[base: __result_1042, offset: 232B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:75 126 {*movdf_internal}
     (nil))
(insn:TI 1896 1911 1897 213 (set (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -136 [0xffffffffffffff78])) [22 MEM[base: __result_1042, offset: 24B]+0 S4 A32])
        (reg:SI 1 dx [orig:1296 MEM[base: __result_1042, offset: 184B] ] [1296])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:73 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:1296 MEM[base: __result_1042, offset: 184B] ] [1296])
        (nil)))
(insn 1897 1896 1912 213 (set (reg:SI 1 dx [orig:1297 MEM[base: __result_1042, offset: 188B] ] [1297])
        (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 28 [0x1c])) [22 MEM[base: __result_1042, offset: 188B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:73 86 {*movsi_internal}
     (nil))
(insn 1912 1897 1913 213 (set (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -88 [0xffffffffffffffa8])) [78 MEM[base: __result_1042, offset: 72B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1304 MEM[base: __result_1042, offset: 232B] ] [1304])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:75 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1304 MEM[base: __result_1042, offset: 232B] ] [1304])
        (nil)))
(insn:TI 1913 1912 1898 213 (set (reg:DF 21 xmm0 [orig:1305 MEM[base: __result_1042, offset: 240B] ] [1305])
        (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 80 [0x50])) [78 MEM[base: __result_1042, offset: 240B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:75 126 {*movdf_internal}
     (nil))
(insn:TI 1898 1913 1899 213 (set (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -132 [0xffffffffffffff7c])) [22 MEM[base: __result_1042, offset: 28B]+0 S4 A32])
        (reg:SI 1 dx [orig:1297 MEM[base: __result_1042, offset: 188B] ] [1297])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:73 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:1297 MEM[base: __result_1042, offset: 188B] ] [1297])
        (nil)))
(insn 1899 1898 1914 213 (set (reg:SI 1 dx [orig:1298 MEM[base: __result_1042, offset: 192B] ] [1298])
        (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 32 [0x20])) [22 MEM[base: __result_1042, offset: 192B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:74 86 {*movsi_internal}
     (nil))
(insn 1914 1899 1915 213 (set (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -80 [0xffffffffffffffb0])) [78 MEM[base: __result_1042, offset: 80B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1305 MEM[base: __result_1042, offset: 240B] ] [1305])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:75 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1305 MEM[base: __result_1042, offset: 240B] ] [1305])
        (nil)))
(insn:TI 1915 1914 1900 213 (set (reg:DF 21 xmm0 [orig:1306 MEM[base: __result_1042, offset: 248B] ] [1306])
        (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 88 [0x58])) [78 MEM[base: __result_1042, offset: 248B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:75 126 {*movdf_internal}
     (nil))
(insn:TI 1900 1915 1901 213 (set (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -128 [0xffffffffffffff80])) [22 MEM[base: __result_1042, offset: 32B]+0 S4 A32])
        (reg:SI 1 dx [orig:1298 MEM[base: __result_1042, offset: 192B] ] [1298])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:74 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:1298 MEM[base: __result_1042, offset: 192B] ] [1298])
        (nil)))
(insn 1901 1900 1916 213 (set (reg:SI 1 dx [orig:1299 MEM[base: __result_1042, offset: 196B] ] [1299])
        (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 36 [0x24])) [22 MEM[base: __result_1042, offset: 196B]+0 S4 A32])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:74 86 {*movsi_internal}
     (nil))
(insn 1916 1901 1902 213 (set (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -72 [0xffffffffffffffb8])) [78 MEM[base: __result_1042, offset: 88B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1306 MEM[base: __result_1042, offset: 248B] ] [1306])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:75 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1306 MEM[base: __result_1042, offset: 248B] ] [1306])
        (nil)))
(insn:TI 1902 1916 1917 213 (set (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -124 [0xffffffffffffff84])) [22 MEM[base: __result_1042, offset: 36B]+0 S4 A32])
        (reg:SI 1 dx [orig:1299 MEM[base: __result_1042, offset: 196B] ] [1299])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:74 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:1299 MEM[base: __result_1042, offset: 196B] ] [1299])
        (nil)))
(insn 1917 1902 1918 213 (set (reg:QI 1 dx [orig:1307 MEM[base: __result_1042, offset: 256B] ] [1307])
        (mem:QI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 96 [0x60])) [141 MEM[base: __result_1042, offset: 256B]+0 S1 A8])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:76 89 {*movqi_internal}
     (nil))
(insn:TI 1918 1917 1919 213 (set (mem:QI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -64 [0xffffffffffffffc0])) [141 MEM[base: __result_1042, offset: 96B]+0 S1 A8])
        (reg:QI 1 dx [orig:1307 MEM[base: __result_1042, offset: 256B] ] [1307])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:76 89 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 1 dx [orig:1307 MEM[base: __result_1042, offset: 256B] ] [1307])
        (nil)))
(insn 1919 1918 1929 213 (set (reg:DF 21 xmm0 [orig:1308 MEM[base: __result_1042, offset: 264B] ] [1308])
        (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 104 [0x68])) [78 MEM[base: __result_1042, offset: 264B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:120 126 {*movdf_internal}
     (nil))
(insn:TI 1929 1919 1920 213 (set (reg/f:DI 1 dx [orig:1313 MEM[base: __result_1042, offset: 304B] ] [1313])
        (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 144 [0x90])) [446 MEM[base: __result_1042, offset: 304B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:77 85 {*movdi_internal}
     (nil))
(insn:TI 1920 1929 1921 213 (set (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -56 [0xffffffffffffffc8])) [78 MEM[base: __result_1042, offset: 104B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1308 MEM[base: __result_1042, offset: 264B] ] [1308])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:120 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1308 MEM[base: __result_1042, offset: 264B] ] [1308])
        (nil)))
(insn:TI 1921 1920 1930 213 (set (reg:DF 21 xmm0 [orig:1309 MEM[base: __result_1042, offset: 272B] ] [1309])
        (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 112 [0x70])) [78 MEM[base: __result_1042, offset: 272B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:120 126 {*movdf_internal}
     (nil))
(insn:TI 1930 1921 1922 213 (set (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -16 [0xfffffffffffffff0])) [446 MEM[base: __result_1042, offset: 144B]+0 S8 A64])
        (reg/f:DI 1 dx [orig:1313 MEM[base: __result_1042, offset: 304B] ] [1313])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:77 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:1313 MEM[base: __result_1042, offset: 304B] ] [1313])
        (nil)))
(insn:TI 1922 1930 1931 213 (set (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -48 [0xffffffffffffffd0])) [78 MEM[base: __result_1042, offset: 112B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1309 MEM[base: __result_1042, offset: 272B] ] [1309])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:120 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1309 MEM[base: __result_1042, offset: 272B] ] [1309])
        (nil)))
(insn 1931 1922 1923 213 (set (reg/f:DI 1 dx [orig:1314 MEM[base: __result_1042, offset: 312B] ] [1314])
        (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 152 [0x98])) [447 MEM[base: __result_1042, offset: 312B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:77 85 {*movdi_internal}
     (nil))
(insn:TI 1923 1931 1924 213 (set (reg:DF 21 xmm0 [orig:1310 MEM[base: __result_1042, offset: 280B] ] [1310])
        (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 120 [0x78])) [78 MEM[base: __result_1042, offset: 280B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:121 126 {*movdf_internal}
     (nil))
(insn:TI 1924 1923 1932 213 (set (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -40 [0xffffffffffffffd8])) [78 MEM[base: __result_1042, offset: 120B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1310 MEM[base: __result_1042, offset: 280B] ] [1310])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:121 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1310 MEM[base: __result_1042, offset: 280B] ] [1310])
        (nil)))
(insn 1932 1924 1925 213 (set (mem/f:DI (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -8 [0xfffffffffffffff8])) [447 MEM[base: __result_1042, offset: 152B]+0 S8 A64])
        (reg/f:DI 1 dx [orig:1314 MEM[base: __result_1042, offset: 312B] ] [1314])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:77 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:1314 MEM[base: __result_1042, offset: 312B] ] [1314])
        (nil)))
(insn:TI 1925 1932 1926 213 (set (reg:DF 21 xmm0 [orig:1311 MEM[base: __result_1042, offset: 288B] ] [1311])
        (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 128 [0x80])) [78 MEM[base: __result_1042, offset: 288B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:121 126 {*movdf_internal}
     (nil))
(insn:TI 1926 1925 1927 213 (set (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -32 [0xffffffffffffffe0])) [78 MEM[base: __result_1042, offset: 128B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1311 MEM[base: __result_1042, offset: 288B] ] [1311])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:121 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1311 MEM[base: __result_1042, offset: 288B] ] [1311])
        (nil)))
(insn:TI 1927 1926 1928 213 (set (reg:DF 21 xmm0 [orig:1312 MEM[base: __result_1042, offset: 296B] ] [1312])
        (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int 136 [0x88])) [78 MEM[base: __result_1042, offset: 296B]+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:77 126 {*movdf_internal}
     (nil))
(insn:TI 1928 1927 1934 213 (set (mem:DF (plus:DI (reg/v/f:DI 0 ax [orig:658 __result ] [658])
                (const_int -24 [0xffffffffffffffe8])) [78 MEM[base: __result_1042, offset: 136B]+0 S8 A64])
        (reg:DF 21 xmm0 [orig:1312 MEM[base: __result_1042, offset: 296B] ] [1312])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Event.h:77 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:1312 MEM[base: __result_1042, offset: 296B] ] [1312])
        (nil)))
(insn 1934 1928 1935 213 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:658 __result ] [658])
            (reg/f:DI 2 cx [orig:907 _1634 ] [907]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_algobase.h:341 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 1935 1934 1877 213 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1936)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_algobase.h:341 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 1936)
;;  succ:       214 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              213 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 214, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 213, next block 215, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       210 [10.1%]  (CAN_FALLTHRU)
;;              211 [9.0%]  (CAN_FALLTHRU)
;;              213 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 214 artificial_defs: { }
;; bb 214 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 1877 1935 1859 214 418 "" [2 uses])
(note 1859 1877 1860 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1860 1859 1870 214 (parallel [
            (set (reg/f:DI 4 si [orig:818 _1368 ] [818])
                (plus:DI (reg/f:DI 4 si [orig:812 _1355 ] [812])
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:146 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1870 1860 1867 214 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1867 1870 1861 214 (set (reg:DI 1 dx)
        (const_int 47 [0x2f])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 1861 1867 1862 214 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19976 [0xffffffffffffb1f8])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 4 si [orig:818 _1368 ] [818])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/vector.tcc:146 85 {*movdi_internal}
     (nil))
(insn 1862 1861 1863 214 (parallel [
            (set (reg:DI 4 si [1283])
                (minus:DI (reg/f:DI 4 si [orig:818 _1368 ] [818])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19984 [0xffffffffffffb1f0])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1863 1862 4251 214 (parallel [
            (set (reg:DI 4 si [1283])
                (ashiftrt:DI (reg:DI 4 si [1283])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4251 1863 1868 214 (set (reg:DI 3 bx [1284])
        (reg:DI 4 si [1283])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [1283])
        (nil)))
(insn 1868 4251 1865 214 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC120") [flags 0x2]  <var_decl 0x7fb2b65b9360 *.LC120>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 1865 1868 1871 214 (parallel [
            (set (reg:DI 3 bx [1285])
                (mult:DI (reg:DI 3 bx [1284])
                    (reg:DI 44 r15 [1639])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 3 bx [1284])
                (const_int -3689348814741910323 [0xcccccccccccccccd]))
            (nil))))
(call_insn:TI 1871 1865 1941 214 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              215 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 215, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 214, next block 216, flags: (REACHABLE, RTL)
;;  pred:       214 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 215 artificial_defs: { }
;; bb 215 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1941 1871 1944 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1944 1941 1942 215 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1942 1944 1945 215 (set (reg:DI 4 si)
        (reg:DI 3 bx [1285])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [1285])
        (nil)))
(call_insn:TI 1945 1942 3485 215 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              216 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 216, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 215, next block 217, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       215 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 216 artificial_defs: { }
;; bb 216 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
(note 3485 1945 1946 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1946 3485 1948 216 (set (reg/f:DI 41 r12 [orig:424 _550 ] [424])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (nil))
(insn 1948 1946 1949 216 (set (reg/f:DI 0 ax [orig:1316 MEM[(struct basic_ostream *)_550]._vptr.basic_ostream ] [1316])
        (mem/f:DI (reg/f:DI 0 ax [orig:424 _550 ] [424]) [150 MEM[(struct basic_ostream *)_550]._vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:424 _550 ] [424]) [150 MEM[(struct basic_ostream *)_550]._vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 1949 1948 1950 216 (set (reg:DI 0 ax [orig:1317 MEM[(long int *)_1392 + -24B] ] [1317])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1316 MEM[(struct basic_ostream *)_550]._vptr.basic_ostream ] [1316])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1392 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 1950 1949 1951 216 (set (reg/f:DI 3 bx [orig:847 _1401 ] [847])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 41 r12 [orig:424 _550 ] [424])
                    (reg:DI 0 ax [orig:1317 MEM[(long int *)_1392 + -24B] ] [1317]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1395]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1317 MEM[(long int *)_1392 + -24B] ] [1317])
        (nil)))
(insn:TI 1951 1950 1952 216 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:847 _1401 ] [847])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 1952 1951 1957 216 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4769)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4769)
;;  succ:       481 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              217 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 217, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 216, next block 218, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       216 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 217 artificial_defs: { }
;; bb 217 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1957 1952 1958 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1958 1957 1959 217 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:847 _1401 ] [847])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1401]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 1959 1958 1960 217 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1964)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 1964)
;;  succ:       218 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              263 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 218, loop depth 0, count 0, freq 125, maybe hot
;;  prev block 217, next block 219, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       217 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 218 artificial_defs: { }
;; bb 218 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 1960 1959 1961 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1961 1960 1982 218 (set (reg:SI 4 si [orig:855 _1415 ] [855])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:847 _1401 ] [847])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1401]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:847 _1401 ] [847])
        (nil)))
;;  succ:       219 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 219, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 218, next block 220, flags: (REACHABLE, RTL)
;;  pred:       218 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              264 [80.0%]  (CAN_FALLTHRU)
;;              266 [100.0%]  (CAN_FALLTHRU)
;; bb 219 artificial_defs: { }
;; bb 219 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 1982 1961 1983 219 422 "" [2 uses])
(note 1983 1982 1985 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1985 1983 1986 219 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:424 _550 ] [424])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:424 _550 ] [424])
        (nil)))
(call_insn:TI 1986 1985 3487 219 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              220 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 220, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 219, next block 221, flags: (REACHABLE, RTL)
;;  pred:       219 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 220 artificial_defs: { }
;; bb 220 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3487 1986 1989 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1989 3487 1990 220 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:846 _1398 ] [846])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:846 _1398 ] [846])
        (nil)))
(call_insn:TI 1990 1989 1991 220 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       221 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 221, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 220, next block 222, flags: (REACHABLE, RTL)
;;  pred:       220 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 221 artificial_defs: { }
;; bb 221 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 1991 1990 1992 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1992 1991 1993 221 (set (reg/f:DI 3 bx [orig:1322 lMesons.D.138156._M_impl._M_finish ] [1322])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19944 [0xffffffffffffb218])) [164 lMesons.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -19896 [0xffffffffffffb248])) [164 lMesons.D.138156._M_impl._M_finish+0 S8 A64])
        (nil)))
(insn 1993 1992 1999 221 (parallel [
            (set (reg:DI 3 bx [1321])
                (minus:DI (reg/f:DI 3 bx [orig:1322 lMesons.D.138156._M_impl._M_finish ] [1322])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19952 [0xffffffffffffb210])) [164 lMesons.D.138156._M_impl._M_start+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19896 [0xffffffffffffb248])) [164 lMesons.D.138156._M_impl._M_finish+0 S8 A64])
                (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19904 [0xffffffffffffb240])) [164 lMesons.D.138156._M_impl._M_start+0 S8 A128]))
            (nil))))
(insn 1999 1993 2001 221 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC121") [flags 0x2]  <var_decl 0x7fb2b65b93f0 *.LC121>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 2001 1999 1998 221 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1998 2001 1994 221 (set (reg:DI 1 dx)
        (const_int 48 [0x30])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 1994 1998 1996 221 (parallel [
            (set (reg:DI 3 bx [1323])
                (ashiftrt:DI (reg:DI 3 bx [1321])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1996 1994 2002 221 (parallel [
            (set (reg:DI 3 bx [1324])
                (mult:DI (reg:DI 3 bx [1323])
                    (reg:DI 44 r15 [1639])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 3 bx [1323])
                (const_int -3689348814741910323 [0xcccccccccccccccd]))
            (nil))))
(call_insn:TI 2002 1996 2003 221 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       222 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 222, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 221, next block 223, flags: (REACHABLE, RTL)
;;  pred:       221 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 222 artificial_defs: { }
;; bb 222 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2003 2002 2006 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2006 2003 2004 222 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 2004 2006 2007 222 (set (reg:DI 4 si)
        (reg:DI 3 bx [1324])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [1324])
        (nil)))
(call_insn:TI 2007 2004 3488 222 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              223 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 223, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 222, next block 224, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       222 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 223 artificial_defs: { }
;; bb 223 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
(note 3488 2007 2008 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2008 3488 2010 223 (set (reg/f:DI 41 r12 [orig:432 _558 ] [432])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (nil))
(insn 2010 2008 2011 223 (set (reg/f:DI 0 ax [orig:1328 MEM[(struct basic_ostream *)_558]._vptr.basic_ostream ] [1328])
        (mem/f:DI (reg/f:DI 0 ax [orig:432 _558 ] [432]) [150 MEM[(struct basic_ostream *)_558]._vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:432 _558 ] [432]) [150 MEM[(struct basic_ostream *)_558]._vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 2011 2010 2012 223 (set (reg:DI 0 ax [orig:1329 MEM[(long int *)_1419 + -24B] ] [1329])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1328 MEM[(struct basic_ostream *)_558]._vptr.basic_ostream ] [1328])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1419 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 2012 2011 2013 223 (set (reg/f:DI 3 bx [orig:863 _1428 ] [863])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 41 r12 [orig:432 _558 ] [432])
                    (reg:DI 0 ax [orig:1329 MEM[(long int *)_1419 + -24B] ] [1329]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1422]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1329 MEM[(long int *)_1419 + -24B] ] [1329])
        (nil)))
(insn:TI 2013 2012 2014 223 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:863 _1428 ] [863])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 2014 2013 2019 223 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4770)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4770)
;;  succ:       482 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              224 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 224, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 223, next block 225, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       223 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 224 artificial_defs: { }
;; bb 224 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 2019 2014 2020 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2020 2019 2021 224 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:863 _1428 ] [863])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1428]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 2021 2020 2022 224 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2026)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 2026)
;;  succ:       225 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              259 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 225, loop depth 0, count 0, freq 124, maybe hot
;;  prev block 224, next block 226, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       224 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 225 artificial_defs: { }
;; bb 225 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 2022 2021 2023 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2023 2022 2044 225 (set (reg:SI 4 si [orig:851 prephitmp_1406 ] [851])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:863 _1428 ] [863])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1428]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:863 _1428 ] [863])
        (nil)))
;;  succ:       226 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 226, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 225, next block 227, flags: (REACHABLE, RTL)
;;  pred:       225 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              260 [80.0%]  (CAN_FALLTHRU)
;;              262 [100.0%]  (CAN_FALLTHRU)
;; bb 226 artificial_defs: { }
;; bb 226 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 2044 2023 2045 226 425 "" [2 uses])
(note 2045 2044 2047 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2047 2045 2048 226 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:432 _558 ] [432])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:432 _558 ] [432])
        (nil)))
(call_insn:TI 2048 2047 3490 226 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              227 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 227, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 226, next block 228, flags: (REACHABLE, RTL)
;;  pred:       226 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 227 artificial_defs: { }
;; bb 227 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3490 2048 2051 227 [bb 227] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2051 3490 2052 227 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:862 _1425 ] [862])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:862 _1425 ] [862])
        (nil)))
(call_insn:TI 2052 2051 2053 227 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       228 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 228, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 227, next block 229, flags: (REACHABLE, RTL)
;;  pred:       227 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 228 artificial_defs: { }
;; bb 228 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 2053 2052 2054 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2054 2053 2055 228 (set (reg/f:DI 3 bx [orig:1334 lStash.D.138156._M_impl._M_finish ] [1334])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19976 [0xffffffffffffb1f8])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -19928 [0xffffffffffffb228])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])
        (nil)))
(insn 2055 2054 2061 228 (parallel [
            (set (reg:DI 3 bx [1333])
                (minus:DI (reg/f:DI 3 bx [orig:1334 lStash.D.138156._M_impl._M_finish ] [1334])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19984 [0xffffffffffffb1f0])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19928 [0xffffffffffffb228])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])
                (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19936 [0xffffffffffffb220])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128]))
            (nil))))
(insn 2061 2055 2063 228 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC107") [flags 0x2]  <var_decl 0x7fb2b65b0750 *.LC107>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 2063 2061 2060 228 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 2060 2063 2056 228 (set (reg:DI 1 dx)
        (const_int 20 [0x14])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 2056 2060 2058 228 (parallel [
            (set (reg:DI 3 bx [1335])
                (ashiftrt:DI (reg:DI 3 bx [1333])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 2058 2056 2064 228 (parallel [
            (set (reg:DI 3 bx [1336])
                (mult:DI (reg:DI 3 bx [1335])
                    (reg:DI 44 r15 [1639])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 3 bx [1335])
                (const_int -3689348814741910323 [0xcccccccccccccccd]))
            (nil))))
(call_insn:TI 2064 2058 2065 228 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       229 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 229, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 228, next block 230, flags: (REACHABLE, RTL)
;;  pred:       228 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 229 artificial_defs: { }
;; bb 229 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2065 2064 2068 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2068 2065 2066 229 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 2066 2068 2069 229 (set (reg:DI 4 si)
        (reg:DI 3 bx [1336])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [1336])
        (nil)))
(call_insn:TI 2069 2066 3491 229 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              230 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 230, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 229, next block 231, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       229 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 230 artificial_defs: { }
;; bb 230 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	
(note 3491 2069 2070 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2070 3491 2072 230 (set (reg/f:DI 41 r12 [orig:440 _566 ] [440])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:171 85 {*movdi_internal}
     (nil))
(insn 2072 2070 2073 230 (set (reg/f:DI 0 ax [orig:1340 MEM[(struct basic_ostream *)_566]._vptr.basic_ostream ] [1340])
        (mem/f:DI (reg/f:DI 0 ax [orig:440 _566 ] [440]) [150 MEM[(struct basic_ostream *)_566]._vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:440 _566 ] [440]) [150 MEM[(struct basic_ostream *)_566]._vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 2073 2072 2074 230 (set (reg:DI 0 ax [orig:1341 MEM[(long int *)_1446 + -24B] ] [1341])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1340 MEM[(struct basic_ostream *)_566]._vptr.basic_ostream ] [1340])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1446 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 2074 2073 2075 230 (set (reg/f:DI 3 bx [orig:877 _1455 ] [877])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 41 r12 [orig:440 _566 ] [440])
                    (reg:DI 0 ax [orig:1341 MEM[(long int *)_1446 + -24B] ] [1341]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1449]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1341 MEM[(long int *)_1446 + -24B] ] [1341])
        (nil)))
(insn:TI 2075 2074 2076 230 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:877 _1455 ] [877])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 2076 2075 2081 230 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4771)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4771)
;;  succ:       406 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              231 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 231, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 230, next block 232, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       230 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 231 artificial_defs: { }
;; bb 231 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 2081 2076 2082 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2082 2081 2083 231 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:877 _1455 ] [877])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1455]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 2083 2082 2084 231 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2088)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 2088)
;;  succ:       232 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              267 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 232, loop depth 0, count 0, freq 124, maybe hot
;;  prev block 231, next block 233, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       231 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 232 artificial_defs: { }
;; bb 232 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 2084 2083 2085 232 [bb 232] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2085 2084 2106 232 (set (reg:SI 4 si [orig:916 _1706 ] [916])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:877 _1455 ] [877])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1455]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:877 _1455 ] [877])
        (nil)))
;;  succ:       233 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 233, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 232, next block 234, flags: (REACHABLE, RTL)
;;  pred:       232 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              268 [80.0%]  (CAN_FALLTHRU)
;;              270 [100.0%]  (CAN_FALLTHRU)
;; bb 233 artificial_defs: { }
;; bb 233 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 2106 2085 2107 233 428 "" [2 uses])
(note 2107 2106 2109 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2109 2107 2110 233 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:440 _566 ] [440])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:440 _566 ] [440])
        (nil)))
(call_insn:TI 2110 2109 3493 233 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              234 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 234, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 233, next block 235, flags: (REACHABLE, RTL)
;;  pred:       233 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 234 artificial_defs: { }
;; bb 234 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3493 2110 2113 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2113 3493 2114 234 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:876 _1452 ] [876])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:876 _1452 ] [876])
        (nil)))
(call_insn:TI 2114 2113 2115 234 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       235 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 235, loop depth 0, count 0, freq 204, maybe hot
;;  prev block 234, next block 236, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       234 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 235 artificial_defs: { }
;; bb 235 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
(note 2115 2114 2116 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2116 2115 2117 235 (set (reg/f:DI 0 ax [orig:441 _567 ] [441])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19976 [0xffffffffffffb1f8])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 2117 2116 4258 235 (set (reg/f:DI 2 cx [orig:140 _22 ] [140])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19984 [0xffffffffffffb1f0])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn:TI 4258 2117 2118 235 (set (reg:DI 1 dx [1345])
        (reg/f:DI 0 ax [orig:441 _567 ] [441])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn:TI 2118 4258 2119 235 (parallel [
            (set (reg:DI 1 dx [1345])
                (minus:DI (reg:DI 1 dx [1345])
                    (reg/f:DI 2 cx [orig:140 _22 ] [140])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 2119 2118 2121 235 (parallel [
            (set (reg:DI 1 dx [1347])
                (ashiftrt:DI (reg:DI 1 dx [1345])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 2121 2119 2122 235 (parallel [
            (set (reg:DI 1 dx [1348])
                (mult:DI (reg:DI 1 dx [1347])
                    (reg:DI 44 r15 [1639])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [1347])
                (const_int -3689348814741910323 [0xcccccccccccccccd]))
            (nil))))
(insn:TI 2122 2121 2123 235 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 1 dx [1348])
            (const_int 0 [0]))) mymainCascade.cc:356 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [1348])
        (nil)))
(jump_insn:TI 2123 2122 2129 235 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2125)
            (pc))) mymainCascade.cc:356 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 200 (nil)))
 -> 2125)
;;  succ:       236 [98.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              191 [2.0%]  (DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 236, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 235, next block 237, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       235 [98.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 236 artificial_defs: { }
;; bb 236 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 3 [bx] 41 [r12]
;; live  kill	 17 [flags]
(note 2129 2123 4704 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4704 2129 4705 236 (parallel [
            (set (reg:DI 3 bx [orig:250 _273 ] [250])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:356 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 4705 4704 4772 236 (parallel [
            (set (reg:DI 41 r12 [orig:253 iP ] [253])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:356 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 4772 4705 4773 236 (set (pc)
        (label_ref 2230)) 667 {jump}
     (nil)
 -> 2230)
;;  succ:       241 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

(barrier 4773 4772 4775)
;; basic block 237, loop depth 0, count 0, freq 5978, maybe hot
;;  prev block 236, next block 238, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       250 [61.0%]  (CAN_FALLTHRU)
;; bb 237 artificial_defs: { }
;; bb 237 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(code_label 4775 4773 2194 237 602 "" [1 uses])
(note 2194 4775 2195 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2195 2194 2216 237 (set (reg:SI 4 si [orig:865 _1430 ] [865])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:889 _1482 ] [889])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1482]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:889 _1482 ] [889])
        (nil)))
;;  succ:       238 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 238, loop depth 0, count 0, freq 9796, maybe hot
;;  prev block 237, next block 239, flags: (REACHABLE, RTL)
;;  pred:       237 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              252 [80.0%]  (CAN_FALLTHRU)
;;              254 [100.0%]  (CAN_FALLTHRU)
;; bb 238 artificial_defs: { }
;; bb 238 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 2216 2195 2217 238 433 "" [2 uses])
(note 2217 2216 2219 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2219 2217 2220 238 (set (reg:DI 5 di)
        (reg/f:DI 42 r13 [orig:252 _278 ] [252])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [orig:252 _278 ] [252])
        (nil)))
(call_insn:TI 2220 2219 3499 238 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              239 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 239, loop depth 0, count 0, freq 9796, maybe hot
;;  prev block 238, next block 240, flags: (REACHABLE, RTL)
;;  pred:       238 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 239 artificial_defs: { }
;; bb 239 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3499 2220 2223 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2223 3499 2224 239 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:888 _1479 ] [888])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:888 _1479 ] [888])
        (nil)))
(call_insn:TI 2224 2223 2225 239 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       240 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 240, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 239, next block 241, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       239 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 240 artificial_defs: { }
;; bb 240 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(note 2225 2224 2228 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2228 2225 2229 240 (set (reg/f:DI 0 ax [orig:441 _567 ] [441])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19976 [0xffffffffffffb1f8])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 2229 2228 4865 240 (set (reg/f:DI 2 cx [orig:140 _22 ] [140])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19984 [0xffffffffffffb1f0])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 4865 2229 4545 240 (set (reg:DI 3 bx)
        (zero_extend:DI (plus:SI (reg/v:SI 41 r12 [orig:253 iP ] [253])
                (const_int 1 [0x1])))) mymainCascade.cc:356 215 {*leadi}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:253 iP ] [253])
        (nil)))
(insn:TI 4545 4865 4261 240 (set (reg:DI 41 r12)
        (reg:DI 3 bx)) mymainCascade.cc:356 85 {*movdi_internal}
     (nil))
(insn:TI 4261 4545 2231 240 (set (reg:DI 1 dx [1361])
        (reg/f:DI 0 ax [orig:441 _567 ] [441])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn:TI 2231 4261 2232 240 (parallel [
            (set (reg:DI 1 dx [1361])
                (minus:DI (reg:DI 1 dx [1361])
                    (reg/f:DI 2 cx [orig:140 _22 ] [140])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 2232 2231 2234 240 (parallel [
            (set (reg:DI 1 dx [1363])
                (ashiftrt:DI (reg:DI 1 dx [1361])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 2234 2232 2235 240 (parallel [
            (set (reg:DI 1 dx [1364])
                (mult:DI (reg:DI 1 dx [1363])
                    (reg:DI 44 r15 [1639])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [1363])
                (const_int -3689348814741910323 [0xcccccccccccccccd]))
            (nil))))
(insn:TI 2235 2234 2236 240 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 3 bx [orig:250 _273 ] [250])
            (reg:DI 1 dx [1364]))) mymainCascade.cc:356 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [1364])
        (nil)))
(jump_insn:TI 2236 2235 2230 240 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2125)
            (pc))) mymainCascade.cc:356 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 200 (nil)))
 -> 2125)
;;  succ:       241 [98.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              191 [2.0%]  (DFS_BACK,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 241, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 240, next block 242, flags: (REACHABLE, RTL)
;;  pred:       240 [98.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              236 [100.0%]  (CAN_FALLTHRU)
;; bb 241 artificial_defs: { }
;; bb 241 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 24 [xmm3] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
(code_label 2230 2236 2130 241 434 "" [1 uses])
(note 2130 2230 2132 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
(note 2132 2130 4476 241 NOTE_INSN_DELETED)
(note 4476 2132 4423 241 NOTE_INSN_DELETED)
(note 4423 4476 2133 241 NOTE_INSN_DELETED)
(insn:TI 2133 4423 2143 241 (set (reg:DI 0 ax [1352])
        (plus:DI (ashift:DI (reg:DI 3 bx [orig:250 _273 ] [250])
                (const_int 2 [0x2]))
            (reg:DI 3 bx [orig:250 _273 ] [250]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 215 {*leadi}
     (nil))
(insn 2143 2133 2141 241 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 2141 2143 2140 241 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC108") [flags 0x2]  <var_decl 0x7fb2b65b07e0 *.LC108>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 2140 2141 2134 241 (set (reg:DI 1 dx)
        (const_int 22 [0x16])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 2134 2140 2136 241 (parallel [
            (set (reg:DI 0 ax [1353])
                (ashift:DI (reg:DI 0 ax [1352])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 530 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 2136 2134 2138 241 (parallel [
            (set (reg/f:DI 0 ax [orig:449 _576 ] [449])
                (plus:DI (reg:DI 0 ax [1353])
                    (reg/f:DI 2 cx [orig:140 _22 ] [140])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 219 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:140 _22 ] [140])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 2138 2136 2137 241 (set (reg:DF 24 xmm3 [orig:447 _574 ] [447])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:449 _576 ] [449])
                (const_int 56 [0x38])) [78 MEM[(double *)_576 + 56B]+0 S8 A64])) 126 {*movdf_internal}
     (nil))
(insn 2137 2138 2139 241 (set (reg:SI 42 r13 [orig:344 _466 ] [344])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:449 _576 ] [449])
                (const_int 12 [0xc])) [22 MEM[(int *)_576 + 12B]+0 S4 A32])) 86 {*movsi_internal}
     (nil))
(insn:TI 2139 2137 4260 241 (set (reg:SI 43 r14 [orig:339 _461 ] [339])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:449 _576 ] [449])
                (const_int 8 [0x8])) [22 MEM[(int *)_576 + 8B]+0 S4 A32])) 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:449 _576 ] [449])
        (nil)))
(insn:TI 4260 2139 2144 241 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])
        (reg:DF 24 xmm3 [orig:447 _574 ] [447])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 24 xmm3 [orig:447 _574 ] [447])
        (nil)))
(call_insn:TI 2144 4260 2145 241 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       242 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 242, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 241, next block 243, flags: (REACHABLE, RTL)
;;  pred:       241 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 242 artificial_defs: { }
;; bb 242 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2145 2144 2148 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2148 2145 2146 242 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 2146 2148 2149 242 (set (reg:DI 4 si)
        (reg:DI 3 bx [orig:250 _273 ] [250])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [orig:250 _273 ] [250])
        (nil)))
(call_insn:TI 2149 2146 3494 242 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              243 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 243, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 242, next block 244, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       242 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 243 artificial_defs: { }
;; bb 243 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3494 2149 2153 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2153 3494 2152 243 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC109") [flags 0x2]  <var_decl 0x7fb2b65b0990 *.LC109>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2152 2153 2154 243 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2154 2152 2150 243 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:450 _577 ] [450])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:450 _577 ] [450])
        (nil)))
(insn:TI 2150 2154 2155 243 (set (reg/f:DI 3 bx [orig:450 _577 ] [450])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 2155 2150 2156 243 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       244 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 244, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 243, next block 245, flags: (REACHABLE, RTL)
;;  pred:       243 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 244 artificial_defs: { }
;; bb 244 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2156 2155 2157 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2157 2156 2158 244 (set (reg:SI 4 si)
        (reg:SI 43 r14 [orig:339 _461 ] [339])) mymainCascade.cc:357 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 43 r14 [orig:339 _461 ] [339])
        (nil)))
(insn 2158 2157 2159 244 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:450 _577 ] [450])) mymainCascade.cc:357 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:450 _577 ] [450])
        (nil)))
(call_insn:TI 2159 2158 3495 244 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:357 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              245 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 245, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 244, next block 246, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       244 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 245 artificial_defs: { }
;; bb 245 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3495 2159 2163 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2163 3495 2162 245 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fb2b6b5c2d0 *.LC28>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2162 2163 2164 245 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2164 2162 2160 245 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:251 _276 ] [251])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:251 _276 ] [251])
        (nil)))
(insn:TI 2160 2164 2165 245 (set (reg/f:DI 3 bx [orig:251 _276 ] [251])
        (reg:DI 0 ax)) mymainCascade.cc:357 85 {*movdi_internal}
     (nil))
(call_insn:TI 2165 2160 2166 245 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       246 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 246, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 245, next block 247, flags: (REACHABLE, RTL)
;;  pred:       245 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 246 artificial_defs: { }
;; bb 246 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
(note 2166 2165 2167 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2167 2166 2168 246 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 126 {*movdf_internal}
     (nil))
(insn 2168 2167 2169 246 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:251 _276 ] [251])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:251 _276 ] [251])
        (nil)))
(call_insn:TI 2169 2168 3496 246 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              247 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 247, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 246, next block 248, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       246 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 247 artificial_defs: { }
;; bb 247 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3496 2169 2173 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2173 3496 2172 247 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC110") [flags 0x2]  <var_decl 0x7fb2b65b0a20 *.LC110>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2172 2173 2174 247 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2174 2172 2170 247 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:451 _578 ] [451])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:451 _578 ] [451])
        (nil)))
(insn:TI 2170 2174 2175 247 (set (reg/f:DI 3 bx [orig:451 _578 ] [451])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (nil))
(call_insn:TI 2175 2170 2176 247 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       248 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 248, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 247, next block 249, flags: (REACHABLE, RTL)
;;  pred:       247 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 248 artificial_defs: { }
;; bb 248 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2176 2175 2177 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2177 2176 2178 248 (set (reg:SI 4 si)
        (reg:SI 42 r13 [orig:344 _466 ] [344])) mymainCascade.cc:357 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 r13 [orig:344 _466 ] [344])
        (nil)))
(insn 2178 2177 2179 248 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:451 _578 ] [451])) mymainCascade.cc:357 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:451 _578 ] [451])
        (nil)))
(call_insn:TI 2179 2178 3497 248 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:357 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              249 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 249, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 248, next block 250, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       248 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 249 artificial_defs: { }
;; bb 249 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  kill	
(note 3497 2179 2180 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2180 3497 2182 249 (set (reg/f:DI 42 r13 [orig:252 _278 ] [252])
        (reg:DI 0 ax)) mymainCascade.cc:357 85 {*movdi_internal}
     (nil))
(insn 2182 2180 2183 249 (set (reg/f:DI 0 ax [orig:1356 _278->_vptr.basic_ostream ] [1356])
        (mem/f:DI (reg/f:DI 0 ax [orig:252 _278 ] [252]) [150 _278->_vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 42 r13 [orig:252 _278 ] [252]) [150 _278->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 2183 2182 2184 249 (set (reg:DI 0 ax [orig:1357 MEM[(long int *)_1473 + -24B] ] [1357])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1356 _278->_vptr.basic_ostream ] [1356])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1473 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 2184 2183 2185 249 (set (reg/f:DI 3 bx [orig:889 _1482 ] [889])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 42 r13 [orig:252 _278 ] [252])
                    (reg:DI 0 ax [orig:1357 MEM[(long int *)_1473 + -24B] ] [1357]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1476]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1357 MEM[(long int *)_1473 + -24B] ] [1357])
        (nil)))
(insn:TI 2185 2184 2186 249 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:889 _1482 ] [889])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 2186 2185 2191 249 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4774)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4774)
;;  succ:       303 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              250 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 250, loop depth 0, count 0, freq 9796, maybe hot
;;  prev block 249, next block 251, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       249 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 250 artificial_defs: { }
;; bb 250 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 2191 2186 2192 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2192 2191 2193 250 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:889 _1482 ] [889])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1482]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 2193 2192 2199 250 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4775)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6102 (nil)))
 -> 4775)
;;  succ:       237 [61.0%]  (CAN_FALLTHRU)
;;              251 [39.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 251, loop depth 0, count 0, freq 3819, maybe hot
;;  prev block 250, next block 252, flags: (REACHABLE, RTL)
;;  pred:       250 [39.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 251 artificial_defs: { }
;; bb 251 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(note 2199 2193 2200 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2200 2199 2201 251 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:889 _1482 ] [889])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 2201 2200 2202 251 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       252 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 252, loop depth 0, count 0, freq 3819, maybe hot
;;  prev block 251, next block 253, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       251 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 252 artificial_defs: { }
;; bb 252 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 2202 2201 2205 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
(note 2205 2202 2203 252 NOTE_INSN_DELETED)
(insn:TI 2203 2205 87 252 (set (reg/f:DI 0 ax [orig:1358 MEM[(const struct ctype *)_1482].D.47997._vptr.facet ] [1358])
        (mem/f:DI (reg/f:DI 3 bx [orig:889 _1482 ] [889]) [150 MEM[(const struct ctype *)_1482].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:889 _1482 ] [889]) [150 MEM[(const struct ctype *)_1482].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 87 2203 2204 252 (set (reg:SI 4 si [orig:865 _1430 ] [865])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 2204 87 2207 252 (set (reg/f:DI 0 ax [orig:893 _1491 ] [893])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1358 MEM[(const struct ctype *)_1482].D.47997._vptr.facet ] [1358])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1490 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 2207 2204 2208 252 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:893 _1491 ] [893])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 2208 2207 2209 252 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2216)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 2216)
;;  succ:       238 [80.0%]  (CAN_FALLTHRU)
;;              253 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 253, loop depth 0, count 0, freq 764, maybe hot
;;  prev block 252, next block 254, flags: (REACHABLE, RTL)
;;  pred:       252 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 253 artificial_defs: { }
;; bb 253 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 2209 2208 2211 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2211 2209 2212 253 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:889 _1482 ] [889])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:889 _1482 ] [889])
        (nil)))
(call_insn:TI 2212 2211 3498 253 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:893 _1491 ] [893]) [0 *OBJ_TYPE_REF(_1491;(const struct ctype)_1482->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              254 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 254, loop depth 0, count 0, freq 764, maybe hot
;;  prev block 253, next block 255, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       253 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 254 artificial_defs: { }
;; bb 254 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 3498 2212 2215 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2215 3498 4776 254 (set (reg:SI 4 si [orig:865 _1430 ] [865])
        (sign_extend:SI (reg:QI 0 ax [orig:895 _1497 ] [895]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:895 _1497 ] [895])
        (nil)))
(jump_insn 4776 2215 4777 254 (set (pc)
        (label_ref 2216)) 667 {jump}
     (nil)
 -> 2216)
;;  succ:       238 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

(barrier 4777 4776 1513)
;; basic block 255, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 254, next block 256, flags: (REACHABLE, RTL)
;;  pred:       202 [39.0%]  (CAN_FALLTHRU)
;; bb 255 artificial_defs: { }
;; bb 255 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1513 4777 1514 255 401 "" [1 uses])
(note 1514 1513 1515 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1515 1514 1516 255 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:773 _1282 ] [773])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 1516 1515 1517 255 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       256 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 256, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 255, next block 257, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       255 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 256 artificial_defs: { }
;; bb 256 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 1517 1516 1520 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
(note 1520 1517 1518 256 NOTE_INSN_DELETED)
(insn:TI 1518 1520 75 256 (set (reg/f:DI 0 ax [orig:1216 MEM[(const struct ctype *)_1282].D.47997._vptr.facet ] [1216])
        (mem/f:DI (reg/f:DI 3 bx [orig:773 _1282 ] [773]) [150 MEM[(const struct ctype *)_1282].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:773 _1282 ] [773]) [150 MEM[(const struct ctype *)_1282].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 75 1518 1519 256 (set (reg:SI 4 si [orig:849 prephitmp_1403 ] [849])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 1519 75 1522 256 (set (reg/f:DI 0 ax [orig:777 _1291 ] [777])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1216 MEM[(const struct ctype *)_1282].D.47997._vptr.facet ] [1216])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1290 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 1522 1519 1523 256 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:777 _1291 ] [777])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 1523 1522 1524 256 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1531)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 1531)
;;  succ:       204 [80.0%]  (CAN_FALLTHRU)
;;              257 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 257, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 256, next block 258, flags: (REACHABLE, RTL)
;;  pred:       256 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 257 artificial_defs: { }
;; bb 257 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1524 1523 1526 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1526 1524 1527 257 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:773 _1282 ] [773])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:773 _1282 ] [773])
        (nil)))
(call_insn:TI 1527 1526 3469 257 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:777 _1291 ] [777]) [0 *OBJ_TYPE_REF(_1291;(const struct ctype)_1282->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              258 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 258, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 257, next block 259, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       257 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 258 artificial_defs: { }
;; bb 258 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 3469 1527 1530 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1530 3469 4778 258 (set (reg:SI 4 si [orig:849 prephitmp_1403 ] [849])
        (sign_extend:SI (reg:QI 0 ax [orig:779 _1297 ] [779]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:779 _1297 ] [779])
        (nil)))
(jump_insn 4778 1530 4779 258 (set (pc)
        (label_ref 1531)) 667 {jump}
     (nil)
 -> 1531)
;;  succ:       204 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

(barrier 4779 4778 2026)
;; basic block 259, loop depth 0, count 0, freq 80, maybe hot
;;  prev block 258, next block 260, flags: (REACHABLE, RTL)
;;  pred:       224 [39.0%]  (CAN_FALLTHRU)
;; bb 259 artificial_defs: { }
;; bb 259 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 2026 4779 2027 259 424 "" [1 uses])
(note 2027 2026 2028 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2028 2027 2029 259 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:863 _1428 ] [863])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 2029 2028 2030 259 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       260 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 260, loop depth 0, count 0, freq 80, maybe hot
;;  prev block 259, next block 261, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       259 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 260 artificial_defs: { }
;; bb 260 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 2030 2029 2033 260 [bb 260] NOTE_INSN_BASIC_BLOCK)
(note 2033 2030 2031 260 NOTE_INSN_DELETED)
(insn:TI 2031 2033 83 260 (set (reg/f:DI 0 ax [orig:1330 MEM[(const struct ctype *)_1428].D.47997._vptr.facet ] [1330])
        (mem/f:DI (reg/f:DI 3 bx [orig:863 _1428 ] [863]) [150 MEM[(const struct ctype *)_1428].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:863 _1428 ] [863]) [150 MEM[(const struct ctype *)_1428].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 83 2031 2032 260 (set (reg:SI 4 si [orig:851 prephitmp_1406 ] [851])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 2032 83 2035 260 (set (reg/f:DI 0 ax [orig:868 _1437 ] [868])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1330 MEM[(const struct ctype *)_1428].D.47997._vptr.facet ] [1330])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1436 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 2035 2032 2036 260 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:868 _1437 ] [868])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 2036 2035 2037 260 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2044)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 2044)
;;  succ:       226 [80.0%]  (CAN_FALLTHRU)
;;              261 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 261, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 260, next block 262, flags: (REACHABLE, RTL)
;;  pred:       260 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 261 artificial_defs: { }
;; bb 261 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 2037 2036 2039 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2039 2037 2040 261 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:863 _1428 ] [863])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:863 _1428 ] [863])
        (nil)))
(call_insn:TI 2040 2039 3489 261 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:868 _1437 ] [868]) [0 *OBJ_TYPE_REF(_1437;(const struct ctype)_1428->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              262 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 262, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 261, next block 263, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       261 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 262 artificial_defs: { }
;; bb 262 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 3489 2040 2043 262 [bb 262] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2043 3489 4780 262 (set (reg:SI 4 si [orig:851 prephitmp_1406 ] [851])
        (sign_extend:SI (reg:QI 0 ax [orig:870 _1443 ] [870]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:870 _1443 ] [870])
        (nil)))
(jump_insn 4780 2043 4781 262 (set (pc)
        (label_ref 2044)) 667 {jump}
     (nil)
 -> 2044)
;;  succ:       226 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

(barrier 4781 4780 1964)
;; basic block 263, loop depth 0, count 0, freq 80, maybe hot
;;  prev block 262, next block 264, flags: (REACHABLE, RTL)
;;  pred:       217 [39.0%]  (CAN_FALLTHRU)
;; bb 263 artificial_defs: { }
;; bb 263 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1964 4781 1965 263 421 "" [1 uses])
(note 1965 1964 1966 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1966 1965 1967 263 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:847 _1401 ] [847])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 1967 1966 1968 263 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       264 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 264, loop depth 0, count 0, freq 80, maybe hot
;;  prev block 263, next block 265, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       263 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 264 artificial_defs: { }
;; bb 264 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 1968 1967 1971 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
(note 1971 1968 1969 264 NOTE_INSN_DELETED)
(insn:TI 1969 1971 82 264 (set (reg/f:DI 0 ax [orig:1318 MEM[(const struct ctype *)_1401].D.47997._vptr.facet ] [1318])
        (mem/f:DI (reg/f:DI 3 bx [orig:847 _1401 ] [847]) [150 MEM[(const struct ctype *)_1401].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:847 _1401 ] [847]) [150 MEM[(const struct ctype *)_1401].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 82 1969 1970 264 (set (reg:SI 4 si [orig:855 _1415 ] [855])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 1970 82 1973 264 (set (reg/f:DI 0 ax [orig:853 _1410 ] [853])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1318 MEM[(const struct ctype *)_1401].D.47997._vptr.facet ] [1318])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1409 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 1973 1970 1974 264 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:853 _1410 ] [853])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 1974 1973 1975 264 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1982)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 1982)
;;  succ:       219 [80.0%]  (CAN_FALLTHRU)
;;              265 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 265, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 264, next block 266, flags: (REACHABLE, RTL)
;;  pred:       264 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 265 artificial_defs: { }
;; bb 265 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1975 1974 1977 265 [bb 265] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1977 1975 1978 265 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:847 _1401 ] [847])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:847 _1401 ] [847])
        (nil)))
(call_insn:TI 1978 1977 3486 265 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:853 _1410 ] [853]) [0 *OBJ_TYPE_REF(_1410;(const struct ctype)_1401->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              266 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 266, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 265, next block 267, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       265 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 266 artificial_defs: { }
;; bb 266 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 3486 1978 1981 266 [bb 266] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1981 3486 4782 266 (set (reg:SI 4 si [orig:855 _1415 ] [855])
        (sign_extend:SI (reg:QI 0 ax [orig:856 _1416 ] [856]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:856 _1416 ] [856])
        (nil)))
(jump_insn 4782 1981 4783 266 (set (pc)
        (label_ref 1982)) 667 {jump}
     (nil)
 -> 1982)
;;  succ:       219 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

(barrier 4783 4782 2088)
;; basic block 267, loop depth 0, count 0, freq 79, maybe hot
;;  prev block 266, next block 268, flags: (REACHABLE, RTL)
;;  pred:       231 [39.0%]  (CAN_FALLTHRU)
;; bb 267 artificial_defs: { }
;; bb 267 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 2088 4783 2089 267 427 "" [1 uses])
(note 2089 2088 2090 267 [bb 267] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2090 2089 2091 267 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:877 _1455 ] [877])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 2091 2090 2092 267 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       268 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 268, loop depth 0, count 0, freq 79, maybe hot
;;  prev block 267, next block 269, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       267 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 268 artificial_defs: { }
;; bb 268 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 2092 2091 2095 268 [bb 268] NOTE_INSN_BASIC_BLOCK)
(note 2095 2092 2093 268 NOTE_INSN_DELETED)
(insn:TI 2093 2095 84 268 (set (reg/f:DI 0 ax [orig:1342 MEM[(const struct ctype *)_1455].D.47997._vptr.facet ] [1342])
        (mem/f:DI (reg/f:DI 3 bx [orig:877 _1455 ] [877]) [150 MEM[(const struct ctype *)_1455].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:877 _1455 ] [877]) [150 MEM[(const struct ctype *)_1455].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 84 2093 2094 268 (set (reg:SI 4 si [orig:916 _1706 ] [916])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 2094 84 2097 268 (set (reg/f:DI 0 ax [orig:881 _1464 ] [881])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1342 MEM[(const struct ctype *)_1455].D.47997._vptr.facet ] [1342])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1463 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 2097 2094 2098 268 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:881 _1464 ] [881])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 2098 2097 2099 268 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2106)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 2106)
;;  succ:       233 [80.0%]  (CAN_FALLTHRU)
;;              269 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 269, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 268, next block 270, flags: (REACHABLE, RTL)
;;  pred:       268 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 269 artificial_defs: { }
;; bb 269 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 2099 2098 2101 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2101 2099 2102 269 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:877 _1455 ] [877])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:877 _1455 ] [877])
        (nil)))
(call_insn:TI 2102 2101 3492 269 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:881 _1464 ] [881]) [0 *OBJ_TYPE_REF(_1464;(const struct ctype)_1455->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              270 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 270, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 269, next block 271, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       269 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 270 artificial_defs: { }
;; bb 270 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 3492 2102 2105 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2105 3492 4784 270 (set (reg:SI 4 si [orig:916 _1706 ] [916])
        (sign_extend:SI (reg:QI 0 ax [orig:883 _1470 ] [883]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:883 _1470 ] [883])
        (nil)))
(jump_insn 4784 2105 4785 270 (set (pc)
        (label_ref 2106)) 667 {jump}
     (nil)
 -> 2106)
;;  succ:       233 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

(barrier 4785 4784 4767)
;; basic block 271, loop depth 0, count 0, freq 58, maybe hot
;;  prev block 270, next block 272, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       206 [28.0%]  (CAN_FALLTHRU)
;; bb 271 artificial_defs: { }
;; bb 271 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags] 41 [r12]
;; live  kill	
(code_label 4767 4785 1544 271 596 "" [1 uses])
(note 1544 4767 1545 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1545 1544 1546 271 (set (reg:DI 41 r12)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -19992 [0xffffffffffffb1e8])) [22 nProtons+0 S4 A64]))) mymainCascade.cc:324 131 {*zero_extendsidi2}
     (nil))
(insn:TI 1546 1545 1547 271 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 41 r12 [orig:226 nProtons.71_236 ] [226])
            (const_int 99 [0x63]))) mymainCascade.cc:324 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 1547 1546 1548 271 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1597)
            (pc))) mymainCascade.cc:324 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1597)
;;  succ:       272 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              275 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 272, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 271, next block 273, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       271 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 272 artificial_defs: { }
;; bb 272 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; live  kill	
(note 1548 1547 1549 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1549 1548 1550 272 (set (reg:DF 22 xmm1 [orig:394 _519 ] [394])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:356 _480 ] [356])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_988 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 1550 1549 1552 272 (set (reg:DF 21 xmm0 [orig:395 _520 ] [395])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:356 _480 ] [356])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_988 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 1552 1550 1553 272 (set (reg:DF 22 xmm1 [1219])
        (mult:DF (reg:DF 22 xmm1 [orig:394 _519 ] [394])
            (reg:DF 22 xmm1 [orig:394 _519 ] [394]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 1553 1552 1551 272 (set (reg:DF 21 xmm0 [1220])
        (mult:DF (reg:DF 21 xmm0 [orig:395 _520 ] [395])
            (reg:DF 21 xmm0 [orig:395 _520 ] [395]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 1551 1553 1555 272 (set (reg:DF 23 xmm2 [orig:396 _521 ] [396])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:356 _480 ] [356])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)_988 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:356 _480 ] [356])
        (nil)))
(insn:TI 1555 1551 1554 272 (set (reg:DF 23 xmm2 [1222])
        (mult:DF (reg:DF 23 xmm2 [orig:396 _521 ] [396])
            (reg:DF 23 xmm2 [orig:396 _521 ] [396]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 1554 1555 1556 272 (set (reg:DF 21 xmm0 [1221])
        (plus:DF (reg:DF 21 xmm0 [1220])
            (reg:DF 22 xmm1 [1219]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1219])
        (nil)))
(insn:TI 1556 1554 4518 272 (set (reg:DF 21 xmm0 [orig:392 _517 ] [392])
        (plus:DF (reg:DF 21 xmm0 [1221])
            (reg:DF 23 xmm2 [1222]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [1222])
        (nil)))
(insn 4518 1556 1559 272 (set (reg:DF 23 xmm2 [1805])
        (const_double:DF 0.0 [0x0.0p+0])) 126 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn:TI 1559 4518 1557 272 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 23 xmm2 [1805])
            (reg:DF 21 xmm0 [orig:392 _517 ] [392]))) 52 {*cmpiudf_mixed}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [1805])
        (nil)))
(insn 1557 1559 1560 272 (set (reg:DF 22 xmm1 [orig:393 _518 ] [393])
        (sqrt:DF (reg:DF 21 xmm0 [orig:392 _517 ] [392]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 857 {*sqrtdf2_sse}
     (nil))
(jump_insn:TI 1560 1557 3387 272 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4786)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (int_list:REG_BR_PROB 100 (nil)))
 -> 4786)
;;  succ:       286 [1.0%]  (CAN_FALLTHRU)
;;              273 [99.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]

;; basic block 273, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 272, next block 274, flags: (REACHABLE, RTL)
;;  pred:       272 [99.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 273 artificial_defs: { }
;; bb 273 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
(note 3387 1560 76 273 [bb 273] NOTE_INSN_BASIC_BLOCK)
(insn:TI 76 3387 1565 273 (set (reg:DI 3 bx)
        (zero_extend:DI (reg:SI 41 r12 [orig:226 nProtons.71_236 ] [226]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 131 {*zero_extendsidi2}
     (nil))
;;  succ:       274 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]

;; basic block 274, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 273, next block 275, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       273 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              286 [100.0%]  (CAN_FALLTHRU)
;; bb 274 artificial_defs: { }
;; bb 274 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 22 [xmm1] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 21 [xmm0] 22 [xmm1] 41 [r12]
;; live  kill	 17 [flags]
(code_label 1565 76 1566 274 405 "" [1 uses])
(note 1566 1565 1569 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
(note 1569 1566 1578 274 NOTE_INSN_DELETED)
(note 1578 1569 1568 274 NOTE_INSN_DELETED)
(insn:TI 1568 1578 4417 274 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1224 nProtons.71_236 ] [1224])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -7424 [0xffffffffffffe300])) [78 pProton S8 A64])
        (reg:DF 22 xmm1 [orig:393 _518 ] [393])) mymainCascade.cc:325 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1224 nProtons.71_236 ] [1224])
        (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:393 _518 ] [393])
            (nil))))
(insn 4417 1568 1570 274 (set (reg/f:DI 41 r12 [orig:356 _480 ] [356])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 85 {*movdi_internal}
     (nil))
(insn:TI 1570 4417 4225 274 (set (reg:DF 22 xmm1 [orig:1226 MEM[(const struct Vec4 &)_988 + 40].xx ] [1226])
        (mem:DF (plus:DI (reg/f:DI 41 r12 [orig:356 _480 ] [356])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_988 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (nil))
(insn:TI 4225 1570 1571 274 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])
        (reg:DF 22 xmm1 [orig:1226 MEM[(const struct Vec4 &)_988 + 40].xx ] [1226])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:1226 MEM[(const struct Vec4 &)_988 + 40].xx ] [1226])
        (nil)))
(insn:TI 1571 4225 1572 274 (set (reg:DF 22 xmm1)
        (mem:DF (plus:DI (reg/f:DI 41 r12 [orig:356 _480 ] [356])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)_988 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (nil))
(insn:TI 1572 1571 1573 274 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (nil))
(call_insn:TI 1573 1572 1576 274 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn:TI 1576 1573 1577 274 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 3 bx [orig:1227 pretmp_1423 ] [1227])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -6624 [0xffffffffffffe620])) [78 thetaProton S8 A64])
        (reg:DF 21 xmm0 [orig:385 _510 ] [385])) mymainCascade.cc:326 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:385 _510 ] [385])
        (expr_list:REG_DEAD (reg:DI 3 bx [orig:1227 pretmp_1423 ] [1227])
            (nil))))
(insn 1577 1576 1579 274 (set (reg:DI 3 bx)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -19992 [0xffffffffffffb1e8])) [22 nProtons+0 S4 A64]))) mymainCascade.cc:327 131 {*zero_extendsidi2}
     (nil))
(insn:TI 1579 1577 4228 274 (set (reg:DF 22 xmm1 [orig:1229 MEM[(const struct Vec4 &)_988 + 40].yy ] [1229])
        (mem:DF (plus:DI (reg/f:DI 41 r12 [orig:356 _480 ] [356])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_988 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (nil))
(insn:TI 4228 1579 1580 274 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])
        (reg:DF 22 xmm1 [orig:1229 MEM[(const struct Vec4 &)_988 + 40].yy ] [1229])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:1229 MEM[(const struct Vec4 &)_988 + 40].yy ] [1229])
        (nil)))
(insn:TI 1580 4228 1581 274 (set (reg:DF 22 xmm1)
        (mem:DF (plus:DI (reg/f:DI 41 r12 [orig:356 _480 ] [356])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_988 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (nil))
(insn:TI 1581 1580 1582 274 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (nil))
(call_insn:TI 1582 1581 1586 274 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn:TI 1586 1582 1585 274 (set (reg:DI 1 dx)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -19992 [0xffffffffffffb1e8])) [22 nProtons+0 S4 A64]))) mymainCascade.cc:328 131 {*zero_extendsidi2}
     (nil))
(insn 1585 1586 1588 274 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 3 bx [orig:1230 nProtons.71_242 ] [1230])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -5824 [0xffffffffffffe940])) [78 phiProton S8 A64])
        (reg:DF 21 xmm0 [orig:382 _507 ] [382])) mymainCascade.cc:327 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:382 _507 ] [382])
        (expr_list:REG_DEAD (reg:DI 3 bx [orig:1230 nProtons.71_242 ] [1230])
            (nil))))
(insn:TI 1588 1585 1589 274 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:1231 nProtons.71_244 ] [1231])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -18224 [0xffffffffffffb8d0])) [22 isPrimaryProton S4 A32])
        (const_int 0 [0])) mymainCascade.cc:328 86 {*movsi_internal}
     (nil))
(insn 1589 1588 4543 274 (set (reg:SI 2 cx [orig:342 _464 ] [342])
        (mem:SI (plus:DI (reg/f:DI 41 r12 [orig:356 _480 ] [356])
                (const_int 12 [0xc])) [22 MEM[(int *)_988 + 12B]+0 S4 A32])) 86 {*movsi_internal}
     (nil))
(insn 4543 1589 1592 274 (set (reg:DI 0 ax)
        (reg:DI 1 dx)) mymainCascade.cc:328 85 {*movdi_internal}
     (nil))
(insn:TI 1592 4543 1593 274 (parallel [
            (set (reg:SI 0 ax [1233])
                (plus:SI (reg:SI 0 ax [orig:230 nProtons.71_244 ] [230])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:330 218 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -19944 [0xffffffffffffb218])) [22 nProtons+0 S4 A64])
            (nil))))
(insn:TI 1593 1592 1591 274 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19992 [0xffffffffffffb1e8])) [22 nProtons+0 S4 A64])
        (reg:SI 0 ax [1233])) mymainCascade.cc:330 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [1233])
        (nil)))
(insn:TI 1591 1593 1594 274 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:1231 nProtons.71_244 ] [1231])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -17824 [0xffffffffffffba60])) [22 statusProton S4 A32])
        (reg:SI 2 cx [orig:342 _464 ] [342])) mymainCascade.cc:329 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:342 _464 ] [342])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:1231 nProtons.71_244 ] [1231])
            (nil))))
(insn 1594 1591 4787 274 (set (reg:SI 5 di [orig:337 _458 ] [337])
        (mem:SI (plus:DI (reg/f:DI 41 r12 [orig:356 _480 ] [356])
                (const_int 8 [0x8])) [22 MEM[(int *)_988 + 8B]+0 S4 A32])) 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:356 _480 ] [356])
        (nil)))
(jump_insn 4787 1594 4788 274 (set (pc)
        (label_ref 1672)) 667 {jump}
     (nil)
 -> 1672)
;;  succ:       207 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

(barrier 4788 4787 1597)
;; basic block 275, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 274, next block 276, flags: (REACHABLE, RTL)
;;  pred:       271 [50.0%]  (CAN_FALLTHRU)
;; bb 275 artificial_defs: { }
;; bb 275 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 1597 4788 1598 275 404 "" [1 uses])
(note 1598 1597 1602 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1602 1598 1600 275 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1600 1602 1599 275 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC115") [flags 0x2]  <var_decl 0x7fb2b65b9000 *.LC115>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1599 1600 1603 275 (set (reg:DI 1 dx)
        (const_int 30 [0x1e])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(call_insn:TI 1603 1599 1604 275 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       276 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 276, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 275, next block 277, flags: (REACHABLE, RTL)
;;  pred:       275 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 276 artificial_defs: { }
;; bb 276 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1604 1603 1607 276 [bb 276] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1607 1604 1605 276 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1605 1607 1608 276 (set (reg:DI 4 si)
        (const_int 100 [0x64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 1608 1605 3471 276 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              277 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 277, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 276, next block 278, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       276 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 277 artificial_defs: { }
;; bb 277 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3471 1608 1612 277 [bb 277] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1612 3471 1611 277 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC116") [flags 0x2]  <var_decl 0x7fb2b65b9090 *.LC116>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1611 1612 1613 277 (set (reg:DI 1 dx)
        (const_int 19 [0x13])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1613 1611 1609 277 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:397 _522 ] [397])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:397 _522 ] [397])
        (nil)))
(insn:TI 1609 1613 1614 277 (set (reg/f:DI 3 bx [orig:397 _522 ] [397])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 1614 1609 1615 277 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       278 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 278, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 277, next block 279, flags: (REACHABLE, RTL)
;;  pred:       277 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 278 artificial_defs: { }
;; bb 278 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1615 1614 1616 278 [bb 278] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1616 1615 1618 278 (set (reg:DI 4 si [orig:1236 nProtons.71_236 ] [1236])
        (zero_extend:DI (reg:SI 41 r12 [orig:226 nProtons.71_236 ] [226]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 131 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 41 r12 [orig:226 nProtons.71_236 ] [226])
        (nil)))
(insn 1618 1616 1619 278 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:397 _522 ] [397])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:397 _522 ] [397])
        (nil)))
(call_insn:TI 1619 1618 3472 278 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              279 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 279, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 278, next block 280, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       278 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 279 artificial_defs: { }
;; bb 279 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 41 [r12]
;; live  kill	
(note 3472 1619 1623 279 [bb 279] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1623 3472 1622 279 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC117") [flags 0x2]  <var_decl 0x7fb2b65b9120 *.LC117>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1622 1623 1624 279 (set (reg:DI 1 dx)
        (const_int 23 [0x17])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1624 1622 1620 279 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:399 _524 ] [399])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:399 _524 ] [399])
        (nil)))
(insn:TI 1620 1624 1625 279 (set (reg/f:DI 41 r12 [orig:399 _524 ] [399])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 1625 1620 1626 279 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       280 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 280, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 279, next block 281, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       279 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 280 artificial_defs: { }
;; bb 280 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags]
;; live  kill	
(note 1626 1625 1627 280 [bb 280] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1627 1626 1628 280 (set (reg/f:DI 0 ax [orig:1237 MEM[(struct basic_ostream *)_524]._vptr.basic_ostream ] [1237])
        (mem/f:DI (reg/f:DI 41 r12 [orig:399 _524 ] [399]) [150 MEM[(struct basic_ostream *)_524]._vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 41 r12 [orig:399 _524 ] [399]) [150 MEM[(struct basic_ostream *)_524]._vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 1628 1627 1629 280 (set (reg:DI 0 ax [orig:1238 MEM[(long int *)_1300 + -24B] ] [1238])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1237 MEM[(struct basic_ostream *)_524]._vptr.basic_ostream ] [1237])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1300 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 1629 1628 1630 280 (set (reg/f:DI 3 bx [orig:786 _1309 ] [786])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 41 r12 [orig:399 _524 ] [399])
                    (reg:DI 0 ax [orig:1238 MEM[(long int *)_1300 + -24B] ] [1238]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1303]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1238 MEM[(long int *)_1300 + -24B] ] [1238])
        (nil)))
(insn:TI 1630 1629 1631 280 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:786 _1309 ] [786])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 1631 1630 1636 280 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4789)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4789)
;;  succ:       407 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              281 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 281, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 280, next block 282, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       280 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 281 artificial_defs: { }
;; bb 281 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1636 1631 1637 281 [bb 281] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1637 1636 1638 281 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:786 _1309 ] [786])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1309]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 1638 1637 1639 281 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1643)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3898 (nil)))
 -> 1643)
;;  succ:       282 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              287 [39.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 282, loop depth 0, count 0, freq 18, maybe hot
;;  prev block 281, next block 283, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       281 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 282 artificial_defs: { }
;; bb 282 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 1639 1638 1640 282 [bb 282] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1640 1639 1661 282 (set (reg:SI 4 si [orig:917 _1713 ] [917])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:786 _1309 ] [786])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1309]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:786 _1309 ] [786])
        (nil)))
;;  succ:       283 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 283, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 282, next block 284, flags: (REACHABLE, RTL)
;;  pred:       282 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              288 [80.0%]  (CAN_FALLTHRU)
;;              290 [100.0%]  (CAN_FALLTHRU)
;; bb 283 artificial_defs: { }
;; bb 283 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 1661 1640 1662 283 408 "" [2 uses])
(note 1662 1661 1664 283 [bb 283] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1664 1662 1665 283 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:399 _524 ] [399])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:399 _524 ] [399])
        (nil)))
(call_insn:TI 1665 1664 3474 283 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              284 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 284, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 283, next block 285, flags: (REACHABLE, RTL)
;;  pred:       283 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 284 artificial_defs: { }
;; bb 284 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3474 1665 1668 284 [bb 284] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1668 3474 1669 284 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:785 _1306 ] [785])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:785 _1306 ] [785])
        (nil)))
(call_insn:TI 1669 1668 1670 284 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       285 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 285, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 284, next block 286, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       284 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 285 artificial_defs: { }
;; bb 285 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1670 1669 4232 285 [bb 285] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4232 1670 1671 285 (set (reg/f:DI 0 ax [orig:356 _480 ] [356])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])) 85 {*movdi_internal}
     (nil))
(insn:TI 1671 4232 4790 285 (set (reg:SI 5 di [orig:337 _458 ] [337])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:356 _480 ] [356])
                (const_int 8 [0x8])) [22 MEM[(int *)_988 + 8B]+0 S4 A32])) 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:356 _480 ] [356])
        (nil)))
(jump_insn 4790 1671 4791 285 (set (pc)
        (label_ref 1672)) 667 {jump}
     (nil)
 -> 1672)
;;  succ:       207 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

(barrier 4791 4790 4786)
;; basic block 286, loop depth 0, count 0, freq 29, maybe hot
;;  prev block 285, next block 287, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       272 [1.0%]  (CAN_FALLTHRU)
;; bb 286 artificial_defs: { }
;; bb 286 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx] 21 [xmm0] 22 [xmm1]
;; live  kill	
(code_label 4786 4791 1561 286 603 "" [1 uses])
(note 1561 4786 4411 286 [bb 286] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4411 1561 1563 286 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])
        (reg:DF 22 xmm1 [orig:393 _518 ] [393])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:393 _518 ] [393])
        (nil)))
(call_insn:TI 1563 4411 1564 286 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fb2c1c85c40 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 684 {*call_value}
     (expr_list:REG_UNUSED (reg:DF 21 xmm0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fb2c1c85c40 sqrt>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn:TI 1564 1563 4412 286 (set (reg:DI 3 bx)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -19992 [0xffffffffffffb1e8])) [22 nProtons+0 S4 A64]))) 131 {*zero_extendsidi2}
     (nil))
(insn:TI 4412 1564 4792 286 (set (reg:DF 22 xmm1 [orig:393 _518 ] [393])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])) 126 {*movdf_internal}
     (nil))
(jump_insn 4792 4412 4793 286 (set (pc)
        (label_ref 1565)) 667 {jump}
     (nil)
 -> 1565)
;;  succ:       274 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]

(barrier 4793 4792 1643)
;; basic block 287, loop depth 0, count 0, freq 11, maybe hot
;;  prev block 286, next block 288, flags: (REACHABLE, RTL)
;;  pred:       281 [39.0%]  (CAN_FALLTHRU)
;; bb 287 artificial_defs: { }
;; bb 287 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1643 4793 1644 287 407 "" [1 uses])
(note 1644 1643 1645 287 [bb 287] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1645 1644 1646 287 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:786 _1309 ] [786])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 1646 1645 1647 287 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       288 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 288, loop depth 0, count 0, freq 11, maybe hot
;;  prev block 287, next block 289, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       287 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 288 artificial_defs: { }
;; bb 288 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 1647 1646 1650 288 [bb 288] NOTE_INSN_BASIC_BLOCK)
(note 1650 1647 1648 288 NOTE_INSN_DELETED)
(insn:TI 1648 1650 77 288 (set (reg/f:DI 0 ax [orig:1239 MEM[(const struct ctype *)_1309].D.47997._vptr.facet ] [1239])
        (mem/f:DI (reg/f:DI 3 bx [orig:786 _1309 ] [786]) [150 MEM[(const struct ctype *)_1309].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:786 _1309 ] [786]) [150 MEM[(const struct ctype *)_1309].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 77 1648 1649 288 (set (reg:SI 4 si [orig:917 _1713 ] [917])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 1649 77 1652 288 (set (reg/f:DI 0 ax [orig:791 _1318 ] [791])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1239 MEM[(const struct ctype *)_1309].D.47997._vptr.facet ] [1239])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1317 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 1652 1649 1653 288 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:791 _1318 ] [791])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 1653 1652 1654 288 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1661)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 1661)
;;  succ:       283 [80.0%]  (CAN_FALLTHRU)
;;              289 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 289, loop depth 0, count 0, freq 2
;;  prev block 288, next block 290, flags: (REACHABLE, RTL)
;;  pred:       288 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 289 artificial_defs: { }
;; bb 289 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1654 1653 1656 289 [bb 289] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1656 1654 1657 289 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:786 _1309 ] [786])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:786 _1309 ] [786])
        (nil)))
(call_insn:TI 1657 1656 3473 289 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:791 _1318 ] [791]) [0 *OBJ_TYPE_REF(_1318;(const struct ctype)_1309->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              290 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

;; basic block 290, loop depth 0, count 0, freq 2
;;  prev block 289, next block 291, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       289 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 290 artificial_defs: { }
;; bb 290 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 3473 1657 1660 290 [bb 290] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1660 3473 4794 290 (set (reg:SI 4 si [orig:917 _1713 ] [917])
        (sign_extend:SI (reg:QI 0 ax [orig:794 _1324 ] [794]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:794 _1324 ] [794])
        (nil)))
(jump_insn 4794 1660 4795 290 (set (pc)
        (label_ref 1661)) 667 {jump}
     (nil)
 -> 1661)
;;  succ:       283 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14] 44 [r15]

(barrier 4795 4794 1281)
;; basic block 291, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 290, next block 292, flags: (REACHABLE, RTL)
;;  pred:       166 [39.0%]  (CAN_FALLTHRU)
;; bb 291 artificial_defs: { }
;; bb 291 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1281 4795 1282 291 390 "" [1 uses])
(note 1282 1281 1283 291 [bb 291] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1283 1282 1284 291 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:748 _1228 ] [748])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 1284 1283 1285 291 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       292 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 292, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 291, next block 293, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       291 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 292 artificial_defs: { }
;; bb 292 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(note 1285 1284 1288 292 [bb 292] NOTE_INSN_BASIC_BLOCK)
(note 1288 1285 1286 292 NOTE_INSN_DELETED)
(insn:TI 1286 1288 1287 292 (set (reg/f:DI 0 ax [orig:1179 MEM[(const struct ctype *)_1228].D.47997._vptr.facet ] [1179])
        (mem/f:DI (reg/f:DI 3 bx [orig:748 _1228 ] [748]) [150 MEM[(const struct ctype *)_1228].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:748 _1228 ] [748]) [150 MEM[(const struct ctype *)_1228].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn:TI 1287 1286 1290 292 (set (reg/f:DI 1 dx [orig:752 _1237 ] [752])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1179 MEM[(const struct ctype *)_1228].D.47997._vptr.facet ] [1179])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1236 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:1179 MEM[(const struct ctype *)_1228].D.47997._vptr.facet ] [1179])
        (nil)))
(insn 1290 1287 67 292 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 1 dx [orig:752 _1237 ] [752])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(insn 67 1290 1291 292 (set (reg:QI 0 ax [orig:750 _1232 ] [750])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 89 {*movqi_internal}
     (nil))
(jump_insn:TI 1291 67 1292 292 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1297)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8002 (nil)))
 -> 1297)
;;  succ:       168 [80.0%]  (CAN_FALLTHRU)
;;              293 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 293, loop depth 0, count 0, freq 1
;;  prev block 292, next block 294, flags: (REACHABLE, RTL)
;;  pred:       292 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 293 artificial_defs: { }
;; bb 293 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1292 1291 1293 293 [bb 293] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1293 1292 1294 293 (set (reg:SI 4 si)
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn 1294 1293 1295 293 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:748 _1228 ] [748])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:748 _1228 ] [748])
        (nil)))
(call_insn:TI 1295 1294 4796 293 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 1 dx [orig:752 _1237 ] [752]) [0 *OBJ_TYPE_REF(_1237;(const struct ctype)_1228->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:752 _1237 ] [752])
                (expr_list:REG_EH_REGION (const_int 8 [0x8])
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              294 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 294, loop depth 0, count 0, freq 1
;;  prev block 293, next block 295, flags: (NEW, RTL, MODIFIED)
;;  pred:       293 [100.0%]  (FALLTHRU)
;; bb 294 artificial_defs: { }
;; bb 294 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	
;; live  kill	
(note 4796 1295 4797 294 [bb 294] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 4797 4796 4798 294 (set (pc)
        (label_ref 1297)) 667 {jump}
     (nil)
 -> 1297)
;;  succ:       168 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 4798 4797 1220)
;; basic block 295, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 294, next block 296, flags: (REACHABLE, RTL)
;;  pred:       159 [39.0%]  (CAN_FALLTHRU)
;; bb 295 artificial_defs: { }
;; bb 295 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1220 4798 1221 295 387 "" [1 uses])
(note 1221 1220 1222 295 [bb 295] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1222 1221 1223 295 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:736 _1201 ] [736])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 1223 1222 1224 295 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       296 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 296, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 295, next block 297, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       295 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 296 artificial_defs: { }
;; bb 296 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(note 1224 1223 1227 296 [bb 296] NOTE_INSN_BASIC_BLOCK)
(note 1227 1224 1225 296 NOTE_INSN_DELETED)
(insn:TI 1225 1227 1226 296 (set (reg/f:DI 0 ax [orig:1166 MEM[(const struct ctype *)_1201].D.47997._vptr.facet ] [1166])
        (mem/f:DI (reg/f:DI 3 bx [orig:736 _1201 ] [736]) [150 MEM[(const struct ctype *)_1201].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:736 _1201 ] [736]) [150 MEM[(const struct ctype *)_1201].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn:TI 1226 1225 1229 296 (set (reg/f:DI 1 dx [orig:740 _1210 ] [740])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1166 MEM[(const struct ctype *)_1201].D.47997._vptr.facet ] [1166])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1209 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:1166 MEM[(const struct ctype *)_1201].D.47997._vptr.facet ] [1166])
        (nil)))
(insn 1229 1226 66 296 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 1 dx [orig:740 _1210 ] [740])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(insn 66 1229 1230 296 (set (reg:QI 0 ax [orig:738 _1205 ] [738])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 89 {*movqi_internal}
     (nil))
(jump_insn:TI 1230 66 1231 296 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1236)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8002 (nil)))
 -> 1236)
;;  succ:       161 [80.0%]  (CAN_FALLTHRU)
;;              297 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 297, loop depth 0, count 0, freq 1
;;  prev block 296, next block 298, flags: (REACHABLE, RTL)
;;  pred:       296 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 297 artificial_defs: { }
;; bb 297 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1231 1230 1232 297 [bb 297] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1232 1231 1233 297 (set (reg:SI 4 si)
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn 1233 1232 1234 297 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:736 _1201 ] [736])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:736 _1201 ] [736])
        (nil)))
(call_insn:TI 1234 1233 4799 297 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 1 dx [orig:740 _1210 ] [740]) [0 *OBJ_TYPE_REF(_1210;(const struct ctype)_1201->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:740 _1210 ] [740])
                (expr_list:REG_EH_REGION (const_int 8 [0x8])
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              298 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 298, loop depth 0, count 0, freq 1
;;  prev block 297, next block 299, flags: (NEW, RTL, MODIFIED)
;;  pred:       297 [100.0%]  (FALLTHRU)
;; bb 298 artificial_defs: { }
;; bb 298 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	
;; live  kill	
(note 4799 1234 4800 298 [bb 298] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 4800 4799 4801 298 (set (pc)
        (label_ref 1236)) 667 {jump}
     (nil)
 -> 1236)
;;  succ:       161 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 4801 4800 1159)
;; basic block 299, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 298, next block 300, flags: (REACHABLE, RTL)
;;  pred:       152 [39.0%]  (CAN_FALLTHRU)
;; bb 299 artificial_defs: { }
;; bb 299 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1159 4801 1160 299 384 "" [1 uses])
(note 1160 1159 1161 299 [bb 299] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1161 1160 1162 299 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:724 _1174 ] [724])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 1162 1161 1163 299 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       300 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 300, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 299, next block 301, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       299 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 300 artificial_defs: { }
;; bb 300 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(note 1163 1162 1166 300 [bb 300] NOTE_INSN_BASIC_BLOCK)
(note 1166 1163 1164 300 NOTE_INSN_DELETED)
(insn:TI 1164 1166 1165 300 (set (reg/f:DI 0 ax [orig:1153 MEM[(const struct ctype *)_1174].D.47997._vptr.facet ] [1153])
        (mem/f:DI (reg/f:DI 3 bx [orig:724 _1174 ] [724]) [150 MEM[(const struct ctype *)_1174].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:724 _1174 ] [724]) [150 MEM[(const struct ctype *)_1174].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn:TI 1165 1164 1168 300 (set (reg/f:DI 1 dx [orig:728 _1183 ] [728])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1153 MEM[(const struct ctype *)_1174].D.47997._vptr.facet ] [1153])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1182 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:1153 MEM[(const struct ctype *)_1174].D.47997._vptr.facet ] [1153])
        (nil)))
(insn 1168 1165 65 300 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 1 dx [orig:728 _1183 ] [728])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(insn 65 1168 1169 300 (set (reg:QI 0 ax [orig:726 _1178 ] [726])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 89 {*movqi_internal}
     (nil))
(jump_insn:TI 1169 65 1170 300 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1175)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8002 (nil)))
 -> 1175)
;;  succ:       154 [80.0%]  (CAN_FALLTHRU)
;;              301 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 301, loop depth 0, count 0, freq 1
;;  prev block 300, next block 302, flags: (REACHABLE, RTL)
;;  pred:       300 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 301 artificial_defs: { }
;; bb 301 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1170 1169 1171 301 [bb 301] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1171 1170 1172 301 (set (reg:SI 4 si)
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn 1172 1171 1173 301 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:724 _1174 ] [724])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:724 _1174 ] [724])
        (nil)))
(call_insn:TI 1173 1172 4802 301 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 1 dx [orig:728 _1183 ] [728]) [0 *OBJ_TYPE_REF(_1183;(const struct ctype)_1174->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:728 _1183 ] [728])
                (expr_list:REG_EH_REGION (const_int 8 [0x8])
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              302 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 302, loop depth 0, count 0, freq 1
;;  prev block 301, next block 303, flags: (NEW, RTL, MODIFIED)
;;  pred:       301 [100.0%]  (FALLTHRU)
;; bb 302 artificial_defs: { }
;; bb 302 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	
;; live  kill	
(note 4802 1173 4803 302 [bb 302] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 4803 4802 4804 302 (set (pc)
        (label_ref 1175)) 667 {jump}
     (nil)
 -> 1175)
;;  succ:       154 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 4804 4803 4774)
;; basic block 303, loop depth 0, count 0, freq 4
;;  prev block 302, next block 304, flags: (REACHABLE, RTL)
;;  pred:       249 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 303 artificial_defs: { }
;; bb 303 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4774 4804 2187 303 601 "" [1 uses])
(note 2187 4774 2188 303 [bb 303] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 2188 2187 2189 303 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       379 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 2189 2188 2241)
;; basic block 304, loop depth 0, count 0, freq 4
;;  prev block 303, next block 305, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       191 [2.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 304 artificial_defs: { }
;; bb 304 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  kill	 17 [flags]
(code_label 2241 2189 2242 304 397 "" [1 uses])
(note 2242 2241 2243 304 [bb 304] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2243 2242 2244 304 (set (reg/f:DI 3 bx [orig:1367 lMesons.D.138156._M_impl._M_finish ] [1367])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19944 [0xffffffffffffb218])) [164 lMesons.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -19896 [0xffffffffffffb248])) [164 lMesons.D.138156._M_impl._M_finish+0 S8 A64])
        (nil)))
(insn 2244 2243 2246 304 (parallel [
            (set (reg:DI 3 bx [1366])
                (minus:DI (reg/f:DI 3 bx [orig:1367 lMesons.D.138156._M_impl._M_finish ] [1367])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19952 [0xffffffffffffb210])) [164 lMesons.D.138156._M_impl._M_start+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19896 [0xffffffffffffb248])) [164 lMesons.D.138156._M_impl._M_finish+0 S8 A64])
                (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19904 [0xffffffffffffb240])) [164 lMesons.D.138156._M_impl._M_start+0 S8 A128]))
            (nil))))
(insn 2246 2244 2245 304 (set (reg:DI 0 ax [1370])
        (const_int -3689348814741910323 [0xcccccccccccccccd])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int -3689348814741910323 [0xcccccccccccccccd])
        (nil)))
(insn:TI 2245 2246 2247 304 (parallel [
            (set (reg:DI 3 bx [1368])
                (ashiftrt:DI (reg:DI 3 bx [1366])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 2247 2245 2250 304 (parallel [
            (set (reg:DI 3 bx [1369])
                (mult:DI (reg:DI 3 bx [1368])
                    (reg:DI 0 ax [1370])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [1370])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 3 bx [1368])
                    (const_int -3689348814741910323 [0xcccccccccccccccd]))
                (nil)))))
(insn:TI 2250 2247 2249 304 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 3 bx [1369])
            (const_int 100 [0x64]))) mymainCascade.cc:366 7 {*cmpsi_1}
     (nil))
(insn 2249 2250 2251 304 (set (reg/v:SI 42 r13 [orig:254 nMesons ] [254])
        (reg:SI 3 bx [1369])) mymainCascade.cc:365 86 {*movsi_internal}
     (nil))
(jump_insn:TI 2251 2249 2292 304 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4805)
            (pc))) mymainCascade.cc:366 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 4805)
;;  succ:       326 [29.0%]  (CAN_FALLTHRU)
;;              305 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 305, loop depth 0, count 0, freq 3
;;  prev block 304, next block 306, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       304 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 305 artificial_defs: { }
;; bb 305 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
(note 2292 2251 2298 305 [bb 305] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2298 2292 2293 305 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 3 bx [1369])
            (const_int 0 [0]))) mymainCascade.cc:375 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 3 bx [1369])
        (nil)))
(insn 2293 2298 2294 305 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20008 [0xffffffffffffb1d8])) [22 nPi0s+0 S4 A64])
        (const_int 0 [0])) mymainCascade.cc:370 86 {*movsi_internal}
     (nil))
(insn 2294 2293 2295 305 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20004 [0xffffffffffffb1dc])) [22 nEtas+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:371 86 {*movsi_internal}
     (nil))
(insn:TI 2295 2294 2296 305 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20000 [0xffffffffffffb1e0])) [22 nOmegas+0 S4 A128])
        (const_int 0 [0])) mymainCascade.cc:372 86 {*movsi_internal}
     (nil))
(insn 2296 2295 2297 305 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19996 [0xffffffffffffb1e4])) [22 nEtaPrimes+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:373 86 {*movsi_internal}
     (nil))
(insn:TI 2297 2296 2299 305 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19988 [0xffffffffffffb1ec])) [22 nGammas+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:374 86 {*movsi_internal}
     (nil))
(jump_insn 2299 2297 2307 305 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2620)
            (pc))) mymainCascade.cc:375 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 2620)
;;  succ:       318 [9.0%]  (CAN_FALLTHRU)
;;              306 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 306, loop depth 0, count 0, freq 4
;;  prev block 305, next block 307, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       305 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              332 [100.0%]  (CAN_FALLTHRU)
;; bb 306 artificial_defs: { }
;; bb 306 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 43 [r14] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; live  gen 	 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 2307 2299 2308 306 437 "" [1 uses])
(note 2308 2307 4266 306 [bb 306] NOTE_INSN_BASIC_BLOCK)
(note 4266 2308 4464 306 NOTE_INSN_DELETED)
(note 4464 4266 2311 306 NOTE_INSN_DELETED)
(note 2311 4464 2312 306 NOTE_INSN_DELETED)
(note 2312 2311 4264 306 NOTE_INSN_DELETED)
(insn:TI 4264 2312 2309 306 (set (reg/f:DI 43 r14 [orig:366 _490 ] [366])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20144 [0xffffffffffffb150])) [789 %sfp+-20096 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 2309 4264 4703 306 (parallel [
            (set (reg/f:DI 43 r14 [orig:366 _490 ] [366])
                (minus:DI (reg/f:DI 43 r14 [orig:366 _490 ] [366])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20152 [0xffffffffffffb148])) [789 %sfp+-20104 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 4703 2309 2310 306 (parallel [
            (set (reg:DI 44 r15 [orig:645 ivtmp.480 ] [645])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:313 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 2310 4703 2313 306 (parallel [
            (set (reg:DI 43 r14 [1378])
                (ashiftrt:DI (reg:DI 43 r14 [1376])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 2313 2310 4806 306 (parallel [
            (set (reg/v:SI 43 r14 [orig:216 nPrimMesons ] [216])
                (mult:SI (reg:SI 43 r14 [1378])
                    (const_int -858993459 [0xffffffffcccccccd])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:313 316 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 4806 2313 4807 306 (set (pc)
        (label_ref 2623)) 667 {jump}
     (nil)
 -> 2623)
;;  succ:       312 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 4807 4806 2385)
;; basic block 307, loop depth 0, count 0, freq 37, maybe hot
;;  prev block 306, next block 308, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       312 [86.3%]  (CAN_FALLTHRU)
;; bb 307 artificial_defs: { }
;; bb 307 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 2385 4807 2386 307 439 "" [1 uses])
(note 2386 2385 2387 307 [bb 307] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2387 2386 2388 307 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:340 _462 ] [340])
            (const_int 221 [0xdd]))) mymainCascade.cc:385 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 2388 2387 2449 307 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4808)
            (pc))) mymainCascade.cc:385 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1371 (nil)))
 -> 4808)
;;  succ:       333 [13.7%]  (CAN_FALLTHRU)
;;              308 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 308, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 307, next block 309, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       307 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 308 artificial_defs: { }
;; bb 308 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 2449 2388 2450 308 [bb 308] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2450 2449 2451 308 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:340 _462 ] [340])
            (const_int 223 [0xdf]))) mymainCascade.cc:393 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 2451 2450 2506 308 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4809)
            (pc))) mymainCascade.cc:393 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1371 (nil)))
 -> 4809)
;;  succ:       339 [13.7%]  (CAN_FALLTHRU)
;;              309 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 309, loop depth 0, count 0, freq 27, maybe hot
;;  prev block 308, next block 310, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       308 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 309 artificial_defs: { }
;; bb 309 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 2506 2451 2507 309 [bb 309] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2507 2506 2508 309 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:340 _462 ] [340])
            (const_int 331 [0x14b]))) mymainCascade.cc:401 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 2508 2507 2563 309 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4810)
            (pc))) mymainCascade.cc:401 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1371 (nil)))
 -> 4810)
;;  succ:       342 [13.7%]  (CAN_FALLTHRU)
;;              310 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 310, loop depth 0, count 0, freq 24, maybe hot
;;  prev block 309, next block 311, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       309 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 310 artificial_defs: { }
;; bb 310 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 2563 2508 2564 310 [bb 310] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2564 2563 2565 310 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:340 _462 ] [340])
            (const_int 22 [0x16]))) mymainCascade.cc:409 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:340 _462 ] [340])
        (nil)))
(jump_insn:TI 2565 2564 2617 310 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4811)
            (pc))) mymainCascade.cc:409 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1371 (nil)))
 -> 4811)
;;  succ:       370 [13.7%]  (CAN_FALLTHRU)
;;              311 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 311, loop depth 0, count 0, freq 37, maybe hot
;;  prev block 310, next block 312, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       344 [100.0%]  (CAN_FALLTHRU)
;;              337 [100.0%]  (CAN_FALLTHRU)
;;              341 [100.0%]  (CAN_FALLTHRU)
;;              310 [86.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              372 [100.0%]  (CAN_FALLTHRU)
;; bb 311 artificial_defs: { }
;; bb 311 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 17 [flags] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags] 44 [r15]
;; live  kill	 17 [flags]
(code_label 2617 2565 2618 311 443 "" [4 uses])
(note 2618 2617 2619 311 [bb 311] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2619 2618 2621 311 (parallel [
            (set (reg:DI 44 r15 [orig:645 ivtmp.480 ] [645])
                (plus:DI (reg:DI 44 r15 [orig:645 ivtmp.480 ] [645])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 2621 2619 2622 311 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 42 r13 [orig:254 nMesons ] [254])
            (reg:SI 44 r15 [orig:645 ivtmp.480 ] [645]))) mymainCascade.cc:375 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 2622 2621 2623 311 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2620)
            (pc))) mymainCascade.cc:375 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 2620)
;;  succ:       318 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              312 [91.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 312, loop depth 0, count 0, freq 43, maybe hot
;;  prev block 311, next block 313, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       317 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              311 [91.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              306 [100.0%]  (CAN_FALLTHRU)
;; bb 312 artificial_defs: { }
;; bb 312 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 2623 2622 2314 312 457 "" [2 uses])
(note 2314 2623 2316 312 [bb 312] NOTE_INSN_BASIC_BLOCK)
(note 2316 2314 2317 312 NOTE_INSN_DELETED)
(insn:TI 2317 2316 2321 312 (set (reg:DI 3 bx [1383])
        (plus:DI (ashift:DI (reg:DI 44 r15 [orig:645 ivtmp.480 ] [645])
                (const_int 2 [0x2]))
            (reg:DI 44 r15 [orig:645 ivtmp.480 ] [645]))) 215 {*leadi}
     (nil))
(insn 2321 2317 2318 312 (set (reg/f:DI 2 cx [orig:1588 MEM[(struct Particle * *)&lMesons] ] [1588])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19952 [0xffffffffffffb210])) [164 MEM[(struct Particle * *)&lMesons]+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 85 {*movdi_internal}
     (nil))
(insn:TI 2318 2321 4517 312 (parallel [
            (set (reg:DI 3 bx [1384])
                (ashift:DI (reg:DI 3 bx [1383])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 530 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4517 2318 2323 312 (set (reg/f:DI 0 ax [orig:461 _589 ] [461])
        (plus:DI (reg/f:DI 2 cx [orig:1588 MEM[(struct Particle * *)&lMesons] ] [1588])
            (reg:DI 3 bx [1384]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 215 {*leadi}
     (nil))
(insn:TI 2323 4517 2324 312 (set (reg:SI 1 dx [orig:340 _462 ] [340])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 8 [0x8])) [22 MEM[(int *)_589 + 8B]+0 S4 A32])) 86 {*movsi_internal}
     (nil))
(insn:TI 2324 2323 2325 312 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:340 _462 ] [340])
            (const_int 111 [0x6f]))) mymainCascade.cc:377 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 2325 2324 2326 312 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2385)
            (pc))) mymainCascade.cc:377 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8629 (nil)))
 -> 2385)
;;  succ:       313 [13.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              307 [86.3%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 313, loop depth 0, count 0, freq 6, maybe hot
;;  prev block 312, next block 314, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       312 [13.7%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 313 artificial_defs: { }
;; bb 313 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 41 [r12]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 41 [r12]
;; live  kill	
(note 2326 2325 2328 313 [bb 313] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2328 2326 2327 313 (set (reg:DF 23 xmm2 [orig:476 _604 ] [476])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_589 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn 2327 2328 2329 313 (set (reg:SI 1 dx [orig:1582 nPi0s.75_291 ] [1582])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20008 [0xffffffffffffb1d8])) [22 nPi0s+0 S4 A64])) mymainCascade.cc:378 86 {*movsi_internal}
     (nil))
(insn:TI 2329 2327 2331 313 (set (reg:DF 21 xmm0 [orig:477 _605 ] [477])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_589 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 2331 2329 2332 313 (set (reg:DF 23 xmm2 [1386])
        (mult:DF (reg:DF 23 xmm2 [orig:476 _604 ] [476])
            (reg:DF 23 xmm2 [orig:476 _604 ] [476]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2332 2331 3809 313 (set (reg:DF 21 xmm0 [1387])
        (mult:DF (reg:DF 21 xmm0 [orig:477 _605 ] [477])
            (reg:DF 21 xmm0 [orig:477 _605 ] [477]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn 3809 2332 2330 313 (set (reg:DI 41 r12)
        (zero_extend:DI (reg:SI 1 dx [orig:1582 nPi0s.75_291 ] [1582]))) mymainCascade.cc:378 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2330 3809 2334 313 (set (reg:DF 22 xmm1 [orig:478 _606 ] [478])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)_589 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:461 _589 ] [461])
        (nil)))
(insn:TI 2334 2330 2333 313 (set (reg:DF 22 xmm1 [1389])
        (mult:DF (reg:DF 22 xmm1 [orig:478 _606 ] [478])
            (reg:DF 22 xmm1 [orig:478 _606 ] [478]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2333 2334 4516 313 (set (reg:DF 21 xmm0 [1388])
        (plus:DF (reg:DF 21 xmm0 [1387])
            (reg:DF 23 xmm2 [1386]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [1386])
        (nil)))
(insn 4516 2333 2335 313 (set (reg:DF 23 xmm2 [1838])
        (const_double:DF 0.0 [0x0.0p+0])) 126 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn:TI 2335 4516 2338 313 (set (reg:DF 21 xmm0 [orig:474 _602 ] [474])
        (plus:DF (reg:DF 21 xmm0 [1388])
            (reg:DF 22 xmm1 [1389]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1389])
        (nil)))
(insn:TI 2338 2335 2336 313 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 23 xmm2 [1838])
            (reg:DF 21 xmm0 [orig:474 _602 ] [474]))) 52 {*cmpiudf_mixed}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [1838])
        (nil)))
(insn 2336 2338 2339 313 (set (reg:DF 22 xmm1 [orig:475 _603 ] [475])
        (sqrt:DF (reg:DF 21 xmm0 [orig:474 _602 ] [474]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 857 {*sqrtdf2_sse}
     (nil))
(jump_insn:TI 2339 2336 2340 313 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 2343)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (int_list:REG_BR_PROB 9900 (nil)))
 -> 2343)
;;  succ:       314 [1.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              315 [99.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 314, loop depth 0, count 0, freq 6, maybe hot
;;  prev block 313, next block 315, flags: (REACHABLE, RTL)
;;  pred:       313 [1.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 314 artificial_defs: { }
;; bb 314 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 21 [xmm0] 22 [xmm1]
;; live  kill	
(note 2340 2339 4425 314 [bb 314] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4425 2340 2342 314 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])
        (reg:DF 22 xmm1 [orig:475 _603 ] [475])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:475 _603 ] [475])
        (nil)))
(call_insn:TI 2342 4425 3806 314 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fb2c1c85c40 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 684 {*call_value}
     (expr_list:REG_UNUSED (reg:DF 21 xmm0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fb2c1c85c40 sqrt>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn:TI 3806 2342 3807 314 (set (reg/f:DI 2 cx [orig:1588 MEM[(struct Particle * *)&lMesons] ] [1588])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19952 [0xffffffffffffb210])) [164 MEM[(struct Particle * *)&lMesons]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 3807 3806 4426 314 (set (reg:SI 1 dx [orig:1582 nPi0s.75_291 ] [1582])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20008 [0xffffffffffffb1d8])) [22 nPi0s+0 S4 A64])) 86 {*movsi_internal}
     (nil))
(insn 4426 3807 2343 314 (set (reg:DF 22 xmm1 [orig:475 _603 ] [475])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])) 126 {*movdf_internal}
     (nil))
;;  succ:       315 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 315, loop depth 0, count 0, freq 6, maybe hot
;;  prev block 314, next block 316, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       314 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              313 [99.0%]  (CAN_FALLTHRU)
;; bb 315 artificial_defs: { }
;; bb 315 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags] 21 [xmm0] 22 [xmm1] 41 [r12]
;; live  kill	 17 [flags]
(code_label 2343 4426 2344 315 440 "" [1 uses])
(note 2344 2343 2350 315 [bb 315] NOTE_INSN_BASIC_BLOCK)
(note 2350 2344 2359 315 NOTE_INSN_DELETED)
(note 2359 2350 2361 315 NOTE_INSN_DELETED)
(note 2361 2359 2346 315 NOTE_INSN_DELETED)
(insn:TI 2346 2361 2349 315 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1391 nPi0s.75_288 ] [1391])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -17024 [0xffffffffffffbd80])) [78 pPi0 S8 A64])
        (reg:DF 22 xmm1 [orig:475 _603 ] [475])) mymainCascade.cc:378 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1391 nPi0s.75_288 ] [1391])
        (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:475 _603 ] [475])
            (nil))))
(insn 2349 2346 4427 315 (parallel [
            (set (reg/f:DI 2 cx [orig:469 _597 ] [469])
                (plus:DI (reg/f:DI 2 cx [orig:1588 MEM[(struct Particle * *)&lMesons] ] [1588])
                    (reg:DI 3 bx [1384])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19904 [0xffffffffffffb240])) [164 MEM[(struct Particle * *)&lMesons]+0 S8 A128])
                (reg:DI 3 bx [1384]))
            (nil))))
(insn 4427 2349 2352 315 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S4 A64])
        (reg:SI 1 dx [orig:1582 nPi0s.75_291 ] [1582])) 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:1582 nPi0s.75_291 ] [1582])
        (nil)))
(insn:TI 2352 4427 2351 315 (set (reg:DF 22 xmm1)
        (mem:DF (plus:DI (reg/f:DI 2 cx [orig:469 _597 ] [469])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)_597 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:469 _597 ] [469])
        (nil)))
(insn:TI 2351 2352 2354 315 (set (reg:DF 21 xmm0 [orig:1394 MEM[(const struct Vec4 &)_597 + 40].xx ] [1394])
        (mem:DF (plus:DI (reg/f:DI 2 cx [orig:469 _597 ] [469])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_597 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (nil))
(call_insn:TI 2354 2351 4428 315 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn:TI 4428 2354 2360 315 (set (reg:DI 1 dx)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S4 A64]))) mymainCascade.cc:379 131 {*zero_extendsidi2}
     (nil))
(insn 2360 4428 2358 315 (parallel [
            (set (reg/f:DI 3 bx [orig:465 _593 ] [465])
                (plus:DI (reg:DI 3 bx [1384])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19952 [0xffffffffffffb210])) [164 MEM[(struct Particle * *)&lMesons]+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 2358 2360 2357 315 (set (reg:DI 41 r12)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20008 [0xffffffffffffb1d8])) [22 nPi0s+0 S4 A64]))) mymainCascade.cc:380 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2357 2358 2362 315 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:1395 nPi0s.75_291 ] [1395])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -16224 [0xffffffffffffc0a0])) [78 thetaPi0 S8 A64])
        (reg:DF 21 xmm0 [orig:466 _594 ] [466])) mymainCascade.cc:379 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:466 _594 ] [466])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:1395 nPi0s.75_291 ] [1395])
            (nil))))
(insn:TI 2362 2357 2363 315 (set (reg:DF 21 xmm0 [orig:1398 MEM[(const struct Vec4 &)_593 + 40].yy ] [1398])
        (mem:DF (plus:DI (reg/f:DI 3 bx [orig:465 _593 ] [465])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_593 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (nil))
(insn:TI 2363 2362 2365 315 (set (reg:DF 22 xmm1)
        (mem:DF (plus:DI (reg/f:DI 3 bx [orig:465 _593 ] [465])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_593 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:465 _593 ] [465])
        (nil)))
(call_insn:TI 2365 2363 2369 315 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn:TI 2369 2365 2368 315 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 43 r14 [orig:216 nPrimMesons ] [216])
            (reg:SI 44 r15 [orig:645 ivtmp.480 ] [645]))) mymainCascade.cc:381 7 {*cmpsi_1}
     (nil))
(insn 2368 2369 2372 315 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1399 nPi0s.75_293 ] [1399])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -15424 [0xffffffffffffc3c0])) [78 phiPi0 S8 A64])
        (reg:DF 21 xmm0 [orig:462 _590 ] [462])) mymainCascade.cc:380 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1399 nPi0s.75_293 ] [1399])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:462 _590 ] [462])
            (nil))))
(insn 2372 2368 2370 315 (set (reg:DI 0 ax [orig:1400 nPi0s ] [1400])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20008 [0xffffffffffffb1d8])) [22 nPi0s+0 S4 A64]))) mymainCascade.cc:381 131 {*zero_extendsidi2}
     (nil))
(jump_insn:TI 2370 2372 2371 315 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2376)
            (pc))) mymainCascade.cc:381 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 2376)
;;  succ:       316 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              369 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 316, loop depth 0, count 0, freq 3
;;  prev block 315, next block 317, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       315 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 316 artificial_defs: { }
;; bb 316 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 2371 2370 2373 316 [bb 316] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2373 2371 2380 316 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:1400 nPi0s ] [1400])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -19824 [0xffffffffffffb290])) [22 isPrimaryPi0 S4 A32])
        (const_int 1 [0x1])) mymainCascade.cc:381 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1400 nPi0s ] [1400])
        (nil)))
;;  succ:       317 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 317, loop depth 0, count 0, freq 6, maybe hot
;;  prev block 316, next block 318, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       316 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              369 [100.0%]  (CAN_FALLTHRU)
;; bb 317 artificial_defs: { }
;; bb 317 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 17 [flags] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags] 44 [r15]
;; live  kill	 17 [flags]
(code_label 2380 2373 2381 317 442 "" [1 uses])
(note 2381 2380 4724 317 [bb 317] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4724 2381 2382 317 (parallel [
            (set (reg:DI 44 r15 [orig:645 ivtmp.480 ] [645])
                (plus:DI (reg:DI 44 r15 [orig:645 ivtmp.480 ] [645])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 2382 4724 4725 317 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20008 [0xffffffffffffb1d8])) [22 nPi0s+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20008 [0xffffffffffffb1d8])) [22 nPi0s+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:383 218 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4725 2382 4726 317 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 42 r13 [orig:254 nMesons ] [254])
            (reg:SI 44 r15 [orig:645 ivtmp.480 ] [645]))) mymainCascade.cc:375 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 4726 4725 2620 317 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2623)
            (pc))) mymainCascade.cc:375 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 2623)
;;  succ:       318 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              312 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 318, loop depth 0, count 0, freq 4
;;  prev block 317, next block 319, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       305 [9.0%]  (CAN_FALLTHRU)
;;              311 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              317 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 318 artificial_defs: { }
;; bb 318 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 2620 4726 2300 318 456 "" [2 uses])
(note 2300 2620 2302 318 [bb 318] NOTE_INSN_BASIC_BLOCK)
(note 2302 2300 4424 318 NOTE_INSN_DELETED)
(insn:TI 4424 2302 2301 318 (set (reg/f:DI 5 di [orig:271 _320 ] [271])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20112 [0xffffffffffffb170])) [789 %sfp+-20064 S8 A64])) mymainCascade.cc:418 85 {*movdi_internal}
     (nil))
(insn:TI 2301 4424 2304 318 (set (reg/f:DI 0 ax [orig:1374 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1374])
        (mem/f:DI (reg/f:DI 5 di [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:418 85 {*movdi_internal}
     (nil))
(call_insn:TI 2304 2301 2628 318 (set (reg:SI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1374 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1374])
                        (const_int 816 [0x330])) [735 MEM[(int (*__vtbl_ptr_type) () *)_361 + 816B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_362;(struct TTree)_320->102) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:418 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 8 [0x8])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              319 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 319, loop depth 0, count 0, freq 4
;;  prev block 318, next block 320, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       318 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 319 artificial_defs: { }
;; bb 319 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 2628 2304 2630 319 [bb 319] NOTE_INSN_BASIC_BLOCK)
(note 2630 2628 4433 319 NOTE_INSN_DELETED)
(insn:TI 4433 2630 2629 319 (set (reg/f:DI 5 di [orig:269 _317 ] [269])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20120 [0xffffffffffffb168])) [789 %sfp+-20072 S8 A64])) mymainCascade.cc:419 85 {*movdi_internal}
     (nil))
(insn:TI 2629 4433 2632 319 (set (reg/f:DI 0 ax [orig:1466 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1466])
        (mem/f:DI (reg/f:DI 5 di [orig:269 _317 ] [269]) [150 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:419 85 {*movdi_internal}
     (nil))
(call_insn:TI 2632 2629 2633 319 (set (reg:SI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1466 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1466])
                        (const_int 816 [0x330])) [735 MEM[(int (*__vtbl_ptr_type) () *)_364 + 816B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_365;(struct TTree)_317->102) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:419 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 8 [0x8])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              320 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 320, loop depth 0, count 0, freq 4
;;  prev block 319, next block 321, flags: (REACHABLE, RTL)
;;  pred:       319 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 320 artificial_defs: { }
;; bb 320 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 41 [r12]
;; live  kill	 17 [flags]
(note 2633 2632 4280 320 [bb 320] NOTE_INSN_BASIC_BLOCK)
(note 4280 2633 4463 320 NOTE_INSN_DELETED)
(note 4463 4280 2636 320 NOTE_INSN_DELETED)
(insn:TI 2636 4463 4278 320 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 4278 2636 2634 320 (set (reg/v:SI 41 r12 [orig:132 iterationNum ] [132])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20040 [0xffffffffffffb1b8])) [789 %sfp+-19992 S4 A64])) mymainCascade.cc:421 86 {*movsi_internal}
     (nil))
(insn:TI 2634 4278 2637 320 (parallel [
            (set (reg/v:SI 41 r12 [orig:132 iterationNum ] [132])
                (minus:SI (reg/v:SI 41 r12 [orig:132 iterationNum ] [132])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20104 [0xffffffffffffb178])) [789 %sfp+-20056 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:421 261 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 2637 2634 3503 320 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              321 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 321, loop depth 0, count 0, freq 4
;;  prev block 320, next block 322, flags: (REACHABLE, RTL)
;;  pred:       320 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 321 artificial_defs: { }
;; bb 321 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3503 2637 2640 321 [bb 321] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2640 3503 2641 321 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:546 _675 ] [546])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:546 _675 ] [546])
        (nil)))
(call_insn:TI 2641 2640 3504 321 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              322 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 322, loop depth 0, count 0, freq 4
;;  prev block 321, next block 323, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       321 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 322 artificial_defs: { }
;; bb 322 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3504 2641 2645 322 [bb 322] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2645 3504 2644 322 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC123") [flags 0x2]  <var_decl 0x7fb2b65b9510 *.LC123>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2644 2645 2646 322 (set (reg:DI 1 dx)
        (const_int 23 [0x17])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2646 2644 2642 322 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:547 _676 ] [547])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:547 _676 ] [547])
        (nil)))
(insn:TI 2642 2646 2647 322 (set (reg/f:DI 3 bx [orig:547 _676 ] [547])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (nil))
(call_insn:TI 2647 2642 2648 322 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       323 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 323, loop depth 0, count 0, freq 4
;;  prev block 322, next block 324, flags: (REACHABLE, RTL)
;;  pred:       322 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 323 artificial_defs: { }
;; bb 323 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2648 2647 2649 323 [bb 323] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2649 2648 2651 323 (set (reg:DI 4 si [orig:1469 _367 ] [1469])
        (zero_extend:DI (reg:SI 41 r12 [orig:298 _367 ] [298]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 131 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 41 r12 [orig:298 _367 ] [298])
        (nil)))
(insn 2651 2649 2652 323 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:547 _676 ] [547])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:547 _676 ] [547])
        (nil)))
(call_insn:TI 2652 2651 3505 323 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              324 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 324, loop depth 0, count 0, freq 4
;;  prev block 323, next block 325, flags: (REACHABLE, RTL)
;;  pred:       323 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 324 artificial_defs: { }
;; bb 324 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3505 2652 2655 324 [bb 324] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2655 3505 2656 324 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:549 _678 ] [549])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:549 _678 ] [549])
        (nil)))
(call_insn:TI 2656 2655 4812 324 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       325 [100.0%]  (FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 325, loop depth 0, count 0, freq 4
;;  prev block 324, next block 326, flags: (NEW, RTL, MODIFIED)
;;  pred:       324 [100.0%]  (FALLTHRU)
;; bb 325 artificial_defs: { }
;; bb 325 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 4812 2656 4813 325 [bb 325] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 4813 4812 4814 325 (set (pc)
        (label_ref 4585)) 667 {jump}
     (nil)
 -> 4585)
;;  succ:       113 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4814 4813 4805)
;; basic block 326, loop depth 0, count 0, freq 1
;;  prev block 325, next block 327, flags: (REACHABLE, RTL)
;;  pred:       304 [29.0%]  (CAN_FALLTHRU)
;; bb 326 artificial_defs: { }
;; bb 326 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 4805 4814 2252 326 605 "" [1 uses])
(note 2252 4805 2256 326 [bb 326] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2256 2252 2254 326 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 2254 2256 2253 326 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC115") [flags 0x2]  <var_decl 0x7fb2b65b9000 *.LC115>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2253 2254 2257 326 (set (reg:DI 1 dx)
        (const_int 30 [0x1e])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(call_insn:TI 2257 2253 2258 326 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       327 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 327, loop depth 0, count 0, freq 1
;;  prev block 326, next block 328, flags: (REACHABLE, RTL)
;;  pred:       326 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 327 artificial_defs: { }
;; bb 327 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2258 2257 2261 327 [bb 327] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2261 2258 2259 327 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 2259 2261 2262 327 (set (reg:DI 4 si)
        (const_int 100 [0x64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 2262 2259 3500 327 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              328 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 328, loop depth 0, count 0, freq 1
;;  prev block 327, next block 329, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       327 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 328 artificial_defs: { }
;; bb 328 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 41 [r12]
;; live  kill	
(note 3500 2262 2266 328 [bb 328] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2266 3500 2265 328 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC122") [flags 0x2]  <var_decl 0x7fb2b65b9480 *.LC122>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2265 2266 2267 328 (set (reg:DI 1 dx)
        (const_int 18 [0x12])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2267 2265 2263 328 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:458 _585 ] [458])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:458 _585 ] [458])
        (nil)))
(insn:TI 2263 2267 2268 328 (set (reg/f:DI 41 r12 [orig:458 _585 ] [458])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 2268 2263 2269 328 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       329 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 329, loop depth 0, count 0, freq 1
;;  prev block 328, next block 330, flags: (REACHABLE, RTL)
;;  pred:       328 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 329 artificial_defs: { }
;; bb 329 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2269 2268 2270 329 [bb 329] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2270 2269 2272 329 (set (reg:DI 4 si [orig:1373 _584 ] [1373])
        (zero_extend:DI (reg:SI 3 bx [1369]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 131 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 3 bx [1369])
        (nil)))
(insn 2272 2270 2273 329 (set (reg:DI 5 di)
        (reg/f:DI 41 r12 [orig:458 _585 ] [458])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:458 _585 ] [458])
        (nil)))
(call_insn:TI 2273 2272 3501 329 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              330 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 330, loop depth 0, count 0, freq 1
;;  prev block 329, next block 331, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       329 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 330 artificial_defs: { }
;; bb 330 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3501 2273 2277 330 [bb 330] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2277 3501 2276 330 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC117") [flags 0x2]  <var_decl 0x7fb2b65b9120 *.LC117>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2276 2277 2278 330 (set (reg:DI 1 dx)
        (const_int 23 [0x17])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2278 2276 2274 330 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:460 _587 ] [460])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:460 _587 ] [460])
        (nil)))
(insn:TI 2274 2278 2279 330 (set (reg/f:DI 3 bx [orig:460 _587 ] [460])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 2279 2274 2280 330 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       331 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 331, loop depth 0, count 0, freq 1
;;  prev block 330, next block 332, flags: (REACHABLE, RTL)
;;  pred:       330 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 331 artificial_defs: { }
;; bb 331 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 2280 2279 2281 331 [bb 331] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2281 2280 2282 331 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:460 _587 ] [460])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:460 _587 ] [460])
        (nil)))
(call_insn:TI 2282 2281 2283 331 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       332 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 332, loop depth 0, count 0, freq 1
;;  prev block 331, next block 333, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       331 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 332 artificial_defs: { }
;; bb 332 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 42 [r13]
;; live  kill	
(note 2283 2282 2284 332 [bb 332] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2284 2283 2285 332 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20008 [0xffffffffffffb1d8])) [22 nPi0s+0 S4 A64])
        (const_int 0 [0])) mymainCascade.cc:370 86 {*movsi_internal}
     (nil))
(insn 2285 2284 88 332 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20004 [0xffffffffffffb1dc])) [22 nEtas+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:371 86 {*movsi_internal}
     (nil))
(insn 88 2285 2286 332 (set (reg/v:SI 42 r13 [orig:254 nMesons ] [254])
        (const_int 100 [0x64])) mymainCascade.cc:368 86 {*movsi_internal}
     (nil))
(insn:TI 2286 88 2287 332 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20000 [0xffffffffffffb1e0])) [22 nOmegas+0 S4 A128])
        (const_int 0 [0])) mymainCascade.cc:372 86 {*movsi_internal}
     (nil))
(insn 2287 2286 2288 332 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19996 [0xffffffffffffb1e4])) [22 nEtaPrimes+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:373 86 {*movsi_internal}
     (nil))
(insn:TI 2288 2287 4815 332 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19988 [0xffffffffffffb1ec])) [22 nGammas+0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:374 86 {*movsi_internal}
     (nil))
(jump_insn 4815 2288 4816 332 (set (pc)
        (label_ref 2307)) 667 {jump}
     (nil)
 -> 2307)
;;  succ:       306 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13]

(barrier 4816 4815 4808)
;; basic block 333, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 332, next block 334, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       307 [13.7%]  (CAN_FALLTHRU)
;; bb 333 artificial_defs: { }
;; bb 333 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; live  kill	
(code_label 4808 4816 2389 333 606 "" [1 uses])
(note 2389 4808 2391 333 [bb 333] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2391 2389 2390 333 (set (reg:DF 23 xmm2 [orig:492 _621 ] [492])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_589 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn 2390 2391 2392 333 (set (reg:DI 1 dx)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20004 [0xffffffffffffb1dc])) [22 nEtas+0 S4 A32]))) mymainCascade.cc:386 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2392 2390 2394 333 (set (reg:DF 21 xmm0 [orig:493 _622 ] [493])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_589 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 2394 2392 2395 333 (set (reg:DF 23 xmm2 [1402])
        (mult:DF (reg:DF 23 xmm2 [orig:492 _621 ] [492])
            (reg:DF 23 xmm2 [orig:492 _621 ] [492]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2395 2394 2393 333 (set (reg:DF 21 xmm0 [1403])
        (mult:DF (reg:DF 21 xmm0 [orig:493 _622 ] [493])
            (reg:DF 21 xmm0 [orig:493 _622 ] [493]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2393 2395 2397 333 (set (reg:DF 22 xmm1 [orig:494 _623 ] [494])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)_589 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 2397 2393 2396 333 (set (reg:DF 22 xmm1 [1405])
        (mult:DF (reg:DF 22 xmm1 [orig:494 _623 ] [494])
            (reg:DF 22 xmm1 [orig:494 _623 ] [494]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2396 2397 4515 333 (set (reg:DF 21 xmm0 [1404])
        (plus:DF (reg:DF 21 xmm0 [1403])
            (reg:DF 23 xmm2 [1402]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [1402])
        (nil)))
(insn 4515 2396 2398 333 (set (reg:DF 23 xmm2 [1839])
        (const_double:DF 0.0 [0x0.0p+0])) 126 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn:TI 2398 4515 2401 333 (set (reg:DF 21 xmm0 [orig:490 _619 ] [490])
        (plus:DF (reg:DF 21 xmm0 [1404])
            (reg:DF 22 xmm1 [1405]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1405])
        (nil)))
(insn:TI 2401 2398 2399 333 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 23 xmm2 [1839])
            (reg:DF 21 xmm0 [orig:490 _619 ] [490]))) 52 {*cmpiudf_mixed}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [1839])
        (nil)))
(insn 2399 2401 2402 333 (set (reg:DF 22 xmm1 [orig:491 _620 ] [491])
        (sqrt:DF (reg:DF 21 xmm0 [orig:490 _619 ] [490]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 857 {*sqrtdf2_sse}
     (nil))
(jump_insn:TI 2402 2399 3415 333 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4817)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (int_list:REG_BR_PROB 100 (nil)))
 -> 4817)
;;  succ:       338 [1.0%]  (CAN_FALLTHRU)
;;              334 [99.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]

;; basic block 334, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 333, next block 335, flags: (REACHABLE, RTL)
;;  pred:       333 [99.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 334 artificial_defs: { }
;; bb 334 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 41 [r12]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 41 [r12]
;; live  kill	
(note 3415 2402 91 334 [bb 334] NOTE_INSN_BASIC_BLOCK)
(insn:TI 91 3415 2409 334 (set (reg:DI 41 r12)
        (zero_extend:DI (reg:SI 1 dx [orig:262 nEtas.77_302 ] [262]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 131 {*zero_extendsidi2}
     (nil))
;;  succ:       335 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 335, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 334, next block 336, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       334 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              338 [100.0%]  (CAN_FALLTHRU)
;; bb 335 artificial_defs: { }
;; bb 335 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 22 [xmm1] 41 [r12] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 21 [xmm0] 22 [xmm1] 41 [r12]
;; live  kill	 17 [flags]
(code_label 2409 91 2410 335 445 "" [1 uses])
(note 2410 2409 2413 335 [bb 335] NOTE_INSN_BASIC_BLOCK)
(note 2413 2410 2422 335 NOTE_INSN_DELETED)
(note 2422 2413 2424 335 NOTE_INSN_DELETED)
(note 2424 2422 2412 335 NOTE_INSN_DELETED)
(insn:TI 2412 2424 2415 335 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:1408 nEtas.77_302 ] [1408])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -14624 [0xffffffffffffc6e0])) [78 pEta S8 A64])
        (reg:DF 22 xmm1 [orig:491 _620 ] [491])) mymainCascade.cc:386 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:491 _620 ] [491])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:1408 nEtas.77_302 ] [1408])
            (nil))))
(insn:TI 2415 2412 2414 335 (set (reg:DF 22 xmm1)
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:799 _1331 ] [799])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)prephitmp_1672 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:799 _1331 ] [799])
        (nil)))
(insn:TI 2414 2415 2417 335 (set (reg:DF 21 xmm0 [orig:1410 MEM[(const struct Vec4 &)prephitmp_1672 + 40].xx ] [1410])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:799 _1331 ] [799])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)prephitmp_1672 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (nil))
(call_insn:TI 2417 2414 2423 335 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn:TI 2423 2417 2420 335 (parallel [
            (set (reg/f:DI 3 bx [orig:482 _610 ] [482])
                (plus:DI (reg:DI 3 bx [1384])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19952 [0xffffffffffffb210])) [164 MEM[(struct Particle * *)&lMesons]+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 2420 2423 2421 335 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1411 pretmp_1352 ] [1411])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -13824 [0xffffffffffffca00])) [78 thetaEta S8 A64])
        (reg:DF 21 xmm0 [orig:483 _611 ] [483])) mymainCascade.cc:387 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1411 pretmp_1352 ] [1411])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:483 _611 ] [483])
            (nil))))
(insn 2421 2420 2425 335 (set (reg:DI 41 r12)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20004 [0xffffffffffffb1dc])) [22 nEtas+0 S4 A32]))) mymainCascade.cc:388 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2425 2421 2426 335 (set (reg:DF 21 xmm0 [orig:1414 MEM[(const struct Vec4 &)_610 + 40].yy ] [1414])
        (mem:DF (plus:DI (reg/f:DI 3 bx [orig:482 _610 ] [482])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_610 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (nil))
(insn:TI 2426 2425 2428 335 (set (reg:DF 22 xmm1)
        (mem:DF (plus:DI (reg/f:DI 3 bx [orig:482 _610 ] [482])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_610 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:482 _610 ] [482])
        (nil)))
(call_insn:TI 2428 2426 2432 335 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn:TI 2432 2428 2431 335 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 43 r14 [orig:216 nPrimMesons ] [216])
            (reg:SI 44 r15 [orig:645 ivtmp.480 ] [645]))) mymainCascade.cc:389 7 {*cmpsi_1}
     (nil))
(insn 2431 2432 2435 335 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1415 nEtas.77_307 ] [1415])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -13024 [0xffffffffffffcd20])) [78 phiEta S8 A64])
        (reg:DF 21 xmm0 [orig:479 _607 ] [479])) mymainCascade.cc:388 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1415 nEtas.77_307 ] [1415])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:479 _607 ] [479])
            (nil))))
(insn 2435 2431 2433 335 (set (reg:DI 0 ax [orig:1416 nEtas ] [1416])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20004 [0xffffffffffffb1dc])) [22 nEtas+0 S4 A32]))) mymainCascade.cc:389 131 {*zero_extendsidi2}
     (nil))
(jump_insn:TI 2433 2435 2434 335 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2439)
            (pc))) mymainCascade.cc:389 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 2439)
;;  succ:       336 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              345 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 336, loop depth 0, count 0, freq 3
;;  prev block 335, next block 337, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       335 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 336 artificial_defs: { }
;; bb 336 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 2434 2433 2436 336 [bb 336] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2436 2434 2443 336 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:1416 nEtas ] [1416])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -19424 [0xffffffffffffb420])) [22 isPrimaryEta S4 A32])
        (const_int 1 [0x1])) mymainCascade.cc:389 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1416 nEtas ] [1416])
        (nil)))
;;  succ:       337 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 337, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 336, next block 338, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       336 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              345 [100.0%]  (CAN_FALLTHRU)
;; bb 337 artificial_defs: { }
;; bb 337 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	 17 [flags]
(code_label 2443 2436 2444 337 447 "" [1 uses])
(note 2444 2443 2445 337 [bb 337] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2445 2444 4818 337 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20004 [0xffffffffffffb1dc])) [22 nEtas+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20004 [0xffffffffffffb1dc])) [22 nEtas+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:391 218 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 4818 2445 4819 337 (set (pc)
        (label_ref 2617)) 667 {jump}
     (nil)
 -> 2617)
;;  succ:       311 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 4819 4818 4817)
;; basic block 338, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 337, next block 339, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       333 [1.0%]  (CAN_FALLTHRU)
;; bb 338 artificial_defs: { }
;; bb 338 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 21 [xmm0] 22 [xmm1] 41 [r12]
;; live  kill	 17 [flags]
(code_label 4817 4819 2403 338 610 "" [1 uses])
(note 2403 4817 2407 338 [bb 338] NOTE_INSN_BASIC_BLOCK)
(note 2407 2403 4431 338 NOTE_INSN_DELETED)
(insn:TI 4431 2407 4429 338 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])
        (reg:DF 22 xmm1 [orig:491 _620 ] [491])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:491 _620 ] [491])
        (nil)))
(insn 4429 4431 2405 338 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S4 A64])
        (reg:SI 1 dx [orig:262 nEtas.77_302 ] [262])) 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:262 nEtas.77_302 ] [262])
        (nil)))
(call_insn:TI 2405 4429 4269 338 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fb2c1c85c40 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 684 {*call_value}
     (expr_list:REG_UNUSED (reg:DF 21 xmm0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fb2c1c85c40 sqrt>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn:TI 4269 2405 2406 338 (set (reg/f:DI 0 ax [orig:799 _1331 ] [799])
        (reg:DI 3 bx [1384])) 85 {*movdi_internal}
     (nil))
(insn 2406 4269 2408 338 (set (reg:DI 41 r12)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20004 [0xffffffffffffb1dc])) [22 nEtas+0 S4 A32]))) 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2408 2406 4430 338 (parallel [
            (set (reg/f:DI 0 ax [orig:799 _1331 ] [799])
                (plus:DI (reg/f:DI 0 ax [orig:799 _1331 ] [799])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19952 [0xffffffffffffb210])) [164 MEM[(struct Particle * *)&lMesons]+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 4430 2408 4432 338 (set (reg:DI 1 dx)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S4 A64]))) 131 {*zero_extendsidi2}
     (nil))
(insn:TI 4432 4430 4820 338 (set (reg:DF 22 xmm1 [orig:491 _620 ] [491])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])) 126 {*movdf_internal}
     (nil))
(jump_insn 4820 4432 4821 338 (set (pc)
        (label_ref 2409)) 667 {jump}
     (nil)
 -> 2409)
;;  succ:       335 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 4821 4820 4809)
;; basic block 339, loop depth 0, count 0, freq 4
;;  prev block 338, next block 340, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       308 [13.7%]  (CAN_FALLTHRU)
;; bb 339 artificial_defs: { }
;; bb 339 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 41 [r12]
;; live  kill	 17 [flags]
(code_label 4809 4821 2452 339 607 "" [1 uses])
(note 2452 4809 2468 339 [bb 339] NOTE_INSN_BASIC_BLOCK)
(note 2468 2452 2470 339 NOTE_INSN_DELETED)
(note 2470 2468 2479 339 NOTE_INSN_DELETED)
(note 2479 2470 2481 339 NOTE_INSN_DELETED)
(note 2481 2479 2454 339 NOTE_INSN_DELETED)
(insn:TI 2454 2481 2453 339 (set (reg:DF 23 xmm2 [orig:509 _638 ] [509])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_589 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn 2453 2454 2455 339 (set (reg:DI 41 r12)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20000 [0xffffffffffffb1e0])) [22 nOmegas+0 S4 A128]))) mymainCascade.cc:394 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2455 2453 2457 339 (set (reg:DF 22 xmm1 [orig:510 _639 ] [510])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_589 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 2457 2455 2458 339 (set (reg:DF 23 xmm2 [1418])
        (mult:DF (reg:DF 23 xmm2 [orig:509 _638 ] [509])
            (reg:DF 23 xmm2 [orig:509 _638 ] [509]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2458 2457 2456 339 (set (reg:DF 22 xmm1 [1419])
        (mult:DF (reg:DF 22 xmm1 [orig:510 _639 ] [510])
            (reg:DF 22 xmm1 [orig:510 _639 ] [510]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2456 2458 2460 339 (set (reg:DF 21 xmm0 [orig:511 _640 ] [511])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)_589 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:461 _589 ] [461])
        (nil)))
(insn:TI 2460 2456 2459 339 (set (reg:DF 21 xmm0 [1421])
        (mult:DF (reg:DF 21 xmm0 [orig:511 _640 ] [511])
            (reg:DF 21 xmm0 [orig:511 _640 ] [511]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2459 2460 2461 339 (set (reg:DF 22 xmm1 [1420])
        (plus:DF (reg:DF 22 xmm1 [1419])
            (reg:DF 23 xmm2 [1418]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [1418])
        (nil)))
(insn:TI 2461 2459 2463 339 (set (reg:DF 21 xmm0 [1422])
        (plus:DF (reg:DF 21 xmm0 [1421])
            (reg:DF 22 xmm1 [1420]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1420])
        (nil)))
(call_insn:TI 2463 2461 4271 339 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fb2c1c85c40 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 684 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fb2c1c85c40 sqrt>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn:TI 4271 2463 2469 339 (set (reg/f:DI 0 ax [orig:502 _631 ] [502])
        (reg:DI 3 bx [1384])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 85 {*movdi_internal}
     (nil))
(insn 2469 4271 2466 339 (parallel [
            (set (reg/f:DI 0 ax [orig:502 _631 ] [502])
                (plus:DI (reg/f:DI 0 ax [orig:502 _631 ] [502])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19952 [0xffffffffffffb210])) [164 MEM[(struct Particle * *)&lMesons]+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 2466 2469 2467 339 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1423 nOmegas.79_316 ] [1423])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -12224 [0xffffffffffffd040])) [78 pOmega S8 A64])
        (reg:DF 21 xmm0 [orig:508 _637 ] [508])) mymainCascade.cc:394 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1423 nOmegas.79_316 ] [1423])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:508 _637 ] [508])
            (nil))))
(insn:TI 2467 2466 2472 339 (set (reg:DI 41 r12)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20000 [0xffffffffffffb1e0])) [22 nOmegas+0 S4 A128]))) mymainCascade.cc:395 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2472 2467 2471 339 (set (reg:DF 22 xmm1)
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:502 _631 ] [502])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)_631 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:502 _631 ] [502])
        (nil)))
(insn:TI 2471 2472 2474 339 (set (reg:DF 21 xmm0 [orig:1426 MEM[(const struct Vec4 &)_631 + 40].xx ] [1426])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:502 _631 ] [502])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_631 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (nil))
(call_insn:TI 2474 2471 2480 339 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn:TI 2480 2474 2477 339 (parallel [
            (set (reg/f:DI 3 bx [orig:498 _627 ] [498])
                (plus:DI (reg:DI 3 bx [1384])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19952 [0xffffffffffffb210])) [164 MEM[(struct Particle * *)&lMesons]+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 2477 2480 2478 339 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1427 nOmegas.79_319 ] [1427])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -11424 [0xffffffffffffd360])) [78 thetaOmega S8 A64])
        (reg:DF 21 xmm0 [orig:499 _628 ] [499])) mymainCascade.cc:395 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1427 nOmegas.79_319 ] [1427])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:499 _628 ] [499])
            (nil))))
(insn 2478 2477 2482 339 (set (reg:DI 41 r12)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20000 [0xffffffffffffb1e0])) [22 nOmegas+0 S4 A128]))) mymainCascade.cc:396 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2482 2478 2483 339 (set (reg:DF 21 xmm0 [orig:1430 MEM[(const struct Vec4 &)_627 + 40].yy ] [1430])
        (mem:DF (plus:DI (reg/f:DI 3 bx [orig:498 _627 ] [498])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_627 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (nil))
(insn:TI 2483 2482 2485 339 (set (reg:DF 22 xmm1)
        (mem:DF (plus:DI (reg/f:DI 3 bx [orig:498 _627 ] [498])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_627 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:498 _627 ] [498])
        (nil)))
(call_insn:TI 2485 2483 2489 339 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn:TI 2489 2485 2488 339 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 43 r14 [orig:216 nPrimMesons ] [216])
            (reg:SI 44 r15 [orig:645 ivtmp.480 ] [645]))) mymainCascade.cc:397 7 {*cmpsi_1}
     (nil))
(insn 2488 2489 2492 339 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1431 nOmegas.79_322 ] [1431])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -10624 [0xffffffffffffd680])) [78 phiOmega S8 A64])
        (reg:DF 21 xmm0 [orig:495 _624 ] [495])) mymainCascade.cc:396 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1431 nOmegas.79_322 ] [1431])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:495 _624 ] [495])
            (nil))))
(insn 2492 2488 2490 339 (set (reg:DI 0 ax [orig:1432 nOmegas ] [1432])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20000 [0xffffffffffffb1e0])) [22 nOmegas+0 S4 A128]))) mymainCascade.cc:397 131 {*zero_extendsidi2}
     (nil))
(jump_insn:TI 2490 2492 2491 339 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2496)
            (pc))) mymainCascade.cc:397 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 2496)
;;  succ:       340 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              373 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 340, loop depth 0, count 0, freq 2
;;  prev block 339, next block 341, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       339 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 340 artificial_defs: { }
;; bb 340 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 2491 2490 2493 340 [bb 340] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2493 2491 2500 340 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:1432 nOmegas ] [1432])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -19024 [0xffffffffffffb5b0])) [22 isPrimaryOmega S4 A32])
        (const_int 1 [0x1])) mymainCascade.cc:397 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1432 nOmegas ] [1432])
        (nil)))
;;  succ:       341 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 341, loop depth 0, count 0, freq 4
;;  prev block 340, next block 342, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       340 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              373 [100.0%]  (CAN_FALLTHRU)
;; bb 341 artificial_defs: { }
;; bb 341 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	 17 [flags]
(code_label 2500 2493 2501 341 450 "" [1 uses])
(note 2501 2500 2502 341 [bb 341] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2502 2501 4822 341 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20000 [0xffffffffffffb1e0])) [22 nOmegas+0 S4 A128])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20000 [0xffffffffffffb1e0])) [22 nOmegas+0 S4 A128])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:399 218 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 4822 2502 4823 341 (set (pc)
        (label_ref 2617)) 667 {jump}
     (nil)
 -> 2617)
;;  succ:       311 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 4823 4822 4810)
;; basic block 342, loop depth 0, count 0, freq 4
;;  prev block 341, next block 343, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       309 [13.7%]  (CAN_FALLTHRU)
;; bb 342 artificial_defs: { }
;; bb 342 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 41 [r12]
;; live  kill	 17 [flags]
(code_label 4810 4823 2509 342 608 "" [1 uses])
(note 2509 4810 2525 342 [bb 342] NOTE_INSN_BASIC_BLOCK)
(note 2525 2509 2527 342 NOTE_INSN_DELETED)
(note 2527 2525 2536 342 NOTE_INSN_DELETED)
(note 2536 2527 2538 342 NOTE_INSN_DELETED)
(note 2538 2536 2511 342 NOTE_INSN_DELETED)
(insn:TI 2511 2538 2510 342 (set (reg:DF 23 xmm2 [orig:526 _655 ] [526])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_589 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn 2510 2511 2512 342 (set (reg:DI 41 r12)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -19996 [0xffffffffffffb1e4])) [22 nEtaPrimes+0 S4 A32]))) mymainCascade.cc:402 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2512 2510 2514 342 (set (reg:DF 22 xmm1 [orig:527 _656 ] [527])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_589 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 2514 2512 2515 342 (set (reg:DF 23 xmm2 [1434])
        (mult:DF (reg:DF 23 xmm2 [orig:526 _655 ] [526])
            (reg:DF 23 xmm2 [orig:526 _655 ] [526]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2515 2514 2513 342 (set (reg:DF 22 xmm1 [1435])
        (mult:DF (reg:DF 22 xmm1 [orig:527 _656 ] [527])
            (reg:DF 22 xmm1 [orig:527 _656 ] [527]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2513 2515 2517 342 (set (reg:DF 21 xmm0 [orig:528 _657 ] [528])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)_589 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:461 _589 ] [461])
        (nil)))
(insn:TI 2517 2513 2516 342 (set (reg:DF 21 xmm0 [1437])
        (mult:DF (reg:DF 21 xmm0 [orig:528 _657 ] [528])
            (reg:DF 21 xmm0 [orig:528 _657 ] [528]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2516 2517 2518 342 (set (reg:DF 22 xmm1 [1436])
        (plus:DF (reg:DF 22 xmm1 [1435])
            (reg:DF 23 xmm2 [1434]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [1434])
        (nil)))
(insn:TI 2518 2516 2520 342 (set (reg:DF 21 xmm0 [1438])
        (plus:DF (reg:DF 21 xmm0 [1437])
            (reg:DF 22 xmm1 [1436]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1436])
        (nil)))
(call_insn:TI 2520 2518 4273 342 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fb2c1c85c40 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 684 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fb2c1c85c40 sqrt>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn:TI 4273 2520 2526 342 (set (reg/f:DI 0 ax [orig:519 _648 ] [519])
        (reg:DI 3 bx [1384])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 85 {*movdi_internal}
     (nil))
(insn 2526 4273 2523 342 (parallel [
            (set (reg/f:DI 0 ax [orig:519 _648 ] [519])
                (plus:DI (reg/f:DI 0 ax [orig:519 _648 ] [519])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19952 [0xffffffffffffb210])) [164 MEM[(struct Particle * *)&lMesons]+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 2523 2526 2524 342 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1439 nEtaPrimes.81_331 ] [1439])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -9824 [0xffffffffffffd9a0])) [78 pEtaPrime S8 A64])
        (reg:DF 21 xmm0 [orig:525 _654 ] [525])) mymainCascade.cc:402 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1439 nEtaPrimes.81_331 ] [1439])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:525 _654 ] [525])
            (nil))))
(insn:TI 2524 2523 2529 342 (set (reg:DI 41 r12)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -19996 [0xffffffffffffb1e4])) [22 nEtaPrimes+0 S4 A32]))) mymainCascade.cc:403 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2529 2524 2528 342 (set (reg:DF 22 xmm1)
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:519 _648 ] [519])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)_648 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:519 _648 ] [519])
        (nil)))
(insn:TI 2528 2529 2531 342 (set (reg:DF 21 xmm0 [orig:1442 MEM[(const struct Vec4 &)_648 + 40].xx ] [1442])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:519 _648 ] [519])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_648 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (nil))
(call_insn:TI 2531 2528 2537 342 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn:TI 2537 2531 2534 342 (parallel [
            (set (reg/f:DI 3 bx [orig:515 _644 ] [515])
                (plus:DI (reg:DI 3 bx [1384])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19952 [0xffffffffffffb210])) [164 MEM[(struct Particle * *)&lMesons]+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 2534 2537 2535 342 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1443 nEtaPrimes.81_334 ] [1443])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -9024 [0xffffffffffffdcc0])) [78 thetaEtaPrime S8 A64])
        (reg:DF 21 xmm0 [orig:516 _645 ] [516])) mymainCascade.cc:403 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1443 nEtaPrimes.81_334 ] [1443])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:516 _645 ] [516])
            (nil))))
(insn 2535 2534 2539 342 (set (reg:DI 41 r12)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -19996 [0xffffffffffffb1e4])) [22 nEtaPrimes+0 S4 A32]))) mymainCascade.cc:404 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2539 2535 2540 342 (set (reg:DF 21 xmm0 [orig:1446 MEM[(const struct Vec4 &)_644 + 40].yy ] [1446])
        (mem:DF (plus:DI (reg/f:DI 3 bx [orig:515 _644 ] [515])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_644 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (nil))
(insn:TI 2540 2539 2542 342 (set (reg:DF 22 xmm1)
        (mem:DF (plus:DI (reg/f:DI 3 bx [orig:515 _644 ] [515])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_644 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:515 _644 ] [515])
        (nil)))
(call_insn:TI 2542 2540 2546 342 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn:TI 2546 2542 2545 342 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 43 r14 [orig:216 nPrimMesons ] [216])
            (reg:SI 44 r15 [orig:645 ivtmp.480 ] [645]))) mymainCascade.cc:405 7 {*cmpsi_1}
     (nil))
(insn 2545 2546 2549 342 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1447 nEtaPrimes.81_336 ] [1447])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -8224 [0xffffffffffffdfe0])) [78 phiEtaPrime S8 A64])
        (reg:DF 21 xmm0 [orig:512 _641 ] [512])) mymainCascade.cc:404 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1447 nEtaPrimes.81_336 ] [1447])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:512 _641 ] [512])
            (nil))))
(insn 2549 2545 2547 342 (set (reg:DI 0 ax [orig:1448 nEtaPrimes ] [1448])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -19996 [0xffffffffffffb1e4])) [22 nEtaPrimes+0 S4 A32]))) mymainCascade.cc:405 131 {*zero_extendsidi2}
     (nil))
(jump_insn:TI 2547 2549 2548 342 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2553)
            (pc))) mymainCascade.cc:405 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 2553)
;;  succ:       343 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              374 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 343, loop depth 0, count 0, freq 2
;;  prev block 342, next block 344, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       342 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 343 artificial_defs: { }
;; bb 343 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 2548 2547 2550 343 [bb 343] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2550 2548 2557 343 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:1448 nEtaPrimes ] [1448])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -18624 [0xffffffffffffb740])) [22 isPrimaryEtaPrime S4 A32])
        (const_int 1 [0x1])) mymainCascade.cc:405 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1448 nEtaPrimes ] [1448])
        (nil)))
;;  succ:       344 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 344, loop depth 0, count 0, freq 4
;;  prev block 343, next block 345, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       343 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              374 [100.0%]  (CAN_FALLTHRU)
;; bb 344 artificial_defs: { }
;; bb 344 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	 17 [flags]
(code_label 2557 2550 2558 344 453 "" [1 uses])
(note 2558 2557 2559 344 [bb 344] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2559 2558 4824 344 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -19996 [0xffffffffffffb1e4])) [22 nEtaPrimes+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19996 [0xffffffffffffb1e4])) [22 nEtaPrimes+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:407 218 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 4824 2559 4825 344 (set (pc)
        (label_ref 2617)) 667 {jump}
     (nil)
 -> 2617)
;;  succ:       311 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 4825 4824 2439)
;; basic block 345, loop depth 0, count 0, freq 3
;;  prev block 344, next block 346, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       335 [50.0%]  (CAN_FALLTHRU)
;; bb 345 artificial_defs: { }
;; bb 345 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 2439 4825 2440 345 446 "" [1 uses])
(note 2440 2439 2442 345 [bb 345] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2442 2440 4826 345 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:1417 nEtas ] [1417])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -19424 [0xffffffffffffb420])) [22 isPrimaryEta S4 A32])
        (const_int 0 [0])) mymainCascade.cc:390 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1417 nEtas ] [1417])
        (nil)))
(jump_insn 4826 2442 4827 345 (set (pc)
        (label_ref 2443)) 667 {jump}
     (nil)
 -> 2443)
;;  succ:       337 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 4827 4826 4768)
;; basic block 346, loop depth 0, count 0, freq 3
;;  prev block 345, next block 347, flags: (REACHABLE, RTL)
;;  pred:       208 [3.9%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 346 artificial_defs: { }
;; bb 346 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 4768 4827 1689 346 597 "" [1 uses])
(note 1689 4768 1693 346 [bb 346] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1693 1689 1691 346 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1691 1693 1690 346 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC118") [flags 0x2]  <var_decl 0x7fb2b65b91b0 *.LC118>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1690 1691 1694 346 (set (reg:DI 1 dx)
        (const_int 21 [0x15])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(call_insn:TI 1694 1690 1695 346 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       347 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 347, loop depth 0, count 0, freq 3
;;  prev block 346, next block 348, flags: (REACHABLE, RTL)
;;  pred:       346 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 347 artificial_defs: { }
;; bb 347 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1695 1694 1699 347 [bb 347] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1699 1695 1696 347 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1696 1699 1700 347 (set (reg:DI 4 si [orig:1251 absId ] [1251])
        (zero_extend:DI (reg/v:SI 3 bx [orig:235 absId ] [235]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 131 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:235 absId ] [235])
        (nil)))
(call_insn:TI 1700 1696 3476 347 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH)
;;              348 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 348, loop depth 0, count 0, freq 3
;;  prev block 347, next block 349, flags: (REACHABLE, RTL)
;;  pred:       347 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 348 artificial_defs: { }
;; bb 348 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3476 1700 1703 348 [bb 348] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1703 3476 1704 348 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:401 _526 ] [401])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:401 _526 ] [401])
        (nil)))
(call_insn:TI 1704 1703 1705 348 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       349 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 349, loop depth 0, count 0, freq 4
;;  prev block 348, next block 350, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       348 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 349 artificial_defs: { }
;; bb 349 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 17 [flags] 41 [r12] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags] 41 [r12] 44 [r15]
;; live  kill	 17 [flags]
(note 1705 1704 1707 349 [bb 349] NOTE_INSN_BASIC_BLOCK)
(note 1707 1705 1706 349 NOTE_INSN_DELETED)
(insn:TI 1706 1707 4239 349 (set (reg/f:DI 1 dx [orig:404 _529 ] [404])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19984 [0xffffffffffffb1f0])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 4239 1706 1710 349 (set (reg:DI 0 ax [1253])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19976 [0xffffffffffffb1f8])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 1710 4239 4709 349 (set (reg:DI 44 r15 [1258])
        (const_int -3689348814741910323 [0xcccccccccccccccd])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int -3689348814741910323 [0xcccccccccccccccd])
        (nil)))
(insn:TI 4709 1710 4710 349 (parallel [
            (set (reg:DI 3 bx [orig:239 _257 ] [239])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:340 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 4710 4709 1708 349 (parallel [
            (set (reg:DI 41 r12 [orig:248 iP ] [248])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:340 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1708 4710 1709 349 (parallel [
            (set (reg:DI 0 ax [1253])
                (minus:DI (reg:DI 0 ax [1253])
                    (reg/f:DI 1 dx [orig:404 _529 ] [404])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19928 [0xffffffffffffb228])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])
                (reg/f:DI 1 dx [orig:404 _529 ] [404]))
            (nil))))
(insn:TI 1709 1708 1711 349 (parallel [
            (set (reg:DI 0 ax [1256])
                (ashiftrt:DI (reg:DI 0 ax [1253])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1711 1709 1712 349 (parallel [
            (set (reg:DI 0 ax [1257])
                (mult:DI (reg:DI 0 ax [1256])
                    (reg:DI 44 r15 [1258])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1712 1711 1713 349 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [1257])
            (const_int 0 [0]))) mymainCascade.cc:340 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [1257])
        (nil)))
(jump_insn:TI 1713 1712 4828 349 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3865)
            (pc))) mymainCascade.cc:340 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 3865)
;;  succ:       355 [100.0%]  (CAN_FALLTHRU)
;;              350 [0.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 350, loop depth 0, count 0, freq 0
;;  prev block 349, next block 351, flags: (NEW, RTL, MODIFIED)
;;  pred:       349 [0.0%]  (FALLTHRU)
;; bb 350 artificial_defs: { }
;; bb 350 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 4828 1713 4829 350 [bb 350] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 4829 4828 4830 350 (set (pc)
        (label_ref 1827)) 667 {jump}
     (nil)
 -> 1827)
;;  succ:       377 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

(barrier 4830 4829 4832)
;; basic block 351, loop depth 0, count 0, freq 2242, maybe hot
;;  prev block 350, next block 352, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       364 [61.0%]  (CAN_FALLTHRU)
;; bb 351 artificial_defs: { }
;; bb 351 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(code_label 4832 4830 1784 351 612 "" [1 uses])
(note 1784 4832 1785 351 [bb 351] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1785 1784 1806 351 (set (reg:SI 4 si [orig:871 prephitmp_1444 ] [871])
        (sign_extend:SI (mem/j:QI (plus:DI (reg/f:DI 3 bx [orig:802 _1336 ] [802])
                    (const_int 67 [0x43])) [0 MEM[(const struct ctype *)_1336]._M_widen+10 S1 A8]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:802 _1336 ] [802])
        (nil)))
;;  succ:       352 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 352, loop depth 0, count 0, freq 3674, maybe hot
;;  prev block 351, next block 353, flags: (REACHABLE, RTL)
;;  pred:       351 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              366 [80.0%]  (CAN_FALLTHRU)
;;              368 [100.0%]  (CAN_FALLTHRU)
;; bb 352 artificial_defs: { }
;; bb 352 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 1806 1785 1807 352 413 "" [2 uses])
(note 1807 1806 1809 352 [bb 352] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1809 1807 1810 352 (set (reg:DI 5 di)
        (reg/f:DI 42 r13 [orig:247 _267 ] [247])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [orig:247 _267 ] [247])
        (nil)))
(call_insn:TI 1810 1809 3482 352 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>) [0 put S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo3putEc") [flags 0x41]  <function_decl 0x7fb2bdeeb9a0 put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              353 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 353, loop depth 0, count 0, freq 3674, maybe hot
;;  prev block 352, next block 354, flags: (REACHABLE, RTL)
;;  pred:       352 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 353 artificial_defs: { }
;; bb 353 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3482 1810 1813 353 [bb 353] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1813 3482 1814 353 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:800 _1333 ] [800])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:800 _1333 ] [800])
        (nil)))
(call_insn:TI 1814 1813 1815 353 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>) [0 flush S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:613 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo5flushEv") [flags 0x41]  <function_decl 0x7fb2bdeebc40 flush>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       354 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 354, loop depth 0, count 0, freq 3674, maybe hot
;;  prev block 353, next block 355, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       353 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 354 artificial_defs: { }
;; bb 354 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 17 [flags] 41 [r12]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(note 1815 1814 1820 354 [bb 354] NOTE_INSN_BASIC_BLOCK)
(note 1820 1815 1818 354 NOTE_INSN_DELETED)
(insn:TI 1818 1820 4242 354 (set (reg/f:DI 1 dx [orig:404 _529 ] [404])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19984 [0xffffffffffffb1f0])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 4242 1818 4864 354 (set (reg:DI 0 ax [1270])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19976 [0xffffffffffffb1f8])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 85 {*movdi_internal}
     (nil))
(insn 4864 4242 4544 354 (set (reg:DI 3 bx)
        (zero_extend:DI (plus:SI (reg/v:SI 41 r12 [orig:248 iP ] [248])
                (const_int 1 [0x1])))) mymainCascade.cc:340 215 {*leadi}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:248 iP ] [248])
        (nil)))
(insn:TI 4544 4864 1821 354 (set (reg:DI 41 r12)
        (reg:DI 3 bx)) mymainCascade.cc:340 85 {*movdi_internal}
     (nil))
(insn:TI 1821 4544 1822 354 (parallel [
            (set (reg:DI 0 ax [1270])
                (minus:DI (reg:DI 0 ax [1270])
                    (reg/f:DI 1 dx [orig:404 _529 ] [404])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 262 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -19928 [0xffffffffffffb228])) [164 lStash.D.138156._M_impl._M_finish+0 S8 A64])
                (reg/f:DI 1 dx [orig:404 _529 ] [404]))
            (nil))))
(insn:TI 1822 1821 1824 354 (parallel [
            (set (reg:DI 0 ax [1273])
                (ashiftrt:DI (reg:DI 0 ax [1270])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 565 {*ashrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1824 1822 1825 354 (parallel [
            (set (reg:DI 0 ax [1274])
                (mult:DI (reg:DI 0 ax [1273])
                    (reg:DI 44 r15 [1636])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:656 317 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1825 1824 1826 354 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 3 bx [orig:239 _257 ] [239])
            (reg:DI 0 ax [1274]))) mymainCascade.cc:340 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [1274])
        (nil)))
(jump_insn:TI 1826 1825 3865 354 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1827)
            (pc))) mymainCascade.cc:340 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 1827)
;;  succ:       355 [100.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              377 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 355, loop depth 0, count 0, freq 3675, maybe hot
;;  prev block 354, next block 356, flags: (REACHABLE, RTL)
;;  pred:       349 [100.0%]  (CAN_FALLTHRU)
;;              354 [100.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;; bb 355 artificial_defs: { }
;; bb 355 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 25 [xmm4] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
(code_label 3865 1826 3864 355 546 "" [1 uses])
(note 3864 3865 1722 355 [bb 355] NOTE_INSN_BASIC_BLOCK)
(note 1722 3864 4475 355 NOTE_INSN_DELETED)
(note 4475 1722 4418 355 NOTE_INSN_DELETED)
(note 4418 4475 1723 355 NOTE_INSN_DELETED)
(insn:TI 1723 4418 1733 355 (set (reg:DI 0 ax [1261])
        (plus:DI (ashift:DI (reg:DI 3 bx [orig:239 _257 ] [239])
                (const_int 2 [0x2]))
            (reg:DI 3 bx [orig:239 _257 ] [239]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 215 {*leadi}
     (nil))
(insn 1733 1723 1731 355 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1731 1733 1724 355 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC119") [flags 0x2]  <var_decl 0x7fb2b65b92d0 *.LC119>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 1724 1731 1726 355 (parallel [
            (set (reg:DI 0 ax [1262])
                (ashift:DI (reg:DI 0 ax [1261])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 530 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1726 1724 1730 355 (parallel [
            (set (reg/f:DI 0 ax [orig:411 _536 ] [411])
                (plus:DI (reg:DI 0 ax [1262])
                    (reg/f:DI 1 dx [orig:404 _529 ] [404])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 219 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:404 _529 ] [404])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1730 1726 1728 355 (set (reg:DI 1 dx)
        (const_int 19 [0x13])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 1728 1730 1727 355 (set (reg:DF 25 xmm4 [orig:409 _534 ] [409])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:411 _536 ] [411])
                (const_int 56 [0x38])) [78 MEM[(double *)_536 + 56B]+0 S8 A64])) 126 {*movdf_internal}
     (nil))
(insn 1727 1728 1729 355 (set (reg:SI 42 r13 [orig:343 _465 ] [343])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:411 _536 ] [411])
                (const_int 12 [0xc])) [22 MEM[(int *)_536 + 12B]+0 S4 A32])) 86 {*movsi_internal}
     (nil))
(insn:TI 1729 1727 4241 355 (set (reg:SI 43 r14 [orig:338 _460 ] [338])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:411 _536 ] [411])
                (const_int 8 [0x8])) [22 MEM[(int *)_536 + 8B]+0 S4 A32])) 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:411 _536 ] [411])
        (nil)))
(insn:TI 4241 1729 1734 355 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])
        (reg:DF 25 xmm4 [orig:409 _534 ] [409])) 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 25 xmm4 [orig:409 _534 ] [409])
        (nil)))
(call_insn:TI 1734 4241 1735 355 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       356 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 356, loop depth 0, count 0, freq 3675, maybe hot
;;  prev block 355, next block 357, flags: (REACHABLE, RTL)
;;  pred:       355 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 356 artificial_defs: { }
;; bb 356 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1735 1734 1738 356 [bb 356] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1738 1735 1736 356 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(insn 1736 1738 1739 356 (set (reg:DI 4 si)
        (reg:DI 3 bx [orig:239 _257 ] [239])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [orig:239 _257 ] [239])
        (nil)))
(call_insn:TI 1739 1736 3477 356 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              357 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 357, loop depth 0, count 0, freq 3675, maybe hot
;;  prev block 356, next block 358, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       356 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 357 artificial_defs: { }
;; bb 357 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3477 1739 1743 357 [bb 357] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1743 3477 1742 357 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC109") [flags 0x2]  <var_decl 0x7fb2b65b0990 *.LC109>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1742 1743 1744 357 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1744 1742 1740 357 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:412 _537 ] [412])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:412 _537 ] [412])
        (nil)))
(insn:TI 1740 1744 1745 357 (set (reg/f:DI 3 bx [orig:412 _537 ] [412])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 1745 1740 1746 357 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       358 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 358, loop depth 0, count 0, freq 3675, maybe hot
;;  prev block 357, next block 359, flags: (REACHABLE, RTL)
;;  pred:       357 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 358 artificial_defs: { }
;; bb 358 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1746 1745 1747 358 [bb 358] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1747 1746 1748 358 (set (reg:SI 4 si)
        (reg:SI 43 r14 [orig:338 _460 ] [338])) mymainCascade.cc:341 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 43 r14 [orig:338 _460 ] [338])
        (nil)))
(insn 1748 1747 1749 358 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:412 _537 ] [412])) mymainCascade.cc:341 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:412 _537 ] [412])
        (nil)))
(call_insn:TI 1749 1748 3478 358 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:341 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              359 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 359, loop depth 0, count 0, freq 3675, maybe hot
;;  prev block 358, next block 360, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       358 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 359 artificial_defs: { }
;; bb 359 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3478 1749 1753 359 [bb 359] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1753 3478 1752 359 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fb2b6b5c2d0 *.LC28>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1752 1753 1754 359 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1754 1752 1750 359 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:246 _265 ] [246])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:246 _265 ] [246])
        (nil)))
(insn:TI 1750 1754 1755 359 (set (reg/f:DI 3 bx [orig:246 _265 ] [246])
        (reg:DI 0 ax)) mymainCascade.cc:341 85 {*movdi_internal}
     (nil))
(call_insn:TI 1755 1750 1756 359 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       360 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 360, loop depth 0, count 0, freq 3675, maybe hot
;;  prev block 359, next block 361, flags: (REACHABLE, RTL)
;;  pred:       359 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 360 artificial_defs: { }
;; bb 360 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
(note 1756 1755 1757 360 [bb 360] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1757 1756 1758 360 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 126 {*movdf_internal}
     (nil))
(insn 1758 1757 1759 360 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:246 _265 ] [246])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:246 _265 ] [246])
        (nil)))
(call_insn:TI 1759 1758 3479 360 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              361 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 361, loop depth 0, count 0, freq 3675, maybe hot
;;  prev block 360, next block 362, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       360 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 361 artificial_defs: { }
;; bb 361 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3479 1759 1763 361 [bb 361] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1763 3479 1762 361 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC110") [flags 0x2]  <var_decl 0x7fb2b65b0a20 *.LC110>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1762 1763 1764 361 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 1764 1762 1760 361 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:413 _538 ] [413])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:413 _538 ] [413])
        (nil)))
(insn:TI 1760 1764 1765 361 (set (reg/f:DI 3 bx [orig:413 _538 ] [413])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (nil))
(call_insn:TI 1765 1760 1766 361 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 8 [0x8])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       362 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 362, loop depth 0, count 0, freq 3675, maybe hot
;;  prev block 361, next block 363, flags: (REACHABLE, RTL)
;;  pred:       361 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 362 artificial_defs: { }
;; bb 362 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1766 1765 1767 362 [bb 362] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1767 1766 1768 362 (set (reg:SI 4 si)
        (reg:SI 42 r13 [orig:343 _465 ] [343])) mymainCascade.cc:341 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 r13 [orig:343 _465 ] [343])
        (nil)))
(insn 1768 1767 1769 362 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:413 _538 ] [413])) mymainCascade.cc:341 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:413 _538 ] [413])
        (nil)))
(call_insn:TI 1769 1768 3480 362 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:341 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7fb2bdeeb1c0 operator<<>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              363 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]

;; basic block 363, loop depth 0, count 0, freq 3675, maybe hot
;;  prev block 362, next block 364, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       362 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 363 artificial_defs: { }
;; bb 363 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 42 [r13]
;; live  kill	
(note 3480 1769 1770 363 [bb 363] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1770 3480 1772 363 (set (reg/f:DI 42 r13 [orig:247 _267 ] [247])
        (reg:DI 0 ax)) mymainCascade.cc:341 85 {*movdi_internal}
     (nil))
(insn 1772 1770 1773 363 (set (reg/f:DI 0 ax [orig:1265 _267->_vptr.basic_ostream ] [1265])
        (mem/f:DI (reg/f:DI 0 ax [orig:247 _267 ] [247]) [150 _267->_vptr.basic_ostream+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:591 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 42 r13 [orig:247 _267 ] [247]) [150 _267->_vptr.basic_ostream+0 S8 A64])
        (nil)))
(insn:TI 1773 1772 1774 363 (set (reg:DI 0 ax [orig:1266 MEM[(long int *)_1327 + -24B] ] [1266])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:1265 _267->_vptr.basic_ostream ] [1265])
                (const_int -24 [0xffffffffffffffe8])) [6 MEM[(long int *)_1327 + -24B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (nil))
(insn:TI 1774 1773 1775 363 (set (reg/f:DI 3 bx [orig:802 _1336 ] [802])
        (mem/f:DI (plus:DI (plus:DI (reg/f:DI 42 r13 [orig:247 _267 ] [247])
                    (reg:DI 0 ax [orig:1266 MEM[(long int *)_1327 + -24B] ] [1266]))
                (const_int 240 [0xf0])) [259 MEM[(const struct basic_ios *)_1330]._M_ctype+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:450 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1266 MEM[(long int *)_1327 + -24B] ] [1266])
        (nil)))
(insn:TI 1775 1774 1776 363 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [orig:802 _1336 ] [802])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 1776 1775 1781 363 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4831)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:49 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 4831)
;;  succ:       376 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              364 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 364, loop depth 0, count 0, freq 3674, maybe hot
;;  prev block 363, next block 365, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       363 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 364 artificial_defs: { }
;; bb 364 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1781 1776 1782 364 [bb 364] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1782 1781 1783 364 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 3 bx [orig:802 _1336 ] [802])
                    (const_int 56 [0x38])) [0 MEM[(const struct ctype *)_1336]._M_widen_ok+0 S1 A64])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn:TI 1783 1782 1789 364 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4832)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:874 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6102 (nil)))
 -> 4832)
;;  succ:       351 [61.0%]  (CAN_FALLTHRU)
;;              365 [39.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 365, loop depth 0, count 0, freq 1432, maybe hot
;;  prev block 364, next block 366, flags: (REACHABLE, RTL)
;;  pred:       364 [39.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 365 artificial_defs: { }
;; bb 365 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(note 1789 1783 1790 365 [bb 365] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1790 1789 1791 365 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:802 _1336 ] [802])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 85 {*movdi_internal}
     (nil))
(call_insn:TI 1791 1790 1792 365 (call (mem:QI (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>) [0 _M_widen_init S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:876 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 8 [0x8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNKSt5ctypeIcE13_M_widen_initEv") [flags 0x41]  <function_decl 0x7fb2be0da2a0 _M_widen_init>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       366 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 366, loop depth 0, count 0, freq 1432, maybe hot
;;  prev block 365, next block 367, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       365 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 366 artificial_defs: { }
;; bb 366 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 1792 1791 1795 366 [bb 366] NOTE_INSN_BASIC_BLOCK)
(note 1795 1792 1793 366 NOTE_INSN_DELETED)
(insn:TI 1793 1795 80 366 (set (reg/f:DI 0 ax [orig:1267 MEM[(const struct ctype *)_1336].D.47997._vptr.facet ] [1267])
        (mem/f:DI (reg/f:DI 3 bx [orig:802 _1336 ] [802]) [150 MEM[(const struct ctype *)_1336].D.47997._vptr.facet+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 3 bx [orig:802 _1336 ] [802]) [150 MEM[(const struct ctype *)_1336].D.47997._vptr.facet+0 S8 A64])
        (nil)))
(insn 80 1793 1794 366 (set (reg:SI 4 si [orig:871 prephitmp_1444 ] [871])
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 86 {*movsi_internal}
     (nil))
(insn:TI 1794 80 1797 366 (set (reg/f:DI 0 ax [orig:808 _1345 ] [808])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1267 MEM[(const struct ctype *)_1336].D.47997._vptr.facet ] [1267])
                (const_int 48 [0x30])) [735 MEM[(int (*__vtbl_ptr_type) () *)_1344 + 48B]+0 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (nil))
(insn 1797 1794 1798 366 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:808 _1345 ] [808])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZNKSt5ctypeIcE8do_widenEc") [flags 0x1]  <function_decl 0x7fb2be0d3e00 do_widen>)
                        ] UNSPEC_GOTPCREL)) [790  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn:TI 1798 1797 1799 366 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1806)
            (pc))) 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 1806)
;;  succ:       352 [80.0%]  (CAN_FALLTHRU)
;;              367 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 367, loop depth 0, count 0, freq 286, maybe hot
;;  prev block 366, next block 368, flags: (REACHABLE, RTL)
;;  pred:       366 [20.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 367 artificial_defs: { }
;; bb 367 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1799 1798 1801 367 [bb 367] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1801 1799 1802 367 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:802 _1336 ] [802])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:802 _1336 ] [802])
        (nil)))
(call_insn:TI 1802 1801 3481 367 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:808 _1345 ] [808]) [0 *OBJ_TYPE_REF(_1345;(const struct ctype)_1336->6) S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/locale_facets.h:877 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 8 [0x8])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       379 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              368 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

;; basic block 368, loop depth 0, count 0, freq 286, maybe hot
;;  prev block 367, next block 369, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       367 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 368 artificial_defs: { }
;; bb 368 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 4 [si]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 4 [si]
;; live  kill	
(note 3481 1802 1805 368 [bb 368] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1805 3481 4833 368 (set (reg:SI 4 si [orig:871 prephitmp_1444 ] [871])
        (sign_extend:SI (reg:QI 0 ax [orig:810 _1351 ] [810]))) 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:810 _1351 ] [810])
        (nil)))
(jump_insn 4833 1805 4834 368 (set (pc)
        (label_ref 1806)) 667 {jump}
     (nil)
 -> 1806)
;;  succ:       352 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 44 [r15]

(barrier 4834 4833 2376)
;; basic block 369, loop depth 0, count 0, freq 3
;;  prev block 368, next block 370, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       315 [50.0%]  (CAN_FALLTHRU)
;; bb 369 artificial_defs: { }
;; bb 369 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 2376 4834 2377 369 441 "" [1 uses])
(note 2377 2376 2379 369 [bb 369] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2379 2377 4835 369 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:1401 nPi0s ] [1401])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -19824 [0xffffffffffffb290])) [22 isPrimaryPi0 S4 A32])
        (const_int 0 [0])) mymainCascade.cc:382 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1401 nPi0s ] [1401])
        (nil)))
(jump_insn 4835 2379 4836 369 (set (pc)
        (label_ref 2380)) 667 {jump}
     (nil)
 -> 2380)
;;  succ:       317 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 4836 4835 4811)
;; basic block 370, loop depth 0, count 0, freq 3
;;  prev block 369, next block 371, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       310 [13.7%]  (CAN_FALLTHRU)
;; bb 370 artificial_defs: { }
;; bb 370 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 41 [r12]
;; live  kill	 17 [flags]
(code_label 4811 4836 2566 370 609 "" [1 uses])
(note 2566 4811 2582 370 [bb 370] NOTE_INSN_BASIC_BLOCK)
(note 2582 2566 2584 370 NOTE_INSN_DELETED)
(note 2584 2582 2593 370 NOTE_INSN_DELETED)
(note 2593 2584 2595 370 NOTE_INSN_DELETED)
(note 2595 2593 2568 370 NOTE_INSN_DELETED)
(insn:TI 2568 2595 2567 370 (set (reg:DF 23 xmm2 [orig:543 _672 ] [543])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_589 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn 2567 2568 2569 370 (set (reg:DI 41 r12)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -19988 [0xffffffffffffb1ec])) [22 nGammas+0 S4 A32]))) mymainCascade.cc:410 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2569 2567 2571 370 (set (reg:DF 22 xmm1 [orig:544 _673 ] [544])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_589 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (nil))
(insn:TI 2571 2569 2572 370 (set (reg:DF 23 xmm2 [1450])
        (mult:DF (reg:DF 23 xmm2 [orig:543 _672 ] [543])
            (reg:DF 23 xmm2 [orig:543 _672 ] [543]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2572 2571 2570 370 (set (reg:DF 22 xmm1 [1451])
        (mult:DF (reg:DF 22 xmm1 [orig:544 _673 ] [544])
            (reg:DF 22 xmm1 [orig:544 _673 ] [544]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2570 2572 2574 370 (set (reg:DF 21 xmm0 [orig:545 _674 ] [545])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:461 _589 ] [461])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)_589 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:119 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:461 _589 ] [461])
        (nil)))
(insn:TI 2574 2570 2573 370 (set (reg:DF 21 xmm0 [1453])
        (mult:DF (reg:DF 21 xmm0 [orig:545 _674 ] [545])
            (reg:DF 21 xmm0 [orig:545 _674 ] [545]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (nil))
(insn:TI 2573 2574 2575 370 (set (reg:DF 22 xmm1 [1452])
        (plus:DF (reg:DF 22 xmm1 [1451])
            (reg:DF 23 xmm2 [1450]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [1450])
        (nil)))
(insn:TI 2575 2573 2577 370 (set (reg:DF 21 xmm0 [1454])
        (plus:DF (reg:DF 21 xmm0 [1453])
            (reg:DF 22 xmm1 [1452]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 819 {*fop_df_comm_mixed}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1452])
        (nil)))
(call_insn:TI 2577 2575 4275 370 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fb2c1c85c40 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:151 684 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fb2c1c85c40 sqrt>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn:TI 4275 2577 2583 370 (set (reg/f:DI 0 ax [orig:536 _665 ] [536])
        (reg:DI 3 bx [1384])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 85 {*movdi_internal}
     (nil))
(insn 2583 4275 2580 370 (parallel [
            (set (reg/f:DI 0 ax [orig:536 _665 ] [536])
                (plus:DI (reg/f:DI 0 ax [orig:536 _665 ] [536])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19952 [0xffffffffffffb210])) [164 MEM[(struct Particle * *)&lMesons]+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 2580 2583 2581 370 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1455 nGammas.83_346 ] [1455])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -5024 [0xffffffffffffec60])) [78 pGamma S8 A64])
        (reg:DF 21 xmm0 [orig:542 _671 ] [542])) mymainCascade.cc:410 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1455 nGammas.83_346 ] [1455])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:542 _671 ] [542])
            (nil))))
(insn:TI 2581 2580 2586 370 (set (reg:DI 41 r12)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -19988 [0xffffffffffffb1ec])) [22 nGammas+0 S4 A32]))) mymainCascade.cc:411 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2586 2581 2585 370 (set (reg:DF 22 xmm1)
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:536 _665 ] [536])
                (const_int 56 [0x38])) [78 MEM[(const struct Vec4 &)_665 + 40].zz+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:536 _665 ] [536])
        (nil)))
(insn:TI 2585 2586 2588 370 (set (reg:DF 21 xmm0 [orig:1458 MEM[(const struct Vec4 &)_665 + 40].xx ] [1458])
        (mem:DF (plus:DI (reg/f:DI 0 ax [orig:536 _665 ] [536])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_665 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 126 {*movdf_internal}
     (nil))
(call_insn:TI 2588 2585 2594 370 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:159 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn:TI 2594 2588 2591 370 (parallel [
            (set (reg/f:DI 3 bx [orig:532 _661 ] [532])
                (plus:DI (reg:DI 3 bx [1384])
                    (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19952 [0xffffffffffffb210])) [164 MEM[(struct Particle * *)&lMesons]+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:781 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 2591 2594 2592 370 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1459 nGammas.83_349 ] [1459])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -4224 [0xffffffffffffef80])) [78 thetaGamma S8 A64])
        (reg:DF 21 xmm0 [orig:533 _662 ] [533])) mymainCascade.cc:411 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1459 nGammas.83_349 ] [1459])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:533 _662 ] [533])
            (nil))))
(insn 2592 2591 2596 370 (set (reg:DI 41 r12)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -19988 [0xffffffffffffb1ec])) [22 nGammas+0 S4 A32]))) mymainCascade.cc:412 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2596 2592 2597 370 (set (reg:DF 21 xmm0 [orig:1462 MEM[(const struct Vec4 &)_661 + 40].yy ] [1462])
        (mem:DF (plus:DI (reg/f:DI 3 bx [orig:532 _661 ] [532])
                (const_int 48 [0x30])) [78 MEM[(const struct Vec4 &)_661 + 40].yy+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (nil))
(insn:TI 2597 2596 2599 370 (set (reg:DF 22 xmm1)
        (mem:DF (plus:DI (reg/f:DI 3 bx [orig:532 _661 ] [532])
                (const_int 40 [0x28])) [78 MEM[(const struct Vec4 &)_661 + 40].xx+0 S8 A64])) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:532 _661 ] [532])
        (nil)))
(call_insn:TI 2599 2597 2603 370 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) /cvmfs/ship.cern.ch/SHiP-2018/2019/August/1/sw/slc7_x86-64/pythia/v8230-ship-1/include/Pythia8/Basics.h:158 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fb2c1c40700 atan2>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn:TI 2603 2599 2602 370 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 43 r14 [orig:216 nPrimMesons ] [216])
            (reg:SI 44 r15 [orig:645 ivtmp.480 ] [645]))) mymainCascade.cc:413 7 {*cmpsi_1}
     (nil))
(insn 2602 2603 2606 370 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:1463 nGammas.83_351 ] [1463])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -3424 [0xfffffffffffff2a0])) [78 phiGamma S8 A64])
        (reg:DF 21 xmm0 [orig:529 _658 ] [529])) mymainCascade.cc:412 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1463 nGammas.83_351 ] [1463])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:529 _658 ] [529])
            (nil))))
(insn 2606 2602 2604 370 (set (reg:DI 0 ax [orig:1464 nGammas ] [1464])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -19988 [0xffffffffffffb1ec])) [22 nGammas+0 S4 A32]))) mymainCascade.cc:413 131 {*zero_extendsidi2}
     (nil))
(jump_insn:TI 2604 2606 2605 370 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2610)
            (pc))) mymainCascade.cc:413 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 2610)
;;  succ:       371 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              375 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 371, loop depth 0, count 0, freq 2
;;  prev block 370, next block 372, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       370 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 371 artificial_defs: { }
;; bb 371 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 2605 2604 2607 371 [bb 371] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2607 2605 2614 371 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:1464 nGammas ] [1464])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -17424 [0xffffffffffffbbf0])) [22 isPrimaryGamma S4 A32])
        (const_int 1 [0x1])) mymainCascade.cc:413 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1464 nGammas ] [1464])
        (nil)))
;;  succ:       372 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 372, loop depth 0, count 0, freq 3
;;  prev block 371, next block 373, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       371 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              375 [100.0%]  (CAN_FALLTHRU)
;; bb 372 artificial_defs: { }
;; bb 372 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	 17 [flags]
(code_label 2614 2607 2615 372 455 "" [1 uses])
(note 2615 2614 2616 372 [bb 372] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2616 2615 4837 372 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -19988 [0xffffffffffffb1ec])) [22 nGammas+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -19988 [0xffffffffffffb1ec])) [22 nGammas+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:415 218 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 4837 2616 4838 372 (set (pc)
        (label_ref 2617)) 667 {jump}
     (nil)
 -> 2617)
;;  succ:       311 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 4838 4837 2496)
;; basic block 373, loop depth 0, count 0, freq 2
;;  prev block 372, next block 374, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       339 [50.0%]  (CAN_FALLTHRU)
;; bb 373 artificial_defs: { }
;; bb 373 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 2496 4838 2497 373 449 "" [1 uses])
(note 2497 2496 2499 373 [bb 373] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2499 2497 4839 373 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:1433 nOmegas ] [1433])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -19024 [0xffffffffffffb5b0])) [22 isPrimaryOmega S4 A32])
        (const_int 0 [0])) mymainCascade.cc:398 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1433 nOmegas ] [1433])
        (nil)))
(jump_insn 4839 2499 4840 373 (set (pc)
        (label_ref 2500)) 667 {jump}
     (nil)
 -> 2500)
;;  succ:       341 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 4840 4839 2553)
;; basic block 374, loop depth 0, count 0, freq 2
;;  prev block 373, next block 375, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       342 [50.0%]  (CAN_FALLTHRU)
;; bb 374 artificial_defs: { }
;; bb 374 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 2553 4840 2554 374 452 "" [1 uses])
(note 2554 2553 2556 374 [bb 374] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2556 2554 4841 374 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:1449 nEtaPrimes ] [1449])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -18624 [0xffffffffffffb740])) [22 isPrimaryEtaPrime S4 A32])
        (const_int 0 [0])) mymainCascade.cc:406 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1449 nEtaPrimes ] [1449])
        (nil)))
(jump_insn 4841 2556 4842 374 (set (pc)
        (label_ref 2557)) 667 {jump}
     (nil)
 -> 2557)
;;  succ:       344 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 4842 4841 2610)
;; basic block 375, loop depth 0, count 0, freq 2
;;  prev block 374, next block 376, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       370 [50.0%]  (CAN_FALLTHRU)
;; bb 375 artificial_defs: { }
;; bb 375 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 2610 4842 2611 375 454 "" [1 uses])
(note 2611 2610 2613 375 [bb 375] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2613 2611 4843 375 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:1465 nGammas ] [1465])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -17424 [0xffffffffffffbbf0])) [22 isPrimaryGamma S4 A32])
        (const_int 0 [0])) mymainCascade.cc:414 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:1465 nGammas ] [1465])
        (nil)))
(jump_insn 4843 2613 4844 375 (set (pc)
        (label_ref 2614)) 667 {jump}
     (nil)
 -> 2614)
;;  succ:       372 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 4844 4843 4831)
;; basic block 376, loop depth 0, count 0, freq 1
;;  prev block 375, next block 377, flags: (REACHABLE, RTL)
;;  pred:       363 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 376 artificial_defs: { }
;; bb 376 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4831 4844 1777 376 611 "" [1 uses])
(note 1777 4831 1778 376 [bb 376] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1778 1777 1779 376 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       379 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1779 1778 1827)
;; basic block 377, loop depth 0, count 0, freq 1
;;  prev block 376, next block 378, flags: (REACHABLE, RTL)
;;  pred:       354 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              350 [100.0%]  (CAN_FALLTHRU)
;; bb 377 artificial_defs: { }
;; bb 377 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1827 1779 1714 377 415 "" [2 uses])
(note 1714 1827 1715 377 [bb 377] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1715 1714 1716 377 (set (reg:SI 5 di)
        (const_int 1 [0x1])) mymainCascade.cc:343 86 {*movsi_internal}
     (nil))
(call_insn:TI 1716 1715 1717 377 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fb2c1cd0b60 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) mymainCascade.cc:343 673 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fb2c1cd0b60 exit>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 1717 1716 4730)
;; basic block 378, loop depth 0, count 0, freq 1
;;  prev block 377, next block 379, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [10.1%]  (CAN_FALLTHRU)
;; bb 378 artificial_defs: { }
;; bb 378 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 3 [bx]
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 3 [bx]
;; live  kill	
(code_label 4730 1717 183 378 579 "" [1 uses])
(note 183 4730 4528 378 [bb 378] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4528 183 4529 378 (set (reg:DI 2 cx [orig:615 _969 ] [615])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:620 _975 ] [620])
                (const_int 16 [0x10])) [0 MEM[(char * {ref-all})_975 + 16B]+0 S8 A8])) 85 {*movdi_internal}
     (nil))
(insn 4529 4528 4530 378 (set (reg:DI 3 bx [ _969+8 ])
        (mem:DI (plus:DI (reg/f:DI 0 ax [orig:620 _975 ] [620])
                (const_int 24 [0x18])) [0 MEM[(char * {ref-all})_975 + 16B]+8 S8 A8])) 85 {*movdi_internal}
     (nil))
(insn:TI 4530 4529 4531 378 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -2608 [0xfffffffffffff5d0])) [0 MEM[(char * {ref-all})&D.337451 + 16B]+0 S8 A128])
        (reg:DI 2 cx [orig:615 _969 ] [615])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:615 _969 ] [615])
        (nil)))
(insn 4531 4530 4845 378 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -2600 [0xfffffffffffff5d8])) [0 MEM[(char * {ref-all})&D.337451 + 16B]+8 S8 A64])
        (reg:DI 3 bx [ _969+8 ])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [ _969+8 ])
        (nil)))
(jump_insn 4845 4531 4846 378 (set (pc)
        (label_ref 193)) 667 {jump}
     (nil)
 -> 193)
;;  succ:       11 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]

(barrier 4846 4845 3599)
;; basic block 379, loop depth 0, count 0, freq 0
;;  prev block 378, next block 380, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       109 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              110 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              111 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              149 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              150 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              400 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              299 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              301 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              154 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              155 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              156 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              157 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              401 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              295 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              297 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              161 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              162 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              163 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              164 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              402 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              291 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              293 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              168 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              169 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              176 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              177 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              178 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              179 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              180 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              181 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              182 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              183 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              403 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              186 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              188 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              173 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              174 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              192 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              193 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              194 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              195 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              196 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              197 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              198 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              199 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              200 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              480 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              255 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              257 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              204 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              205 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              275 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              276 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              277 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              278 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              279 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              407 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              287 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              289 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              283 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              284 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              346 (ABNORMAL,ABNORMAL_CALL,EH)
;;              347 (ABNORMAL,ABNORMAL_CALL,EH)
;;              348 (ABNORMAL,ABNORMAL_CALL,EH)
;;              355 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              356 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              357 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              358 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              359 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              360 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              361 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              362 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              376 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              365 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              367 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              352 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              353 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              209 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              214 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              215 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              481 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              263 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              265 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              219 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              220 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              221 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              222 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              482 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              259 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              261 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              226 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              227 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              228 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              229 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              406 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              267 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              269 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              233 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              234 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              241 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              242 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              243 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              244 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              245 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              246 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              247 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              248 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              303 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              251 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              253 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              238 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              239 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              326 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              327 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              328 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              329 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              330 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              331 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              318 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              319 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              320 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              321 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              322 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              323 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              324 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; bb 379 artificial_defs: { d16(0){ }d608(1){ }}
;; bb 379 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 3599 4846 3602 379 524 "" [1 uses])
(note 3602 3599 3277 379 [bb 379] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3277 3602 3600 379 (set (reg/f:DI 5 di [orig:602 _731 ] [602])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19952 [0xffffffffffffb210])) [164 lMesons.D.138156._M_impl._M_start+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:426 85 {*movdi_internal}
     (nil))
(insn 3600 3277 3278 379 (set (reg:DI 3 bx [1569])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn:TI 3278 3600 3279 379 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:602 _731 ] [602])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 3279 3278 3280 379 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3287)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:177 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 3287)
;;  succ:       380 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              381 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 380, loop depth 0, count 0, freq 0
;;  prev block 379, next block 381, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       379 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 380 artificial_defs: { }
;; bb 380 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 3280 3279 3282 380 [bb 380] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 3282 3280 3287 380 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       381 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 381, loop depth 0, count 0, freq 0
;;  prev block 380, next block 382, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       380 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              379 [30.2%]  (CAN_FALLTHRU)
;;              405 [100.0%]  (CAN_FALLTHRU)
;; bb 381 artificial_defs: { }
;; bb 381 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(code_label 3287 3282 3288 381 492 "" [2 uses])
(note 3288 3287 3289 381 [bb 381] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3289 3288 3290 381 (set (reg/f:DI 5 di [orig:603 _732 ] [603])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19984 [0xffffffffffffb1f0])) [164 lStash.D.138156._M_impl._M_start+0 S8 A128])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:426 85 {*movdi_internal}
     (nil))
(insn:TI 3290 3289 3291 381 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:603 _732 ] [603])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn:TI 3291 3290 3292 381 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3299)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/stl_vector.h:177 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 3299)
;;  succ:       382 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              383 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 382, loop depth 0, count 0, freq 0
;;  prev block 381, next block 383, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       381 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 382 artificial_defs: { }
;; bb 382 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 3292 3291 3294 382 [bb 382] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 3294 3292 3299 382 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       383 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 383, loop depth 0, count 0, freq 0
;;  prev block 382, next block 384, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       382 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              381 [30.2%]  (CAN_FALLTHRU)
;;              388 [100.0%]  (CAN_FALLTHRU)
;; bb 383 artificial_defs: { }
;; bb 383 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 3299 3294 3300 383 494 "" [2 uses])
(note 3300 3299 3302 383 [bb 383] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3302 3300 3303 383 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20064 [0xffffffffffffb1a0])) [789 %sfp+-20016 S8 A64])) mymainCascade.cc:266 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -2576 [0xfffffffffffff5f0]))
        (nil)))
(call_insn:TI 3303 3302 3306 383 (call (mem:QI (symbol_ref:DI ("_ZN8TRandom3D1Ev") [flags 0x41]  <function_decl 0x7fb2b4b35540 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) mymainCascade.cc:266 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN8TRandom3D1Ev") [flags 0x41]  <function_decl 0x7fb2b4b35540 __comp_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       384 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 384, loop depth 0, count 0, freq 0
;;  prev block 383, next block 385, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       387 [100.0%]  (CAN_FALLTHRU)
;;              395 [100.0%]  (CAN_FALLTHRU)
;;              397 [100.0%]  (CAN_FALLTHRU)
;;              396 [30.2%]  (CAN_FALLTHRU)
;;              486 [100.0%]  (CAN_FALLTHRU)
;;              383 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              487 [100.0%]  (CAN_FALLTHRU)
;; bb 384 artificial_defs: { }
;; bb 384 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 3306 3303 3307 384 347 "" [6 uses])
(note 3307 3306 4328 384 [bb 384] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4328 3307 3308 384 (set (reg/f:DI 0 ax [1587])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20136 [0xffffffffffffb158])) [789 %sfp+-20088 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 85 {*movdi_internal}
     (nil))
(insn 3308 4328 3310 384 (set (reg/f:DI 5 di [orig:604 _733 ] [604])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19920 [0xffffffffffffb230])) [5 MEM[(char * *)&label]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 3310 3308 3311 384 (parallel [
            (set (reg/f:DI 0 ax [1587])
                (plus:DI (reg/f:DI 0 ax [1587])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 3311 3310 3312 384 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:604 _733 ] [604])
            (reg/f:DI 0 ax [1576]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [1576])
        (nil)))
(jump_insn:TI 3312 3311 3313 384 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3316)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 3316)
;;  succ:       385 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              386 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 385, loop depth 0, count 0, freq 0
;;  prev block 384, next block 386, flags: (REACHABLE, RTL)
;;  pred:       384 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 385 artificial_defs: { }
;; bb 385 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 3313 3312 3315 385 [bb 385] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 3315 3313 3316 385 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       386 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 386, loop depth 0, count 0, freq 0
;;  prev block 385, next block 387, flags: (REACHABLE, RTL)
;;  pred:       384 [30.2%]  (CAN_FALLTHRU)
;;              385 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 386 artificial_defs: { }
;; bb 386 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 3316 3315 3317 386 495 "" [1 uses])
(note 3317 3316 3319 386 [bb 386] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3319 3317 3320 386 (set (reg:DI 5 di)
        (reg:DI 3 bx [935])) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [935])
        (nil)))
(call_insn:TI 3320 3319 3321 386 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb2c1d469a0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb2c1d469a0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 3321 3320 3589)
;; basic block 387, loop depth 0, count 0, freq 0
;;  prev block 386, next block 388, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 387 artificial_defs: { d17(0){ }d609(1){ }}
;; bb 387 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di]
;; live  kill	
(code_label/s 3589 3321 3592 387 522 "" [1 uses])
(note 3592 3589 3269 387 [bb 387] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3269 3592 3590 387 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20120 [0xffffffffffffb168])) [789 %sfp+-20072 S8 A64])) mymainCascade.cc:135 85 {*movdi_internal}
     (nil))
(insn 3590 3269 3270 387 (set (reg:DI 3 bx [1566])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(call_insn:TI 3270 3590 4847 387 (call (mem:QI (symbol_ref:DI ("_ZN7TObjectdlEPv") [flags 0x41]  <function_decl 0x7fb2b6c27e00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) mymainCascade.cc:135 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -10 [0xfffffffffffffff6])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7TObjectdlEPv") [flags 0x41]  <function_decl 0x7fb2b6c27e00 operator delete>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn:TI 4847 3270 4848 387 (set (pc)
        (label_ref 3306)) 667 {jump}
     (nil)
 -> 3306)
;;  succ:       384 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 4848 4847 3603)
;; basic block 388, loop depth 0, count 0, freq 0
;;  prev block 387, next block 389, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       118 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              389 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              121 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              123 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              69 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              70 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              71 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              390 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              141 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              143 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              75 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              76 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              77 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              391 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              145 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              147 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              81 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              82 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              83 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              84 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              392 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              137 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              139 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              88 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              89 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              90 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              393 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              133 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              135 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              94 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              95 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              96 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              394 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              129 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              131 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              100 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              101 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              102 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              404 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              125 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              127 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              106 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              107 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              408 (ABNORMAL,ABNORMAL_CALL,EH)
;;              409 (ABNORMAL,ABNORMAL_CALL,EH)
;;              410 (ABNORMAL,ABNORMAL_CALL,EH)
;;              411 (ABNORMAL,ABNORMAL_CALL,EH)
;;              412 (ABNORMAL,ABNORMAL_CALL,EH)
;;              413 (ABNORMAL,ABNORMAL_CALL,EH)
;;              414 (ABNORMAL,ABNORMAL_CALL,EH)
;;              415 (ABNORMAL,ABNORMAL_CALL,EH)
;;              416 (ABNORMAL,ABNORMAL_CALL,EH)
;;              417 (ABNORMAL,ABNORMAL_CALL,EH)
;;              418 (ABNORMAL,ABNORMAL_CALL,EH)
;;              419 (ABNORMAL,ABNORMAL_CALL,EH)
;;              420 (ABNORMAL,ABNORMAL_CALL,EH)
;;              421 (ABNORMAL,ABNORMAL_CALL,EH)
;;              422 (ABNORMAL,ABNORMAL_CALL,EH)
;;              423 (ABNORMAL,ABNORMAL_CALL,EH)
;;              424 (ABNORMAL,ABNORMAL_CALL,EH)
;;              425 (ABNORMAL,ABNORMAL_CALL,EH)
;;              426 (ABNORMAL,ABNORMAL_CALL,EH)
;;              427 (ABNORMAL,ABNORMAL_CALL,EH)
;;              428 (ABNORMAL,ABNORMAL_CALL,EH)
;;              429 (ABNORMAL,ABNORMAL_CALL,EH)
;;              430 (ABNORMAL,ABNORMAL_CALL,EH)
;;              431 (ABNORMAL,ABNORMAL_CALL,EH)
;;              432 (ABNORMAL,ABNORMAL_CALL,EH)
;;              433 (ABNORMAL,ABNORMAL_CALL,EH)
;;              434 (ABNORMAL,ABNORMAL_CALL,EH)
;;              435 (ABNORMAL,ABNORMAL_CALL,EH)
;;              436 (ABNORMAL,ABNORMAL_CALL,EH)
;;              437 (ABNORMAL,ABNORMAL_CALL,EH)
;;              438 (ABNORMAL,ABNORMAL_CALL,EH)
;;              439 (ABNORMAL,ABNORMAL_CALL,EH)
;;              440 (ABNORMAL,ABNORMAL_CALL,EH)
;;              441 (ABNORMAL,ABNORMAL_CALL,EH)
;;              442 (ABNORMAL,ABNORMAL_CALL,EH)
;;              443 (ABNORMAL,ABNORMAL_CALL,EH)
;;              444 (ABNORMAL,ABNORMAL_CALL,EH)
;;              445 (ABNORMAL,ABNORMAL_CALL,EH)
;;              446 (ABNORMAL,ABNORMAL_CALL,EH)
;;              447 (ABNORMAL,ABNORMAL_CALL,EH)
;;              448 (ABNORMAL,ABNORMAL_CALL,EH)
;;              449 (ABNORMAL,ABNORMAL_CALL,EH)
;;              450 (ABNORMAL,ABNORMAL_CALL,EH)
;;              451 (ABNORMAL,ABNORMAL_CALL,EH)
;;              452 (ABNORMAL,ABNORMAL_CALL,EH)
;;              453 (ABNORMAL,ABNORMAL_CALL,EH)
;;              454 (ABNORMAL,ABNORMAL_CALL,EH)
;;              455 (ABNORMAL,ABNORMAL_CALL,EH)
;;              456 (ABNORMAL,ABNORMAL_CALL,EH)
;;              457 (ABNORMAL,ABNORMAL_CALL,EH)
;;              458 (ABNORMAL,ABNORMAL_CALL,EH)
;;              459 (ABNORMAL,ABNORMAL_CALL,EH)
;;              460 (ABNORMAL,ABNORMAL_CALL,EH)
;;              461 (ABNORMAL,ABNORMAL_CALL,EH)
;;              462 (ABNORMAL,ABNORMAL_CALL,EH)
;;              463 (ABNORMAL,ABNORMAL_CALL,EH)
;;              464 (ABNORMAL,ABNORMAL_CALL,EH)
;;              465 (ABNORMAL,ABNORMAL_CALL,EH)
;;              466 (ABNORMAL,ABNORMAL_CALL,EH)
;;              467 (ABNORMAL,ABNORMAL_CALL,EH)
;;              468 (ABNORMAL,ABNORMAL_CALL,EH)
;;              469 (ABNORMAL,ABNORMAL_CALL,EH)
;;              470 (ABNORMAL,ABNORMAL_CALL,EH)
;;              471 (ABNORMAL,ABNORMAL_CALL,EH)
;;              472 (ABNORMAL,ABNORMAL_CALL,EH)
;;              473 (ABNORMAL,ABNORMAL_CALL,EH)
;;              474 (ABNORMAL,ABNORMAL_CALL,EH)
;;              475 (ABNORMAL,ABNORMAL_CALL,EH)
;;              476 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 388 artificial_defs: { d12(0){ }d604(1){ }}
;; bb 388 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(code_label/s 3603 4848 3608 388 525 "" [1 uses])
(note 3608 3603 3604 388 [bb 388] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3604 3608 4849 388 (set (reg:DI 3 bx [1572])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 4849 3604 4850 388 (set (pc)
        (label_ref 3299)) 667 {jump}
     (nil)
 -> 3299)
;;  succ:       383 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 4850 4849 4741)
;; basic block 389, loop depth 0, count 0, freq 0
;;  prev block 388, next block 390, flags: (REACHABLE, RTL)
;;  pred:       119 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 389 artificial_defs: { }
;; bb 389 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4741 4850 711 389 588 "" [1 uses])
(note 711 4741 712 389 [bb 389] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 712 711 713 389 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 12 [0xc])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       388 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 713 712 4733)
;; basic block 390, loop depth 0, count 0, freq 0
;;  prev block 389, next block 391, flags: (REACHABLE, RTL)
;;  pred:       72 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 390 artificial_defs: { }
;; bb 390 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4733 713 762 390 580 "" [1 uses])
(note 762 4733 763 390 [bb 390] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 763 762 764 390 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 12 [0xc])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       388 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 764 763 4734)
;; basic block 391, loop depth 0, count 0, freq 0
;;  prev block 390, next block 392, flags: (REACHABLE, RTL)
;;  pred:       78 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 391 artificial_defs: { }
;; bb 391 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4734 764 812 391 581 "" [1 uses])
(note 812 4734 813 391 [bb 391] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 813 812 814 391 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 12 [0xc])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       388 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 814 813 4735)
;; basic block 392, loop depth 0, count 0, freq 0
;;  prev block 391, next block 393, flags: (REACHABLE, RTL)
;;  pred:       85 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 392 artificial_defs: { }
;; bb 392 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4735 814 868 392 582 "" [1 uses])
(note 868 4735 869 392 [bb 392] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 869 868 870 392 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 12 [0xc])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       388 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 870 869 4736)
;; basic block 393, loop depth 0, count 0, freq 0
;;  prev block 392, next block 394, flags: (REACHABLE, RTL)
;;  pred:       91 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 393 artificial_defs: { }
;; bb 393 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4736 870 920 393 583 "" [1 uses])
(note 920 4736 921 393 [bb 393] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 921 920 922 393 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 12 [0xc])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       388 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 922 921 4737)
;; basic block 394, loop depth 0, count 0, freq 0
;;  prev block 393, next block 395, flags: (REACHABLE, RTL)
;;  pred:       97 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 394 artificial_defs: { }
;; bb 394 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4737 922 971 394 584 "" [1 uses])
(note 971 4737 972 394 [bb 394] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 972 971 973 394 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 12 [0xc])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       388 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 973 972 3569)
;; basic block 395, loop depth 0, count 0, freq 0
;;  prev block 394, next block 396, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 (ABNORMAL,ABNORMAL_CALL,EH)
;;              17 (ABNORMAL,ABNORMAL_CALL,EH)
;;              18 (ABNORMAL,ABNORMAL_CALL,EH)
;;              20 (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 (ABNORMAL,ABNORMAL_CALL,EH)
;;              25 (ABNORMAL,ABNORMAL_CALL,EH)
;;              26 (ABNORMAL,ABNORMAL_CALL,EH)
;;              27 (ABNORMAL,ABNORMAL_CALL,EH)
;;              28 (ABNORMAL,ABNORMAL_CALL,EH)
;;              29 (ABNORMAL,ABNORMAL_CALL,EH)
;;              32 (ABNORMAL,ABNORMAL_CALL,EH)
;;              33 (ABNORMAL,ABNORMAL_CALL,EH)
;;              34 (ABNORMAL,ABNORMAL_CALL,EH)
;;              35 (ABNORMAL,ABNORMAL_CALL,EH)
;;              36 (ABNORMAL,ABNORMAL_CALL,EH)
;;              39 (ABNORMAL,ABNORMAL_CALL,EH)
;;              40 (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 (ABNORMAL,ABNORMAL_CALL,EH)
;;              42 (ABNORMAL,ABNORMAL_CALL,EH)
;;              43 (ABNORMAL,ABNORMAL_CALL,EH)
;;              46 (ABNORMAL,ABNORMAL_CALL,EH)
;;              47 (ABNORMAL,ABNORMAL_CALL,EH)
;;              48 (ABNORMAL,ABNORMAL_CALL,EH)
;;              49 (ABNORMAL,ABNORMAL_CALL,EH)
;;              50 (ABNORMAL,ABNORMAL_CALL,EH)
;;              53 (ABNORMAL,ABNORMAL_CALL,EH)
;;              54 (ABNORMAL,ABNORMAL_CALL,EH)
;;              55 (ABNORMAL,ABNORMAL_CALL,EH)
;;              56 (ABNORMAL,ABNORMAL_CALL,EH)
;;              57 (ABNORMAL,ABNORMAL_CALL,EH)
;;              58 (ABNORMAL,ABNORMAL_CALL,EH)
;;              61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              62 (ABNORMAL,ABNORMAL_CALL,EH)
;;              63 (ABNORMAL,ABNORMAL_CALL,EH)
;;              64 (ABNORMAL,ABNORMAL_CALL,EH)
;;              65 (ABNORMAL,ABNORMAL_CALL,EH)
;;              66 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 395 artificial_defs: { d10(0){ }d602(1){ }}
;; bb 395 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(code_label/s 3569 973 3574 395 518 "" [1 uses])
(note 3574 3569 3570 395 [bb 395] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3570 3574 4851 395 (set (reg:DI 3 bx [935])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 4851 3570 4852 395 (set (pc)
        (label_ref 3306)) 667 {jump}
     (nil)
 -> 3306)
;;  succ:       384 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 4852 4851 3609)
;; basic block 396, loop depth 0, count 0, freq 0
;;  prev block 395, next block 397, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (ABNORMAL,ABNORMAL_CALL,EH)
;;              398 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 396 artificial_defs: { d577(0){ }d1074(1){ }}
;; bb 396 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label/s 3609 4852 3612 396 526 "" [1 uses])
(note 3612 3609 3610 396 [bb 396] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3610 3612 4103 396 (set (reg:DI 3 bx [936])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 4103 3610 143 396 (set (reg/f:DI 0 ax [1595])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20072 [0xffffffffffffb198])) [789 %sfp+-20024 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 85 {*movdi_internal}
     (nil))
(insn 143 4103 145 396 (set (reg/f:DI 5 di [orig:610 _961 ] [610])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19856 [0xffffffffffffb270])) [5 MEM[(char * *)&D.337450]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 145 143 146 396 (parallel [
            (set (reg/f:DI 0 ax [1595])
                (plus:DI (reg/f:DI 0 ax [1595])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 146 145 147 396 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:610 _961 ] [610])
            (reg/f:DI 0 ax [934]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [934])
        (nil)))
(jump_insn:TI 147 146 4572 396 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3306)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 3306)
;;  succ:       397 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              384 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 397, loop depth 0, count 0, freq 0
;;  prev block 396, next block 398, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       485 [69.8%]  (CAN_FALLTHRU)
;;              396 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 397 artificial_defs: { }
;; bb 397 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 4572 147 3250 397 569 "" [1 uses])
(note 3250 4572 3252 397 [bb 397] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 3252 3250 4853 397 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn:TI 4853 3252 4854 397 (set (pc)
        (label_ref 3306)) 667 {jump}
     (nil)
 -> 3306)
;;  succ:       384 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 4854 4853 4728)
;; basic block 398, loop depth 0, count 0, freq 0
;;  prev block 397, next block 399, flags: (REACHABLE, RTL)
;;  pred:       4 [0.0%]  (CAN_FALLTHRU)
;; bb 398 artificial_defs: { }
;; bb 398 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 4728 4854 120 398 577 "" [1 uses])
(note 120 4728 121 398 [bb 398] NOTE_INSN_BASIC_BLOCK)
(insn:TI 121 120 122 398 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7fb2b65a2750 *.LC33>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:272 85 {*movdi_internal}
     (nil))
(call_insn:TI 122 121 123 398 (call (mem:QI (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7fb2bf56c620 __throw_length_error>) [0 __throw_length_error S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:272 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 14 [0xe])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7fb2bf56c620 __throw_length_error>)
                (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       396 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 123 122 4729)
;; basic block 399, loop depth 0, count 0, freq 0
;;  prev block 398, next block 400, flags: (REACHABLE, RTL)
;;  pred:       7 [0.0%]  (CAN_FALLTHRU)
;; bb 399 artificial_defs: { }
;; bb 399 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 4729 123 163 399 578 "" [1 uses])
(note 163 4729 164 399 [bb 399] NOTE_INSN_BASIC_BLOCK)
(insn:TI 164 163 165 399 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7fb2b65a2750 *.LC33>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:272 85 {*movdi_internal}
     (nil))
(call_insn:TI 165 164 166 399 (call (mem:QI (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7fb2bf56c620 __throw_length_error>) [0 __throw_length_error S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:272 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7fb2bf56c620 __throw_length_error>)
                (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       488 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 166 165 4757)
;; basic block 400, loop depth 0, count 0, freq 0
;;  prev block 399, next block 401, flags: (REACHABLE, RTL)
;;  pred:       151 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 400 artificial_defs: { }
;; bb 400 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4757 166 1148 400 590 "" [1 uses])
(note 1148 4757 1149 400 [bb 400] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1149 1148 1150 400 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       379 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1150 1149 4758)
;; basic block 401, loop depth 0, count 0, freq 0
;;  prev block 400, next block 402, flags: (REACHABLE, RTL)
;;  pred:       158 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 401 artificial_defs: { }
;; bb 401 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4758 1150 1209 401 591 "" [1 uses])
(note 1209 4758 1210 401 [bb 401] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1210 1209 1211 401 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       379 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1211 1210 4759)
;; basic block 402, loop depth 0, count 0, freq 0
;;  prev block 401, next block 403, flags: (REACHABLE, RTL)
;;  pred:       165 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 402 artificial_defs: { }
;; bb 402 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4759 1211 1270 402 592 "" [1 uses])
(note 1270 4759 1271 402 [bb 402] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1271 1270 1272 402 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       379 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1272 1271 4762)
;; basic block 403, loop depth 0, count 0, freq 0
;;  prev block 402, next block 404, flags: (REACHABLE, RTL)
;;  pred:       184 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 403 artificial_defs: { }
;; bb 403 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4762 1272 1374 403 593 "" [1 uses])
(note 1374 4762 1375 403 [bb 403] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1375 1374 1376 403 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       379 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1376 1375 4738)
;; basic block 404, loop depth 0, count 0, freq 0
;;  prev block 403, next block 405, flags: (REACHABLE, RTL)
;;  pred:       103 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 404 artificial_defs: { }
;; bb 404 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4738 1376 1021 404 585 "" [1 uses])
(note 1021 4738 1022 404 [bb 404] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1022 1021 1023 404 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 12 [0xc])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       388 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1023 1022 3593)
;; basic block 405, loop depth 0, count 0, freq 0
;;  prev block 404, next block 406, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; bb 405 artificial_defs: { d14(0){ }d606(1){ }}
;; bb 405 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(code_label/s 3593 1023 3598 405 523 "" [1 uses])
(note 3598 3593 3594 405 [bb 405] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3594 3598 4855 405 (set (reg:DI 3 bx [1568])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 4855 3594 4856 405 (set (pc)
        (label_ref 3287)) 667 {jump}
     (nil)
 -> 3287)
;;  succ:       381 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 4856 4855 4771)
;; basic block 406, loop depth 0, count 0, freq 0
;;  prev block 405, next block 407, flags: (REACHABLE, RTL)
;;  pred:       230 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 406 artificial_defs: { }
;; bb 406 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4771 4856 2077 406 600 "" [1 uses])
(note 2077 4771 2078 406 [bb 406] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 2078 2077 2079 406 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       379 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 2079 2078 4789)
;; basic block 407, loop depth 0, count 0, freq 0
;;  prev block 406, next block 408, flags: (REACHABLE, RTL)
;;  pred:       280 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 407 artificial_defs: { }
;; bb 407 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4789 2079 1632 407 604 "" [1 uses])
(note 1632 4789 1633 407 [bb 407] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1633 1632 1634 407 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       379 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1634 1633 4740)
;; basic block 408, loop depth 0, count 0, freq 0
;;  prev block 407, next block 409, flags: (REACHABLE, RTL)
;;  pred:       117 [1.2%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 408 artificial_defs: { }
;; bb 408 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8]
;; live  kill	
(code_label 4740 1634 2706 408 587 "" [1 uses])
(note 2706 4740 2708 408 [bb 408] NOTE_INSN_BASIC_BLOCK)
(note 2708 2706 4458 408 NOTE_INSN_DELETED)
(note 4458 2708 4496 408 NOTE_INSN_DELETED)
(note 4496 4458 4494 408 NOTE_INSN_DELETED)
(note 4494 4496 4456 408 NOTE_INSN_DELETED)
(note 4456 4494 2725 408 NOTE_INSN_DELETED)
(note 2725 4456 4455 408 NOTE_INSN_DELETED)
(note 4455 2725 4493 408 NOTE_INSN_DELETED)
(note 4493 4455 4491 408 NOTE_INSN_DELETED)
(note 4491 4493 4453 408 NOTE_INSN_DELETED)
(note 4453 4491 2742 408 NOTE_INSN_DELETED)
(note 2742 4453 4452 408 NOTE_INSN_DELETED)
(note 4452 2742 4490 408 NOTE_INSN_DELETED)
(note 4490 4452 4488 408 NOTE_INSN_DELETED)
(note 4488 4490 4450 408 NOTE_INSN_DELETED)
(note 4450 4488 2759 408 NOTE_INSN_DELETED)
(note 2759 4450 4449 408 NOTE_INSN_DELETED)
(note 4449 2759 4487 408 NOTE_INSN_DELETED)
(note 4487 4449 4485 408 NOTE_INSN_DELETED)
(note 4485 4487 4447 408 NOTE_INSN_DELETED)
(note 4447 4485 2776 408 NOTE_INSN_DELETED)
(note 2776 4447 4446 408 NOTE_INSN_DELETED)
(note 4446 2776 4484 408 NOTE_INSN_DELETED)
(note 4484 4446 4482 408 NOTE_INSN_DELETED)
(note 4482 4484 4444 408 NOTE_INSN_DELETED)
(note 4444 4482 2793 408 NOTE_INSN_DELETED)
(note 2793 4444 4481 408 NOTE_INSN_DELETED)
(note 4481 2793 4443 408 NOTE_INSN_DELETED)
(note 4443 4481 2810 408 NOTE_INSN_DELETED)
(note 2810 4443 4480 408 NOTE_INSN_DELETED)
(note 4480 2810 4442 408 NOTE_INSN_DELETED)
(note 4442 4480 2827 408 NOTE_INSN_DELETED)
(note 2827 4442 4479 408 NOTE_INSN_DELETED)
(note 4479 2827 4441 408 NOTE_INSN_DELETED)
(note 4441 4479 2844 408 NOTE_INSN_DELETED)
(note 2844 4441 4478 408 NOTE_INSN_DELETED)
(note 4478 2844 4440 408 NOTE_INSN_DELETED)
(note 4440 4478 4286 408 NOTE_INSN_DELETED)
(insn:TI 4286 4440 4497 408 (set (reg:DI 0 ax [1850])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nG")  <var_decl 0x7fb2b41473f0 nG>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:435 85 {*movdi_internal}
     (nil))
(insn 4497 4286 2722 408 (set (reg:V2DF 22 xmm1 [1471])
        (const_vector:V2DF [
                (const_double:DF 0.0 [0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])) mymainCascade.cc:435 1232 {*movv2df_internal}
     (nil))
(insn:TI 2722 4497 4290 408 (set (reg:DF 21 xmm0 [1476])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC124") [flags 0x2]) [78  S8 A64])) mymainCascade.cc:435 126 {*movdf_internal}
     (expr_list:REG_EQUIV (const_double:DF 1.0e+2 [0x0.c8p+7])
        (nil)))
(insn 4290 2722 4294 408 (set (reg:DI 2 cx [1853])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nEtaPrime")  <var_decl 0x7fb2b4147750 nEtaPrime>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:434 85 {*movdi_internal}
     (nil))
(insn:TI 4294 4290 4298 408 (set (reg:DI 5 di [1856])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nOmega")  <var_decl 0x7fb2b41476c0 nOmega>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:433 85 {*movdi_internal}
     (nil))
(insn 4298 4294 2861 408 (set (reg:DI 1 dx [1859])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nEta")  <var_decl 0x7fb2b4147630 nEta>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:432 85 {*movdi_internal}
     (nil))
(insn 2861 4298 2709 408 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC125") [flags 0x2]  <var_decl 0x7fb2b65b95a0 *.LC125>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 2709 2861 4302 408 (set (reg:DI 0 ax [orig:1590 nG.85_378 ] [1590])
        (zero_extend:DI (mem/c:SI (reg:DI 0 ax [1850]) [22 nG+0 S4 A32]))) mymainCascade.cc:435 131 {*zero_extendsidi2}
     (nil))
(insn 4302 2709 2726 408 (set (reg:DI 3 bx [1862])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPi0")  <var_decl 0x7fb2b41475a0 nPi0>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:431 85 {*movdi_internal}
     (nil))
(insn:TI 2726 4302 4306 408 (set (reg:DI 2 cx [orig:1591 nEtaPrime.86_381 ] [1591])
        (zero_extend:DI (mem/c:SI (reg:DI 2 cx [1853]) [22 nEtaPrime+0 S4 A32]))) mymainCascade.cc:434 131 {*zero_extendsidi2}
     (nil))
(insn 4306 2726 2743 408 (set (reg:DI 39 r10 [1865])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPiM")  <var_decl 0x7fb2b4147510 nPiM>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:430 85 {*movdi_internal}
     (nil))
(insn:TI 2743 4306 2760 408 (set (reg:DI 5 di [orig:1592 nOmega.87_384 ] [1592])
        (zero_extend:DI (mem/c:SI (reg:DI 5 di [1856]) [22 nOmega+0 S4 A32]))) mymainCascade.cc:433 131 {*zero_extendsidi2}
     (nil))
(insn 2760 2743 2777 408 (set (reg:DI 1 dx [orig:1594 nEta.88_387 ] [1594])
        (zero_extend:DI (mem/c:SI (reg:DI 1 dx [1859]) [22 nEta+0 S4 A32]))) mymainCascade.cc:432 131 {*zero_extendsidi2}
     (nil))
(insn:TI 2777 2760 4309 408 (set (reg:DI 3 bx [orig:1596 nPi0.89_390 ] [1596])
        (zero_extend:DI (mem/c:SI (reg:DI 3 bx [1862]) [22 nPi0+0 S4 A32]))) mymainCascade.cc:431 131 {*zero_extendsidi2}
     (nil))
(insn 4309 2777 4498 408 (set (reg:DI 40 r11 [1867])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nPiP")  <var_decl 0x7fb2b4147480 nPiP>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:429 85 {*movdi_internal}
     (nil))
(insn:TI 4498 4309 2794 408 (set (reg:V2DF 22 xmm1 [1471])
        (vec_merge:V2DF (vec_duplicate:V2DF (float:DF (reg:DI 0 ax)))
            (reg:V2DF 22 xmm1 [1471])
            (const_int 1 [0x1]))) mymainCascade.cc:435 2230 {sse2_cvtsi2sdq}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 2794 4498 4312 408 (set (reg:DI 44 r15 [orig:1597 nPiM.90_393 ] [1597])
        (zero_extend:DI (mem/c:SI (reg:DI 39 r10 [1865]) [22 nPiM+0 S4 A32]))) mymainCascade.cc:430 131 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:DI 39 r10 [1865])
        (nil)))
(insn:TI 4312 2794 4495 408 (set (reg:DI 39 r10 [1869])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nN")  <var_decl 0x7fb2b4147360 nN>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:428 85 {*movdi_internal}
     (nil))
(insn 4495 4312 2811 408 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])
        (reg:DI 0 ax [orig:1590 nG.85_378 ] [1590])) mymainCascade.cc:435 85 {*movdi_internal}
     (nil))
(insn:TI 2811 4495 4315 408 (set (reg:DI 43 r14 [orig:1598 nPiP.91_396 ] [1598])
        (zero_extend:DI (mem/c:SI (reg:DI 40 r11 [1867]) [22 nPiP+0 S4 A32]))) mymainCascade.cc:429 131 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:DI 40 r11 [1867])
        (nil)))
(insn 4315 2811 4489 408 (set (reg:DI 40 r11 [1871])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("nP")  <var_decl 0x7fb2b41472d0 nP>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) mymainCascade.cc:427 85 {*movdi_internal}
     (nil))
(insn:TI 4489 4315 4486 408 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20040 [0xffffffffffffb1b8])) [789 %sfp+-19992 S8 A64])
        (reg:DI 5 di [orig:1592 nOmega.87_384 ] [1592])) mymainCascade.cc:433 85 {*movdi_internal}
     (nil))
(insn 4486 4489 2828 408 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20048 [0xffffffffffffb1b0])) [789 %sfp+-20000 S8 A64])
        (reg:DI 1 dx [orig:1594 nEta.88_387 ] [1594])) mymainCascade.cc:432 85 {*movdi_internal}
     (nil))
(insn:TI 2828 4486 4492 408 (set (reg:DI 42 r13 [orig:1599 nN.92_399 ] [1599])
        (zero_extend:DI (mem/c:SI (reg:DI 39 r10 [1869]) [22 nN+0 S4 A32]))) mymainCascade.cc:428 131 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:DI 39 r10 [1869])
        (nil)))
(insn 4492 2828 2845 408 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])
        (reg:DI 2 cx [orig:1591 nEtaPrime.86_381 ] [1591])) mymainCascade.cc:434 85 {*movdi_internal}
     (nil))
(insn:TI 2845 4492 4483 408 (set (reg:DI 41 r12 [orig:1601 nP.93_402 ] [1601])
        (zero_extend:DI (mem/c:SI (reg:DI 40 r11 [1871]) [22 nP+0 S4 A32]))) mymainCascade.cc:427 131 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:DI 40 r11 [1871])
        (nil)))
(insn 4483 2845 2723 408 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20056 [0xffffffffffffb1a8])) [789 %sfp+-20008 S8 A64])
        (reg:DI 3 bx [orig:1596 nPi0.89_390 ] [1596])) mymainCascade.cc:431 85 {*movdi_internal}
     (nil))
(insn:TI 2723 4483 4289 408 (set (reg:DF 22 xmm1 [1471])
        (div:DF (reg:DF 22 xmm1 [1471])
            (reg:DF 21 xmm0 [1476]))) mymainCascade.cc:435 824 {*fop_df_1_mixed}
     (nil))
(insn:TI 4289 2723 4499 408 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20072 [0xffffffffffffb198])) [789 %sfp+-20024 S8 A64])
        (reg:DF 22 xmm1 [1471])) mymainCascade.cc:435 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1471])
        (nil)))
(insn 4499 4289 4500 408 (set (reg:V2DF 22 xmm1 [1478])
        (const_vector:V2DF [
                (const_double:DF 0.0 [0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])) mymainCascade.cc:434 1232 {*movv2df_internal}
     (nil))
(insn:TI 4500 4499 4292 408 (set (reg:V2DF 22 xmm1 [1478])
        (vec_merge:V2DF (vec_duplicate:V2DF (float:DF (reg:DI 2 cx)))
            (reg:V2DF 22 xmm1 [1478])
            (const_int 1 [0x1]))) mymainCascade.cc:434 2230 {sse2_cvtsi2sdq}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))
(insn:TI 4292 4500 4501 408 (set (reg:DF 23 xmm2 [1478])
        (reg:DF 22 xmm1 [1478])) mymainCascade.cc:434 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1478])
        (nil)))
(insn:TI 4501 4292 2740 408 (set (reg:V2DF 22 xmm1 [1485])
        (const_vector:V2DF [
                (const_double:DF 0.0 [0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])) mymainCascade.cc:433 1232 {*movv2df_internal}
     (nil))
(insn:TI 2740 4501 4502 408 (set (reg:DF 23 xmm2 [1478])
        (div:DF (reg:DF 23 xmm2 [1478])
            (reg:DF 21 xmm0 [1476]))) mymainCascade.cc:434 824 {*fop_df_1_mixed}
     (nil))
(insn:TI 4502 2740 4296 408 (set (reg:V2DF 22 xmm1 [1485])
        (vec_merge:V2DF (vec_duplicate:V2DF (float:DF (reg:DI 5 di)))
            (reg:V2DF 22 xmm1 [1485])
            (const_int 1 [0x1]))) mymainCascade.cc:433 2230 {sse2_cvtsi2sdq}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil)))
(insn:TI 4296 4502 4503 408 (set (reg:DF 26 xmm5 [1485])
        (reg:DF 22 xmm1 [1485])) mymainCascade.cc:433 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1485])
        (nil)))
(insn:TI 4503 4296 2757 408 (set (reg:V2DF 22 xmm1 [1492])
        (const_vector:V2DF [
                (const_double:DF 0.0 [0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])) mymainCascade.cc:432 1232 {*movv2df_internal}
     (nil))
(insn:TI 2757 4503 4504 408 (set (reg:DF 26 xmm5 [1485])
        (div:DF (reg:DF 26 xmm5 [1485])
            (reg:DF 21 xmm0 [1476]))) mymainCascade.cc:433 824 {*fop_df_1_mixed}
     (nil))
(insn:TI 4504 2757 2860 408 (set (reg:V2DF 22 xmm1 [1492])
        (vec_merge:V2DF (vec_duplicate:V2DF (float:DF (reg:DI 1 dx)))
            (reg:V2DF 22 xmm1 [1492])
            (const_int 1 [0x1]))) mymainCascade.cc:432 2230 {sse2_cvtsi2sdq}
     (expr_list:REG_DEAD (reg:DI 1 dx)
        (nil)))
(insn 2860 4504 4293 408 (set (reg:DI 1 dx)
        (const_int 29 [0x1d])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn:TI 4293 2860 4300 408 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20080 [0xffffffffffffb190])) [789 %sfp+-20032 S8 A64])
        (reg:DF 23 xmm2 [1478])) mymainCascade.cc:434 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [1478])
        (nil)))
(insn:TI 4300 4293 4505 408 (set (reg:DF 27 xmm6 [1492])
        (reg:DF 22 xmm1 [1492])) mymainCascade.cc:432 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1492])
        (nil)))
(insn:TI 4505 4300 2774 408 (set (reg:V2DF 22 xmm1 [1499])
        (const_vector:V2DF [
                (const_double:DF 0.0 [0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])) mymainCascade.cc:431 1232 {*movv2df_internal}
     (nil))
(insn:TI 2774 4505 4506 408 (set (reg:DF 27 xmm6 [1492])
        (div:DF (reg:DF 27 xmm6 [1492])
            (reg:DF 21 xmm0 [1476]))) mymainCascade.cc:432 824 {*fop_df_1_mixed}
     (nil))
(insn:TI 4506 2774 4297 408 (set (reg:V2DF 22 xmm1 [1499])
        (vec_merge:V2DF (vec_duplicate:V2DF (float:DF (reg:DI 3 bx)))
            (reg:V2DF 22 xmm1 [1499])
            (const_int 1 [0x1]))) mymainCascade.cc:431 2230 {sse2_cvtsi2sdq}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn:TI 4297 4506 4304 408 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20088 [0xffffffffffffb188])) [789 %sfp+-20040 S8 A64])
        (reg:DF 26 xmm5 [1485])) mymainCascade.cc:433 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 26 xmm5 [1485])
        (nil)))
(insn:TI 4304 4297 4507 408 (set (reg:DF 28 xmm7 [1499])
        (reg:DF 22 xmm1 [1499])) mymainCascade.cc:431 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1499])
        (nil)))
(insn:TI 4507 4304 2791 408 (set (reg:V2DF 22 xmm1 [1506])
        (const_vector:V2DF [
                (const_double:DF 0.0 [0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])) mymainCascade.cc:430 1232 {*movv2df_internal}
     (nil))
(insn:TI 2791 4507 4508 408 (set (reg:DF 28 xmm7 [1499])
        (div:DF (reg:DF 28 xmm7 [1499])
            (reg:DF 21 xmm0 [1476]))) mymainCascade.cc:431 824 {*fop_df_1_mixed}
     (nil))
(insn:TI 4508 2791 4301 408 (set (reg:V2DF 22 xmm1 [1506])
        (vec_merge:V2DF (vec_duplicate:V2DF (float:DF (reg:DI 44 r15 [orig:1597 nPiM.90_393 ] [1597])))
            (reg:V2DF 22 xmm1 [1506])
            (const_int 1 [0x1]))) mymainCascade.cc:430 2230 {sse2_cvtsi2sdq}
     (nil))
(insn:TI 4301 4508 2808 408 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20096 [0xffffffffffffb180])) [789 %sfp+-20048 S8 A64])
        (reg:DF 27 xmm6 [1492])) mymainCascade.cc:432 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 27 xmm6 [1492])
        (nil)))
(insn:TI 2808 4301 4305 408 (set (reg:DF 22 xmm1 [1506])
        (div:DF (reg:DF 22 xmm1 [1506])
            (reg:DF 21 xmm0 [1476]))) mymainCascade.cc:430 824 {*fop_df_1_mixed}
     (nil))
(insn:TI 4305 2808 4308 408 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20104 [0xffffffffffffb178])) [789 %sfp+-20056 S8 A64])
        (reg:DF 28 xmm7 [1499])) mymainCascade.cc:431 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 28 xmm7 [1499])
        (nil)))
(insn:TI 4308 4305 4509 408 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20144 [0xffffffffffffb150])) [789 %sfp+-20096 S8 A64])
        (reg:DF 22 xmm1 [1506])) mymainCascade.cc:430 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1506])
        (nil)))
(insn 4509 4308 4510 408 (set (reg:V2DF 22 xmm1 [1513])
        (const_vector:V2DF [
                (const_double:DF 0.0 [0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])) mymainCascade.cc:429 1232 {*movv2df_internal}
     (nil))
(insn:TI 4510 4509 4310 408 (set (reg:V2DF 22 xmm1 [1513])
        (vec_merge:V2DF (vec_duplicate:V2DF (float:DF (reg:DI 43 r14 [orig:1598 nPiP.91_396 ] [1598])))
            (reg:V2DF 22 xmm1 [1513])
            (const_int 1 [0x1]))) mymainCascade.cc:429 2230 {sse2_cvtsi2sdq}
     (nil))
(insn:TI 4310 4510 4511 408 (set (reg:DF 25 xmm4 [1513])
        (reg:DF 22 xmm1 [1513])) mymainCascade.cc:429 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1513])
        (nil)))
(insn:TI 4511 4310 2825 408 (set (reg:V2DF 22 xmm1 [1520])
        (const_vector:V2DF [
                (const_double:DF 0.0 [0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])) mymainCascade.cc:428 1232 {*movv2df_internal}
     (nil))
(insn:TI 2825 4511 4512 408 (set (reg:DF 25 xmm4 [1513])
        (div:DF (reg:DF 25 xmm4 [1513])
            (reg:DF 21 xmm0 [1476]))) mymainCascade.cc:429 824 {*fop_df_1_mixed}
     (nil))
(insn:TI 4512 2825 4313 408 (set (reg:V2DF 22 xmm1 [1520])
        (vec_merge:V2DF (vec_duplicate:V2DF (float:DF (reg:DI 42 r13 [orig:1599 nN.92_399 ] [1599])))
            (reg:V2DF 22 xmm1 [1520])
            (const_int 1 [0x1]))) mymainCascade.cc:428 2230 {sse2_cvtsi2sdq}
     (nil))
(insn:TI 4313 4512 4513 408 (set (reg:DF 24 xmm3 [1520])
        (reg:DF 22 xmm1 [1520])) mymainCascade.cc:428 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1520])
        (nil)))
(insn:TI 4513 4313 2842 408 (set (reg:V2DF 22 xmm1 [1527])
        (const_vector:V2DF [
                (const_double:DF 0.0 [0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])) mymainCascade.cc:427 1232 {*movv2df_internal}
     (nil))
(insn:TI 2842 4513 4514 408 (set (reg:DF 24 xmm3 [1520])
        (div:DF (reg:DF 24 xmm3 [1520])
            (reg:DF 21 xmm0 [1476]))) mymainCascade.cc:428 824 {*fop_df_1_mixed}
     (nil))
(insn:TI 4514 2842 4311 408 (set (reg:V2DF 22 xmm1 [1527])
        (vec_merge:V2DF (vec_duplicate:V2DF (float:DF (reg:DI 41 r12 [orig:1601 nP.93_402 ] [1601])))
            (reg:V2DF 22 xmm1 [1527])
            (const_int 1 [0x1]))) mymainCascade.cc:427 2230 {sse2_cvtsi2sdq}
     (nil))
(insn:TI 4311 4514 4316 408 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20152 [0xffffffffffffb148])) [789 %sfp+-20104 S8 A64])
        (reg:DF 25 xmm4 [1513])) mymainCascade.cc:429 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 25 xmm4 [1513])
        (nil)))
(insn:TI 4316 4311 2859 408 (set (reg:DF 45 xmm8 [1527])
        (reg:DF 22 xmm1 [1527])) mymainCascade.cc:427 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [1527])
        (nil)))
(insn:TI 2859 4316 4314 408 (set (reg:DF 45 xmm8 [1527])
        (div:DF (reg:DF 45 xmm8 [1527])
            (reg:DF 21 xmm0 [1476]))) mymainCascade.cc:427 824 {*fop_df_1_mixed}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [1476])
        (nil)))
(insn:TI 4314 2859 4317 408 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20160 [0xffffffffffffb140])) [789 %sfp+-20112 S8 A64])
        (reg:DF 24 xmm3 [1520])) mymainCascade.cc:428 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 24 xmm3 [1520])
        (nil)))
(insn:TI 4317 4314 2863 408 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20168 [0xffffffffffffb138])) [789 %sfp+-20120 S8 A64])
        (reg:DF 45 xmm8 [1527])) mymainCascade.cc:427 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 45 xmm8 [1527])
        (nil)))
(insn 2863 4317 2864 408 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(call_insn:TI 2864 2863 2865 408 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       409 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 409, loop depth 0, count 0, freq 0
;;  prev block 408, next block 410, flags: (REACHABLE, RTL)
;;  pred:       408 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 409 artificial_defs: { }
;; bb 409 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 2865 2864 2867 409 [bb 409] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2867 2865 2868 409 (set (reg:DI 5 di)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
                    ] UNSPEC_GOTPCREL)) [790  S8 A8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7fb2bdbeacf0 cout>)
        (nil)))
(call_insn:TI 2868 2867 3533 409 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              410 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 410, loop depth 0, count 0, freq 0
;;  prev block 409, next block 411, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       409 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 410 artificial_defs: { }
;; bb 410 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3533 2868 2872 410 [bb 410] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2872 3533 2871 410 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC126") [flags 0x2]  <var_decl 0x7fb2b65b9630 *.LC126>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2871 2872 2873 410 (set (reg:DI 1 dx)
        (const_int 12 [0xc])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2873 2871 2869 410 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:554 _683 ] [554])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:554 _683 ] [554])
        (nil)))
(insn:TI 2869 2873 2874 410 (set (reg/f:DI 3 bx [orig:554 _683 ] [554])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (nil))
(call_insn:TI 2874 2869 2875 410 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       411 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 411, loop depth 0, count 0, freq 0
;;  prev block 410, next block 412, flags: (REACHABLE, RTL)
;;  pred:       410 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 411 artificial_defs: { }
;; bb 411 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2875 2874 2877 411 [bb 411] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2877 2875 2878 411 (set (reg:DI 4 si)
        (reg:DI 41 r12 [orig:1601 nP.93_402 ] [1601])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:1601 nP.93_402 ] [1601])
        (nil)))
(insn 2878 2877 2879 411 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:554 _683 ] [554])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:554 _683 ] [554])
        (nil)))
(call_insn:TI 2879 2878 3534 411 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              412 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 412, loop depth 0, count 0, freq 0
;;  prev block 411, next block 413, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       411 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 412 artificial_defs: { }
;; bb 412 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3534 2879 2883 412 [bb 412] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2883 3534 2882 412 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2882 2883 2884 412 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2884 2882 2880 412 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:556 _685 ] [556])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:556 _685 ] [556])
        (nil)))
(insn:TI 2880 2884 2885 412 (set (reg/f:DI 3 bx [orig:556 _685 ] [556])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 2885 2880 2886 412 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       413 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 413, loop depth 0, count 0, freq 0
;;  prev block 412, next block 414, flags: (REACHABLE, RTL)
;;  pred:       412 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 413 artificial_defs: { }
;; bb 413 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2886 2885 2887 413 [bb 413] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2887 2886 2888 413 (set (reg:DI 4 si)
        (const_int 100 [0x64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 2888 2887 2889 413 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:556 _685 ] [556])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:556 _685 ] [556])
        (nil)))
(call_insn:TI 2889 2888 3535 413 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              414 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 414, loop depth 0, count 0, freq 0
;;  prev block 413, next block 415, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       413 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 414 artificial_defs: { }
;; bb 414 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3535 2889 2893 414 [bb 414] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2893 3535 2892 414 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2892 2893 2894 414 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2894 2892 2890 414 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:557 _686 ] [557])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:557 _686 ] [557])
        (nil)))
(insn:TI 2890 2894 2895 414 (set (reg/f:DI 3 bx [orig:557 _686 ] [557])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 2895 2890 2896 414 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       415 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 415, loop depth 0, count 0, freq 0
;;  prev block 414, next block 416, flags: (REACHABLE, RTL)
;;  pred:       414 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 415 artificial_defs: { }
;; bb 415 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
(note 2896 2895 2897 415 [bb 415] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2897 2896 2898 415 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20168 [0xffffffffffffb138])) [789 %sfp+-20120 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 126 {*movdf_internal}
     (nil))
(insn 2898 2897 2899 415 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:557 _686 ] [557])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:557 _686 ] [557])
        (nil)))
(call_insn:TI 2899 2898 3536 415 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              416 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 416, loop depth 0, count 0, freq 0
;;  prev block 415, next block 417, flags: (REACHABLE, RTL)
;;  pred:       415 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 416 artificial_defs: { }
;; bb 416 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3536 2899 2902 416 [bb 416] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2902 3536 2903 416 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:558 _687 ] [558])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:558 _687 ] [558])
        (nil)))
(call_insn:TI 2903 2902 3537 416 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              417 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 417, loop depth 0, count 0, freq 0
;;  prev block 416, next block 418, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       416 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 417 artificial_defs: { }
;; bb 417 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3537 2903 2907 417 [bb 417] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2907 3537 2906 417 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC128") [flags 0x2]  <var_decl 0x7fb2b65b9990 *.LC128>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2906 2907 2908 417 (set (reg:DI 1 dx)
        (const_int 13 [0xd])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2908 2906 2904 417 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:559 _688 ] [559])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:559 _688 ] [559])
        (nil)))
(insn:TI 2904 2908 2909 417 (set (reg/f:DI 3 bx [orig:559 _688 ] [559])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (nil))
(call_insn:TI 2909 2904 2910 417 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       418 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 418, loop depth 0, count 0, freq 0
;;  prev block 417, next block 419, flags: (REACHABLE, RTL)
;;  pred:       417 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 418 artificial_defs: { }
;; bb 418 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2910 2909 2912 418 [bb 418] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2912 2910 2913 418 (set (reg:DI 4 si)
        (reg:DI 42 r13 [orig:1599 nN.92_399 ] [1599])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:1599 nN.92_399 ] [1599])
        (nil)))
(insn 2913 2912 2914 418 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:559 _688 ] [559])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:559 _688 ] [559])
        (nil)))
(call_insn:TI 2914 2913 3538 418 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              419 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 419, loop depth 0, count 0, freq 0
;;  prev block 418, next block 420, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       418 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 419 artificial_defs: { }
;; bb 419 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3538 2914 2918 419 [bb 419] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2918 3538 2917 419 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2917 2918 2919 419 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2919 2917 2915 419 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:561 _690 ] [561])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:561 _690 ] [561])
        (nil)))
(insn:TI 2915 2919 2920 419 (set (reg/f:DI 3 bx [orig:561 _690 ] [561])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 2920 2915 2921 419 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       420 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 420, loop depth 0, count 0, freq 0
;;  prev block 419, next block 421, flags: (REACHABLE, RTL)
;;  pred:       419 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 420 artificial_defs: { }
;; bb 420 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2921 2920 2922 420 [bb 420] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2922 2921 2923 420 (set (reg:DI 4 si)
        (const_int 100 [0x64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 2923 2922 2924 420 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:561 _690 ] [561])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:561 _690 ] [561])
        (nil)))
(call_insn:TI 2924 2923 3539 420 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              421 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 421, loop depth 0, count 0, freq 0
;;  prev block 420, next block 422, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       420 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 421 artificial_defs: { }
;; bb 421 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3539 2924 2928 421 [bb 421] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2928 3539 2927 421 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2927 2928 2929 421 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2929 2927 2925 421 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:562 _691 ] [562])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:562 _691 ] [562])
        (nil)))
(insn:TI 2925 2929 2930 421 (set (reg/f:DI 3 bx [orig:562 _691 ] [562])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 2930 2925 2931 421 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       422 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 422, loop depth 0, count 0, freq 0
;;  prev block 421, next block 423, flags: (REACHABLE, RTL)
;;  pred:       421 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 422 artificial_defs: { }
;; bb 422 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
(note 2931 2930 2932 422 [bb 422] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2932 2931 2933 422 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20160 [0xffffffffffffb140])) [789 %sfp+-20112 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 126 {*movdf_internal}
     (nil))
(insn 2933 2932 2934 422 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:562 _691 ] [562])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:562 _691 ] [562])
        (nil)))
(call_insn:TI 2934 2933 3540 422 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              423 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 423, loop depth 0, count 0, freq 0
;;  prev block 422, next block 424, flags: (REACHABLE, RTL)
;;  pred:       422 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 423 artificial_defs: { }
;; bb 423 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3540 2934 2937 423 [bb 423] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2937 3540 2938 423 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:563 _692 ] [563])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:563 _692 ] [563])
        (nil)))
(call_insn:TI 2938 2937 3541 423 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              424 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 424, loop depth 0, count 0, freq 0
;;  prev block 423, next block 425, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       423 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 424 artificial_defs: { }
;; bb 424 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3541 2938 2942 424 [bb 424] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2942 3541 2941 424 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC129") [flags 0x2]  <var_decl 0x7fb2b65b9a20 *.LC129>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2941 2942 2943 424 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2943 2941 2939 424 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:564 _693 ] [564])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:564 _693 ] [564])
        (nil)))
(insn:TI 2939 2943 2944 424 (set (reg/f:DI 3 bx [orig:564 _693 ] [564])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (nil))
(call_insn:TI 2944 2939 2945 424 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       425 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]

;; basic block 425, loop depth 0, count 0, freq 0
;;  prev block 424, next block 426, flags: (REACHABLE, RTL)
;;  pred:       424 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 425 artificial_defs: { }
;; bb 425 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2945 2944 2947 425 [bb 425] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2947 2945 2948 425 (set (reg:DI 4 si)
        (reg:DI 43 r14 [orig:1598 nPiP.91_396 ] [1598])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:1598 nPiP.91_396 ] [1598])
        (nil)))
(insn 2948 2947 2949 425 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:564 _693 ] [564])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:564 _693 ] [564])
        (nil)))
(call_insn:TI 2949 2948 3542 425 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              426 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 426, loop depth 0, count 0, freq 0
;;  prev block 425, next block 427, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       425 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 426 artificial_defs: { }
;; bb 426 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3542 2949 2953 426 [bb 426] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2953 3542 2952 426 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2952 2953 2954 426 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2954 2952 2950 426 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:566 _695 ] [566])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:566 _695 ] [566])
        (nil)))
(insn:TI 2950 2954 2955 426 (set (reg/f:DI 3 bx [orig:566 _695 ] [566])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 2955 2950 2956 426 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       427 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 427, loop depth 0, count 0, freq 0
;;  prev block 426, next block 428, flags: (REACHABLE, RTL)
;;  pred:       426 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 427 artificial_defs: { }
;; bb 427 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2956 2955 2957 427 [bb 427] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2957 2956 2958 427 (set (reg:DI 4 si)
        (const_int 100 [0x64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 2958 2957 2959 427 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:566 _695 ] [566])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:566 _695 ] [566])
        (nil)))
(call_insn:TI 2959 2958 3543 427 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              428 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 428, loop depth 0, count 0, freq 0
;;  prev block 427, next block 429, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       427 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 428 artificial_defs: { }
;; bb 428 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3543 2959 2963 428 [bb 428] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2963 3543 2962 428 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2962 2963 2964 428 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2964 2962 2960 428 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:567 _696 ] [567])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:567 _696 ] [567])
        (nil)))
(insn:TI 2960 2964 2965 428 (set (reg/f:DI 3 bx [orig:567 _696 ] [567])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 2965 2960 2966 428 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       429 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 429, loop depth 0, count 0, freq 0
;;  prev block 428, next block 430, flags: (REACHABLE, RTL)
;;  pred:       428 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 429 artificial_defs: { }
;; bb 429 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
(note 2966 2965 2967 429 [bb 429] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2967 2966 2968 429 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20152 [0xffffffffffffb148])) [789 %sfp+-20104 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 126 {*movdf_internal}
     (nil))
(insn 2968 2967 2969 429 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:567 _696 ] [567])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:567 _696 ] [567])
        (nil)))
(call_insn:TI 2969 2968 3544 429 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              430 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 430, loop depth 0, count 0, freq 0
;;  prev block 429, next block 431, flags: (REACHABLE, RTL)
;;  pred:       429 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 430 artificial_defs: { }
;; bb 430 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3544 2969 2972 430 [bb 430] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2972 3544 2973 430 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:568 _697 ] [568])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:568 _697 ] [568])
        (nil)))
(call_insn:TI 2973 2972 3545 430 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              431 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 431, loop depth 0, count 0, freq 0
;;  prev block 430, next block 432, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       430 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 431 artificial_defs: { }
;; bb 431 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3545 2973 2977 431 [bb 431] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2977 3545 2976 431 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC130") [flags 0x2]  <var_decl 0x7fb2b65b9ab0 *.LC130>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2976 2977 2978 431 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2978 2976 2974 431 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:569 _698 ] [569])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:569 _698 ] [569])
        (nil)))
(insn:TI 2974 2978 2979 431 (set (reg/f:DI 3 bx [orig:569 _698 ] [569])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (nil))
(call_insn:TI 2979 2974 2980 431 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       432 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]

;; basic block 432, loop depth 0, count 0, freq 0
;;  prev block 431, next block 433, flags: (REACHABLE, RTL)
;;  pred:       431 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 432 artificial_defs: { }
;; bb 432 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2980 2979 2982 432 [bb 432] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2982 2980 2983 432 (set (reg:DI 4 si)
        (reg:DI 44 r15 [orig:1597 nPiM.90_393 ] [1597])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:1597 nPiM.90_393 ] [1597])
        (nil)))
(insn 2983 2982 2984 432 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:569 _698 ] [569])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:569 _698 ] [569])
        (nil)))
(call_insn:TI 2984 2983 3546 432 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              433 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 433, loop depth 0, count 0, freq 0
;;  prev block 432, next block 434, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       432 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 433 artificial_defs: { }
;; bb 433 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3546 2984 2988 433 [bb 433] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2988 3546 2987 433 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2987 2988 2989 433 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2989 2987 2985 433 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:571 _700 ] [571])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:571 _700 ] [571])
        (nil)))
(insn:TI 2985 2989 2990 433 (set (reg/f:DI 3 bx [orig:571 _700 ] [571])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 2990 2985 2991 433 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       434 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 434, loop depth 0, count 0, freq 0
;;  prev block 433, next block 435, flags: (REACHABLE, RTL)
;;  pred:       433 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 434 artificial_defs: { }
;; bb 434 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 2991 2990 2992 434 [bb 434] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2992 2991 2993 434 (set (reg:DI 4 si)
        (const_int 100 [0x64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 2993 2992 2994 434 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:571 _700 ] [571])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:571 _700 ] [571])
        (nil)))
(call_insn:TI 2994 2993 3547 434 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              435 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 435, loop depth 0, count 0, freq 0
;;  prev block 434, next block 436, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       434 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 435 artificial_defs: { }
;; bb 435 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3547 2994 2998 435 [bb 435] NOTE_INSN_BASIC_BLOCK)
(insn:TI 2998 3547 2997 435 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2997 2998 2999 435 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 2999 2997 2995 435 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:572 _701 ] [572])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:572 _701 ] [572])
        (nil)))
(insn:TI 2995 2999 3000 435 (set (reg/f:DI 3 bx [orig:572 _701 ] [572])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 3000 2995 3001 435 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       436 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 436, loop depth 0, count 0, freq 0
;;  prev block 435, next block 437, flags: (REACHABLE, RTL)
;;  pred:       435 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 436 artificial_defs: { }
;; bb 436 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
(note 3001 3000 3002 436 [bb 436] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3002 3001 3003 436 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20144 [0xffffffffffffb150])) [789 %sfp+-20096 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 126 {*movdf_internal}
     (nil))
(insn 3003 3002 3004 436 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:572 _701 ] [572])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:572 _701 ] [572])
        (nil)))
(call_insn:TI 3004 3003 3548 436 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              437 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 437, loop depth 0, count 0, freq 0
;;  prev block 436, next block 438, flags: (REACHABLE, RTL)
;;  pred:       436 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 437 artificial_defs: { }
;; bb 437 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3548 3004 3007 437 [bb 437] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3007 3548 3008 437 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:573 _702 ] [573])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:573 _702 ] [573])
        (nil)))
(call_insn:TI 3008 3007 3549 437 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              438 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 438, loop depth 0, count 0, freq 0
;;  prev block 437, next block 439, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       437 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 438 artificial_defs: { }
;; bb 438 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3549 3008 3012 438 [bb 438] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3012 3549 3011 438 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC131") [flags 0x2]  <var_decl 0x7fb2b65b9b40 *.LC131>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3011 3012 3013 438 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3013 3011 3009 438 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:574 _703 ] [574])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:574 _703 ] [574])
        (nil)))
(insn:TI 3009 3013 3014 438 (set (reg/f:DI 3 bx [orig:574 _703 ] [574])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (nil))
(call_insn:TI 3014 3009 3015 438 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       439 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 439, loop depth 0, count 0, freq 0
;;  prev block 438, next block 440, flags: (REACHABLE, RTL)
;;  pred:       438 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 439 artificial_defs: { }
;; bb 439 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 3015 3014 3017 439 [bb 439] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3017 3015 3018 439 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20056 [0xffffffffffffb1a8])) [789 %sfp+-20008 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 3018 3017 3019 439 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:574 _703 ] [574])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:574 _703 ] [574])
        (nil)))
(call_insn:TI 3019 3018 3550 439 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              440 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 440, loop depth 0, count 0, freq 0
;;  prev block 439, next block 441, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       439 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 440 artificial_defs: { }
;; bb 440 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3550 3019 3023 440 [bb 440] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3023 3550 3022 440 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3022 3023 3024 440 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3024 3022 3020 440 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:576 _705 ] [576])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:576 _705 ] [576])
        (nil)))
(insn:TI 3020 3024 3025 440 (set (reg/f:DI 3 bx [orig:576 _705 ] [576])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 3025 3020 3026 440 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       441 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 441, loop depth 0, count 0, freq 0
;;  prev block 440, next block 442, flags: (REACHABLE, RTL)
;;  pred:       440 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 441 artificial_defs: { }
;; bb 441 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 3026 3025 3027 441 [bb 441] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3027 3026 3028 441 (set (reg:DI 4 si)
        (const_int 100 [0x64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 3028 3027 3029 441 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:576 _705 ] [576])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:576 _705 ] [576])
        (nil)))
(call_insn:TI 3029 3028 3551 441 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              442 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 442, loop depth 0, count 0, freq 0
;;  prev block 441, next block 443, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       441 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 442 artificial_defs: { }
;; bb 442 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3551 3029 3033 442 [bb 442] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3033 3551 3032 442 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3032 3033 3034 442 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3034 3032 3030 442 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:577 _706 ] [577])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:577 _706 ] [577])
        (nil)))
(insn:TI 3030 3034 3035 442 (set (reg/f:DI 3 bx [orig:577 _706 ] [577])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 3035 3030 3036 442 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       443 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 443, loop depth 0, count 0, freq 0
;;  prev block 442, next block 444, flags: (REACHABLE, RTL)
;;  pred:       442 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 443 artificial_defs: { }
;; bb 443 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
(note 3036 3035 3037 443 [bb 443] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3037 3036 3038 443 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20104 [0xffffffffffffb178])) [789 %sfp+-20056 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 126 {*movdf_internal}
     (nil))
(insn 3038 3037 3039 443 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:577 _706 ] [577])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:577 _706 ] [577])
        (nil)))
(call_insn:TI 3039 3038 3552 443 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              444 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 444, loop depth 0, count 0, freq 0
;;  prev block 443, next block 445, flags: (REACHABLE, RTL)
;;  pred:       443 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 444 artificial_defs: { }
;; bb 444 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3552 3039 3042 444 [bb 444] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3042 3552 3043 444 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:578 _707 ] [578])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:578 _707 ] [578])
        (nil)))
(call_insn:TI 3043 3042 3553 444 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              445 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 445, loop depth 0, count 0, freq 0
;;  prev block 444, next block 446, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       444 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 445 artificial_defs: { }
;; bb 445 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3553 3043 3047 445 [bb 445] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3047 3553 3046 445 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC132") [flags 0x2]  <var_decl 0x7fb2b65b9cf0 *.LC132>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3046 3047 3048 445 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3048 3046 3044 445 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:579 _708 ] [579])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:579 _708 ] [579])
        (nil)))
(insn:TI 3044 3048 3049 445 (set (reg/f:DI 3 bx [orig:579 _708 ] [579])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (nil))
(call_insn:TI 3049 3044 3050 445 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       446 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 446, loop depth 0, count 0, freq 0
;;  prev block 445, next block 447, flags: (REACHABLE, RTL)
;;  pred:       445 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 446 artificial_defs: { }
;; bb 446 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 3050 3049 3052 446 [bb 446] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3052 3050 3053 446 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20048 [0xffffffffffffb1b0])) [789 %sfp+-20000 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 3053 3052 3054 446 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:579 _708 ] [579])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:579 _708 ] [579])
        (nil)))
(call_insn:TI 3054 3053 3554 446 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              447 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 447, loop depth 0, count 0, freq 0
;;  prev block 446, next block 448, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       446 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 447 artificial_defs: { }
;; bb 447 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3554 3054 3058 447 [bb 447] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3058 3554 3057 447 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3057 3058 3059 447 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3059 3057 3055 447 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:581 _710 ] [581])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:581 _710 ] [581])
        (nil)))
(insn:TI 3055 3059 3060 447 (set (reg/f:DI 3 bx [orig:581 _710 ] [581])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 3060 3055 3061 447 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       448 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 448, loop depth 0, count 0, freq 0
;;  prev block 447, next block 449, flags: (REACHABLE, RTL)
;;  pred:       447 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 448 artificial_defs: { }
;; bb 448 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 3061 3060 3062 448 [bb 448] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3062 3061 3063 448 (set (reg:DI 4 si)
        (const_int 100 [0x64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 3063 3062 3064 448 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:581 _710 ] [581])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:581 _710 ] [581])
        (nil)))
(call_insn:TI 3064 3063 3555 448 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              449 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 449, loop depth 0, count 0, freq 0
;;  prev block 448, next block 450, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       448 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 449 artificial_defs: { }
;; bb 449 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3555 3064 3068 449 [bb 449] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3068 3555 3067 449 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3067 3068 3069 449 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3069 3067 3065 449 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:582 _711 ] [582])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:582 _711 ] [582])
        (nil)))
(insn:TI 3065 3069 3070 449 (set (reg/f:DI 3 bx [orig:582 _711 ] [582])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 3070 3065 3071 449 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       450 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 450, loop depth 0, count 0, freq 0
;;  prev block 449, next block 451, flags: (REACHABLE, RTL)
;;  pred:       449 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 450 artificial_defs: { }
;; bb 450 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
(note 3071 3070 3072 450 [bb 450] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3072 3071 3073 450 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20096 [0xffffffffffffb180])) [789 %sfp+-20048 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 126 {*movdf_internal}
     (nil))
(insn 3073 3072 3074 450 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:582 _711 ] [582])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:582 _711 ] [582])
        (nil)))
(call_insn:TI 3074 3073 3556 450 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              451 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 451, loop depth 0, count 0, freq 0
;;  prev block 450, next block 452, flags: (REACHABLE, RTL)
;;  pred:       450 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 451 artificial_defs: { }
;; bb 451 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3556 3074 3077 451 [bb 451] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3077 3556 3078 451 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:583 _712 ] [583])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:583 _712 ] [583])
        (nil)))
(call_insn:TI 3078 3077 3557 451 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              452 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 452, loop depth 0, count 0, freq 0
;;  prev block 451, next block 453, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       451 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 452 artificial_defs: { }
;; bb 452 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3557 3078 3082 452 [bb 452] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3082 3557 3081 452 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC133") [flags 0x2]  <var_decl 0x7fb2b65b9d80 *.LC133>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3081 3082 3083 452 (set (reg:DI 1 dx)
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3083 3081 3079 452 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:584 _713 ] [584])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:584 _713 ] [584])
        (nil)))
(insn:TI 3079 3083 3084 452 (set (reg/f:DI 3 bx [orig:584 _713 ] [584])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (nil))
(call_insn:TI 3084 3079 3085 452 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       453 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 453, loop depth 0, count 0, freq 0
;;  prev block 452, next block 454, flags: (REACHABLE, RTL)
;;  pred:       452 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 453 artificial_defs: { }
;; bb 453 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 3085 3084 3087 453 [bb 453] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3087 3085 3088 453 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20040 [0xffffffffffffb1b8])) [789 %sfp+-19992 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 3088 3087 3089 453 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:584 _713 ] [584])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:584 _713 ] [584])
        (nil)))
(call_insn:TI 3089 3088 3558 453 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              454 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 454, loop depth 0, count 0, freq 0
;;  prev block 453, next block 455, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       453 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 454 artificial_defs: { }
;; bb 454 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3558 3089 3093 454 [bb 454] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3093 3558 3092 454 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3092 3093 3094 454 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3094 3092 3090 454 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:586 _715 ] [586])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:586 _715 ] [586])
        (nil)))
(insn:TI 3090 3094 3095 454 (set (reg/f:DI 3 bx [orig:586 _715 ] [586])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 3095 3090 3096 454 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       455 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 455, loop depth 0, count 0, freq 0
;;  prev block 454, next block 456, flags: (REACHABLE, RTL)
;;  pred:       454 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 455 artificial_defs: { }
;; bb 455 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 3096 3095 3097 455 [bb 455] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3097 3096 3098 455 (set (reg:DI 4 si)
        (const_int 100 [0x64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 3098 3097 3099 455 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:586 _715 ] [586])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:586 _715 ] [586])
        (nil)))
(call_insn:TI 3099 3098 3559 455 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              456 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 456, loop depth 0, count 0, freq 0
;;  prev block 455, next block 457, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       455 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 456 artificial_defs: { }
;; bb 456 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3559 3099 3103 456 [bb 456] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3103 3559 3102 456 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3102 3103 3104 456 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3104 3102 3100 456 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:587 _716 ] [587])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:587 _716 ] [587])
        (nil)))
(insn:TI 3100 3104 3105 456 (set (reg/f:DI 3 bx [orig:587 _716 ] [587])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 3105 3100 3106 456 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       457 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 457, loop depth 0, count 0, freq 0
;;  prev block 456, next block 458, flags: (REACHABLE, RTL)
;;  pred:       456 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 457 artificial_defs: { }
;; bb 457 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
(note 3106 3105 3107 457 [bb 457] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3107 3106 3108 457 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20088 [0xffffffffffffb188])) [789 %sfp+-20040 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 126 {*movdf_internal}
     (nil))
(insn 3108 3107 3109 457 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:587 _716 ] [587])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:587 _716 ] [587])
        (nil)))
(call_insn:TI 3109 3108 3560 457 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              458 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 458, loop depth 0, count 0, freq 0
;;  prev block 457, next block 459, flags: (REACHABLE, RTL)
;;  pred:       457 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 458 artificial_defs: { }
;; bb 458 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3560 3109 3112 458 [bb 458] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3112 3560 3113 458 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:588 _717 ] [588])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:588 _717 ] [588])
        (nil)))
(call_insn:TI 3113 3112 3561 458 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              459 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 459, loop depth 0, count 0, freq 0
;;  prev block 458, next block 460, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       458 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 459 artificial_defs: { }
;; bb 459 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3561 3113 3117 459 [bb 459] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3117 3561 3116 459 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC134") [flags 0x2]  <var_decl 0x7fb2b65b9e10 *.LC134>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3116 3117 3118 459 (set (reg:DI 1 dx)
        (const_int 9 [0x9])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3118 3116 3114 459 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:589 _718 ] [589])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:589 _718 ] [589])
        (nil)))
(insn:TI 3114 3118 3119 459 (set (reg/f:DI 3 bx [orig:589 _718 ] [589])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (nil))
(call_insn:TI 3119 3114 3120 459 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       460 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 460, loop depth 0, count 0, freq 0
;;  prev block 459, next block 461, flags: (REACHABLE, RTL)
;;  pred:       459 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 460 artificial_defs: { }
;; bb 460 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 3120 3119 3122 460 [bb 460] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3122 3120 3123 460 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20032 [0xffffffffffffb1c0])) [789 %sfp+-19984 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 3123 3122 3124 460 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:589 _718 ] [589])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:589 _718 ] [589])
        (nil)))
(call_insn:TI 3124 3123 3562 460 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              461 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 461, loop depth 0, count 0, freq 0
;;  prev block 460, next block 462, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       460 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 461 artificial_defs: { }
;; bb 461 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3562 3124 3128 461 [bb 461] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3128 3562 3127 461 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3127 3128 3129 461 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3129 3127 3125 461 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:591 _720 ] [591])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:591 _720 ] [591])
        (nil)))
(insn:TI 3125 3129 3130 461 (set (reg/f:DI 3 bx [orig:591 _720 ] [591])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 3130 3125 3131 461 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       462 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 462, loop depth 0, count 0, freq 0
;;  prev block 461, next block 463, flags: (REACHABLE, RTL)
;;  pred:       461 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 462 artificial_defs: { }
;; bb 462 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 3131 3130 3132 462 [bb 462] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3132 3131 3133 462 (set (reg:DI 4 si)
        (const_int 100 [0x64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 3133 3132 3134 462 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:591 _720 ] [591])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:591 _720 ] [591])
        (nil)))
(call_insn:TI 3134 3133 3563 462 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              463 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 463, loop depth 0, count 0, freq 0
;;  prev block 462, next block 464, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       462 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 463 artificial_defs: { }
;; bb 463 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3563 3134 3138 463 [bb 463] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3138 3563 3137 463 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3137 3138 3139 463 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3139 3137 3135 463 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:592 _721 ] [592])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:592 _721 ] [592])
        (nil)))
(insn:TI 3135 3139 3140 463 (set (reg/f:DI 3 bx [orig:592 _721 ] [592])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 3140 3135 3141 463 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       464 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 464, loop depth 0, count 0, freq 0
;;  prev block 463, next block 465, flags: (REACHABLE, RTL)
;;  pred:       463 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 464 artificial_defs: { }
;; bb 464 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
(note 3141 3140 3142 464 [bb 464] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3142 3141 3143 464 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20080 [0xffffffffffffb190])) [789 %sfp+-20032 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 126 {*movdf_internal}
     (nil))
(insn 3143 3142 3144 464 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:592 _721 ] [592])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:592 _721 ] [592])
        (nil)))
(call_insn:TI 3144 3143 3564 464 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              465 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 465, loop depth 0, count 0, freq 0
;;  prev block 464, next block 466, flags: (REACHABLE, RTL)
;;  pred:       464 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 465 artificial_defs: { }
;; bb 465 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3564 3144 3147 465 [bb 465] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3147 3564 3148 465 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:593 _722 ] [593])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:593 _722 ] [593])
        (nil)))
(call_insn:TI 3148 3147 3565 465 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 12 [0xc])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              466 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 466, loop depth 0, count 0, freq 0
;;  prev block 465, next block 467, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       465 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 466 artificial_defs: { }
;; bb 466 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3565 3148 3152 466 [bb 466] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3152 3565 3151 466 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC135") [flags 0x2]  <var_decl 0x7fb2b65b9ea0 *.LC135>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3151 3152 3153 466 (set (reg:DI 1 dx)
        (const_int 10 [0xa])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3153 3151 3149 466 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:594 _723 ] [594])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:594 _723 ] [594])
        (nil)))
(insn:TI 3149 3153 3154 466 (set (reg/f:DI 3 bx [orig:594 _723 ] [594])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (nil))
(call_insn:TI 3154 3149 3155 466 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       467 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 467, loop depth 0, count 0, freq 0
;;  prev block 466, next block 468, flags: (REACHABLE, RTL)
;;  pred:       466 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 467 artificial_defs: { }
;; bb 467 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 3155 3154 3157 467 [bb 467] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3157 3155 3158 467 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20024 [0xffffffffffffb1c8])) [789 %sfp+-19976 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 3158 3157 3159 467 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:594 _723 ] [594])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:594 _723 ] [594])
        (nil)))
(call_insn:TI 3159 3158 3566 467 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              468 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 468, loop depth 0, count 0, freq 0
;;  prev block 467, next block 469, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       467 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 468 artificial_defs: { }
;; bb 468 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3566 3159 3163 468 [bb 468] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3163 3566 3162 468 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3162 3163 3164 468 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3164 3162 3160 468 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:596 _725 ] [596])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:596 _725 ] [596])
        (nil)))
(insn:TI 3160 3164 3165 468 (set (reg/f:DI 3 bx [orig:596 _725 ] [596])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 3165 3160 3166 468 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       469 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 469, loop depth 0, count 0, freq 0
;;  prev block 468, next block 470, flags: (REACHABLE, RTL)
;;  pred:       468 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 469 artificial_defs: { }
;; bb 469 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 3166 3165 3167 469 [bb 469] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3167 3166 3168 469 (set (reg:DI 4 si)
        (const_int 100 [0x64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(insn 3168 3167 3169 469 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:596 _725 ] [596])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:596 _725 ] [596])
        (nil)))
(call_insn:TI 3169 3168 3567 469 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertImEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf09620 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              470 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 470, loop depth 0, count 0, freq 0
;;  prev block 469, next block 471, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       469 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 470 artificial_defs: { }
;; bb 470 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(note 3567 3169 3173 470 [bb 470] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3173 3567 3172 470 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC127") [flags 0x2]  <var_decl 0x7fb2b65b96c0 *.LC127>)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3172 3173 3174 470 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (nil))
(insn 3174 3172 3170 470 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:597 _726 ] [597])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:597 _726 ] [597])
        (nil)))
(insn:TI 3170 3174 3175 470 (set (reg/f:DI 3 bx [orig:597 _726 ] [597])
        (reg:DI 0 ax)) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:196 85 {*movdi_internal}
     (nil))
(call_insn:TI 3175 3170 3176 470 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>) [0 __ostream_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:561 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l") [flags 0x41]  <function_decl 0x7fb2bf2d9460 __ostream_insert>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       471 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 471, loop depth 0, count 0, freq 0
;;  prev block 470, next block 472, flags: (REACHABLE, RTL)
;;  pred:       470 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 471 artificial_defs: { }
;; bb 471 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 21 [xmm0]
;; live  kill	
(note 3176 3175 3177 471 [bb 471] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3177 3176 3178 471 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -20072 [0xffffffffffffb198])) [789 %sfp+-20024 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 126 {*movdf_internal}
     (nil))
(insn 3178 3177 3179 471 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:597 _726 ] [597])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:597 _726 ] [597])
        (nil)))
(call_insn:TI 3179 3178 3568 471 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>) [0 _M_insert S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:221 684 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSo9_M_insertIdEERSoT_") [flags 0x41]  <function_decl 0x7fb2bdf0e0e0 _M_insert>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              472 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 472, loop depth 0, count 0, freq 0
;;  prev block 471, next block 473, flags: (REACHABLE, RTL)
;;  pred:       471 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 472 artificial_defs: { }
;; bb 472 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 3568 3179 3182 472 [bb 472] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3182 3568 3183 472 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:598 _727 ] [598])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:598 _727 ] [598])
        (nil)))
(call_insn:TI 3183 3182 3184 472 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>) [0 endl S1 A8])
            (const_int 0 [0]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ostream:113 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7fb2bdef7ee0 endl>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       473 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              388 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 473, loop depth 0, count 0, freq 0
;;  prev block 472, next block 474, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       472 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 473 artificial_defs: { }
;; bb 473 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 3184 3183 3186 473 [bb 473] NOTE_INSN_BASIC_BLOCK)
(note 3186 3184 4439 473 NOTE_INSN_DELETED)
(insn:TI 4439 3186 4702 473 (set (reg/f:DI 3 bx [orig:143 _48 ] [143])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20128 [0xffffffffffffb160])) [789 %sfp+-20080 S8 A64])) mymainCascade.cc:437 85 {*movdi_internal}
     (nil))
(insn 4702 4439 3185 473 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:437 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 3185 4702 3188 473 (set (reg/f:DI 0 ax [orig:1544 _48->D.311695.D.295006.D.294623.D.276419._vptr.TObject ] [1544])
        (mem/f:DI (reg/f:DI 3 bx [orig:143 _48 ] [143]) [150 _48->D.311695.D.295006.D.294623.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:437 85 {*movdi_internal}
     (nil))
(insn 3188 3185 3189 473 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:143 _48 ] [143])) mymainCascade.cc:437 85 {*movdi_internal}
     (nil))
(call_insn:TI 3189 3188 3190 473 (set (reg:QI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1544 _48->D.311695.D.295006.D.294623.D.276419._vptr.TObject ] [1544])
                        (const_int 568 [0x238])) [735 MEM[(int (*__vtbl_ptr_type) () *)_405 + 568B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_406;(struct TDirectoryFile)_51->71) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:437 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_CALL_DECL (nil)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              474 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 474, loop depth 0, count 0, freq 0
;;  prev block 473, next block 475, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       473 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 474 artificial_defs: { }
;; bb 474 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 3190 3189 3192 474 [bb 474] NOTE_INSN_BASIC_BLOCK)
(note 3192 3190 4437 474 NOTE_INSN_DELETED)
(insn:TI 4437 3192 4699 474 (set (reg/f:DI 5 di [orig:271 _320 ] [271])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20112 [0xffffffffffffb170])) [789 %sfp+-20064 S8 A64])) mymainCascade.cc:438 85 {*movdi_internal}
     (nil))
(insn 4699 4437 4700 474 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:438 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 4700 4699 4701 474 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:438 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4701 4700 3191 474 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:438 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 3191 4701 3197 474 (set (reg/f:DI 0 ax [orig:1546 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1546])
        (mem/f:DI (reg/f:DI 5 di [orig:271 _320 ] [271]) [150 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:438 85 {*movdi_internal}
     (nil))
(call_insn:TI 3197 3191 3198 474 (set (reg:SI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1546 MEM[(struct TTree *)_320].D.336803.D.276419._vptr.TObject ] [1546])
                        (const_int 384 [0x180])) [735 MEM[(int (*__vtbl_ptr_type) () *)_408 + 384B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_409;(struct TTree)_320->48) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:438 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_CALL_DECL (nil)
                            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              475 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 475, loop depth 0, count 0, freq 0
;;  prev block 474, next block 476, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       474 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 475 artificial_defs: { }
;; bb 475 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 3198 3197 3200 475 [bb 475] NOTE_INSN_BASIC_BLOCK)
(note 3200 3198 4436 475 NOTE_INSN_DELETED)
(insn:TI 4436 3200 4696 475 (set (reg/f:DI 5 di [orig:269 _317 ] [269])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20120 [0xffffffffffffb168])) [789 %sfp+-20072 S8 A64])) mymainCascade.cc:439 85 {*movdi_internal}
     (nil))
(insn 4696 4436 4697 475 (parallel [
            (set (reg:DI 2 cx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:439 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 4697 4696 4698 475 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:439 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 4698 4697 3199 475 (parallel [
            (set (reg:DI 4 si)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:439 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 3199 4698 3205 475 (set (reg/f:DI 0 ax [orig:1548 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1548])
        (mem/f:DI (reg/f:DI 5 di [orig:269 _317 ] [269]) [150 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:439 85 {*movdi_internal}
     (nil))
(call_insn:TI 3205 3199 3206 475 (set (reg:SI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1548 MEM[(struct TTree *)_317].D.336803.D.276419._vptr.TObject ] [1548])
                        (const_int 384 [0x180])) [735 MEM[(int (*__vtbl_ptr_type) () *)_411 + 384B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_412;(struct TTree)_317->48) S1 A8])
            (const_int 0 [0]))) mymainCascade.cc:439 684 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_CALL_DECL (nil)
                            (expr_list:REG_EH_REGION (const_int 12 [0xc])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              476 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 476, loop depth 0, count 0, freq 0
;;  prev block 475, next block 477, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       475 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 476 artificial_defs: { }
;; bb 476 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 3206 3205 3208 476 [bb 476] NOTE_INSN_BASIC_BLOCK)
(note 3208 3206 3207 476 NOTE_INSN_DELETED)
(insn:TI 3207 3208 3209 476 (set (reg/f:DI 0 ax [orig:1550 _48->D.311695.D.295006.D.294623.D.276419._vptr.TObject ] [1550])
        (mem/f:DI (reg/f:DI 3 bx [orig:143 _48 ] [143]) [150 _48->D.311695.D.295006.D.294623.D.276419._vptr.TObject+0 S8 A64])) mymainCascade.cc:440 85 {*movdi_internal}
     (nil))
(insn 3209 3207 3210 476 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fb2b65a2a20 *.LC36>)) mymainCascade.cc:440 85 {*movdi_internal}
     (nil))
(insn 3210 3209 3211 476 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:143 _48 ] [143])) mymainCascade.cc:440 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:143 _48 ] [143])
        (nil)))
(call_insn:TI 3211 3210 3212 476 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:1550 _48->D.311695.D.295006.D.294623.D.276419._vptr.TObject ] [1550])
                    (const_int 560 [0x230])) [735 MEM[(int (*__vtbl_ptr_type) () *)_414 + 560B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_415;(struct TFile)_48->70) S1 A8])
        (const_int 0 [0])) mymainCascade.cc:440 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:1550 _48->D.311695.D.295006.D.294623.D.276419._vptr.TObject ] [1550])
                (expr_list:REG_CALL_DECL (nil)
                    (expr_list:REG_EH_REGION (const_int 12 [0xc])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       388 (ABNORMAL,ABNORMAL_CALL,EH)
;;              477 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 477, loop depth 0, count 0, freq 0
;;  prev block 476, next block 478, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       476 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 477 artificial_defs: { }
;; bb 477 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(note 3212 3211 3214 477 [bb 477] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3214 3212 3215 477 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20064 [0xffffffffffffb1a0])) [789 %sfp+-20016 S8 A64])) mymainCascade.cc:266 85 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -2576 [0xfffffffffffff5f0]))
        (nil)))
(call_insn:TI 3215 3214 4322 477 (call (mem:QI (symbol_ref:DI ("_ZN8TRandom3D1Ev") [flags 0x41]  <function_decl 0x7fb2b4b35540 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) mymainCascade.cc:266 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN8TRandom3D1Ev") [flags 0x41]  <function_decl 0x7fb2b4b35540 __comp_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn:TI 4322 3215 3216 477 (set (reg/f:DI 0 ax [1587])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20136 [0xffffffffffffb158])) [789 %sfp+-20088 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 85 {*movdi_internal}
     (nil))
(insn 3216 4322 3218 477 (set (reg/f:DI 5 di [orig:599 _728 ] [599])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19920 [0xffffffffffffb230])) [5 MEM[(char * *)&label]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 3218 3216 3219 477 (parallel [
            (set (reg/f:DI 0 ax [1587])
                (plus:DI (reg/f:DI 0 ax [1587])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 3219 3218 3220 477 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:599 _728 ] [599])
            (reg/f:DI 0 ax [1554]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [1554])
        (nil)))
(jump_insn:TI 3220 3219 3221 477 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3615)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 3615)
;;  succ:       478 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              479 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 478, loop depth 0, count 0, freq 0
;;  prev block 477, next block 479, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       477 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 478 artificial_defs: { }
;; bb 478 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 3221 3220 3223 478 [bb 478] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 3223 3221 3615 478 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       479 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 479, loop depth 0, count 0, freq 2
;;  prev block 478, next block 480, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       477 [21.6%]  (CAN_FALLTHRU)
;;              478 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 479 artificial_defs: { }
;; bb 479 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 3615 3223 3325 479 529 "" [1 uses])
(note 3325 3615 4867 479 [bb 479] NOTE_INSN_BASIC_BLOCK)
(note 4867 3325 4558 479 NOTE_INSN_EPILOGUE_BEG)
(insn:TI 4558 4867 4695 479 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) mymainCascade.cc:443 990 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 4695 4558 3324 479 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mymainCascade.cc:443 79 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 3324 4695 4559 479 (use (reg/i:SI 0 ax)) mymainCascade.cc:443 -1
     (nil))
(insn:TI 4559 3324 4560 479 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:443 71 {*popdi1}
     (nil))
(insn:TI 4560 4559 4561 479 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:443 71 {*popdi1}
     (nil))
(insn:TI 4561 4560 4562 479 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:443 71 {*popdi1}
     (nil))
(insn:TI 4562 4561 4563 479 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:443 71 {*popdi1}
     (nil))
(insn:TI 4563 4562 4564 479 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:443 71 {*popdi1}
     (nil))
(insn/f:TI 4564 4563 4565 479 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) mymainCascade.cc:443 71 {*popdi1}
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn:TI 4565 4564 4566 479 (simple_return) mymainCascade.cc:443 697 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 4566 4565 4766)
;; basic block 480, loop depth 0, count 0, freq 0
;;  prev block 479, next block 481, flags: (REACHABLE, RTL)
;;  pred:       201 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 480 artificial_defs: { }
;; bb 480 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4766 4566 1502 480 595 "" [1 uses])
(note 1502 4766 1503 480 [bb 480] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1503 1502 1504 480 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       379 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1504 1503 4769)
;; basic block 481, loop depth 0, count 0, freq 0
;;  prev block 480, next block 482, flags: (REACHABLE, RTL)
;;  pred:       216 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 481 artificial_defs: { }
;; bb 481 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4769 1504 1953 481 598 "" [1 uses])
(note 1953 4769 1954 481 [bb 481] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 1954 1953 1955 481 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       379 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1955 1954 4770)
;; basic block 482, loop depth 0, count 0, freq 0
;;  prev block 481, next block 483, flags: (REACHABLE, RTL)
;;  pred:       223 [0.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 482 artificial_defs: { }
;; bb 482 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 4770 1955 2015 482 599 "" [1 uses])
(note 2015 4770 2016 482 [bb 482] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 2016 2015 2017 482 (call (mem:QI (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>) [0 __throw_bad_cast S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_ios.h:50 673 {*call}
     (expr_list:REG_EH_REGION (const_int 8 [0x8])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt16__throw_bad_castv") [flags 0x41]  <function_decl 0x7fb2bf56c1c0 __throw_bad_cast>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:       379 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 2017 2016 3581)
;; basic block 483, loop depth 0, count 0, freq 0
;;  prev block 482, next block 484, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 483 artificial_defs: { d24(0){ }d618(1){ }}
;; bb 483 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label/s 3581 2017 3584 483 520 "" [1 uses])
(note 3584 3581 3582 483 [bb 483] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3582 3584 4324 483 (set (reg:DI 3 bx [1559])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 4324 3582 3231 483 (set (reg/f:DI 0 ax [1618])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20064 [0xffffffffffffb1a0])) [789 %sfp+-20016 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 85 {*movdi_internal}
     (nil))
(insn 3231 4324 3233 483 (set (reg/f:DI 5 di [orig:600 _729 ] [600])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -2624 [0xfffffffffffff5c0])) [5 MEM[(char * *)&D.337451]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 3233 3231 3234 483 (parallel [
            (set (reg/f:DI 0 ax [1618])
                (plus:DI (reg/f:DI 0 ax [1618])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 3234 3233 3235 483 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:600 _729 ] [600])
            (reg/f:DI 0 ax [1557]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [1557])
        (nil)))
(jump_insn:TI 3235 3234 3236 483 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3243)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 3243)
;;  succ:       484 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              485 [30.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 484, loop depth 0, count 0, freq 0
;;  prev block 483, next block 485, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       483 [69.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 484 artificial_defs: { }
;; bb 484 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 3236 3235 3238 484 [bb 484] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 3238 3236 3243 484 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/ext/new_allocator.h:110 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb2c1d48620 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       485 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 485, loop depth 0, count 0, freq 0
;;  prev block 484, next block 486, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       484 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              483 [30.2%]  (CAN_FALLTHRU)
;;              488 [100.0%]  (CAN_FALLTHRU)
;; bb 485 artificial_defs: { }
;; bb 485 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 3243 3238 3244 485 486 "" [2 uses])
(note 3244 3243 4326 485 [bb 485] NOTE_INSN_BASIC_BLOCK)
(insn:TI 4326 3244 3245 485 (set (reg/f:DI 1 dx [1595])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20072 [0xffffffffffffb198])) [789 %sfp+-20024 S8 A64])) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 85 {*movdi_internal}
     (nil))
(insn 3245 4326 3247 485 (set (reg/f:DI 5 di [orig:601 _730 ] [601])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -19856 [0xffffffffffffb270])) [5 MEM[(char * *)&D.337450]+0 S8 A128])) 85 {*movdi_internal}
     (nil))
(insn:TI 3247 3245 3248 485 (parallel [
            (set (reg/f:DI 1 dx [1595])
                (plus:DI (reg/f:DI 1 dx [1595])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 219 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 3248 3247 3249 485 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:601 _730 ] [601])
            (reg/f:DI 1 dx [1563]))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [1563])
        (nil)))
(jump_insn:TI 3249 3248 4857 485 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4572)
            (pc))) /cvmfs/sft.cern.ch/lcg/releases/gcc/6.2.0-b9934/x86_64-slc6/include/c++/6.2.0/bits/basic_string.h:180 635 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6983 (nil)))
 -> 4572)
;;  succ:       397 [69.8%]  (CAN_FALLTHRU)
;;              486 [30.2%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 486, loop depth 0, count 0, freq 0
;;  prev block 485, next block 487, flags: (NEW, RTL, MODIFIED)
;;  pred:       485 [30.2%]  (FALLTHRU)
;; bb 486 artificial_defs: { }
;; bb 486 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 4857 3249 4858 486 [bb 486] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 4858 4857 4859 486 (set (pc)
        (label_ref 3306)) 667 {jump}
     (nil)
 -> 3306)
;;  succ:       384 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 4859 4858 3585)
;; basic block 487, loop depth 0, count 0, freq 0
;;  prev block 486, next block 488, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 487 artificial_defs: { d19(0){ }d611(1){ }}
;; bb 487 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di]
;; live  kill	
(code_label/s 3585 4859 3588 487 521 "" [1 uses])
(note 3588 3585 3261 487 [bb 487] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3261 3588 3586 487 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -20112 [0xffffffffffffb170])) [789 %sfp+-20064 S8 A64])) mymainCascade.cc:134 85 {*movdi_internal}
     (nil))
(insn 3586 3261 3262 487 (set (reg:DI 3 bx [1564])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(call_insn:TI 3262 3586 4860 487 (call (mem:QI (symbol_ref:DI ("_ZN7TObjectdlEPv") [flags 0x41]  <function_decl 0x7fb2b6c27e00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) mymainCascade.cc:134 673 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -8 [0xfffffffffffffff8])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7TObjectdlEPv") [flags 0x41]  <function_decl 0x7fb2b6c27e00 operator delete>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn:TI 4860 3262 4861 487 (set (pc)
        (label_ref 3306)) 667 {jump}
     (nil)
 -> 3306)
;;  succ:       384 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 4861 4860 3575)
;; basic block 488, loop depth 0, count 0, freq 0
;;  prev block 487, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       399 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 488 artificial_defs: { d22(0){ }d616(1){ }}
;; bb 488 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(code_label/s 3575 4861 3580 488 519 "" [1 uses])
(note 3580 3575 3576 488 [bb 488] NOTE_INSN_BASIC_BLOCK)
(insn:TI 3576 3580 4862 488 (set (reg:DI 3 bx [1558])
        (reg:DI 0 ax)) 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 4862 3576 4863 488 (set (pc)
        (label_ref 3243)) 667 {jump}
     (nil)
 -> 3243)
;;  succ:       485 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 4863 4862 4097)
(note 4097 4863 0 NOTE_INSN_DELETED)
